if (self.CavalryLogger) {
    CavalryLogger.start_js_script(document.currentScript);
} /*FB_PKG_DELIM*/

__d("MercuryAPIArgsSource", [], (function(a, b, c, d, e, f) {
    e.exports = {
        CHAT: "chat",
        JEWEL: "jewel",
        MERCURY: "mercury",
        MERCURYSYNC: "mercury_sync",
        WEBMESSENGER: "web_messenger",
        MESSENGER: "messenger",
        UBISPCLIENT: "unified_inbox_sp_client"
    }
}), null);
__d("MercuryAudioType", [], (function(a, b, c, d, e, f) {
    e.exports = {
        FileAttachment: "file_attachment",
        AudioClip: "fb_voice_message",
        VoiceMessageWithTranscript: "fb_voice_message_with_transcript"
    }
}), null);
__d("MessageLiveLocationClientSyncProtocolStopReason", [], (function(a, b, c, d, e, f) {
    e.exports = {
        EXPIRED: 1,
        CANCELED: 2,
        ARRIVED: 3
    }
}), null);
__d("PageCommItemStatus", [], (function(a, b, c, d, e, f) {
    e.exports = {
        FOLLOW_UP: "FOLLOW_UP",
        DONE: "DONE",
        TODO: "TODO",
        SPAM: "SPAM",
        DELETED: "DELETED"
    }
}), null);
__d("MercurySyncHolesTypedLogger", ["Banzai", "GeneratedLoggerUtils"], (function(a, b, c, d, e, f) {
    "use strict";
    a = function() {
        function a() {
            this.$1 = {}
        }
        var c = a.prototype;
        c.log = function(a) {
            b("GeneratedLoggerUtils").log("logger:MercurySyncHolesLoggerConfig", this.$1, b("Banzai").BASIC, a)
        };
        c.logVital = function(a) {
            b("GeneratedLoggerUtils").log("logger:MercurySyncHolesLoggerConfig", this.$1, b("Banzai").VITAL, a)
        };
        c.logImmediately = function(a) {
            b("GeneratedLoggerUtils").log("logger:MercurySyncHolesLoggerConfig", this.$1, {
                signal: !0
            }, a)
        };
        c.clear = function() {
            this.$1 = {};
            return this
        };
        c.getData = function() {
            return babelHelpers["extends"]({}, this.$1)
        };
        c.updateData = function(a) {
            this.$1 = babelHelpers["extends"]({}, this.$1, a);
            return this
        };
        c.setDifference = function(a) {
            this.$1.difference = a;
            return this
        };
        c.setSeqID = function(a) {
            this.$1.seq_id = a;
            return this
        };
        c.setTopicType = function(a) {
            this.$1.topic_type = a;
            return this
        };
        return a
    }();
    c = {
        difference: !0,
        seq_id: !0,
        topic_type: !0
    };
    f["default"] = a
}), 66);
__d("MessengerMessageQuery.graphql", ["relay-runtime"], (function(aa, ba, ca, a, b, c) {
    "use strict";
    aa = function() {
        var aa = {
                defaultValue: null,
                kind: "LocalArgument",
                name: "source"
            },
            ba = {
                defaultValue: null,
                kind: "LocalArgument",
                name: "thread_and_message_id"
            },
            ca = [{
                kind: "Variable",
                name: "thread_and_message_id",
                variableName: "thread_and_message_id"
            }],
            a = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "id",
                storageKey: null
            },
            b = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "label",
                storageKey: null
            },
            c = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "type",
                storageKey: null
            },
            da = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "timestamp",
                storageKey: null
            },
            ea = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "expiration_time",
                storageKey: null
            },
            fa = {
                alias: null,
                args: null,
                concreteType: "OmniMActionLite",
                kind: "LinkedField",
                name: "m_suggestions",
                plural: !0,
                selections: [a, b, c, {
                    alias: null,
                    args: null,
                    concreteType: "OmniMActionDataLite",
                    kind: "LinkedField",
                    name: "data",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "OmniMActionReminderDataLite",
                        kind: "LinkedField",
                        name: "reminder",
                        plural: !1,
                        selections: [da, {
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "topic",
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    storageKey: null
                }, ea],
                storageKey: null
            },
            d = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "__typename",
                storageKey: null
            },
            ga = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "message_id",
                storageKey: null
            },
            ha = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "offline_threading_id",
                storageKey: null
            },
            ia = {
                alias: null,
                args: null,
                concreteType: "MessagingParticipant",
                kind: "LinkedField",
                name: "message_sender",
                plural: !1,
                selections: [a, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "email",
                    storageKey: null
                }],
                storageKey: null
            },
            ja = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "ttl",
                storageKey: null
            },
            ka = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "timestamp_precise",
                storageKey: null
            },
            la = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "unread",
                storageKey: null
            },
            ma = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_sponsored",
                storageKey: null
            },
            na = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "ad_id",
                storageKey: null
            },
            oa = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "ad_client_token",
                storageKey: null
            },
            pa = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "commerce_message_type",
                storageKey: null
            },
            qa = {
                alias: null,
                args: null,
                concreteType: "MessageCustomization",
                kind: "LinkedField",
                name: "customizations",
                plural: !0,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "customization_type",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "customization_value",
                    storageKey: null
                }],
                storageKey: null
            },
            ra = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "tags_list",
                storageKey: null
            },
            sa = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "platform_xmd_encoded",
                storageKey: null
            },
            ta = {
                alias: null,
                args: null,
                concreteType: "MessageSourceData",
                kind: "LinkedField",
                name: "message_source_data",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "message_source",
                    storageKey: null
                }],
                storageKey: null
            },
            e = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "snippet",
                storageKey: null
            },
            ua = {
                alias: null,
                args: null,
                concreteType: "MontageReplyData",
                kind: "LinkedField",
                name: "montage_reply_data",
                plural: !1,
                selections: [ga, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "reply_action",
                    storageKey: null
                }, e],
                storageKey: null
            },
            va = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "reaction",
                storageKey: null
            },
            f = [a],
            wa = {
                alias: null,
                args: null,
                concreteType: "MessageReaction",
                kind: "LinkedField",
                name: "message_reactions",
                plural: !0,
                selections: [va, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "user",
                    plural: !1,
                    selections: f,
                    storageKey: null
                }],
                storageKey: null
            },
            xa = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "unsent_timestamp_precise",
                storageKey: null
            },
            g = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "name",
                storageKey: null
            },
            ya = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "short_name",
                storageKey: null
            },
            za = [ya],
            Aa = {
                kind: "InlineFragment",
                selections: za,
                type: "User",
                abstractKey: null
            },
            Ba = {
                alias: null,
                args: null,
                concreteType: "MessagingParticipant",
                kind: "LinkedField",
                name: "unsender",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "messaging_actor",
                    plural: !1,
                    selections: [a, g, Aa],
                    storageKey: null
                }],
                storageKey: null
            },
            Ca = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "verse_group_role_xmd",
                storageKey: null
            },
            Da = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "message_unsendability_status",
                storageKey: null
            },
            Ea = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "secondary_language_body",
                storageKey: null
            },
            h = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "text",
                storageKey: null
            },
            i = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "length",
                storageKey: null
            },
            Fa = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "offset",
                storageKey: null
            },
            Ga = {
                kind: "InlineFragment",
                selections: f,
                type: "Profile",
                abstractKey: "__isProfile"
            },
            Ha = {
                kind: "InlineFragment",
                selections: f,
                type: "MessengerViewerGroupThread",
                abstractKey: null
            },
            Ia = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "MessageThreadKey",
                    kind: "LinkedField",
                    name: "thread_key",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "thread_fbid",
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "MessageThread",
                abstractKey: null
            },
            Ja = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "message_profile_range_type",
                storageKey: null
            },
            Ka = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "data",
                storageKey: null
            },
            La = {
                alias: null,
                args: null,
                concreteType: "MetaAtRange",
                kind: "LinkedField",
                name: "meta_ranges",
                plural: !0,
                selections: [i, Fa, c, Ka],
                storageKey: null
            },
            Ma = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "legacy_attachment_id",
                storageKey: null
            },
            j = [h],
            k = {
                alias: null,
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "description",
                plural: !1,
                selections: j,
                storageKey: null
            },
            l = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "title",
                storageKey: null
            },
            Na = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "native_url",
                storageKey: null
            },
            m = [c, l, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "action_url",
                storageKey: null
            }, Na, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "target_id",
                storageKey: null
            }];
        m = {
            alias: null,
            args: null,
            concreteType: "MessengerGenericXMATemplateExtraFields",
            kind: "LinkedField",
            name: "messenger_generic_xma_template_extra_info",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "media_owner_profile_name",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "media_owner_profile_pic_uri",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "favicon_url",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "favicon_url_fallback",
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "MessengerGenericXMATemplateCTA",
                kind: "LinkedField",
                name: "default_cta",
                plural: !1,
                selections: m,
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "MessengerGenericXMATemplateCTA",
                kind: "LinkedField",
                name: "cta1",
                plural: !1,
                selections: m,
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "MessengerGenericXMATemplateCTA",
                kind: "LinkedField",
                name: "cta2",
                plural: !1,
                selections: m,
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "MessengerGenericXMATemplateCTA",
                kind: "LinkedField",
                name: "cta3",
                plural: !1,
                selections: m,
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "list_item_id_1",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "list_item_contact_url_list_1",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "list_item_contact_url_expiration_timestamp_list_1",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "list_item_contact_url_fallback_list_1",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "list_item_title_text_1",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "list_item_accessibility_text_1",
                storageKey: null
            }],
            storageKey: null
        };
        var n = [{
                kind: "Literal",
                name: "height",
                value: 240
            }, {
                kind: "Literal",
                name: "width",
                value: 240
            }],
            o = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "uri",
                storageKey: null
            },
            p = [o],
            q = [{
                kind: "Literal",
                name: "height",
                value: 120
            }, {
                kind: "Literal",
                name: "width",
                value: 120
            }],
            r = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "url",
                storageKey: null
            },
            s = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "height",
                storageKey: null
            },
            t = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "width",
                storageKey: null
            };
        n = [a, {
            alias: null,
            args: null,
            concreteType: "StickerPack",
            kind: "LinkedField",
            name: "pack",
            plural: !1,
            selections: f,
            storageKey: null
        }, b, {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "frame_count",
            storageKey: null
        }, {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "frame_rate",
            storageKey: null
        }, {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "frames_per_row",
            storageKey: null
        }, {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "frames_per_column",
            storageKey: null
        }, {
            alias: "sprite_image_2x",
            args: n,
            concreteType: "Image",
            kind: "LinkedField",
            name: "sprite_image",
            plural: !1,
            selections: p,
            storageKey: "sprite_image(height:240,width:240)"
        }, {
            alias: null,
            args: q,
            concreteType: "Image",
            kind: "LinkedField",
            name: "sprite_image",
            plural: !1,
            selections: p,
            storageKey: "sprite_image(height:120,width:120)"
        }, {
            alias: null,
            args: q,
            concreteType: "Image",
            kind: "LinkedField",
            name: "padded_sprite_image",
            plural: !1,
            selections: p,
            storageKey: "padded_sprite_image(height:120,width:120)"
        }, {
            alias: "padded_sprite_image_2x",
            args: n,
            concreteType: "Image",
            kind: "LinkedField",
            name: "padded_sprite_image",
            plural: !1,
            selections: p,
            storageKey: "padded_sprite_image(height:240,width:240)"
        }, r, s, t];
        var Oa = {
                kind: "InlineFragment",
                selections: n,
                type: "Sticker",
                abstractKey: null
            },
            u = [o, s, t],
            Pa = {
                alias: null,
                args: null,
                concreteType: "Image",
                kind: "LinkedField",
                name: "animated_image",
                plural: !1,
                selections: u,
                storageKey: null
            },
            v = {
                kind: "Literal",
                name: "sizing",
                value: "contain-fit"
            },
            Qa = [v],
            w = {
                alias: null,
                args: Qa,
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: u,
                storageKey: 'image(sizing:"contain-fit")'
            },
            Ra = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "playable_duration_in_ms",
                storageKey: null
            },
            Sa = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_playable",
                storageKey: null
            },
            x = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "playable_url",
                storageKey: null
            },
            Ta = {
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "media",
                plural: !1,
                selections: [Oa, Pa, w, Ra, Sa, x],
                storageKey: null
            },
            y = {
                alias: null,
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "source",
                plural: !1,
                selections: j,
                storageKey: null
            },
            z = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "style_list",
                storageKey: null
            },
            Ua = {
                alias: null,
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "title_with_entities",
                plural: !1,
                selections: j,
                storageKey: null
            },
            A = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "key",
                storageKey: null
            },
            Va = {
                alias: null,
                args: null,
                concreteType: "AttachmentProperty",
                kind: "LinkedField",
                name: "properties",
                plural: !0,
                selections: [A, {
                    alias: null,
                    args: null,
                    concreteType: "TextWithEntities",
                    kind: "LinkedField",
                    name: "value",
                    plural: !1,
                    selections: j,
                    storageKey: null
                }],
                storageKey: null
            },
            Wa = {
                alias: "url",
                args: null,
                kind: "ScalarField",
                name: "messenger_dot_com_url",
                storageKey: null
            },
            Xa = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "deduplication_key",
                storageKey: null
            },
            B = {
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "action_links",
                plural: !0,
                selections: [l, r],
                storageKey: null
            },
            Ya = {
                alias: null,
                args: null,
                concreteType: "MessagingAttribution",
                kind: "LinkedField",
                name: "messaging_attribution",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "attribution_type",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "attribution_id",
                    storageKey: null
                }, g, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "icon_url",
                    storageKey: null
                }],
                storageKey: null
            },
            Za = {
                alias: "action_link",
                args: null,
                kind: "ScalarField",
                name: "action_url",
                storageKey: null
            },
            $a = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "action_open_type",
                storageKey: null
            },
            ab = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "preview_title",
                storageKey: null
            },
            C = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "preview_subtitle",
                storageKey: null
            },
            D = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "target_display",
                storageKey: null
            },
            bb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "image_url",
                storageKey: null
            },
            E = {
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "action_objects",
                plural: !0,
                selections: [{
                    kind: "InlineFragment",
                    selections: [a, ab, C, D, bb],
                    type: "MessengerPlatformEntPreview",
                    abstractKey: "__isMessengerPlatformEntPreview"
                }],
                storageKey: null
            },
            cb = {
                alias: "title",
                args: null,
                kind: "ScalarField",
                name: "action_title",
                storageKey: null
            },
            db = {
                alias: null,
                args: null,
                concreteType: "MessengerCTAUserConfirmation",
                kind: "LinkedField",
                name: "user_confirmation",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "cancel_button_label",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "continue_button_label",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "confirmation_message",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "confirmation_title",
                    storageKey: null
                }],
                storageKey: null
            },
            eb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_disabled",
                storageKey: null
            },
            fb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_mutable_by_server",
                storageKey: null
            },
            gb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "logging_token",
                storageKey: null
            },
            hb = {
                alias: null,
                args: null,
                concreteType: "MessengerPlatformPaymentMetadata",
                kind: "LinkedField",
                name: "payment_metadata",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "payment_module_config",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "total_price",
                    storageKey: null
                }],
                storageKey: null
            },
            ib = {
                alias: "render_style",
                args: null,
                kind: "ScalarField",
                name: "cta_render_style",
                storageKey: null
            },
            jb = {
                alias: null,
                args: null,
                concreteType: "MessengerPlatformWebviewMetadata",
                kind: "LinkedField",
                name: "webview_metadata",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "fallback_url",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "messenger_extensions",
                    storageKey: null
                }, {
                    alias: "webview_height_ratio",
                    args: null,
                    kind: "ScalarField",
                    name: "height_ratio",
                    storageKey: null
                }, {
                    alias: "webview_share_button",
                    args: null,
                    kind: "ScalarField",
                    name: "hide_share_button",
                    storageKey: null
                }],
                storageKey: null
            },
            F = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "page_id",
                storageKey: null
            },
            G = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "placeholder",
                storageKey: null
            },
            H = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "subtitle",
                storageKey: null
            },
            kb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "format",
                storageKey: null
            },
            lb = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "form_url",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "form_id",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "form_num_screens",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "form_current_screen_index",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "MessengerPIIFormScreenObject",
                    kind: "LinkedField",
                    name: "form_first_screen",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "screen_title",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "MessengerPIIQuestionObject",
                        kind: "LinkedField",
                        name: "questions",
                        plural: !0,
                        selections: [a, c, l, G, H, i, kb, {
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "mask",
                            storageKey: null
                        }],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "MessengerPIIBusinessPrivacyObject",
                        kind: "LinkedField",
                        name: "business_privacy",
                        plural: !1,
                        selections: [h, r],
                        storageKey: null
                    }],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "form_color_theme",
                    storageKey: null
                }],
                type: "MessengerDirectSendCallToActionData",
                abstractKey: null
            };
        c = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "feedback_form_current_screen_index",
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "MessengerFeedbackFormScreenObject",
                kind: "LinkedField",
                name: "feedback_form_first_screen",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "MessengerFeedbackQuestionObject",
                    kind: "LinkedField",
                    name: "feedback_questions",
                    plural: !0,
                    selections: [a, l, c, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "score_label",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "left_score_label",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "right_score_label",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "score_option",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "MessengerFeedBackQuestionFollowup",
                        kind: "LinkedField",
                        name: "follow_up",
                        plural: !1,
                        selections: [c, G],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "feedback_form_id",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "feedback_form_num_screens",
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "MessengerFeedbackBusinessPrivacyObject",
                kind: "LinkedField",
                name: "feedback_form_privacy_policy",
                plural: !1,
                selections: [h, b, r],
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "feedback_form_state",
                storageKey: null
            }],
            type: "MessengerFeedbackFormOpenCallToActionData",
            abstractKey: null
        };
        G = {
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "cta_data",
            plural: !1,
            selections: [lb, c],
            storageKey: null
        };
        var mb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_high_confidence",
                storageKey: null
            },
            nb = {
                alias: null,
                args: null,
                concreteType: "MessengerCallToAction",
                kind: "LinkedField",
                name: "messenger_call_to_actions",
                plural: !0,
                selections: [Za, $a, E, cb, db, a, eb, fb, gb, hb, ib, jb, F, G, mb, Na],
                storageKey: null
            },
            ob = {
                alias: null,
                args: null,
                concreteType: "XMALayoutInfo",
                kind: "LinkedField",
                name: "xma_layout_info",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "layout_type",
                    storageKey: null
                }],
                storageKey: null
            },
            pb = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "listing_type",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "CrisisListingCategoryWrapper",
                    kind: "LinkedField",
                    name: "listing_category",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "Image",
                        kind: "LinkedField",
                        name: "offer_image",
                        plural: !1,
                        selections: p,
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "Image",
                        kind: "LinkedField",
                        name: "request_image",
                        plural: !1,
                        selections: p,
                        storageKey: null
                    }],
                    storageKey: null
                }, {
                    alias: null,
                    args: [{
                        kind: "Literal",
                        name: "height",
                        value: 315
                    }, {
                        kind: "Literal",
                        name: "width",
                        value: 851
                    }],
                    concreteType: "Image",
                    kind: "LinkedField",
                    name: "map_image",
                    plural: !1,
                    selections: p,
                    storageKey: "map_image(height:315,width:851)"
                }],
                type: "CrisisListing",
                abstractKey: null
            },
            I = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "filename",
                storageKey: null
            },
            qb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "url_shimhash",
                storageKey: null
            },
            J = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "extension",
                storageKey: null
            },
            rb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "filesize",
                storageKey: null
            },
            sb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "duration",
                storageKey: null
            },
            tb = {
                alias: "transfer_id",
                args: null,
                kind: "ScalarField",
                name: "id",
                storageKey: null
            },
            K = {
                alias: null,
                args: null,
                concreteType: "Image",
                kind: "LinkedField",
                name: "profile_picture",
                plural: !1,
                selections: p,
                storageKey: null
            },
            ub = [a, {
                alias: "name",
                args: null,
                kind: "ScalarField",
                name: "short_name",
                storageKey: null
            }, {
                alias: "full_name",
                args: null,
                kind: "ScalarField",
                name: "name",
                storageKey: null
            }, K, r],
            vb = {
                alias: null,
                args: null,
                concreteType: "User",
                kind: "LinkedField",
                name: "sender",
                plural: !1,
                selections: ub,
                storageKey: null
            };
        ub = {
            alias: null,
            args: null,
            concreteType: "User",
            kind: "LinkedField",
            name: "receiver",
            plural: !1,
            selections: ub,
            storageKey: null
        };
        var L = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "value",
            storageKey: null
        };
        A = {
            alias: "actionDatas",
            args: null,
            concreteType: "PaymentActivityActionData",
            kind: "LinkedField",
            name: "action_datas",
            plural: !0,
            selections: [d, {
                alias: "additionalInfo",
                args: null,
                concreteType: "PaymentActivityActionDataAdditionalInfo",
                kind: "LinkedField",
                name: "additional_info",
                plural: !0,
                selections: [A, L],
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "category",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "identifier",
                storageKey: null
            }, {
                alias: "inputType",
                args: null,
                kind: "ScalarField",
                name: "input_type",
                storageKey: null
            }, i, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "optional",
                storageKey: null
            }, {
                alias: "placeholderText",
                args: null,
                kind: "ScalarField",
                name: "placeholder_text",
                storageKey: null
            }],
            storageKey: null
        };
        var wb = {
                alias: "actionIdentifier",
                args: null,
                kind: "ScalarField",
                name: "action_identifier",
                storageKey: null
            },
            xb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "style",
                storageKey: null
            },
            yb = {
                alias: null,
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "title",
                plural: !1,
                selections: j,
                storageKey: null
            };
        H = {
            kind: "InlineFragment",
            selections: [{
                alias: "receiptView",
                args: null,
                concreteType: "PaymentReceiptView",
                kind: "LinkedField",
                name: "receipt_view",
                plural: !1,
                selections: [{
                    alias: "additionalInstruction",
                    args: null,
                    concreteType: "TextWithEntities",
                    kind: "LinkedField",
                    name: "additional_instruction",
                    plural: !1,
                    selections: j,
                    storageKey: null
                }, a, {
                    alias: "otherParticipant",
                    args: null,
                    concreteType: "PaymentActivityParticipantView",
                    kind: "LinkedField",
                    name: "other_participant",
                    plural: !1,
                    selections: [{
                        alias: "imageUrl",
                        args: null,
                        kind: "ScalarField",
                        name: "image_url",
                        storageKey: null
                    }, H, l],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "PaymentActivityViewSection",
                    kind: "LinkedField",
                    name: "sections",
                    plural: !0,
                    selections: [{
                        alias: "preferredPosition",
                        args: null,
                        kind: "ScalarField",
                        name: "preferred_position",
                        storageKey: null
                    }],
                    storageKey: null
                }, yb],
                storageKey: null
            }],
            type: "P2POpenReceiptActionButton",
            abstractKey: null
        };
        var M = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "amount",
                storageKey: null
            },
            zb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "currency",
                storageKey: null
            },
            N = [M, zb, {
                alias: "formattedAmount",
                args: null,
                kind: "ScalarField",
                name: "formatted_amount",
                storageKey: null
            }],
            Ab = {
                alias: "amount",
                args: null,
                concreteType: "CurrencyAmount",
                kind: "LinkedField",
                name: "currency_amount",
                plural: !1,
                selections: N,
                storageKey: null
            },
            O = [d, A, wb, xb, l, H, {
                kind: "InlineFragment",
                selections: [{
                    alias: "moneyTransfer",
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "generic_money_transfer",
                    plural: !1,
                    selections: [tb, vb, ub, Ab],
                    storageKey: null
                }],
                type: "P2PPaymentActionButtonWithTransfer",
                abstractKey: null
            }],
            P = {
                alias: "componentType",
                args: null,
                kind: "ScalarField",
                name: "component_type",
                storageKey: null
            },
            Bb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "color",
                storageKey: null
            };
        N = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                concreteType: "CurrencyAmount",
                kind: "LinkedField",
                name: "amount",
                plural: !1,
                selections: N,
                storageKey: null
            }, Bb],
            type: "P2PBubbleAmountComponent",
            abstractKey: null
        };
        var Q = [{
                alias: "dimensionlessCacheKey",
                args: null,
                kind: "ScalarField",
                name: "dimensionless_cache_key",
                storageKey: null
            }, s, {
                alias: "isSilhouette",
                args: null,
                kind: "ScalarField",
                name: "is_silhouette",
                storageKey: null
            }, {
                alias: "mimeType",
                args: null,
                kind: "ScalarField",
                name: "mime_type",
                storageKey: null
            }, g, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "scale",
                storageKey: null
            }, o, t],
            Cb = {
                kind: "InlineFragment",
                selections: [{
                    alias: "aspectRatio",
                    args: null,
                    kind: "ScalarField",
                    name: "aspect_ratio",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "Image",
                    kind: "LinkedField",
                    name: "image",
                    plural: !1,
                    selections: Q,
                    storageKey: null
                }],
                type: "P2PBubbleImageComponent",
                abstractKey: null
            };
        Q = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "alignment",
                storageKey: null
            }, Bb, {
                alias: "facepileUsers",
                args: null,
                concreteType: "User",
                kind: "LinkedField",
                name: "facepile_users",
                plural: !0,
                selections: [a, {
                    alias: null,
                    args: null,
                    concreteType: "Image",
                    kind: "LinkedField",
                    name: "profile_picture",
                    plural: !1,
                    selections: Q,
                    storageKey: null
                }],
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "Image",
                kind: "LinkedField",
                name: "images",
                plural: !0,
                selections: Q,
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "size",
                storageKey: null
            }, h],
            type: "P2PBubbleTextComponent",
            abstractKey: null
        };
        var Db = {
            alias: "iconCurrencyCode",
            args: null,
            kind: "ScalarField",
            name: "icon_currency_code",
            storageKey: null
        };
        O = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                concreteType: "P2PBubbleView",
                kind: "LinkedField",
                name: "bubble_view",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "actions",
                    plural: !0,
                    selections: O,
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "components",
                    plural: !0,
                    selections: [P, N, Cb, Q],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "P2PBubbleRobotext",
                    kind: "LinkedField",
                    name: "robotext",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "action",
                        plural: !1,
                        selections: O,
                        storageKey: null
                    }, Bb, Db, h],
                    storageKey: null
                }, {
                    alias: "rootAction",
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "root_action",
                    plural: !1,
                    selections: O,
                    storageKey: null
                }],
                storageKey: null
            }],
            type: "PaymentViewData",
            abstractKey: "__isPaymentViewData"
        };
        var Eb = {
                kind: "InlineFragment",
                selections: [ya, r],
                type: "User",
                abstractKey: null
            },
            Fb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "formatted_amount",
                storageKey: null
            },
            Gb = {
                alias: null,
                args: null,
                concreteType: "CurrencyAmount",
                kind: "LinkedField",
                name: "transaction_amount",
                plural: !1,
                selections: [M, Fb],
                storageKey: null
            },
            Hb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "transfer_status",
                storageKey: null
            },
            Ib = {
                alias: "completedTime",
                args: null,
                kind: "ScalarField",
                name: "completed_time",
                storageKey: null
            },
            Jb = {
                alias: "updatedTime",
                args: null,
                kind: "ScalarField",
                name: "updated_time",
                storageKey: null
            },
            Kb = {
                alias: "creationTime",
                args: null,
                kind: "ScalarField",
                name: "creation_time",
                storageKey: null
            },
            Lb = {
                alias: null,
                args: null,
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: p,
                storageKey: null
            },
            R = [Lb],
            Mb = {
                alias: null,
                args: null,
                concreteType: "MessengerPayTheme",
                kind: "LinkedField",
                name: "transfer_theme",
                plural: !1,
                selections: f,
                storageKey: null
            },
            Nb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "formatted",
                storageKey: null
            },
            Ob = [Nb],
            Pb = {
                alias: null,
                args: null,
                concreteType: "CurrencyQuantity",
                kind: "LinkedField",
                name: "amount_fb_discount",
                plural: !1,
                selections: Ob,
                storageKey: null
            },
            Qb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "funds_availability",
                storageKey: null
            },
            Rb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "group_thread_fbid",
                storageKey: null
            },
            S = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "description",
                storageKey: null
            },
            Sb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "status_description",
                storageKey: null
            },
            Tb = {
                alias: null,
                args: null,
                concreteType: "CurrencyAmount",
                kind: "LinkedField",
                name: "currency_amount",
                plural: !1,
                selections: [zb],
                storageKey: null
            },
            Ub = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "memo_text",
                storageKey: null
            },
            Vb = [{
                alias: null,
                args: null,
                concreteType: "User",
                kind: "LinkedField",
                name: "sender",
                plural: !1,
                selections: [{
                    args: null,
                    kind: "FragmentSpread",
                    name: "P2PSenderReceiver"
                }],
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "receiver_profile",
                plural: !1,
                selections: [a, g, K, Eb],
                storageKey: null
            }, Gb, Hb, tb, Ib, Jb, Kb, {
                alias: null,
                args: null,
                concreteType: "PeerToPeerTransferContext",
                kind: "LinkedField",
                name: "transfer_context",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "MessageImage",
                    kind: "LinkedField",
                    name: "memo_images",
                    plural: !0,
                    selections: R,
                    storageKey: null
                }, Mb],
                storageKey: null
            }, Pb, Qb, Rb, {
                alias: null,
                args: null,
                concreteType: "PeerToPeerPlatformSoldItemDetail",
                kind: "LinkedField",
                name: "platform_item",
                plural: !1,
                selections: [g, S, {
                    alias: null,
                    args: null,
                    concreteType: "Photo",
                    kind: "LinkedField",
                    name: "photos",
                    plural: !0,
                    selections: R,
                    storageKey: null
                }, r],
                storageKey: null
            }, a, Sb, Tb, Ub, O];
        Nb = {
            alias: null,
            args: null,
            concreteType: "CurrencyQuantity",
            kind: "LinkedField",
            name: "amount",
            plural: !1,
            selections: [Nb, zb],
            storageKey: null
        };
        var Wb = {
                alias: null,
                args: null,
                concreteType: "CurrencyAmount",
                kind: "LinkedField",
                name: "transaction_amount",
                plural: !1,
                selections: [M],
                storageKey: null
            },
            T = [g, a, K, Eb],
            Xb = {
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "requester",
                plural: !1,
                selections: T,
                storageKey: null
            };
        T = {
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "requestee",
            plural: !1,
            selections: T,
            storageKey: null
        };
        var Yb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "request_status",
                storageKey: null
            },
            Zb = {
                alias: null,
                args: null,
                concreteType: "MessengerPayTheme",
                kind: "LinkedField",
                name: "request_theme",
                plural: !1,
                selections: f,
                storageKey: null
            },
            $b = {
                alias: null,
                args: null,
                concreteType: "PeerToPeerTransfer",
                kind: "LinkedField",
                name: "transfer",
                plural: !1,
                selections: Vb,
                storageKey: null
            },
            ac = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "creation_time",
                storageKey: null
            },
            bc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "updated_time",
                storageKey: null
            },
            cc = {
                alias: "message",
                args: null,
                kind: "ScalarField",
                name: "snippet",
                storageKey: null
            };
        E = [Za, $a, E, cb, db, a, eb, fb, gb, hb, ib, jb, F, G];
        G = {
            alias: null,
            args: null,
            concreteType: "MessengerCallToAction",
            kind: "LinkedField",
            name: "call_to_actions",
            plural: !0,
            selections: E,
            storageKey: null
        };
        var dc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "image_aspect_ratio",
                storageKey: null
            },
            ec = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "first_metaline",
                storageKey: null
            },
            fc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "source_name",
                storageKey: null
            },
            gc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "target_url",
                storageKey: null
            };
        E = {
            alias: null,
            args: null,
            concreteType: "MessengerCallToAction",
            kind: "LinkedField",
            name: "default_action",
            plural: !1,
            selections: E,
            storageKey: null
        };
        var hc = [a, {
                alias: "large_preview",
                args: null,
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: u,
                storageKey: null
            }],
            ic = {
                kind: "InlineFragment",
                selections: hc,
                type: "MessageImage",
                abstractKey: null
            };
        hc = {
            kind: "InlineFragment",
            selections: hc,
            type: "Photo",
            abstractKey: null
        };
        var jc = {
                kind: "Literal",
                name: "media_type",
                value: "image/gif"
            },
            kc = {
                alias: null,
                args: [jc],
                concreteType: "Image",
                kind: "LinkedField",
                name: "animated_image",
                plural: !1,
                selections: u,
                storageKey: 'animated_image(media_type:"image/gif")'
            };
        jc = {
            alias: "preview_image",
            args: [{
                kind: "Literal",
                name: "height",
                value: 206
            }, jc, {
                kind: "Literal",
                name: "width",
                value: 206
            }],
            concreteType: "Image",
            kind: "LinkedField",
            name: "animated_image",
            plural: !1,
            selections: u,
            storageKey: 'animated_image(height:206,media_type:"image/gif",width:206)'
        };
        var lc = {
                kind: "InlineFragment",
                selections: [kc, jc, {
                    alias: "large_preview",
                    args: [{
                        kind: "Literal",
                        name: "height",
                        value: 420
                    }, v, {
                        kind: "Literal",
                        name: "width",
                        value: 420
                    }],
                    concreteType: "Image",
                    kind: "LinkedField",
                    name: "image",
                    plural: !1,
                    selections: u,
                    storageKey: 'image(height:420,sizing:"contain-fit",width:420)'
                }],
                type: "MessageAnimatedImage",
                abstractKey: null
            },
            mc = {
                alias: null,
                args: null,
                concreteType: "Application",
                kind: "LinkedField",
                name: "attribution_app",
                plural: !1,
                selections: [a, g, {
                    alias: null,
                    args: null,
                    concreteType: "Image",
                    kind: "LinkedField",
                    name: "square_logo",
                    plural: !1,
                    selections: p,
                    storageKey: null
                }],
                storageKey: null
            },
            nc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "attribution_metadata",
                storageKey: null
            },
            oc = [s, t, o],
            pc = {
                alias: null,
                args: null,
                concreteType: "Vect2",
                kind: "LinkedField",
                name: "original_dimensions",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "x",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "y",
                    storageKey: null
                }],
                storageKey: null
            };
        oc = {
            kind: "InlineFragment",
            selections: [mc, nc, I, x, {
                alias: "chat_image",
                args: [{
                    kind: "Literal",
                    name: "height",
                    value: 200
                }, v, {
                    kind: "Literal",
                    name: "width",
                    value: 168
                }],
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: oc,
                storageKey: 'image(height:200,sizing:"contain-fit",width:168)'
            }, Ma, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "video_type",
                storageKey: null
            }, pc, Ra, {
                alias: "large_image",
                args: [{
                    kind: "Literal",
                    name: "height",
                    value: 640
                }, v, {
                    kind: "Literal",
                    name: "width",
                    value: 640
                }],
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: oc,
                storageKey: 'image(height:640,sizing:"contain-fit",width:640)'
            }, {
                alias: "inbox_image",
                args: [{
                    kind: "Literal",
                    name: "height",
                    value: 450
                }, v, {
                    kind: "Literal",
                    name: "width",
                    value: 450
                }],
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: oc,
                storageKey: 'image(height:450,sizing:"contain-fit",width:450)'
            }],
            type: "MessageVideo",
            abstractKey: null
        };
        var qc = {
                kind: "InlineFragment",
                selections: [t, s, a, x],
                type: "Video",
                abstractKey: null
            },
            rc = [{
                alias: null,
                args: null,
                concreteType: "MessengerRetailItem",
                kind: "LinkedField",
                name: "nodes",
                plural: !0,
                selections: [a, S, dc, bb, ec, g, fc, gc, E, G, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "media_blob_attachments",
                    plural: !0,
                    selections: [d, ic, hc, lc, oc, qc],
                    storageKey: null
                }],
                storageKey: null
            }],
            sc = {
                kind: "InlineFragment",
                selections: [{
                    alias: "video_id",
                    args: null,
                    kind: "ScalarField",
                    name: "id",
                    storageKey: null
                }],
                type: "Video",
                abstractKey: null
            },
            tc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "values",
                storageKey: null
            },
            uc = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "ComponentFlowLeadGenField",
                    kind: "LinkedField",
                    name: "field_data_list",
                    plural: !0,
                    selections: [{
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "field_type",
                        storageKey: null
                    }, b, tc],
                    storageKey: null
                }],
                type: "PagesPlatformLeadGenInfo",
                abstractKey: null
            },
            U = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "latitude",
                storageKey: null
            },
            vc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "longitude",
                storageKey: null
            },
            wc = [U, vc],
            xc = {
                kind: "InlineFragment",
                selections: [{
                    alias: "live_location_id",
                    args: null,
                    kind: "ScalarField",
                    name: "id",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "is_expired",
                    storageKey: null
                }, ea, {
                    alias: null,
                    args: null,
                    concreteType: "User",
                    kind: "LinkedField",
                    name: "sender",
                    plural: !1,
                    selections: f,
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "Coordinate",
                    kind: "LinkedField",
                    name: "coordinate",
                    plural: !1,
                    selections: wc,
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "location_title",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "LiveLocationDestination",
                    kind: "LinkedField",
                    name: "sender_destination",
                    plural: !1,
                    selections: [U, vc, b],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "stop_reason",
                    storageKey: null
                }],
                type: "MessageLiveLocation",
                abstractKey: null
            },
            yc = {
                alias: null,
                args: null,
                concreteType: "MontageDirectOpenInfo",
                kind: "LinkedField",
                name: "opens",
                plural: !0,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "open_time",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "MessagingParticipant",
                    kind: "LinkedField",
                    name: "open_by",
                    plural: !1,
                    selections: f,
                    storageKey: null
                }],
                storageKey: null
            },
            zc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "message_state",
                storageKey: null
            },
            Ac = {
                alias: null,
                args: null,
                concreteType: "MessagingParticipant",
                kind: "LinkedField",
                name: "kept_by",
                plural: !1,
                selections: f,
                storageKey: null
            },
            Bc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "kept_at",
                storageKey: null
            },
            Cc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_keep_disabled",
                storageKey: null
            },
            Dc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "blob_media_type",
                storageKey: null
            },
            Ec = [x, r, Lb],
            Fc = {
                kind: "InlineFragment",
                selections: Ec,
                type: "MessageVideo",
                abstractKey: null
            };
        Ec = {
            kind: "InlineFragment",
            selections: Ec,
            type: "MessageImage",
            abstractKey: null
        };
        var Gc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "montage_container_id",
                storageKey: null
            },
            Hc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "story_id",
                storageKey: null
            },
            Ic = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "calendar_sync_type",
                storageKey: null
            },
            Jc = {
                alias: null,
                args: null,
                concreteType: "Page",
                kind: "LinkedField",
                name: "page",
                plural: !1,
                selections: [a, Ic, {
                    alias: null,
                    args: null,
                    concreteType: "ServicesVerticalPageBasedInfo",
                    kind: "LinkedField",
                    name: "services_vertical_info",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "is_eligible_for_appointment_calendar",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "time_zone_name",
                        storageKey: null
                    }],
                    storageKey: null
                }],
                storageKey: null
            },
            Kc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "message_bubble_type",
                storageKey: null
            },
            Lc = {
                alias: null,
                args: null,
                concreteType: "User",
                kind: "LinkedField",
                name: "user",
                plural: !1,
                selections: f,
                storageKey: null
            },
            Mc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "ls_xma_title",
                storageKey: null
            },
            Nc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "ls_xma_subtitle",
                storageKey: null
            },
            Oc = {
                alias: "availability",
                args: null,
                kind: "ScalarField",
                name: "user_availability",
                storageKey: null
            },
            Pc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "request_flow_type",
                storageKey: null
            },
            Qc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "service_general_info",
                storageKey: null
            },
            Rc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "has_saved_to_calendar",
                storageKey: null
            },
            Sc = {
                alias: null,
                args: null,
                concreteType: "Page",
                kind: "LinkedField",
                name: "page",
                plural: !1,
                selections: [a, g, K],
                storageKey: null
            },
            Tc = [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "start",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "end",
                storageKey: null
            }],
            Uc = {
                alias: null,
                args: null,
                concreteType: "TimeRange",
                kind: "LinkedField",
                name: "suggested_time_range",
                plural: !1,
                selections: Tc,
                storageKey: null
            },
            Vc = {
                alias: "duration",
                args: null,
                kind: "ScalarField",
                name: "duration_in_seconds",
                storageKey: null
            },
            Wc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "duration_type",
                storageKey: null
            },
            Xc = [{
                kind: "Literal",
                name: "first",
                value: 1
            }],
            Yc = {
                alias: null,
                args: [{
                    kind: "Literal",
                    name: "sizing",
                    value: "cover-fill-cropped"
                }],
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: p,
                storageKey: 'image(sizing:"cover-fill-cropped")'
            },
            Zc = {
                alias: "price",
                args: null,
                kind: "ScalarField",
                name: "display_price",
                storageKey: null
            },
            $c = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "requested_time",
                storageKey: null
            },
            ad = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "special_request",
                storageKey: null
            },
            bd = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "booking_status_value",
                storageKey: null
            },
            cd = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "status",
                storageKey: null
            },
            dd = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "archived_status",
                storageKey: null
            },
            ed = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "reminder_bubble_text",
                storageKey: null
            },
            fd = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "request_admin_approval_type",
                storageKey: null
            },
            gd = {
                alias: null,
                args: null,
                concreteType: "JobApplication",
                kind: "LinkedField",
                name: "job_application",
                plural: !1,
                selections: f,
                storageKey: null
            },
            hd = {
                alias: null,
                args: null,
                concreteType: "User",
                kind: "LinkedField",
                name: "user",
                plural: !1,
                selections: [a, ya, K],
                storageKey: null
            },
            id = {
                alias: null,
                args: null,
                concreteType: "ServicesNativeBookingRequestAdditionalInfoField",
                kind: "LinkedField",
                name: "additional_info",
                plural: !0,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "field_key",
                    storageKey: null
                }, L, b],
                storageKey: null
            },
            jd = {
                alias: null,
                args: null,
                concreteType: "PhoneNumber",
                kind: "LinkedField",
                name: "consumer_phone_number",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "display_number",
                    storageKey: null
                }],
                storageKey: null
            },
            kd = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "recur_message",
                storageKey: null
            },
            ld = {
                alias: null,
                args: null,
                concreteType: "Page",
                kind: "LinkedField",
                name: "page",
                plural: !1,
                selections: f,
                storageKey: null
            },
            md = {
                alias: null,
                args: null,
                concreteType: "User",
                kind: "LinkedField",
                name: "consumer",
                plural: !1,
                selections: f,
                storageKey: null
            };
        Tc = {
            alias: null,
            args: null,
            concreteType: "TimeRange",
            kind: "LinkedField",
            name: "formatted_available_time_ranges",
            plural: !0,
            selections: Tc,
            storageKey: null
        };
        var nd = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "has_booking_request_created",
                storageKey: null
            },
            od = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "cta_click_events",
                storageKey: null
            },
            pd = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "cta_texts",
                storageKey: null
            },
            qd = {
                alias: null,
                args: null,
                concreteType: "ServicesWWWURL",
                kind: "LinkedField",
                name: "www_url",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "is_async",
                    storageKey: null
                }, o],
                storageKey: null
            },
            rd = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "render_template",
                storageKey: null
            },
            sd = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "primary_text",
                storageKey: null
            },
            td = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "visible_on_platforms",
                storageKey: null
            },
            ud = [a, g],
            vd = {
                alias: "eventID",
                args: null,
                kind: "ScalarField",
                name: "id",
                storageKey: null
            },
            wd = {
                alias: "guestStatus",
                args: null,
                kind: "ScalarField",
                name: "viewer_guest_status",
                storageKey: null
            },
            xd = {
                alias: "canViewerJoin",
                args: null,
                kind: "ScalarField",
                name: "can_viewer_join",
                storageKey: null
            },
            yd = {
                alias: "timeString",
                args: null,
                kind: "ScalarField",
                name: "start_time_sentence",
                storageKey: null
            },
            V = [g],
            zd = {
                alias: null,
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "social_context",
                plural: !1,
                selections: j,
                storageKey: null
            },
            Ad = {
                alias: "watchStatus",
                args: null,
                kind: "ScalarField",
                name: "viewer_watch_status",
                storageKey: null
            },
            Bd = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "connection_style",
                storageKey: null
            },
            Cd = {
                alias: "canViewerWatch",
                args: null,
                kind: "ScalarField",
                name: "can_viewer_watch",
                storageKey: null
            },
            Dd = {
                alias: null,
                args: [{
                    kind: "Literal",
                    name: "width",
                    value: 300
                }],
                concreteType: "Image",
                kind: "LinkedField",
                name: "profile_picture",
                plural: !1,
                selections: p,
                storageKey: "profile_picture(width:300)"
            },
            Ed = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "start_timestamp",
                storageKey: null
            },
            Fd = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "application_name",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "artist_names",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "audio_url",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "duration_ms",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "music_title",
                    storageKey: null
                }],
                type: "ExternalSong",
                abstractKey: null
            },
            Gd = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "lwa_state",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "lwa_type",
                    storageKey: null
                }],
                type: "LightweightAction",
                abstractKey: null
            },
            Hd = {
                alias: "desc",
                args: null,
                kind: "ScalarField",
                name: "description",
                storageKey: null
            },
            Id = {
                alias: "thumb_url",
                args: null,
                kind: "ScalarField",
                name: "image_url",
                storageKey: null
            },
            Jd = {
                alias: "item_url",
                args: null,
                kind: "ScalarField",
                name: "target_url",
                storageKey: null
            },
            Kd = {
                alias: "source",
                args: null,
                kind: "ScalarField",
                name: "source_name",
                storageKey: null
            },
            Ld = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "second_metaline",
                storageKey: null
            },
            Md = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "third_metaline",
                storageKey: null
            },
            Nd = {
                alias: "total_cost",
                args: null,
                kind: "ScalarField",
                name: "formated_price",
                storageKey: null
            },
            Od = {
                alias: "merchant_name",
                args: null,
                kind: "ScalarField",
                name: "seller_info",
                storageKey: null
            },
            Pd = {
                alias: "raw_amount",
                args: null,
                kind: "ScalarField",
                name: "price_amount",
                storageKey: null
            },
            Qd = {
                alias: null,
                args: null,
                concreteType: "MessengerCommercePayment",
                kind: "LinkedField",
                name: "payment",
                plural: !1,
                selections: f,
                storageKey: null
            },
            Rd = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "price_currency",
                storageKey: null
            },
            Sd = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "price_amount",
                storageKey: null
            },
            Td = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "can_donate",
                storageKey: null
            },
            Ud = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "has_viewer_donated",
                storageKey: null
            },
            Vd = {
                alias: null,
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "fundraiser_detailed_progress_text",
                plural: !1,
                selections: j,
                storageKey: null
            },
            Wd = {
                alias: null,
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "fundraiser_subtitle_text",
                plural: !1,
                selections: j,
                storageKey: null
            },
            Xd = [o, t, s],
            Yd = {
                alias: null,
                args: null,
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: Xd,
                storageKey: null
            },
            Zd = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "recipient_name",
                storageKey: null
            },
            $d = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "merchant_name",
                storageKey: null
            },
            ae = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "account_holder_name",
                storageKey: null
            },
            be = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "receipt_id",
                storageKey: null
            },
            ce = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "shipping_method",
                storageKey: null
            },
            de = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "order_payment_method",
                storageKey: null
            },
            ee = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "receipt_url",
                storageKey: null
            },
            fe = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "cancellation_url",
                storageKey: null
            },
            ge = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "receipient_address",
                storageKey: null
            },
            he = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "streets",
                storageKey: null
            },
            W = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "city",
                storageKey: null
            },
            X = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "country",
                storageKey: null
            },
            ie = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "postal_code",
                storageKey: null
            },
            Y = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "state",
                storageKey: null
            },
            je = {
                alias: null,
                args: null,
                concreteType: "MessengerCommerceBusinessLocation",
                kind: "LinkedField",
                name: "structured_address",
                plural: !1,
                selections: [he, W, X, ie, Y],
                storageKey: null
            },
            ke = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "total",
                storageKey: null
            },
            le = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "tax",
                storageKey: null
            },
            me = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "shipping_cost",
                storageKey: null
            },
            ne = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "subtotal",
                storageKey: null
            },
            oe = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "bubble_type",
                storageKey: null
            },
            pe = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "order_time_for_display",
                storageKey: null
            },
            qe = {
                alias: null,
                args: null,
                concreteType: "RetailReceiptAdjustment",
                kind: "LinkedField",
                name: "retail_adjustments",
                plural: !0,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "adjustment_amount",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "adjustment_type",
                    storageKey: null
                }],
                storageKey: null
            },
            re = {
                alias: null,
                args: null,
                concreteType: "Image",
                kind: "LinkedField",
                name: "partner_logo",
                plural: !1,
                selections: p,
                storageKey: null
            },
            se = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "payment_modules_client",
                storageKey: null
            },
            te = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_viewer_seller",
                storageKey: null
            },
            ue = {
                alias: null,
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "payment_snippet",
                plural: !1,
                selections: j,
                storageKey: null
            },
            ve = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "item_id",
                storageKey: null
            },
            we = {
                alias: null,
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "subtitle",
                plural: !1,
                selections: j,
                storageKey: null
            };
        M = [M, zb];
        zb = {
            alias: null,
            args: null,
            concreteType: "CurrencyAmount",
            kind: "LinkedField",
            name: "unit_price",
            plural: !1,
            selections: M,
            storageKey: null
        };
        var xe = {
                alias: null,
                args: q,
                concreteType: "Image",
                kind: "LinkedField",
                name: "images",
                plural: !0,
                selections: p,
                storageKey: "images(height:120,width:120)"
            },
            ye = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "quantity",
                storageKey: null
            };
        yb = {
            alias: null,
            args: null,
            concreteType: "PaymentPlatformAttachmentComponent",
            kind: "LinkedField",
            name: "components",
            plural: !0,
            selections: [yb, we, {
                alias: null,
                args: q,
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: p,
                storageKey: "image(height:120,width:120)"
            }],
            storageKey: null
        };
        q = [Y, {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "action_type",
            storageKey: null
        }, {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "action_detail",
            storageKey: null
        }, {
            alias: null,
            args: null,
            concreteType: "TextWithEntities",
            kind: "LinkedField",
            name: "label",
            plural: !1,
            selections: j,
            storageKey: null
        }, {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "checkmark",
            storageKey: null
        }, {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "extra_data",
            storageKey: null
        }];
        var ze = {
                alias: null,
                args: null,
                concreteType: "PaymentPlatformAttachmentCallToAction",
                kind: "LinkedField",
                name: "payment_call_to_actions",
                plural: !0,
                selections: q,
                storageKey: null
            },
            Ae = {
                alias: null,
                args: null,
                concreteType: "PaymentPlatformAttachmentCallToAction",
                kind: "LinkedField",
                name: "click_action",
                plural: !1,
                selections: q,
                storageKey: null
            };
        q = {
            alias: null,
            args: null,
            concreteType: "PaymentPlatformAttachmentCallToAction",
            kind: "LinkedField",
            name: "summary_action",
            plural: !1,
            selections: q,
            storageKey: null
        };
        var Be = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "invoicer_id",
                storageKey: null
            },
            Ce = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_last_attachment",
                storageKey: null
            };
        M = {
            alias: null,
            args: null,
            concreteType: "CurrencyAmount",
            kind: "LinkedField",
            name: "payment_total",
            plural: !1,
            selections: M,
            storageKey: null
        };
        var De = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "product_detail",
                storageKey: null
            },
            Ee = {
                alias: null,
                args: null,
                concreteType: "PaymentPlatformAttachmentIcon",
                kind: "LinkedField",
                name: "payment_status_icon",
                plural: !1,
                selections: [cd],
                storageKey: null
            },
            Fe = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "user_facing_payment_status",
                storageKey: null
            },
            Ge = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "payment_sub_statuses",
                storageKey: null
            },
            He = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "should_show_new_xma",
                storageKey: null
            },
            Ie = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "buyer_name",
                storageKey: null
            },
            Je = {
                alias: null,
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "group_commerce_item_description",
                plural: !1,
                selections: j,
                storageKey: null
            },
            Ke = {
                alias: null,
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "formatted_price",
                plural: !1,
                selections: j,
                storageKey: null
            },
            Le = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "group_commerce_item_title",
                storageKey: null
            };
        Qa = {
            alias: null,
            args: Qa,
            concreteType: "Image",
            kind: "LinkedField",
            name: "image",
            plural: !1,
            selections: p,
            storageKey: 'image(sizing:"contain-fit")'
        };
        var Me = {
                alias: "primary_photo",
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "primary_listing_photo",
                plural: !1,
                selections: [Qa],
                storageKey: null
            },
            Ne = {
                alias: null,
                args: null,
                concreteType: "StreetAddress",
                kind: "LinkedField",
                name: "address",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "single_line_full_address",
                    storageKey: null
                }],
                storageKey: null
            },
            Oe = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "top_category_name",
                storageKey: null
            };
        v = {
            alias: null,
            args: null,
            concreteType: "FocusedPhoto",
            kind: "LinkedField",
            name: "cover_photo",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                concreteType: "Photo",
                kind: "LinkedField",
                name: "photo",
                plural: !1,
                selections: [a, {
                    alias: null,
                    args: [{
                        kind: "Literal",
                        name: "height",
                        value: 720
                    }, v, {
                        kind: "Literal",
                        name: "width",
                        value: 720
                    }],
                    concreteType: "Image",
                    kind: "LinkedField",
                    name: "image",
                    plural: !1,
                    selections: Xd,
                    storageKey: 'image(height:720,sizing:"contain-fit",width:720)'
                }],
                storageKey: null
            }],
            storageKey: null
        };
        var Pe = {
                alias: null,
                args: null,
                concreteType: "Location",
                kind: "LinkedField",
                name: "location",
                plural: !1,
                selections: wc,
                storageKey: null
            },
            Qe = {
                alias: null,
                args: null,
                concreteType: "Rating",
                kind: "LinkedField",
                name: "overall_star_rating",
                plural: !1,
                selections: [L],
                storageKey: null
            },
            Re = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "price_range_description",
                storageKey: null
            },
            Se = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_active",
                storageKey: null
            },
            Te = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "event_title",
                storageKey: null
            },
            Ue = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "time",
                storageKey: null
            },
            Ve = [Se, Te, Ue],
            We = {
                kind: "InlineFragment",
                selections: Ve,
                type: "MessengerEventReminder",
                abstractKey: null
            },
            Xe = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "has_more_upcoming_reminders",
                storageKey: null
            },
            Ye = [{
                kind: "Literal",
                name: "orderby",
                value: "m_personal_reminder_list_ordering"
            }],
            Ze = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "tint_color",
                storageKey: null
            },
            $e = {
                alias: null,
                args: null,
                concreteType: "Image",
                kind: "LinkedField",
                name: "logo",
                plural: !1,
                selections: Xd,
                storageKey: null
            },
            af = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "flight_label",
                storageKey: null
            },
            bf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "boarding_time_label",
                storageKey: null
            },
            cf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "departure_label",
                storageKey: null
            },
            df = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "passenger_names_label",
                storageKey: null
            },
            ef = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "passenger_seat_label",
                storageKey: null
            },
            ff = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "flight_terminal_label",
                storageKey: null
            },
            gf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "flight_gate_label",
                storageKey: null
            },
            hf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "view_boarding_pass_cta_label",
                storageKey: null
            },
            jf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "share_cta_label",
                storageKey: null
            },
            kf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "message_cta_label",
                storageKey: null
            },
            lf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "boarding_pass_title_label",
                storageKey: null
            },
            mf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "boarding_pass_error_title_label",
                storageKey: null
            },
            nf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "airline_logo_image_url",
                storageKey: null
            },
            of = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "header_image_url",
                storageKey: null
            };
        L = [l, L];
        var pf = {
                alias: null,
                args: null,
                concreteType: "AirlineProductItem",
                kind: "LinkedField",
                name: "auxiliary_fields",
                plural: !0,
                selections: L,
                storageKey: null
            },
            qf = {
                alias: null,
                args: null,
                concreteType: "AirlineProductItem",
                kind: "LinkedField",
                name: "secondary_fields",
                plural: !0,
                selections: L,
                storageKey: null
            },
            rf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "qr_code_header_image_url",
                storageKey: null
            },
            sf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "qr_code_image_url",
                storageKey: null
            },
            tf = {
                alias: null,
                args: null,
                concreteType: "AirlineProductItem",
                kind: "LinkedField",
                name: "header_text_field",
                plural: !1,
                selections: L,
                storageKey: null
            },
            uf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "flight_number",
                storageKey: null
            },
            vf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "formatted_time_for_display",
                storageKey: null
            },
            wf = [vf],
            xf = {
                alias: null,
                args: null,
                concreteType: "AirlineFlightTimeInfo",
                kind: "LinkedField",
                name: "departure_time_info",
                plural: !1,
                selections: wf,
                storageKey: null
            },
            yf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "terminal",
                storageKey: null
            },
            zf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "gate",
                storageKey: null
            },
            Z = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "airport_code",
                storageKey: null
            },
            Af = {
                alias: null,
                args: null,
                concreteType: "AirlineFlightTimeInfo",
                kind: "LinkedField",
                name: "arrival_time_info",
                plural: !1,
                selections: wf,
                storageKey: null
            },
            Bf = [Z, W],
            Cf = {
                alias: null,
                args: null,
                concreteType: "AirportInfo",
                kind: "LinkedField",
                name: "arrival_airport",
                plural: !1,
                selections: Bf,
                storageKey: null
            };
        wf = {
            alias: null,
            args: null,
            concreteType: "AirlineFlightInfo",
            kind: "LinkedField",
            name: "flight_info",
            plural: !1,
            selections: [uf, {
                alias: null,
                args: null,
                concreteType: "AirlineFlightTimeInfo",
                kind: "LinkedField",
                name: "boarding_time_info",
                plural: !1,
                selections: wf,
                storageKey: null
            }, xf, {
                alias: null,
                args: null,
                concreteType: "AirportInfo",
                kind: "LinkedField",
                name: "departure_airport",
                plural: !1,
                selections: [yf, zf, Z, W],
                storageKey: null
            }, Af, Cf],
            storageKey: null
        };
        var Df = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "seat",
                storageKey: null
            },
            Ef = {
                alias: null,
                args: null,
                concreteType: "AirlinePassengerSegmentDetail",
                kind: "LinkedField",
                name: "passenger",
                plural: !1,
                selections: [Df, {
                    alias: null,
                    args: null,
                    concreteType: "AirlinePassenger",
                    kind: "LinkedField",
                    name: "passenger",
                    plural: !1,
                    selections: V,
                    storageKey: null
                }],
                storageKey: null
            },
            Ff = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "pnr_number",
                storageKey: null
            },
            Gf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "booking_number_label",
                storageKey: null
            },
            Hf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "arrival_time_label",
                storageKey: null
            },
            If = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "departure_time_label",
                storageKey: null
            };
        Bf = {
            kind: "InlineFragment",
            selections: [Ff, Ze, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "checkin_url",
                storageKey: null
            }, Gf, af, Hf, If, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "checkin_cta_label",
                storageKey: null
            }, $e, {
                alias: null,
                args: null,
                concreteType: "AirlineFlightInfo",
                kind: "LinkedField",
                name: "flight_infos",
                plural: !0,
                selections: [uf, Cf, {
                    alias: null,
                    args: null,
                    concreteType: "AirportInfo",
                    kind: "LinkedField",
                    name: "departure_airport",
                    plural: !1,
                    selections: Bf,
                    storageKey: null
                }, xf, Af],
                storageKey: null
            }],
            type: "AirlineCheckInReminderMessageAttachment",
            abstractKey: null
        };
        var Jf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "tracking_number",
                storageKey: null
            },
            Kf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "shipdate_for_display",
                storageKey: null
            },
            Lf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "estimated_delivery_time_for_display",
                storageKey: null
            },
            Mf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "timezone",
                storageKey: null
            };
        X = [X, W, ie, vc, U, Y, he, Mf];
        ie = {
            alias: null,
            args: null,
            concreteType: "MessengerCommerceBusinessLocation",
            kind: "LinkedField",
            name: "commerce_origin",
            plural: !1,
            selections: X,
            storageKey: null
        };
        vc = {
            alias: null,
            args: null,
            concreteType: "MessengerCommerceBusinessLocation",
            kind: "LinkedField",
            name: "commerce_destination",
            plural: !1,
            selections: X,
            storageKey: null
        };
        U = {
            alias: null,
            args: null,
            concreteType: "RetailShipmentItemsConnection",
            kind: "LinkedField",
            name: "retail_shipment_items",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                concreteType: "MessengerRetailItem",
                kind: "LinkedField",
                name: "nodes",
                plural: !0,
                selections: [a, g, Hd, Id, Jd, Kd, dc, ec, Ld, Md, G],
                storageKey: null
            }],
            storageKey: null
        };
        Y = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "carrier_tracking_url",
            storageKey: null
        };
        he = [t, s, o];
        var Nf = {
                alias: null,
                args: null,
                concreteType: "Image",
                kind: "LinkedField",
                name: "logo",
                plural: !1,
                selections: he,
                storageKey: null
            },
            Of = {
                alias: null,
                args: null,
                concreteType: "MessengerRetailCarrier",
                kind: "LinkedField",
                name: "retail_carrier",
                plural: !1,
                selections: [g, Y, Nf],
                storageKey: null
            };
        X = {
            alias: null,
            args: null,
            concreteType: "MessengerCommerceBusinessLocation",
            kind: "LinkedField",
            name: "messenger_commerce_location",
            plural: !1,
            selections: X,
            storageKey: null
        };
        var Pf = {
                alias: null,
                args: null,
                concreteType: "RetailShipmentTrackingEventsConnection",
                kind: "LinkedField",
                name: "shipment_tracking_events",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "MessengerRetailShipmentTrackingEvent",
                    kind: "LinkedField",
                    name: "nodes",
                    plural: !0,
                    selections: [a, X],
                    storageKey: null
                }],
                storageKey: null
            },
            Qf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "tracking_event_time_for_display",
                storageKey: null
            },
            Rf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "shipment_tracking_event_type",
                storageKey: null
            },
            Sf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "tracking_event_description",
                storageKey: null
            };
        Y = {
            alias: null,
            args: null,
            concreteType: "MessengerRetailCarrier",
            kind: "LinkedField",
            name: "retail_carrier",
            plural: !1,
            selections: [g, Y, Nf, {
                alias: null,
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "legal_terms_of_service_text",
                plural: !1,
                selections: j,
                storageKey: null
            }],
            storageKey: null
        };
        Nf = {
            alias: null,
            args: null,
            concreteType: "RetailShipmentTrackingEventsConnection",
            kind: "LinkedField",
            name: "shipment_tracking_events",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                concreteType: "MessengerRetailShipmentTrackingEvent",
                kind: "LinkedField",
                name: "nodes",
                plural: !0,
                selections: [a, Rf, X],
                storageKey: null
            }],
            storageKey: null
        };
        var Tf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "update_type",
                storageKey: null
            },
            Uf = {
                alias: null,
                args: null,
                concreteType: "Image",
                kind: "LinkedField",
                name: "logo",
                plural: !1,
                selections: u,
                storageKey: null
            };
        Cf = {
            kind: "InlineFragment",
            selections: [Ff, Ze, Tf, If, Hf, Gf, gf, af, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "flight_status_label",
                storageKey: null
            }, df, ef, Uf, {
                alias: null,
                args: null,
                concreteType: "AirlineFlightInfo",
                kind: "LinkedField",
                name: "flight_info",
                plural: !1,
                selections: [Cf, {
                    alias: null,
                    args: null,
                    concreteType: "AirportInfo",
                    kind: "LinkedField",
                    name: "departure_airport",
                    plural: !1,
                    selections: [Z, W, zf],
                    storageKey: null
                }, uf, xf, Af],
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "hightlighted_labels",
                storageKey: null
            }],
            type: "AirlineUpdateMessageAttachment",
            abstractKey: null
        };
        zf = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "confirmation_number",
            storageKey: null
        };
        xf = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "formatted_total",
            storageKey: null
        };
        Fb = {
            alias: null,
            args: null,
            concreteType: "AirlinePriceInfo",
            kind: "LinkedField",
            name: "itemized_price_infos",
            plural: !0,
            selections: [l, Fb],
            storageKey: null
        };
        var Vf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "formatted_tax",
                storageKey: null
            },
            Wf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "formatted_base_price",
                storageKey: null
            },
            Xf = {
                alias: null,
                args: null,
                concreteType: "AirlinePassenger",
                kind: "LinkedField",
                name: "passenger_infos",
                plural: !0,
                selections: V,
                storageKey: null
            },
            Yf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "aircraft_type_label",
                storageKey: null
            },
            Zf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "base_price_label",
                storageKey: null
            },
            $f = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "cabin_type_label",
                storageKey: null
            },
            ag = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "flight_confirmation_label",
                storageKey: null
            },
            bg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "flight_date_label",
                storageKey: null
            },
            cg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "itinerary_error_title_label",
                storageKey: null
            },
            dg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "itinerary_title_label",
                storageKey: null
            },
            eg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "passenger_name_label",
                storageKey: null
            },
            fg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "purchase_summary_label",
                storageKey: null
            },
            gg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "taxes_label",
                storageKey: null
            },
            hg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "total_label",
                storageKey: null
            },
            ig = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "view_details_cta_label",
                storageKey: null
            },
            jg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "number_of_stops_label",
                storageKey: null
            };
        Z = [Z, W, yf];
        W = {
            alias: null,
            args: null,
            concreteType: "AirlineFlightInfo",
            kind: "LinkedField",
            name: "flight_info",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "aircraft_type",
                storageKey: null
            }, uf, {
                alias: null,
                args: null,
                concreteType: "AirportInfo",
                kind: "LinkedField",
                name: "departure_airport",
                plural: !1,
                selections: Z,
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "AirportInfo",
                kind: "LinkedField",
                name: "arrival_airport",
                plural: !1,
                selections: Z,
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "AirlineFlightTimeInfo",
                kind: "LinkedField",
                name: "departure_time_info",
                plural: !1,
                selections: [vf, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "formatted_datetime_for_display",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "formatted_date_for_display",
                    storageKey: null
                }],
                storageKey: null
            }, Af],
            storageKey: null
        };
        yf = {
            alias: null,
            args: null,
            concreteType: "AirlinePassengerSegmentDetail",
            kind: "LinkedField",
            name: "passenger_details",
            plural: !0,
            selections: [{
                alias: null,
                args: null,
                concreteType: "AirlinePassenger",
                kind: "LinkedField",
                name: "passenger",
                plural: !1,
                selections: [g, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "ticket_number",
                    storageKey: null
                }],
                storageKey: null
            }, Df, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "seat_type",
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "AirlineProductItem",
                kind: "LinkedField",
                name: "product_items",
                plural: !0,
                selections: L,
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "travel_class",
                storageKey: null
            }],
            storageKey: null
        };
        uf = {
            alias: null,
            args: null,
            concreteType: "Image",
            kind: "LinkedField",
            name: "cover_image",
            plural: !1,
            selections: Xd,
            storageKey: null
        };
        Z = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "headline",
            storageKey: null
        };
        vf = {
            alias: null,
            args: null,
            concreteType: "Page",
            kind: "LinkedField",
            name: "page",
            plural: !1,
            selections: ud,
            storageKey: null
        };
        Af = {
            alias: null,
            args: null,
            concreteType: "EventAttendanceAnswer",
            kind: "LinkedField",
            name: "attendee_answers",
            plural: !0,
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "question_id",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "answer",
                storageKey: null
            }],
            storageKey: null
        };
        Df = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "num_guests",
            storageKey: null
        };
        L = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "start_time_sentence",
            storageKey: null
        };
        Xd = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "contextual_name",
            storageKey: null
        };
        var kg = {
                alias: null,
                args: [{
                    kind: "Literal",
                    name: "height",
                    value: 64
                }, {
                    kind: "Literal",
                    name: "width",
                    value: 64
                }],
                concreteType: "Image",
                kind: "LinkedField",
                name: "profile_picture",
                plural: !1,
                selections: p,
                storageKey: "profile_picture(height:64,width:64)"
            },
            lg = {
                kind: "Literal",
                name: "first",
                value: 3
            },
            mg = [lg],
            ng = {
                alias: null,
                args: mg,
                concreteType: "EventAttendanceConfigToOrderedQuestionsConnection",
                kind: "LinkedField",
                name: "attendance_questions",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "EventAttendanceQuestion",
                    kind: "LinkedField",
                    name: "nodes",
                    plural: !0,
                    selections: [a, h],
                    storageKey: null
                }],
                storageKey: "attendance_questions(first:3)"
            };
        b = {
            alias: null,
            args: null,
            concreteType: "LeadGenUserInfoField",
            kind: "LinkedField",
            name: "field_data",
            plural: !0,
            selections: [b, g, tc],
            storageKey: null
        };
        tc = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "sender_wec_number",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "sender_wec_number_formated",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "sender_wec_number_fbid",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "sender_wec_name",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "wec_referral_url",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "wec_referral_body",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "wec_referral_headline",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "wec_referral_media",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "wec_referral_media_type",
                storageKey: null
            }],
            type: "WECMessage",
            abstractKey: null
        };
        var og = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_malicious",
                storageKey: null
            },
            pg = {
                alias: null,
                args: null,
                concreteType: "Image",
                kind: "LinkedField",
                name: "thumbnail_image",
                plural: !1,
                selections: u,
                storageKey: null
            },
            qg = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "ice_breaker_title",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "IceBreakerMessage",
                    kind: "LinkedField",
                    name: "ice_breaker_messages",
                    plural: !0,
                    selections: [{
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "message",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "message_key",
                        storageKey: null
                    }],
                    storageKey: null
                }, na],
                type: "IceBreakerMessageAttachment",
                abstractKey: null
            },
            rg = {
                kind: "Literal",
                name: "height",
                value: 280
            },
            sg = {
                kind: "Literal",
                name: "width",
                value: 280
            },
            tg = [rg, sg],
            ug = {
                alias: "preview",
                args: tg,
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: u,
                storageKey: "image(height:280,width:280)"
            },
            vg = {
                kind: "Literal",
                name: "height",
                value: 480
            },
            $ = {
                kind: "Literal",
                name: "width",
                value: 480
            },
            wg = {
                alias: "large_preview",
                args: [vg, $],
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: u,
                storageKey: "image(height:480,width:480)"
            },
            xg = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "friend_id",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "confidence",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "birthday_date",
                    storageKey: null
                }],
                type: "MBirthdayReminderAttachment",
                abstractKey: null
            },
            yg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "module_name",
                storageKey: null
            },
            zg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "program_name",
                storageKey: null
            },
            Ag = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "curriculum_message",
                storageKey: null
            },
            Bg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "prompt",
                storageKey: null
            },
            Cg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "step_count",
                storageKey: null
            },
            Dg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "total_steps",
                storageKey: null
            },
            Eg = {
                alias: null,
                args: null,
                concreteType: "MentorshipProgram",
                kind: "LinkedField",
                name: "mentorship_program",
                plural: !1,
                selections: [a, {
                    alias: null,
                    args: null,
                    concreteType: "MentorshipCurriculum",
                    kind: "LinkedField",
                    name: "curriculum",
                    plural: !1,
                    selections: f,
                    storageKey: null
                }],
                storageKey: null
            },
            Fg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "topics",
                storageKey: null
            },
            Gg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "xma_type",
                storageKey: null
            },
            Hg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "xma_title",
                storageKey: null
            },
            Ig = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "xma_disclaimer",
                storageKey: null
            },
            Jg = {
                alias: null,
                args: null,
                concreteType: "MentorshipProgram",
                kind: "LinkedField",
                name: "mentorship_program",
                plural: !1,
                selections: f,
                storageKey: null
            },
            Kg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "xma_body",
                storageKey: null
            },
            Lg = {
                alias: null,
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "title",
                plural: !1,
                selections: [h, {
                    alias: null,
                    args: null,
                    concreteType: "EntityAtRange",
                    kind: "LinkedField",
                    name: "ranges",
                    plural: !0,
                    selections: [i, Fa],
                    storageKey: null
                }],
                storageKey: null
            },
            Mg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "block_type",
                storageKey: null
            },
            Ng = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "depth",
                storageKey: null
            },
            Og = {
                alias: null,
                args: null,
                concreteType: "InlineStyleAtRange",
                kind: "LinkedField",
                name: "inline_style_ranges",
                plural: !0,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "inline_style",
                    storageKey: null
                }, i, Fa],
                storageKey: null
            },
            Pg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "comment_count_reduced",
                storageKey: null
            },
            Qg = {
                alias: null,
                args: null,
                concreteType: "TopLevelCommentsConnection",
                kind: "LinkedField",
                name: "top_level_comments",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "total_count",
                    storageKey: null
                }],
                storageKey: null
            },
            Rg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "reaction_count_reduced",
                storageKey: null
            };
        lg = [lg, {
            kind: "Literal",
            name: "orderby",
            value: ["COUNT_DESC", "REACTION_TYPE"]
        }];
        var Sg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "reaction_type",
                storageKey: null
            },
            Tg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "post_id",
                storageKey: null
            },
            Ug = {
                alias: "description",
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "message",
                plural: !1,
                selections: j,
                storageKey: null
            },
            Vg = {
                kind: "InlineFragment",
                selections: [r],
                type: "Entity",
                abstractKey: "__isEntity"
            },
            Wg = {
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "actors",
                plural: !0,
                selections: [d, g, a, Aa, Vg, {
                    alias: null,
                    args: null,
                    concreteType: "Image",
                    kind: "LinkedField",
                    name: "profile_picture",
                    plural: !1,
                    selections: u,
                    storageKey: null
                }],
                storageKey: null
            },
            Xg = {
                alias: null,
                args: null,
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: u,
                storageKey: null
            },
            Yg = {
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "media",
                plural: !1,
                selections: [Sa, Xg],
                storageKey: null
            },
            Zg = {
                alias: "title",
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "title_with_entities",
                plural: !1,
                selections: j,
                storageKey: null
            },
            $g = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "count",
                storageKey: null
            },
            ah = [{
                kind: "Literal",
                name: "if_style",
                value: "file_upload"
            }],
            bh = {
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "media",
                plural: !1,
                selections: R,
                storageKey: null
            },
            ch = [{
                kind: "Literal",
                name: "if_style",
                value: "photo"
            }],
            dh = {
                alias: null,
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "message",
                plural: !1,
                selections: j,
                storageKey: null
            },
            eh = {
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "actors",
                plural: !0,
                selections: [d, g, a, Aa, Vg],
                storageKey: null
            };
        R = {
            alias: null,
            args: null,
            concreteType: "Photo",
            kind: "LinkedField",
            name: "photo",
            plural: !1,
            selections: R,
            storageKey: null
        };
        var fh = {
                alias: null,
                args: null,
                concreteType: "FocusedPhoto",
                kind: "LinkedField",
                name: "cover_photo",
                plural: !1,
                selections: [R],
                storageKey: null
            },
            gh = {
                alias: null,
                args: null,
                concreteType: "WorkUserInfo",
                kind: "LinkedField",
                name: "work_info",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "job_title",
                    storageKey: null
                }],
                storageKey: null
            },
            hh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "subscribe_status",
                storageKey: null
            },
            ih = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "visibility",
                storageKey: null
            };
        j = {
            alias: null,
            args: null,
            concreteType: "TextWithEntities",
            kind: "LinkedField",
            name: "visibility_sentence",
            plural: !1,
            selections: j,
            storageKey: null
        };
        var jh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "viewer_join_state",
                storageKey: null
            },
            kh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "attachment_type_name",
                storageKey: null
            },
            lh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "privacy_status",
                storageKey: null
            },
            mh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "file_type_category",
                storageKey: null
            },
            nh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "app_integration_type",
                storageKey: null
            },
            oh = {
                alias: null,
                args: [{
                    kind: "Literal",
                    name: "size",
                    value: "D32"
                }],
                concreteType: "Image",
                kind: "LinkedField",
                name: "logo",
                plural: !1,
                selections: p,
                storageKey: 'logo(size:"D32")'
            },
            ph = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "viewer_auth_link",
                storageKey: null
            },
            qh = {
                alias: null,
                args: null,
                concreteType: "Image",
                kind: "LinkedField",
                name: "attachment_icon",
                plural: !1,
                selections: p,
                storageKey: null
            },
            rh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "content_uri",
                storageKey: null
            },
            sh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "referral_offer_link",
                storageKey: null
            },
            th = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "PostPurchaseOrderUpdateXmaProgress",
                    kind: "LinkedField",
                    name: "order_progress",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "total_segments",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "filled_segments",
                        storageKey: null
                    }],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "order_id",
                    storageKey: null
                }],
                type: "PostPurchaseOrderUpdateXma",
                abstractKey: null
            },
            uh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "cta_title",
                storageKey: null
            },
            vh = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "action_prefill",
                    storageKey: null
                }, na, uh, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "customer_id",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "index",
                    storageKey: null
                }, F, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "reply_image_uri",
                    storageKey: null
                }],
                type: "InThreadMultiphotoItemCTAData",
                abstractKey: null
            };
        Vb = {
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "target",
            plural: !1,
            selections: [d, pb, {
                kind: "InlineFragment",
                selections: [a, I, x, qb, J, rb, sb],
                type: "WECMessageAudio",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [tb, vb, ub, O],
                type: "MoneyTransfer",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: Vb,
                type: "PeerToPeerTransfer",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [Nb, Wb, Xb, T, Yb, Zb, a, Ub, $b, ac, Rb, bc, Sb, O, {
                    alias: null,
                    args: null,
                    concreteType: "PeerToPeerPaymentRequest",
                    kind: "LinkedField",
                    name: "individual_requests",
                    plural: !0,
                    selections: [Nb, Wb, Xb, T, Yb, Zb, a, Ub, $b, ac, Rb, bc, Sb, O],
                    storageKey: null
                }],
                type: "PeerToPeerPaymentRequest",
                abstractKey: null
            }, O, {
                kind: "InlineFragment",
                selections: [cc, G, {
                    alias: null,
                    args: null,
                    concreteType: "RetailPromotionItemsConnection",
                    kind: "LinkedField",
                    name: "promotion_items",
                    plural: !1,
                    selections: rc,
                    storageKey: null
                }],
                type: "MessengerRetailPromotion",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [cc, G, {
                    alias: null,
                    args: null,
                    concreteType: "MessengerBusinessMessageItemsConnection",
                    kind: "LinkedField",
                    name: "business_items",
                    plural: !1,
                    selections: rc,
                    storageKey: null
                }],
                type: "MessengerBusinessMessage",
                abstractKey: null
            }, sc, uc, xc, {
                kind: "InlineFragment",
                selections: [a, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "invite_sender",
                    plural: !1,
                    selections: f,
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "invite_recipient",
                    plural: !1,
                    selections: f,
                    storageKey: null
                }],
                type: "QuickInvite",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [yc, zc, Ac, Bc, Cc, Dc, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "blob_media",
                    plural: !1,
                    selections: [Fc, Ec],
                    storageKey: null
                }],
                type: "MontageDirect",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, Gc, e, Hc],
                type: "MontageShare",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, Jc, Kc, Lc, Mc, Nc, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "native_component_flow_request",
                    plural: !1,
                    selections: [{
                        kind: "InlineFragment",
                        selections: [Oc, Pc, Qc, a, Ic, Rc, Sc, Uc, {
                            alias: null,
                            args: null,
                            concreteType: "NativeComponentFlowBookingRequestServicesProductItemsConnection",
                            kind: "LinkedField",
                            name: "services_product_items",
                            plural: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: "ServicesProductItem",
                                kind: "LinkedField",
                                name: "nodes",
                                plural: !0,
                                selections: [a, g, S, Vc, Wc, {
                                    alias: null,
                                    args: Xc,
                                    concreteType: "ProductImage",
                                    kind: "LinkedField",
                                    name: "images",
                                    plural: !0,
                                    selections: [Yc],
                                    storageKey: "images(first:1)"
                                }, Zc],
                                storageKey: null
                            }],
                            storageKey: null
                        }, $c, ad, bd, cd, dd, ed, fd, gd, hd, id, jd, Mc, Nc, kd],
                        type: "NativeComponentFlowBookingRequest",
                        abstractKey: null
                    }],
                    storageKey: null
                }],
                type: "PagesPlatformBookingMessage",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, ld, md, Tc, nd],
                type: "ServicesAppointmentAvailability",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, od, pd, qd, rd, sd, td],
                type: "ServicesGenericAdminText",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "MessagingParticipant",
                    kind: "LinkedField",
                    name: "genie_sender",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "messaging_actor",
                        plural: !1,
                        selections: ud,
                        storageKey: null
                    }],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "StoryAttachment",
                    kind: "LinkedField",
                    name: "story_attachment",
                    plural: !1,
                    selections: [k, m, Ta, y, z, Ua, Va, Wa, Xa, B, Ya, nb, ob],
                    storageKey: null
                }],
                type: "GenieMessage",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [vd, wd, xd, yd, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "event_place",
                    plural: !1,
                    selections: V,
                    storageKey: null
                }, zd, Ad, Bd, Cd, Dd, g, Ed],
                type: "Event",
                abstractKey: null
            }, Fd, Gd, {
                kind: "InlineFragment",
                selections: [a, g, Hd, Id, Jd, Kd, dc, ec, Ld, Md, E, G],
                type: "MessengerRetailItem",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, Hd, Nd, Od, gc, Id, Pd, Qd, Rd, Sd, g],
                type: "AgentItemSuggestion",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, Td, Ud, Vd, Wd, {
                    kind: "InlineFragment",
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "FundraiserCoverPhoto",
                        kind: "LinkedField",
                        name: "focused_cover_photo",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "Photo",
                            kind: "LinkedField",
                            name: "photo",
                            plural: !1,
                            selections: [Yd],
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    type: "FundraiserWithPresence",
                    abstractKey: "__isFundraiserWithPresence"
                }],
                type: "Fundraiser",
                abstractKey: "__isFundraiser"
            }, {
                kind: "InlineFragment",
                selections: [a, Zd, $d, ae, be, ce, de, ee, fe, ge, je, cd, ke, le, me, ne, {
                    alias: null,
                    args: null,
                    concreteType: "RetailReceiptItemsConnection",
                    kind: "LinkedField",
                    name: "retail_items",
                    plural: !1,
                    selections: rc,
                    storageKey: null
                }, oe, pe, qe, re],
                type: "MessengerRetailReceipt",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [se, te, ue, {
                    alias: null,
                    args: null,
                    concreteType: "PaymentInvoiceProduct",
                    kind: "LinkedField",
                    name: "item_list",
                    plural: !0,
                    selections: [ve, g, we, S, zb, xe, ye],
                    storageKey: null
                }, yb, ze, Ae, q, Be, Ce, M, De, Ee, Fe, Ge, He, Ie],
                type: "PaymentPlatformAttachment",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: f,
                type: "JobApplication",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [Je, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "group_commerce_item_seller",
                    plural: !1,
                    selections: f,
                    storageKey: null
                }, Ke, Le, Me, r],
                type: "GroupCommerceProductItem",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [Ke, Me],
                type: "MarketplaceListingRenderable",
                abstractKey: "__isMarketplaceListingRenderable"
            }, {
                kind: "InlineFragment",
                selections: [Ne, Oe, v, Pe, g, Qe, a, Re],
                type: "Page",
                abstractKey: null
            }, We, {
                kind: "InlineFragment",
                selections: [Xe, {
                    alias: null,
                    args: Ye,
                    concreteType: "MPersonalRemindersListToPersonalRemindersConnection",
                    kind: "LinkedField",
                    name: "personal_reminders",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "MPersonalRemindersListToPersonalRemindersEdge",
                        kind: "LinkedField",
                        name: "edges",
                        plural: !0,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "MessengerEventReminder",
                            kind: "LinkedField",
                            name: "node",
                            plural: !1,
                            selections: Ve,
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    storageKey: 'personal_reminders(orderby:"m_personal_reminder_list_ordering")'
                }],
                type: "MPersonalRemindersList",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [Ze, $e, af, bf, cf, df, ef, ff, gf, hf, jf, kf, lf, mf, {
                    alias: null,
                    args: null,
                    concreteType: "AirlineBoardingPassesConnection",
                    kind: "LinkedField",
                    name: "boarding_passes",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "AirlineBoardingPassMessageAttachment",
                        kind: "LinkedField",
                        name: "nodes",
                        plural: !0,
                        selections: [nf, of , pf, qf, rf, sf, tf, wf, Ef],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "AirlineBoardingPassCollectionMessageAttachment",
                abstractKey: null
            }, Bf, {
                kind: "InlineFragment",
                selections: [a, {
                    alias: null,
                    args: null,
                    concreteType: "MessengerRetailShipment",
                    kind: "LinkedField",
                    name: "shipment",
                    plural: !1,
                    selections: [a, Jf, Kf, Lf, ie, vc, U, Of, Pf],
                    storageKey: null
                }, Qf, Rf, X, Sf, oe],
                type: "MessengerRetailShipmentTrackingEvent",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, Jf, Kf, Lf, ie, vc, U, Y, Nf, {
                    alias: null,
                    args: null,
                    concreteType: "MessengerRetailReceipt",
                    kind: "LinkedField",
                    name: "receipt",
                    plural: !1,
                    selections: [be],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "User",
                    kind: "LinkedField",
                    name: "recipient",
                    plural: !1,
                    selections: V,
                    storageKey: null
                }, oe],
                type: "MessengerRetailShipment",
                abstractKey: null
            }, Cf, {
                kind: "InlineFragment",
                selections: [zf, Ff, Ze, xf, Fb, Vf, Wf, Xf, Uf, Yf, Hf, Zf, Gf, $f, If, ag, bg, af, ff, cg, dg, eg, df, ef, fg, gg, hg, ig, {
                    alias: null,
                    args: null,
                    concreteType: "AirlineItineraryLegsConnection",
                    kind: "LinkedField",
                    name: "itinerary_legs",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "AirlineItineraryLeg",
                        kind: "LinkedField",
                        name: "nodes",
                        plural: !0,
                        selections: [jg, {
                            alias: null,
                            args: null,
                            concreteType: "AirlineItinerarySegmentsConnection",
                            kind: "LinkedField",
                            name: "segments",
                            plural: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: "AirlineItinerarySegmentMessageAttachment",
                                kind: "LinkedField",
                                name: "nodes",
                                plural: !0,
                                selections: [W, yf],
                                storageKey: null
                            }],
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "AirlineItineraryMessageAttachment",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, uf, Z, g, vf],
                type: "LeadGenDeepLinkData",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, Af, Df, {
                    alias: null,
                    args: null,
                    concreteType: "Event",
                    kind: "LinkedField",
                    name: "event",
                    plural: !1,
                    selections: [a, g, L, {
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "event_place",
                        plural: !1,
                        selections: [Xd],
                        storageKey: null
                    }, kg, {
                        alias: null,
                        args: null,
                        concreteType: "EventAttendanceConfig",
                        kind: "LinkedField",
                        name: "attendance_config",
                        plural: !1,
                        selections: [ng],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "EventAttendanceConfirmation",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, b],
                type: "UserLeadGenInfo",
                abstractKey: null
            }, tc, {
                kind: "InlineFragment",
                selections: [a, g, og, o, J, rb],
                type: "WECMessageFile",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, x, qb, J, rb, I, s, pg, t],
                type: "WECMessageVideo",
                abstractKey: null
            }, qg, {
                kind: "InlineFragment",
                selections: [a, J, ug, wg],
                type: "WECMessageImage",
                abstractKey: null
            }, xg, {
                kind: "InlineFragment",
                selections: [a, yg, zg, Ag, Bg, Cg, Dg, Eg],
                type: "MentorshipMessengerCurriculumStep",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, Fg],
                type: "MentorshipMessengerDiscussionTopicSet",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, {
                    alias: null,
                    args: null,
                    concreteType: "MentorshipProgram",
                    kind: "LinkedField",
                    name: "mentorship_program",
                    plural: !1,
                    selections: [a, {
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "other_member",
                        plural: !1,
                        selections: za,
                        storageKey: null
                    }],
                    storageKey: null
                }, Gg],
                type: "MentorshipMessengerLeavePrompt",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, Gg, Hg, Ig, Jg],
                type: "MentorshipMessengerSurvey",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, Gg],
                type: "MentorshipMessengerReminder",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, Gg, Hg, Kg],
                type: "MentorshipMessengerProgressTracker",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [Lg, {
                    alias: null,
                    args: null,
                    concreteType: "ComposedBlockWithEntities",
                    kind: "LinkedField",
                    name: "message_richtext",
                    plural: !0,
                    selections: [Mg, Ka, Ng, {
                        alias: null,
                        args: null,
                        concreteType: "ComposedEntityAtRange",
                        kind: "LinkedField",
                        name: "entity_ranges",
                        plural: !0,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: null,
                            kind: "LinkedField",
                            name: "entity",
                            plural: !1,
                            selections: [d],
                            storageKey: null
                        }, i, Fa],
                        storageKey: null
                    }, Og, h],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "Feedback",
                    kind: "LinkedField",
                    name: "feedback",
                    plural: !1,
                    selections: [Pg, Qg, Rg, {
                        alias: null,
                        args: lg,
                        concreteType: "TopReactionsConnection",
                        kind: "LinkedField",
                        name: "top_reactions",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "FeedbackReactionInfo",
                            kind: "LinkedField",
                            name: "nodes",
                            plural: !0,
                            selections: [Sg],
                            storageKey: null
                        }],
                        storageKey: 'top_reactions(first:3,orderby:["COUNT_DESC","REACTION_TYPE"])'
                    }],
                    storageKey: null
                }, Tg, ac, Ug, Wg, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "to",
                    plural: !1,
                    selections: [d, g, Aa, Vg],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "StoryAttachment",
                    kind: "LinkedField",
                    name: "attachments",
                    plural: !0,
                    selections: [z, r, y, k, Yg, Zg, {
                        alias: null,
                        args: mg,
                        concreteType: "SubattachmentsConnection",
                        kind: "LinkedField",
                        name: "all_subattachments",
                        plural: !1,
                        selections: [$g, {
                            alias: "files",
                            args: ah,
                            concreteType: "StoryAttachment",
                            kind: "LinkedField",
                            name: "nodes",
                            plural: !0,
                            selections: [Zg, bh],
                            storageKey: 'nodes(if_style:"file_upload")'
                        }, {
                            alias: "images",
                            args: ch,
                            concreteType: "StoryAttachment",
                            kind: "LinkedField",
                            name: "nodes",
                            plural: !0,
                            selections: [bh],
                            storageKey: 'nodes(if_style:"photo")'
                        }],
                        storageKey: "all_subattachments(first:3)"
                    }],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "Story",
                    kind: "LinkedField",
                    name: "attached_story",
                    plural: !1,
                    selections: [dh, eh, {
                        alias: null,
                        args: null,
                        concreteType: "StoryAttachment",
                        kind: "LinkedField",
                        name: "attachments",
                        plural: !0,
                        selections: [Yg],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "Story",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, g, K, fh, gh, hh],
                type: "User",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, g, ih, j, jh, fh, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "group_general_chat",
                    plural: !1,
                    selections: f,
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "GroupsSyncMetadata",
                    kind: "LinkedField",
                    name: "work_groups_sync_metadata",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "messenger_group",
                        plural: !1,
                        selections: f,
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "Group",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, kh, lh, mh, {
                    alias: null,
                    args: null,
                    concreteType: "AppIntegration",
                    kind: "LinkedField",
                    name: "app_integration",
                    plural: !1,
                    selections: [nh, g, oh, ph],
                    storageKey: null
                }, qh, rh, {
                    alias: null,
                    args: null,
                    concreteType: "AppContentAdditionalData",
                    kind: "LinkedField",
                    name: "link_preview_additional_data",
                    plural: !0,
                    selections: [l, h, Bb, kb, da, {
                        alias: null,
                        args: null,
                        concreteType: "User",
                        kind: "LinkedField",
                        name: "profiles",
                        plural: !0,
                        selections: [K, g],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "AppContent",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: f,
                type: "OfferItem",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [E],
                type: "CommerceProductItemShare",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, sh],
                type: "ApplicationReferralXMA",
                abstractKey: null
            }, th, vh],
            storageKey: null
        };
        Xb = {
            alias: null,
            args: null,
            concreteType: "StoryAttachment",
            kind: "LinkedField",
            name: "story_attachment",
            plural: !1,
            selections: [k, m, Ta, y, z, Ua, Va, Wa, Xa, B, Ya, nb, ob, Vb, {
                alias: null,
                args: null,
                concreteType: "StoryAttachment",
                kind: "LinkedField",
                name: "subattachments",
                plural: !0,
                selections: [k, m, Ta, y, z, Ua, Va, Wa, Xa, B, Ya, nb, ob, Vb],
                storageKey: null
            }],
            storageKey: null
        };
        T = {
            kind: "InlineFragment",
            selections: f,
            type: "Node",
            abstractKey: "__isNode"
        };
        $b = {
            alias: null,
            args: null,
            concreteType: "Sticker",
            kind: "LinkedField",
            name: "sticker",
            plural: !1,
            selections: n,
            storageKey: null
        };
        O = {
            kind: "Literal",
            name: "sizing",
            value: "cover-fill"
        };
        ud = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "projection_type",
            storageKey: null
        };
        G = {
            kind: "InlineFragment",
            selections: [mc, nc, I, {
                alias: "preview",
                args: [rg, O, sg],
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: u,
                storageKey: 'image(height:280,sizing:"cover-fill",width:280)'
            }, {
                alias: "large_preview",
                args: [vg, O, $],
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: u,
                storageKey: 'image(height:480,sizing:"cover-fill",width:480)'
            }, {
                alias: "thumbnail",
                args: [{
                    kind: "Literal",
                    name: "height",
                    value: 38
                }, {
                    kind: "Literal",
                    name: "width",
                    value: 58
                }],
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: p,
                storageKey: "image(height:38,width:58)"
            }, {
                alias: null,
                args: null,
                concreteType: "PhotoEncoding",
                kind: "LinkedField",
                name: "photo_encodings",
                plural: !0,
                selections: [a, t, s, ud, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "cdn_uri",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "max_tile_level",
                    storageKey: null
                }, {
                    alias: null,
                    args: [{
                        kind: "Literal",
                        name: "thumbnail_dimensions",
                        value: [{
                            height: 280,
                            width: 280
                        }, {
                            height: 480,
                            width: 480
                        }]
                    }],
                    concreteType: "SphericalPhotoThumbnail",
                    kind: "LinkedField",
                    name: "thumbnails",
                    plural: !0,
                    selections: he,
                    storageKey: 'thumbnails(thumbnail_dimensions:[{"height":280,"width":280},{"height":480,"width":480}])'
                }, {
                    alias: null,
                    args: [{
                        kind: "Literal",
                        name: "tile_levels",
                        value: [0]
                    }],
                    concreteType: "PhotoTile",
                    kind: "LinkedField",
                    name: "tiles",
                    plural: !0,
                    selections: [{
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "level",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "face",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "col",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "row",
                        storageKey: null
                    }, o],
                    storageKey: "tiles(tile_levels:[0])"
                }, {
                    alias: null,
                    args: null,
                    concreteType: "PhotosphereMetadata",
                    kind: "LinkedField",
                    name: "spherical_metadata",
                    plural: !1,
                    selections: [ud, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "full_pano_width_pixels",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "full_pano_height_pixels",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "cropped_area_image_width_pixels",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "cropped_area_image_height_pixels",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "cropped_area_left_pixels",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "cropped_area_top_pixels",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "initial_view_heading_degrees",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "initial_view_pitch_degrees",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "initial_view_vertical_fov_degrees",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "initial_view_roll_degrees",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "pose_heading_degrees",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "pose_pitch_degrees",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "pose_roll_degrees",
                        storageKey: null
                    }],
                    storageKey: null
                }],
                storageKey: null
            }, Ma, pc, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "original_extension",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "render_as_sticker",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "blurred_image_uri",
                storageKey: null
            }],
            type: "MessageImage",
            abstractKey: null
        };
        rc = {
            kind: "InlineFragment",
            selections: [mc, nc, I, kc, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "animated_image_caption",
                storageKey: null
            }, Ma, jc, pc],
            type: "MessageAnimatedImage",
            abstractKey: null
        };
        Me = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "url_skipshim",
            storageKey: null
        };
        Ve = {
            kind: "InlineFragment",
            selections: [mc, nc, I, x, Ra, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_voicemail",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "audio_type",
                storageKey: null
            }, qb, Me],
            type: "MessageAudio",
            abstractKey: null
        };
        U = {
            kind: "InlineFragment",
            selections: [mc, nc, I, r, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "mimetype",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "content_type",
                storageKey: null
            }, og, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "message_file_fbid",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "preview_url",
                storageKey: null
            }, qb, Me, {
                alias: "preview",
                args: null,
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: p,
                storageKey: null
            }],
            type: "MessageFile",
            abstractKey: null
        };
        V = [d, G, rc, Ve, oc, U];
        za = {
            alias: null,
            args: null,
            concreteType: "MessagePageAdminSender",
            kind: "LinkedField",
            name: "page_admin_sender",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "admin_id",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "sender_type",
                storageKey: null
            }, g, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "label_type",
                storageKey: null
            }, F, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "profile_uri",
                storageKey: null
            }],
            storageKey: null
        };
        bh = {
            kind: "InlineFragment",
            selections: [Ea, {
                alias: null,
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "message",
                plural: !1,
                selections: [h, {
                    alias: null,
                    args: null,
                    concreteType: "EntityAtRange",
                    kind: "LinkedField",
                    name: "ranges",
                    plural: !0,
                    selections: [i, Fa, {
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "entity",
                        plural: !1,
                        selections: [d, Ga, Ha, Ia],
                        storageKey: null
                    }, Ja],
                    storageKey: null
                }],
                storageKey: null
            }, La, {
                alias: null,
                args: null,
                concreteType: "ExtensibleMessageAttachment",
                kind: "LinkedField",
                name: "extensible_attachment",
                plural: !1,
                selections: [Ma, Xb, {
                    alias: "genie_attachment",
                    args: null,
                    concreteType: "StoryAttachment",
                    kind: "LinkedField",
                    name: "story_attachment",
                    plural: !1,
                    selections: [{
                        alias: "genie_message",
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "target",
                        plural: !1,
                        selections: [{
                            kind: "InlineFragment",
                            selections: [a, {
                                alias: null,
                                args: null,
                                concreteType: "MessagingParticipant",
                                kind: "LinkedField",
                                name: "genie_sender",
                                plural: !1,
                                selections: [a, {
                                    alias: null,
                                    args: null,
                                    concreteType: null,
                                    kind: "LinkedField",
                                    name: "messaging_actor",
                                    plural: !1,
                                    selections: [T, g],
                                    storageKey: null
                                }],
                                storageKey: null
                            }, Xb],
                            type: "GenieMessage",
                            abstractKey: null
                        }],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                storageKey: null
            }, $b, {
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "blob_attachments",
                plural: !0,
                selections: V,
                storageKey: null
            }, za],
            type: "UserMessage",
            abstractKey: null
        };
        Yg = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "answered",
            storageKey: null
        };
        fh = {
            kind: "InlineFragment",
            selections: [Yg, e],
            type: "VoiceCallMessage",
            abstractKey: null
        };
        E = [{
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "node",
            plural: !1,
            selections: V,
            storageKey: null
        }];
        Ta = {
            kind: "InlineFragment",
            selections: [Yg, e, {
                alias: null,
                args: null,
                concreteType: "VideoCallMessageToCaptureAttachmentsConnection",
                kind: "LinkedField",
                name: "call_capture_attachments",
                plural: !1,
                selections: [$g, {
                    alias: null,
                    args: null,
                    concreteType: "VideoCallMessageToCaptureAttachmentsEdge",
                    kind: "LinkedField",
                    name: "edges",
                    plural: !0,
                    selections: E,
                    storageKey: null
                }],
                storageKey: null
            }],
            type: "VideoCallMessage",
            abstractKey: null
        };
        B = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "thread_name",
                storageKey: null
            }, e],
            type: "ThreadNameMessage",
            abstractKey: null
        };
        nb = {
            alias: "preview",
            args: tg,
            concreteType: "Image",
            kind: "LinkedField",
            name: "image",
            plural: !1,
            selections: p,
            storageKey: "image(height:280,width:280)"
        };
        Vb = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                concreteType: "MessageImage",
                kind: "LinkedField",
                name: "image_with_metadata",
                plural: !1,
                selections: [nb, Ma, pc],
                storageKey: null
            }, e],
            type: "ThreadImageMessage",
            abstractKey: null
        };
        n = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                concreteType: "MessagingParticipant",
                kind: "LinkedField",
                name: "participants_added",
                plural: !0,
                selections: f,
                storageKey: null
            }, e],
            type: "ParticipantsAddedMessage",
            abstractKey: null
        };
        rg = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                concreteType: "MessagingParticipant",
                kind: "LinkedField",
                name: "participants_removed",
                plural: !0,
                selections: f,
                storageKey: null
            }, e],
            type: "ParticipantLeftMessage",
            abstractKey: null
        };
        sg = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "viewer_has_voted",
            storageKey: null
        };
        vg = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "event_type",
                storageKey: null
            }, {
                alias: "total_count",
                args: null,
                kind: "ScalarField",
                name: "option_count",
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "Question",
                kind: "LinkedField",
                name: "question",
                plural: !1,
                selections: [a, h, sg, {
                    alias: null,
                    args: [{
                        kind: "Literal",
                        name: "orderby",
                        value: "creation_time"
                    }],
                    concreteType: "QuestionOptionsConnection",
                    kind: "LinkedField",
                    name: "options",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "QuestionOption",
                        kind: "LinkedField",
                        name: "nodes",
                        plural: !0,
                        selections: [a, h, sg, {
                            alias: null,
                            args: null,
                            concreteType: "QuestionOptionVotersConnection",
                            kind: "LinkedField",
                            name: "voters",
                            plural: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: "User",
                                kind: "LinkedField",
                                name: "nodes",
                                plural: !0,
                                selections: f,
                                storageKey: null
                            }],
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    storageKey: 'options(orderby:"creation_time")'
                }],
                storageKey: null
            }],
            type: "GroupPollExtensibleMessageAdminText",
            abstractKey: null
        };
        O = {
            alias: null,
            args: null,
            concreteType: "MessengerEventReminder",
            kind: "LinkedField",
            name: "event_reminder",
            plural: !1,
            selections: [a, Ue, Te, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "end_time",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "location_name",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "lightweight_event_type",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "allows_rsvp",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "seconds_to_notify_before",
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "User",
                kind: "LinkedField",
                name: "lightweight_event_creator",
                plural: !1,
                selections: f,
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "Page",
                kind: "LinkedField",
                name: "location_page",
                plural: !1,
                selections: f,
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "Location",
                kind: "LinkedField",
                name: "location_coordinates",
                plural: !1,
                selections: wc,
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "TimezoneInfo",
                kind: "LinkedField",
                name: "timezone_id",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "display_name",
                    storageKey: null
                }, Mf, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "timezone_id",
                    storageKey: null
                }],
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "MessengerEventReminderMembersConnection",
                kind: "LinkedField",
                name: "event_reminder_members",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "MessengerEventReminderMembersEdge",
                    kind: "LinkedField",
                    name: "edges",
                    plural: !0,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "User",
                        kind: "LinkedField",
                        name: "node",
                        plural: !1,
                        selections: f,
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "guest_list_state",
                        storageKey: null
                    }],
                    storageKey: null
                }],
                storageKey: null
            }],
            storageKey: null
        };
        $ = [O];
        u = {
            kind: "InlineFragment",
            selections: $,
            type: "LightweightEventCreateExtensibleMessageAdminText",
            abstractKey: null
        };
        he = {
            kind: "InlineFragment",
            selections: $,
            type: "LightweightEventDeleteExtensibleMessageAdminText",
            abstractKey: null
        };
        ud = {
            kind: "InlineFragment",
            selections: $,
            type: "LightweightEventNotifyBeforeEventExtensibleMessageAdminText",
            abstractKey: null
        };
        kc = {
            kind: "InlineFragment",
            selections: $,
            type: "LightweightEventNotifyExtensibleMessageAdminText",
            abstractKey: null
        };
        jc = {
            kind: "InlineFragment",
            selections: $,
            type: "LightweightEventUpdateExtensibleMessageAdminText",
            abstractKey: null
        };
        mc = {
            kind: "InlineFragment",
            selections: $,
            type: "LightweightEventUpdateLocationExtensibleMessageAdminText",
            abstractKey: null
        };
        nc = {
            kind: "InlineFragment",
            selections: $,
            type: "LightweightEventUpdateTimeExtensibleMessageAdminText",
            abstractKey: null
        };
        Me = {
            kind: "InlineFragment",
            selections: $,
            type: "LightweightEventUpdateTitleExtensibleMessageAdminText",
            abstractKey: null
        };
        Xb = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "guest_id",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "guest_status",
                storageKey: null
            }, O],
            type: "LightweightEventRSVPExtensibleMessageAdminText",
            abstractKey: null
        };
        V = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "theme_color",
                storageKey: null
            }],
            type: "ThemeColorExtensibleMessageAdminText",
            abstractKey: null
        };
        tg = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "thread_icon",
                storageKey: null
            }],
            type: "ThreadIconExtensibleMessageAdminText",
            abstractKey: null
        };
        p = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "nickname",
                storageKey: null
            }, {
                alias: "participant_id",
                args: null,
                kind: "ScalarField",
                name: "target_id",
                storageKey: null
            }],
            type: "ThreadNicknameExtensibleMessageAdminText",
            abstractKey: null
        };
        sg = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "accepter_id",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "requester_id",
                storageKey: null
            }],
            type: "AcceptPendingThreadExtensibleMessageAdminText",
            abstractKey: null
        };
        wc = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "contact_added_id",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "contact_adder_id",
                storageKey: null
            }],
            type: "AddContactExtensibleMessageAdminText",
            abstractKey: null
        };
        Mf = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "event",
            storageKey: null
        };
        $ = {
            kind: "InlineFragment",
            selections: [Mf, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_video_call",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "server_info_data",
                storageKey: null
            }],
            type: "RtcCallLogExtensibleMessageAdminText",
            abstractKey: null
        };
        O = {
            alias: null,
            args: null,
            concreteType: "Application",
            kind: "LinkedField",
            name: "game",
            plural: !1,
            selections: f,
            storageKey: null
        };
        var wh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "collapsed_text",
                storageKey: null
            },
            xh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "expanded_text",
                storageKey: null
            },
            yh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "cta_url",
                storageKey: null
            },
            zh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "template",
                storageKey: null
            },
            Ah = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "leaderboard_json",
                storageKey: null
            },
            Bh = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "game_type",
                    storageKey: null
                }],
                type: "GameScoreExtensibleMessageAdminText",
                abstractKey: null
            },
            Ch = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "parties_user_id",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "parties_invite_type",
                    storageKey: null
                }],
                type: "PartiesInviteExtensibleMessageAdminText",
                abstractKey: null
            },
            Dh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "icebreaker_type",
                storageKey: null
            },
            Eh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "icebreaker_title",
                storageKey: null
            },
            Fh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "icebreaker_subtitle",
                storageKey: null
            },
            Gh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "vote_buttons_with_icons",
                storageKey: null
            },
            Hh = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "friend_request_recipient",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "friend_request_sender",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "friend_request_subtype",
                    storageKey: null
                }, Dh, Eh, Fh, Gh],
                type: "ConfirmFriendRequestExtensibleMessageAdminText",
                abstractKey: null
            },
            Ih = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "bump_type",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "recipient_id",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "sender_id",
                    storageKey: null
                }, l, S, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "icon_uri",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "image_uri",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "facepile_ids",
                    storageKey: null
                }, uh, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "cta_uri",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "admin_message_string",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "banner_uri",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "is_two_way",
                    storageKey: null
                }],
                type: "MessengerGrowthGenericExtensibleMessageAdminText",
                abstractKey: null
            },
            Jh = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "submitted_time",
                    storageKey: null
                }],
                type: "BizInboxFormBuilderSubmitNotifyAdminText",
                abstractKey: null
            },
            Kh = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "customer_name",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "rating_feedback",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "freeform_feedback",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "instance_id",
                    storageKey: null
                }],
                type: "BizInboxCSATSurveyCustomerSubmitNotifyAdminText",
                abstractKey: null
            },
            Lh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "cta_text",
                storageKey: null
            },
            Mh = {
                kind: "InlineFragment",
                selections: [sd, Lh, yh, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "async_url",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "www_is_async_url",
                    storageKey: null
                }],
                type: "LinkCTAExtensibleMessageAdminText",
                abstractKey: null
            },
            Nh = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "referer_uri",
                    storageKey: null
                }],
                type: "MessengerLiveChatPluginURLUpdateAdminText",
                abstractKey: null
            },
            Oh = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "fb_user_name",
                    storageKey: null
                }],
                type: "MessengerLiveChatPluginFBUserStartChatAdminText",
                abstractKey: null
            };
        ea = {
            kind: "InlineFragment",
            selections: [ea],
            type: "MessengerLiveChatPluginGuestUserStartChatAdminText",
            abstractKey: null
        };
        Lh = {
            kind: "InlineFragment",
            selections: [Lh, yh, ga, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "recipient_is_the_sender",
                storageKey: null
            }],
            type: "WorkChatReminderLinkCTAExtensibleMessageAdminText",
            abstractKey: null
        };
        var Ph = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "post_uri",
                    storageKey: null
                }],
                type: "PostSharedFromGroupExtensibleMessageAdminText",
                abstractKey: null
            },
            Qh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "ad_url",
                storageKey: null
            },
            Rh = {
                kind: "InlineFragment",
                selections: [Qh],
                type: "MessengerAdContextAdminText",
                abstractKey: null
            },
            Sh = {
                kind: "InlineFragment",
                selections: [oa, na, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "ad_preferences_link",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "ad_properties",
                    storageKey: null
                }],
                type: "AdExtensibleMessageAdminText",
                abstractKey: null
            },
            Th = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "page_name",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "start_time",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "product_name",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "user_name",
                    storageKey: null
                }],
                type: "AppointmentReminderExtensibleMessageAdminText",
                abstractKey: null
            },
            Uh = [F],
            Vh = {
                kind: "InlineFragment",
                selections: Uh,
                type: "GraphQLServicesAppointmentsOptOutExtensibleMessageAdminText",
                abstractKey: null
            },
            Wh = {
                kind: "InlineFragment",
                selections: Uh,
                type: "ServicesLeadGenSurveyExtensibleMessageAdminText",
                abstractKey: null
            };
        Uh = {
            kind: "InlineFragment",
            selections: Uh,
            type: "ServicesLeadGenSurveyEditExtensibleMessageAdminText",
            abstractKey: null
        };
        var Xh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "caller_id",
                storageKey: null
            },
            Yh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "callee_id",
                storageKey: null
            },
            Zh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "conference_name",
                storageKey: null
            },
            $h = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "server_info",
                storageKey: null
            },
            ai = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "video",
                storageKey: null
            },
            bi = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "call_duration",
                storageKey: null
            },
            ci = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "rating",
                storageKey: null
            };
        Dh = {
            kind: "InlineFragment",
            selections: [Dh, Eh, Fh, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "votes_cast",
                storageKey: null
            }, Gh],
            type: "MessengerIcebreakerVoteCastExtensibleMessageAdminText",
            abstractKey: null
        };
        Eh = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "user_id",
            storageKey: null
        };
        Fh = [F, Eh, {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "receipt_photo_id",
            storageKey: null
        }, {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "currency_code",
            storageKey: null
        }, {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "detection_type",
            storageKey: null
        }];
        Gh = {
            kind: "InlineFragment",
            selections: Fh,
            type: "PagesMarkAsPaidExtensibleMessageAdminText",
            abstractKey: null
        };
        Fh = {
            kind: "InlineFragment",
            selections: Fh,
            type: "PagesMarkAsPaidNewExtensibleMessageAdminText",
            abstractKey: null
        };
        Eh = {
            kind: "InlineFragment",
            selections: [F, Eh, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "interaction_type",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "interaction_id",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "should_show_cta",
                storageKey: null
            }],
            type: "PageThreadActionSystemAddDetailsXMAT",
            abstractKey: null
        };
        var di = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                concreteType: "Page",
                kind: "LinkedField",
                name: "bot_page",
                plural: !1,
                selections: f,
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "show_landing_page",
                storageKey: null
            }],
            type: "WorkBotInstalledExtensibleMessageAdminText",
            abstractKey: null
        };
        Qh = {
            kind: "InlineFragment",
            selections: [Qh, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "should_show_url",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "results_url",
                storageKey: null
            }],
            type: "AdReplyMessageAdminText",
            abstractKey: null
        };
        var ei = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "new_magic_word_count",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "magic_word",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "emoji_effect",
                    storageKey: null
                }],
                type: "MagicWordsExtensibleMessageAdminText",
                abstractKey: null
            },
            fi = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "token_ent_id",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "user_action_type",
                    storageKey: null
                }],
                type: "NotificationMessagesAdminText",
                abstractKey: null
            },
            gi = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "admin_assigner_name",
                storageKey: null
            },
            hi = {
                kind: "InlineFragment",
                selections: [gi, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "assigned_admin_name",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "assign_conversation",
                    storageKey: null
                }],
                type: "BizInboxAssignAdminAdminText",
                abstractKey: null
            };
        gi = {
            kind: "InlineFragment",
            selections: [gi, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "note_input",
                storageKey: null
            }],
            type: "BizInboxAdminAssignmentNoteAdminText",
            abstractKey: null
        };
        var ii = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "email_thread_id",
                    storageKey: null
                }],
                type: "BizInboxOmnichannelEmailSentAdminText",
                abstractKey: null
            },
            ji = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "user_subscription_management_action_type",
                    storageKey: null
                }],
                type: "InstantGameBotMessageSubscriptionManagementAdminText",
                abstractKey: null
            },
            ki = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "extensible_message_admin_text_type",
                storageKey: null
            };
        R = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "extensible_message_admin_text",
                plural: !1,
                selections: [d, vg, u, he, ud, kc, jc, mc, nc, Me, Xb, V, tg, p, sg, wc, $, {
                    kind: "InlineFragment",
                    selections: [O, Tf, wh, xh, {
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "instant_game_update_data",
                        plural: !1,
                        selections: [{
                            kind: "InlineFragment",
                            selections: [yh, uh, R, zh],
                            type: "InstantGameXMATCustomMessageClientData",
                            abstractKey: null
                        }],
                        storageKey: null
                    }, Ah],
                    type: "InstantGameUpdateExtensibleMessageAdminText",
                    abstractKey: null
                }, Bh, Ch, Hh, Ih, Jh, Kh, Mh, Nh, Oh, ea, Lh, Ph, Rh, Sh, Th, Vh, Wh, Uh, {
                    kind: "InlineFragment",
                    selections: [Xh, Yh, Zh, Mf, $h, ai, bi, ci, {
                        alias: null,
                        args: null,
                        concreteType: "MessengerCallLogExtensibleMessageAdminTextCallCaptureAttachmentsConnection",
                        kind: "LinkedField",
                        name: "call_capture_attachments",
                        plural: !1,
                        selections: [$g, {
                            alias: null,
                            args: null,
                            concreteType: "MessengerCallLogExtensibleMessageAdminTextCallCaptureAttachmentsEdge",
                            kind: "LinkedField",
                            name: "edges",
                            plural: !0,
                            selections: E,
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    type: "MessengerCallLogExtensibleMessageAdminText",
                    abstractKey: null
                }, Dh, Gh, Fh, Eh, di, Qh, ei, fi, hi, gi, ii, ji],
                storageKey: null
            }, ki, e],
            type: "GenericAdminTextMessage",
            abstractKey: null
        };
        E = [{
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "transfer_id",
            storageKey: null
        }, {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "message_type",
            storageKey: null
        }, {
            alias: null,
            args: null,
            concreteType: "CurrencyQuantity",
            kind: "LinkedField",
            name: "amount",
            plural: !1,
            selections: Ob,
            storageKey: null
        }, {
            alias: null,
            args: null,
            concreteType: "MessagingParticipant",
            kind: "LinkedField",
            name: "p2p_sender",
            plural: !1,
            selections: f,
            storageKey: null
        }, {
            alias: null,
            args: null,
            concreteType: "MessagingParticipant",
            kind: "LinkedField",
            name: "p2p_receiver",
            plural: !1,
            selections: f,
            storageKey: null
        }, e];
        Ob = {
            kind: "InlineFragment",
            selections: E,
            type: "P2PPaymentRequestMessage",
            abstractKey: null
        };
        E = {
            kind: "InlineFragment",
            selections: E,
            type: "P2PPaymentMessage",
            abstractKey: null
        };
        var li = {
                kind: "TypeDiscriminator",
                abstractKey: "__isMessage"
            },
            mi = [d, a];
        va = {
            alias: null,
            args: null,
            concreteType: "MessageReaction",
            kind: "LinkedField",
            name: "message_reactions",
            plural: !0,
            selections: [va, {
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "user",
                plural: !1,
                selections: mi,
                storageKey: null
            }],
            storageKey: null
        };
        var ni = {
                alias: null,
                args: null,
                concreteType: "MessagingParticipant",
                kind: "LinkedField",
                name: "unsender",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "messaging_actor",
                    plural: !1,
                    selections: [d, a, g, Aa],
                    storageKey: null
                }, a],
                storageKey: null
            },
            oi = {
                kind: "InlineFragment",
                selections: f,
                type: "GenericAttachmentMedia",
                abstractKey: null
            },
            pi = {
                kind: "InlineFragment",
                selections: f,
                type: "MontageImage",
                abstractKey: null
            };
        f = {
            kind: "InlineFragment",
            selections: f,
            type: "MontageVideo",
            abstractKey: null
        };
        Oa = {
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "media",
            plural: !1,
            selections: [d, Oa, Pa, w, Ra, Sa, x, T, oi, pi, f],
            storageKey: null
        };
        Pa = {
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "action_links",
            plural: !0,
            selections: [d, l, r],
            storageKey: null
        };
        w = {
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "action_objects",
            plural: !0,
            selections: [d, a, {
                kind: "InlineFragment",
                selections: [ab, C, D, bb],
                type: "MessengerPlatformEntPreview",
                abstractKey: "__isMessengerPlatformEntPreview"
            }],
            storageKey: null
        };
        Ra = {
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "cta_data",
            plural: !1,
            selections: [d, lb, c],
            storageKey: null
        };
        ab = {
            alias: null,
            args: null,
            concreteType: "MessengerCallToAction",
            kind: "LinkedField",
            name: "messenger_call_to_actions",
            plural: !0,
            selections: [Za, $a, w, cb, db, a, eb, fb, gb, hb, ib, jb, F, Ra, mb, Na],
            storageKey: null
        };
        C = [d, {
            kind: "TypeDiscriminator",
            abstractKey: "__isPaymentActivityAction"
        }, A, wb, xb, l, H, {
            kind: "InlineFragment",
            selections: [{
                alias: "moneyTransfer",
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "generic_money_transfer",
                plural: !1,
                selections: [d, tb, vb, ub, Ab, a],
                storageKey: null
            }],
            type: "P2PPaymentActionButtonWithTransfer",
            abstractKey: null
        }];
        D = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                concreteType: "P2PBubbleView",
                kind: "LinkedField",
                name: "bubble_view",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "actions",
                    plural: !0,
                    selections: C,
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "components",
                    plural: !0,
                    selections: [d, P, N, Cb, Q],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "P2PBubbleRobotext",
                    kind: "LinkedField",
                    name: "robotext",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "action",
                        plural: !1,
                        selections: C,
                        storageKey: null
                    }, Bb, Db, h],
                    storageKey: null
                }, {
                    alias: "rootAction",
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "root_action",
                    plural: !1,
                    selections: C,
                    storageKey: null
                }],
                storageKey: null
            }],
            type: "PaymentViewData",
            abstractKey: "__isPaymentViewData"
        };
        lb = {
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "receiver_profile",
            plural: !1,
            selections: [d, a, g, K, Eb],
            storageKey: null
        };
        c = [Lb, a];
        mb = {
            alias: null,
            args: null,
            concreteType: "PeerToPeerTransferContext",
            kind: "LinkedField",
            name: "transfer_context",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                concreteType: "MessageImage",
                kind: "LinkedField",
                name: "memo_images",
                plural: !0,
                selections: c,
                storageKey: null
            }, Mb, a],
            storageKey: null
        };
        Na = {
            alias: null,
            args: null,
            concreteType: "PeerToPeerPlatformSoldItemDetail",
            kind: "LinkedField",
            name: "platform_item",
            plural: !1,
            selections: [g, S, {
                alias: null,
                args: null,
                concreteType: "Photo",
                kind: "LinkedField",
                name: "photos",
                plural: !0,
                selections: c,
                storageKey: null
            }, r, a],
            storageKey: null
        };
        A = [d, g, a, K, Eb];
        wb = {
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "requester",
            plural: !1,
            selections: A,
            storageKey: null
        };
        xb = {
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "requestee",
            plural: !1,
            selections: A,
            storageKey: null
        };
        H = {
            alias: null,
            args: null,
            concreteType: "PeerToPeerTransfer",
            kind: "LinkedField",
            name: "transfer",
            plural: !1,
            selections: [vb, lb, Gb, Hb, tb, Ib, Jb, Kb, mb, Pb, Qb, Rb, Na, a, Sb, Tb, Ub, D],
            storageKey: null
        };
        Ab = [Za, $a, w, cb, db, a, eb, fb, gb, hb, ib, jb, F, Ra];
        P = {
            alias: null,
            args: null,
            concreteType: "MessengerCallToAction",
            kind: "LinkedField",
            name: "call_to_actions",
            plural: !0,
            selections: Ab,
            storageKey: null
        };
        N = {
            alias: null,
            args: null,
            concreteType: "MessengerCallToAction",
            kind: "LinkedField",
            name: "default_action",
            plural: !1,
            selections: Ab,
            storageKey: null
        };
        Cb = [{
            alias: null,
            args: null,
            concreteType: "MessengerRetailItem",
            kind: "LinkedField",
            name: "nodes",
            plural: !0,
            selections: [a, S, dc, bb, ec, g, fc, gc, N, P, {
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "media_blob_attachments",
                plural: !0,
                selections: [d, ic, hc, lc, oc, qc, T, oi, pi, f],
                storageKey: null
            }],
            storageKey: null
        }];
        Q = {
            alias: "primary_photo",
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "primary_listing_photo",
            plural: !1,
            selections: [d, Qa, a],
            storageKey: null
        };
        Db = {
            alias: null,
            args: null,
            concreteType: "RetailShipmentItemsConnection",
            kind: "LinkedField",
            name: "retail_shipment_items",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                concreteType: "MessengerRetailItem",
                kind: "LinkedField",
                name: "nodes",
                plural: !0,
                selections: [a, g, Hd, Id, Jd, Kd, dc, ec, Ld, Md, P],
                storageKey: null
            }],
            storageKey: null
        };
        C = {
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "media",
            plural: !1,
            selections: [d, Sa, Xg, T, oi, pi, f],
            storageKey: null
        };
        Mb = {
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "media",
            plural: !1,
            selections: [d, Lb, T, oi, pi, f],
            storageKey: null
        };
        Eb = {
            alias: null,
            args: null,
            concreteType: "Photo",
            kind: "LinkedField",
            name: "photo",
            plural: !1,
            selections: c,
            storageKey: null
        };
        A = {
            alias: null,
            args: null,
            concreteType: "FocusedPhoto",
            kind: "LinkedField",
            name: "cover_photo",
            plural: !1,
            selections: [Eb],
            storageKey: null
        };
        Za = {
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "target",
            plural: !1,
            selections: [d, a, pb, {
                kind: "InlineFragment",
                selections: [I, x, qb, J, rb, sb],
                type: "WECMessageAudio",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [tb, vb, ub, D],
                type: "MoneyTransfer",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [vb, lb, Gb, Hb, tb, Ib, Jb, Kb, mb, Pb, Qb, Rb, Na, Sb, Tb, Ub, D],
                type: "PeerToPeerTransfer",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [Nb, Wb, wb, xb, Yb, Zb, Ub, H, ac, Rb, bc, Sb, {
                    alias: null,
                    args: null,
                    concreteType: "PeerToPeerPaymentRequest",
                    kind: "LinkedField",
                    name: "individual_requests",
                    plural: !0,
                    selections: [Nb, Wb, wb, xb, Yb, Zb, a, Ub, H, ac, Rb, bc, Sb, D],
                    storageKey: null
                }, D],
                type: "PeerToPeerPaymentRequest",
                abstractKey: null
            }, D, {
                kind: "InlineFragment",
                selections: [cc, P, {
                    alias: null,
                    args: null,
                    concreteType: "RetailPromotionItemsConnection",
                    kind: "LinkedField",
                    name: "promotion_items",
                    plural: !1,
                    selections: Cb,
                    storageKey: null
                }],
                type: "MessengerRetailPromotion",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [cc, P, {
                    alias: null,
                    args: null,
                    concreteType: "MessengerBusinessMessageItemsConnection",
                    kind: "LinkedField",
                    name: "business_items",
                    plural: !1,
                    selections: Cb,
                    storageKey: null
                }],
                type: "MessengerBusinessMessage",
                abstractKey: null
            }, sc, uc, xc, {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "invite_sender",
                    plural: !1,
                    selections: mi,
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "invite_recipient",
                    plural: !1,
                    selections: mi,
                    storageKey: null
                }],
                type: "QuickInvite",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [yc, zc, Ac, Bc, Cc, Dc, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "blob_media",
                    plural: !1,
                    selections: [d, Fc, Ec, T],
                    storageKey: null
                }],
                type: "MontageDirect",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [Gc, e, Hc],
                type: "MontageShare",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [Jc, Kc, Lc, Mc, Nc, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "native_component_flow_request",
                    plural: !1,
                    selections: [d, a, {
                        kind: "InlineFragment",
                        selections: [Oc, Pc, Qc, Ic, Rc, Sc, Uc, {
                            alias: null,
                            args: null,
                            concreteType: "NativeComponentFlowBookingRequestServicesProductItemsConnection",
                            kind: "LinkedField",
                            name: "services_product_items",
                            plural: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: "ServicesProductItem",
                                kind: "LinkedField",
                                name: "nodes",
                                plural: !0,
                                selections: [a, g, S, Vc, Wc, {
                                    alias: null,
                                    args: Xc,
                                    concreteType: "ProductImage",
                                    kind: "LinkedField",
                                    name: "images",
                                    plural: !0,
                                    selections: [Yc, a],
                                    storageKey: "images(first:1)"
                                }, Zc],
                                storageKey: null
                            }],
                            storageKey: null
                        }, $c, ad, bd, cd, dd, ed, fd, gd, hd, id, jd, Mc, Nc, kd],
                        type: "NativeComponentFlowBookingRequest",
                        abstractKey: null
                    }],
                    storageKey: null
                }],
                type: "PagesPlatformBookingMessage",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [ld, md, Tc, nd],
                type: "ServicesAppointmentAvailability",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [od, pd, qd, rd, sd, td],
                type: "ServicesGenericAdminText",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "MessagingParticipant",
                    kind: "LinkedField",
                    name: "genie_sender",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "messaging_actor",
                        plural: !1,
                        selections: [d, a, g],
                        storageKey: null
                    }, a],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "StoryAttachment",
                    kind: "LinkedField",
                    name: "story_attachment",
                    plural: !1,
                    selections: [k, m, Oa, y, z, Ua, Va, Wa, Xa, Pa, Ya, ab, ob],
                    storageKey: null
                }],
                type: "GenieMessage",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [vd, wd, xd, yd, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "event_place",
                    plural: !1,
                    selections: [d, g, T],
                    storageKey: null
                }, zd, Ad, Bd, Cd, Dd, g, Ed],
                type: "Event",
                abstractKey: null
            }, Fd, Gd, {
                kind: "InlineFragment",
                selections: [g, Hd, Id, Jd, Kd, dc, ec, Ld, Md, N, P],
                type: "MessengerRetailItem",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [Hd, Nd, Od, gc, Id, Pd, Qd, Rd, Sd, g],
                type: "AgentItemSuggestion",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [Td, Ud, Vd, Wd, {
                    kind: "InlineFragment",
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "FundraiserCoverPhoto",
                        kind: "LinkedField",
                        name: "focused_cover_photo",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "Photo",
                            kind: "LinkedField",
                            name: "photo",
                            plural: !1,
                            selections: [Yd, a],
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    type: "FundraiserWithPresence",
                    abstractKey: "__isFundraiserWithPresence"
                }],
                type: "Fundraiser",
                abstractKey: "__isFundraiser"
            }, {
                kind: "InlineFragment",
                selections: [Zd, $d, ae, be, ce, de, ee, fe, ge, je, cd, ke, le, me, ne, {
                    alias: null,
                    args: null,
                    concreteType: "RetailReceiptItemsConnection",
                    kind: "LinkedField",
                    name: "retail_items",
                    plural: !1,
                    selections: Cb,
                    storageKey: null
                }, oe, pe, qe, re],
                type: "MessengerRetailReceipt",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [se, te, ue, {
                    alias: null,
                    args: null,
                    concreteType: "PaymentInvoiceProduct",
                    kind: "LinkedField",
                    name: "item_list",
                    plural: !0,
                    selections: [ve, g, we, S, zb, xe, ye, a],
                    storageKey: null
                }, yb, ze, Ae, q, Be, Ce, M, De, Ee, Fe, Ge, He, Ie],
                type: "PaymentPlatformAttachment",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [Je, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "group_commerce_item_seller",
                    plural: !1,
                    selections: mi,
                    storageKey: null
                }, Ke, Le, Q, r],
                type: "GroupCommerceProductItem",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [Ke, Q],
                type: "MarketplaceListingRenderable",
                abstractKey: "__isMarketplaceListingRenderable"
            }, {
                kind: "InlineFragment",
                selections: [Ne, Oe, v, Pe, g, Qe, Re],
                type: "Page",
                abstractKey: null
            }, We, {
                kind: "InlineFragment",
                selections: [Xe, {
                    alias: null,
                    args: Ye,
                    concreteType: "MPersonalRemindersListToPersonalRemindersConnection",
                    kind: "LinkedField",
                    name: "personal_reminders",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "MPersonalRemindersListToPersonalRemindersEdge",
                        kind: "LinkedField",
                        name: "edges",
                        plural: !0,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "MessengerEventReminder",
                            kind: "LinkedField",
                            name: "node",
                            plural: !1,
                            selections: [Se, Te, Ue, a],
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    storageKey: 'personal_reminders(orderby:"m_personal_reminder_list_ordering")'
                }],
                type: "MPersonalRemindersList",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [Ze, $e, af, bf, cf, df, ef, ff, gf, hf, jf, kf, lf, mf, {
                    alias: null,
                    args: null,
                    concreteType: "AirlineBoardingPassesConnection",
                    kind: "LinkedField",
                    name: "boarding_passes",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "AirlineBoardingPassMessageAttachment",
                        kind: "LinkedField",
                        name: "nodes",
                        plural: !0,
                        selections: [nf, of , pf, qf, rf, sf, tf, wf, Ef, a],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "AirlineBoardingPassCollectionMessageAttachment",
                abstractKey: null
            }, Bf, {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "MessengerRetailShipment",
                    kind: "LinkedField",
                    name: "shipment",
                    plural: !1,
                    selections: [a, Jf, Kf, Lf, ie, vc, Db, Of, Pf],
                    storageKey: null
                }, Qf, Rf, X, Sf, oe],
                type: "MessengerRetailShipmentTrackingEvent",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [Jf, Kf, Lf, ie, vc, Db, Y, Nf, {
                    alias: null,
                    args: null,
                    concreteType: "MessengerRetailReceipt",
                    kind: "LinkedField",
                    name: "receipt",
                    plural: !1,
                    selections: [be, a],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "User",
                    kind: "LinkedField",
                    name: "recipient",
                    plural: !1,
                    selections: [g, a],
                    storageKey: null
                }, oe],
                type: "MessengerRetailShipment",
                abstractKey: null
            }, Cf, {
                kind: "InlineFragment",
                selections: [zf, Ff, Ze, xf, Fb, Vf, Wf, Xf, Uf, Yf, Hf, Zf, Gf, $f, If, ag, bg, af, ff, cg, dg, eg, df, ef, fg, gg, hg, ig, {
                    alias: null,
                    args: null,
                    concreteType: "AirlineItineraryLegsConnection",
                    kind: "LinkedField",
                    name: "itinerary_legs",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "AirlineItineraryLeg",
                        kind: "LinkedField",
                        name: "nodes",
                        plural: !0,
                        selections: [jg, {
                            alias: null,
                            args: null,
                            concreteType: "AirlineItinerarySegmentsConnection",
                            kind: "LinkedField",
                            name: "segments",
                            plural: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: "AirlineItinerarySegmentMessageAttachment",
                                kind: "LinkedField",
                                name: "nodes",
                                plural: !0,
                                selections: [W, yf, a],
                                storageKey: null
                            }],
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "AirlineItineraryMessageAttachment",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [uf, Z, g, vf],
                type: "LeadGenDeepLinkData",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [Af, Df, {
                    alias: null,
                    args: null,
                    concreteType: "Event",
                    kind: "LinkedField",
                    name: "event",
                    plural: !1,
                    selections: [a, g, L, {
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "event_place",
                        plural: !1,
                        selections: [d, Xd, T],
                        storageKey: null
                    }, kg, {
                        alias: null,
                        args: null,
                        concreteType: "EventAttendanceConfig",
                        kind: "LinkedField",
                        name: "attendance_config",
                        plural: !1,
                        selections: [ng, a],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "EventAttendanceConfirmation",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [b],
                type: "UserLeadGenInfo",
                abstractKey: null
            }, tc, {
                kind: "InlineFragment",
                selections: [g, og, o, J, rb],
                type: "WECMessageFile",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [x, qb, J, rb, I, s, pg, t],
                type: "WECMessageVideo",
                abstractKey: null
            }, qg, {
                kind: "InlineFragment",
                selections: [J, ug, wg],
                type: "WECMessageImage",
                abstractKey: null
            }, xg, {
                kind: "InlineFragment",
                selections: [yg, zg, Ag, Bg, Cg, Dg, Eg],
                type: "MentorshipMessengerCurriculumStep",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [Fg],
                type: "MentorshipMessengerDiscussionTopicSet",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "MentorshipProgram",
                    kind: "LinkedField",
                    name: "mentorship_program",
                    plural: !1,
                    selections: [a, {
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "other_member",
                        plural: !1,
                        selections: [d, ya, a],
                        storageKey: null
                    }],
                    storageKey: null
                }, Gg],
                type: "MentorshipMessengerLeavePrompt",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [Gg, Hg, Ig, Jg],
                type: "MentorshipMessengerSurvey",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [Gg],
                type: "MentorshipMessengerReminder",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [Gg, Hg, Kg],
                type: "MentorshipMessengerProgressTracker",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [Lg, {
                    alias: null,
                    args: null,
                    concreteType: "ComposedBlockWithEntities",
                    kind: "LinkedField",
                    name: "message_richtext",
                    plural: !0,
                    selections: [Mg, Ka, Ng, {
                        alias: null,
                        args: null,
                        concreteType: "ComposedEntityAtRange",
                        kind: "LinkedField",
                        name: "entity_ranges",
                        plural: !0,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: null,
                            kind: "LinkedField",
                            name: "entity",
                            plural: !1,
                            selections: [d, T],
                            storageKey: null
                        }, i, Fa],
                        storageKey: null
                    }, Og, h],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "Feedback",
                    kind: "LinkedField",
                    name: "feedback",
                    plural: !1,
                    selections: [Pg, Qg, Rg, {
                        alias: null,
                        args: lg,
                        concreteType: "TopReactionsConnection",
                        kind: "LinkedField",
                        name: "top_reactions",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "FeedbackReactionInfo",
                            kind: "LinkedField",
                            name: "nodes",
                            plural: !0,
                            selections: [Sg, a],
                            storageKey: null
                        }],
                        storageKey: 'top_reactions(first:3,orderby:["COUNT_DESC","REACTION_TYPE"])'
                    }, a],
                    storageKey: null
                }, Tg, ac, Ug, Wg, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "to",
                    plural: !1,
                    selections: [d, g, Aa, Vg, a],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "StoryAttachment",
                    kind: "LinkedField",
                    name: "attachments",
                    plural: !0,
                    selections: [z, r, y, k, C, Zg, {
                        alias: null,
                        args: mg,
                        concreteType: "SubattachmentsConnection",
                        kind: "LinkedField",
                        name: "all_subattachments",
                        plural: !1,
                        selections: [$g, {
                            alias: "files",
                            args: ah,
                            concreteType: "StoryAttachment",
                            kind: "LinkedField",
                            name: "nodes",
                            plural: !0,
                            selections: [Zg, Mb],
                            storageKey: 'nodes(if_style:"file_upload")'
                        }, {
                            alias: "images",
                            args: ch,
                            concreteType: "StoryAttachment",
                            kind: "LinkedField",
                            name: "nodes",
                            plural: !0,
                            selections: [Mb],
                            storageKey: 'nodes(if_style:"photo")'
                        }],
                        storageKey: "all_subattachments(first:3)"
                    }],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "Story",
                    kind: "LinkedField",
                    name: "attached_story",
                    plural: !1,
                    selections: [dh, eh, {
                        alias: null,
                        args: null,
                        concreteType: "StoryAttachment",
                        kind: "LinkedField",
                        name: "attachments",
                        plural: !0,
                        selections: [C],
                        storageKey: null
                    }, a],
                    storageKey: null
                }],
                type: "Story",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [g, K, A, gh, hh],
                type: "User",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [g, ih, j, jh, A, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "group_general_chat",
                    plural: !1,
                    selections: mi,
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "GroupsSyncMetadata",
                    kind: "LinkedField",
                    name: "work_groups_sync_metadata",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "messenger_group",
                        plural: !1,
                        selections: mi,
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "Group",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [kh, lh, mh, {
                    alias: null,
                    args: null,
                    concreteType: "AppIntegration",
                    kind: "LinkedField",
                    name: "app_integration",
                    plural: !1,
                    selections: [nh, g, oh, ph, a],
                    storageKey: null
                }, qh, rh, {
                    alias: null,
                    args: null,
                    concreteType: "AppContentAdditionalData",
                    kind: "LinkedField",
                    name: "link_preview_additional_data",
                    plural: !0,
                    selections: [l, h, Bb, kb, da, {
                        alias: null,
                        args: null,
                        concreteType: "User",
                        kind: "LinkedField",
                        name: "profiles",
                        plural: !0,
                        selections: [K, g, a],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "AppContent",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [N],
                type: "CommerceProductItemShare",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [sh],
                type: "ApplicationReferralXMA",
                abstractKey: null
            }, th, vh],
            storageKey: null
        };
        $a = {
            alias: null,
            args: null,
            concreteType: "StoryAttachment",
            kind: "LinkedField",
            name: "story_attachment",
            plural: !1,
            selections: [k, m, Oa, y, z, Ua, Va, Wa, Xa, Pa, Ya, ab, ob, Za, {
                alias: null,
                args: null,
                concreteType: "StoryAttachment",
                kind: "LinkedField",
                name: "subattachments",
                plural: !0,
                selections: [k, m, Oa, y, z, Ua, Va, Wa, Xa, Pa, Ya, ab, ob, Za],
                storageKey: null
            }],
            storageKey: null
        };
        w = [d, {
            kind: "TypeDiscriminator",
            abstractKey: "__isMessageBlobAttachment"
        }, G, rc, Ve, oc, U, T];
        cb = {
            kind: "InlineFragment",
            selections: [Ea, {
                alias: null,
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "message",
                plural: !1,
                selections: [h, {
                    alias: null,
                    args: null,
                    concreteType: "EntityAtRange",
                    kind: "LinkedField",
                    name: "ranges",
                    plural: !0,
                    selections: [i, Fa, {
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "entity",
                        plural: !1,
                        selections: [d, Ga, Ha, Ia, T],
                        storageKey: null
                    }, Ja],
                    storageKey: null
                }],
                storageKey: null
            }, La, {
                alias: null,
                args: null,
                concreteType: "ExtensibleMessageAttachment",
                kind: "LinkedField",
                name: "extensible_attachment",
                plural: !1,
                selections: [Ma, $a, {
                    alias: "genie_attachment",
                    args: null,
                    concreteType: "StoryAttachment",
                    kind: "LinkedField",
                    name: "story_attachment",
                    plural: !1,
                    selections: [{
                        alias: "genie_message",
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "target",
                        plural: !1,
                        selections: [d, a, {
                            kind: "InlineFragment",
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: "MessagingParticipant",
                                kind: "LinkedField",
                                name: "genie_sender",
                                plural: !1,
                                selections: [a, {
                                    alias: null,
                                    args: null,
                                    concreteType: null,
                                    kind: "LinkedField",
                                    name: "messaging_actor",
                                    plural: !1,
                                    selections: [d, g, a, {
                                        kind: "TypeDiscriminator",
                                        abstractKey: "__isNode"
                                    }],
                                    storageKey: null
                                }],
                                storageKey: null
                            }, $a],
                            type: "GenieMessage",
                            abstractKey: null
                        }],
                        storageKey: null
                    }],
                    storageKey: null
                }, a],
                storageKey: null
            }, $b, {
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "blob_attachments",
                plural: !0,
                selections: w,
                storageKey: null
            }, za],
            type: "UserMessage",
            abstractKey: null
        };
        db = [{
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "node",
            plural: !1,
            selections: w,
            storageKey: null
        }];
        eb = {
            kind: "InlineFragment",
            selections: [Yg, e, {
                alias: null,
                args: null,
                concreteType: "VideoCallMessageToCaptureAttachmentsConnection",
                kind: "LinkedField",
                name: "call_capture_attachments",
                plural: !1,
                selections: [$g, {
                    alias: null,
                    args: null,
                    concreteType: "VideoCallMessageToCaptureAttachmentsEdge",
                    kind: "LinkedField",
                    name: "edges",
                    plural: !0,
                    selections: db,
                    storageKey: null
                }],
                storageKey: null
            }],
            type: "VideoCallMessage",
            abstractKey: null
        };
        fb = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                concreteType: "MessageImage",
                kind: "LinkedField",
                name: "image_with_metadata",
                plural: !1,
                selections: [nb, Ma, pc, a],
                storageKey: null
            }, e],
            type: "ThreadImageMessage",
            abstractKey: null
        };
        gb = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "extensible_message_admin_text",
                plural: !1,
                selections: [d, vg, u, he, ud, kc, jc, mc, nc, Me, Xb, V, tg, p, sg, wc, $, {
                    kind: "InlineFragment",
                    selections: [O, Tf, wh, xh, {
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "instant_game_update_data",
                        plural: !1,
                        selections: [d, {
                            kind: "InlineFragment",
                            selections: [yh, uh, Eb, zh],
                            type: "InstantGameXMATCustomMessageClientData",
                            abstractKey: null
                        }],
                        storageKey: null
                    }, Ah],
                    type: "InstantGameUpdateExtensibleMessageAdminText",
                    abstractKey: null
                }, Bh, Ch, Hh, Ih, Jh, Kh, Mh, Nh, Oh, ea, Lh, Ph, Rh, Sh, Th, Vh, Wh, Uh, {
                    kind: "InlineFragment",
                    selections: [Xh, Yh, Zh, Mf, $h, ai, bi, ci, {
                        alias: null,
                        args: null,
                        concreteType: "MessengerCallLogExtensibleMessageAdminTextCallCaptureAttachmentsConnection",
                        kind: "LinkedField",
                        name: "call_capture_attachments",
                        plural: !1,
                        selections: [$g, {
                            alias: null,
                            args: null,
                            concreteType: "MessengerCallLogExtensibleMessageAdminTextCallCaptureAttachmentsEdge",
                            kind: "LinkedField",
                            name: "edges",
                            plural: !0,
                            selections: db,
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    type: "MessengerCallLogExtensibleMessageAdminText",
                    abstractKey: null
                }, Dh, Gh, Fh, Eh, di, Qh, ei, fi, hi, gi, ii, ji],
                storageKey: null
            }, ki, e],
            type: "GenericAdminTextMessage",
            abstractKey: null
        };
        return {
            fragment: {
                argumentDefinitions: [aa, ba],
                kind: "Fragment",
                metadata: null,
                name: "MessengerMessageQuery",
                selections: [{
                    alias: null,
                    args: ca,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "message",
                    plural: !1,
                    selections: [fa, d, ga, ha, ia, ja, ka, la, ma, na, oa, pa, qa, ra, sa, ta, ua, wa, xa, Ba, Ca, Da, bh, fh, Ta, B, Vb, n, rg, R, Ob, E, {
                        alias: null,
                        args: null,
                        concreteType: "RepliedToMessage",
                        kind: "LinkedField",
                        name: "replied_to_message",
                        plural: !1,
                        selections: [cd, {
                            alias: null,
                            args: null,
                            concreteType: null,
                            kind: "LinkedField",
                            name: "message",
                            plural: !1,
                            selections: [fa, d, ga, ha, ia, ja, ka, la, ma, na, oa, pa, qa, ra, sa, ta, ua, wa, xa, Ba, Ca, Da, bh, fh, Ta, B, Vb, n, rg, R, Ob, E],
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "Query",
                abstractKey: null
            },
            kind: "Request",
            operation: {
                argumentDefinitions: [ba, aa],
                kind: "Operation",
                name: "MessengerMessageQuery",
                selections: [{
                    alias: null,
                    args: ca,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "message",
                    plural: !1,
                    selections: [d, li, fa, ga, ha, ia, ja, ka, la, ma, na, oa, pa, qa, ra, sa, ta, ua, va, xa, ni, Ca, Da, {
                        alias: null,
                        args: null,
                        concreteType: "RepliedToMessage",
                        kind: "LinkedField",
                        name: "replied_to_message",
                        plural: !1,
                        selections: [cd, {
                            alias: null,
                            args: null,
                            concreteType: null,
                            kind: "LinkedField",
                            name: "message",
                            plural: !1,
                            selections: [d, li, fa, ga, ha, ia, ja, ka, la, ma, na, oa, pa, qa, ra, sa, ta, ua, va, xa, ni, Ca, Da, cb, fh, eb, B, fb, n, rg, gb, Ob, E, T],
                            storageKey: null
                        }],
                        storageKey: null
                    }, cb, fh, eb, B, fb, n, rg, gb, Ob, E, T],
                    storageKey: null
                }]
            },
            params: {
                id: "5187861764637049",
                metadata: {},
                name: "MessengerMessageQuery",
                operationKind: "query",
                text: null
            }
        }
    }();
    ba("relay-runtime").PreloadableQueryRegistry.set(aa.params.id, aa);
    b.exports = aa
}), null);
__d("MessengerThreadMetadataQuery_facebookRelayOperation", [], (function(a, b, c, d, e, f) {
    e.exports = "4800255010013904"
}), null);
__d("MessengerThreadMetadataQuery.graphql", ["MessengerThreadMetadataQuery_facebookRelayOperation"], (function(a, b, c, d, e, f) {
    "use strict";
    a = function() {
        var a = [{
                defaultValue: null,
                kind: "LocalArgument",
                name: "id"
            }, {
                defaultValue: null,
                kind: "LocalArgument",
                name: "source"
            }],
            c = [{
                kind: "Variable",
                name: "id",
                variableName: "id"
            }],
            d = {
                alias: null,
                args: null,
                concreteType: "MessageThreadKey",
                kind: "LinkedField",
                name: "thread_key",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "other_user_id",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "thread_fbid",
                    storageKey: null
                }],
                storageKey: null
            },
            e = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "folder",
                storageKey: null
            };
        return {
            fragment: {
                argumentDefinitions: a,
                kind: "Fragment",
                metadata: null,
                name: "MessengerThreadMetadataQuery",
                selections: [{
                    alias: null,
                    args: c,
                    concreteType: "MessageThread",
                    kind: "LinkedField",
                    name: "message_thread",
                    plural: !1,
                    selections: [d, e],
                    storageKey: null
                }],
                type: "Query",
                abstractKey: null
            },
            kind: "Request",
            operation: {
                argumentDefinitions: a,
                kind: "Operation",
                name: "MessengerThreadMetadataQuery",
                selections: [{
                    alias: null,
                    args: c,
                    concreteType: "MessageThread",
                    kind: "LinkedField",
                    name: "message_thread",
                    plural: !1,
                    selections: [d, e, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "id",
                        storageKey: null
                    }],
                    storageKey: null
                }]
            },
            params: {
                id: b("MessengerThreadMetadataQuery_facebookRelayOperation"),
                metadata: {},
                name: "MessengerThreadMetadataQuery",
                operationKind: "query",
                text: null
            }
        }
    }();
    e.exports = a
}), null);
__d("MessengerThreadsQuery.graphql", ["relay-runtime"], (function(aa, ba, ca, da, ea, fa) {
    "use strict";
    aa = function() {
        var aa = {
                defaultValue: null,
                kind: "LocalArgument",
                name: "before"
            },
            ba = {
                defaultValue: null,
                kind: "LocalArgument",
                name: "id"
            },
            ca = {
                defaultValue: !1,
                kind: "LocalArgument",
                name: "is_work_teamwork_not_putting_muted_in_unreads"
            },
            da = {
                defaultValue: !1,
                kind: "LocalArgument",
                name: "load_delivery_receipts"
            },
            ea = {
                defaultValue: !0,
                kind: "LocalArgument",
                name: "load_messages"
            },
            fa = {
                defaultValue: !0,
                kind: "LocalArgument",
                name: "load_read_receipts"
            },
            ga = {
                defaultValue: null,
                kind: "LocalArgument",
                name: "message_limit"
            },
            ha = {
                defaultValue: null,
                kind: "LocalArgument",
                name: "source"
            },
            ia = {
                defaultValue: !1,
                kind: "LocalArgument",
                name: "threadlistViewFieldsOnly"
            },
            ja = [{
                kind: "Variable",
                name: "id",
                variableName: "id"
            }],
            a = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "id",
                storageKey: null
            },
            ka = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "thread_fbid",
                storageKey: null
            },
            la = {
                alias: null,
                args: null,
                concreteType: "MessageThreadKey",
                kind: "LinkedField",
                name: "thread_key",
                plural: !1,
                selections: [ka, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "other_user_id",
                    storageKey: null
                }],
                storageKey: null
            },
            b = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "name",
                storageKey: null
            },
            ma = [{
                kind: "Literal",
                name: "last",
                value: 1
            }],
            c = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "snippet",
                storageKey: null
            },
            d = [a],
            na = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "timestamp_precise",
                storageKey: null
            },
            oa = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "commerce_message_type",
                storageKey: null
            },
            pa = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "legacy_attachment_id",
                storageKey: null
            },
            e = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "text",
                storageKey: null
            },
            f = [e],
            g = {
                alias: null,
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "description",
                plural: !1,
                selections: f,
                storageKey: null
            },
            h = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "type",
                storageKey: null
            },
            i = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "title",
                storageKey: null
            },
            qa = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "native_url",
                storageKey: null
            },
            j = [h, i, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "action_url",
                storageKey: null
            }, qa, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "target_id",
                storageKey: null
            }];
        j = {
            alias: null,
            args: null,
            concreteType: "MessengerGenericXMATemplateExtraFields",
            kind: "LinkedField",
            name: "messenger_generic_xma_template_extra_info",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "media_owner_profile_name",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "media_owner_profile_pic_uri",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "favicon_url",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "favicon_url_fallback",
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "MessengerGenericXMATemplateCTA",
                kind: "LinkedField",
                name: "default_cta",
                plural: !1,
                selections: j,
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "MessengerGenericXMATemplateCTA",
                kind: "LinkedField",
                name: "cta1",
                plural: !1,
                selections: j,
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "MessengerGenericXMATemplateCTA",
                kind: "LinkedField",
                name: "cta2",
                plural: !1,
                selections: j,
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "MessengerGenericXMATemplateCTA",
                kind: "LinkedField",
                name: "cta3",
                plural: !1,
                selections: j,
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "list_item_id_1",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "list_item_contact_url_list_1",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "list_item_contact_url_expiration_timestamp_list_1",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "list_item_contact_url_fallback_list_1",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "list_item_title_text_1",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "list_item_accessibility_text_1",
                storageKey: null
            }],
            storageKey: null
        };
        var k = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "label",
                storageKey: null
            },
            ra = [{
                kind: "Literal",
                name: "height",
                value: 240
            }, {
                kind: "Literal",
                name: "width",
                value: 240
            }],
            l = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "uri",
                storageKey: null
            },
            m = [l],
            n = [{
                kind: "Literal",
                name: "height",
                value: 120
            }, {
                kind: "Literal",
                name: "width",
                value: 120
            }],
            o = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "url",
                storageKey: null
            },
            p = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "height",
                storageKey: null
            },
            q = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "width",
                storageKey: null
            };
        ra = [a, {
            alias: null,
            args: null,
            concreteType: "StickerPack",
            kind: "LinkedField",
            name: "pack",
            plural: !1,
            selections: d,
            storageKey: null
        }, k, {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "frame_count",
            storageKey: null
        }, {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "frame_rate",
            storageKey: null
        }, {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "frames_per_row",
            storageKey: null
        }, {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "frames_per_column",
            storageKey: null
        }, {
            alias: "sprite_image_2x",
            args: ra,
            concreteType: "Image",
            kind: "LinkedField",
            name: "sprite_image",
            plural: !1,
            selections: m,
            storageKey: "sprite_image(height:240,width:240)"
        }, {
            alias: null,
            args: n,
            concreteType: "Image",
            kind: "LinkedField",
            name: "sprite_image",
            plural: !1,
            selections: m,
            storageKey: "sprite_image(height:120,width:120)"
        }, {
            alias: null,
            args: n,
            concreteType: "Image",
            kind: "LinkedField",
            name: "padded_sprite_image",
            plural: !1,
            selections: m,
            storageKey: "padded_sprite_image(height:120,width:120)"
        }, {
            alias: "padded_sprite_image_2x",
            args: ra,
            concreteType: "Image",
            kind: "LinkedField",
            name: "padded_sprite_image",
            plural: !1,
            selections: m,
            storageKey: "padded_sprite_image(height:240,width:240)"
        }, o, p, q];
        var sa = {
                kind: "InlineFragment",
                selections: ra,
                type: "Sticker",
                abstractKey: null
            },
            r = [l, p, q],
            ta = {
                alias: null,
                args: null,
                concreteType: "Image",
                kind: "LinkedField",
                name: "animated_image",
                plural: !1,
                selections: r,
                storageKey: null
            },
            s = {
                kind: "Literal",
                name: "sizing",
                value: "contain-fit"
            },
            ua = [s],
            va = {
                alias: null,
                args: ua,
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: r,
                storageKey: 'image(sizing:"contain-fit")'
            },
            t = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "playable_duration_in_ms",
                storageKey: null
            },
            wa = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_playable",
                storageKey: null
            },
            u = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "playable_url",
                storageKey: null
            },
            xa = {
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "media",
                plural: !1,
                selections: [sa, ta, va, t, wa, u],
                storageKey: null
            },
            ya = {
                alias: null,
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "source",
                plural: !1,
                selections: f,
                storageKey: null
            },
            za = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "style_list",
                storageKey: null
            },
            Aa = {
                alias: null,
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "title_with_entities",
                plural: !1,
                selections: f,
                storageKey: null
            },
            v = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "key",
                storageKey: null
            },
            Ba = {
                alias: null,
                args: null,
                concreteType: "AttachmentProperty",
                kind: "LinkedField",
                name: "properties",
                plural: !0,
                selections: [v, {
                    alias: null,
                    args: null,
                    concreteType: "TextWithEntities",
                    kind: "LinkedField",
                    name: "value",
                    plural: !1,
                    selections: f,
                    storageKey: null
                }],
                storageKey: null
            },
            Ca = {
                alias: "url",
                args: null,
                kind: "ScalarField",
                name: "messenger_dot_com_url",
                storageKey: null
            },
            Da = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "deduplication_key",
                storageKey: null
            },
            Ea = {
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "action_links",
                plural: !0,
                selections: [i, o],
                storageKey: null
            },
            Fa = {
                alias: null,
                args: null,
                concreteType: "MessagingAttribution",
                kind: "LinkedField",
                name: "messaging_attribution",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "attribution_type",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "attribution_id",
                    storageKey: null
                }, b, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "icon_url",
                    storageKey: null
                }],
                storageKey: null
            },
            Ga = {
                alias: "action_link",
                args: null,
                kind: "ScalarField",
                name: "action_url",
                storageKey: null
            },
            Ha = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "action_open_type",
                storageKey: null
            },
            Ia = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "preview_title",
                storageKey: null
            },
            w = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "preview_subtitle",
                storageKey: null
            },
            x = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "target_display",
                storageKey: null
            },
            Ja = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "image_url",
                storageKey: null
            },
            y = {
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "action_objects",
                plural: !0,
                selections: [{
                    kind: "InlineFragment",
                    selections: [a, Ia, w, x, Ja],
                    type: "MessengerPlatformEntPreview",
                    abstractKey: "__isMessengerPlatformEntPreview"
                }],
                storageKey: null
            },
            Ka = {
                alias: "title",
                args: null,
                kind: "ScalarField",
                name: "action_title",
                storageKey: null
            },
            La = {
                alias: null,
                args: null,
                concreteType: "MessengerCTAUserConfirmation",
                kind: "LinkedField",
                name: "user_confirmation",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "cancel_button_label",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "continue_button_label",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "confirmation_message",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "confirmation_title",
                    storageKey: null
                }],
                storageKey: null
            },
            Ma = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_disabled",
                storageKey: null
            },
            Na = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_mutable_by_server",
                storageKey: null
            },
            Oa = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "logging_token",
                storageKey: null
            },
            Pa = {
                alias: null,
                args: null,
                concreteType: "MessengerPlatformPaymentMetadata",
                kind: "LinkedField",
                name: "payment_metadata",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "payment_module_config",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "total_price",
                    storageKey: null
                }],
                storageKey: null
            },
            Qa = {
                alias: "render_style",
                args: null,
                kind: "ScalarField",
                name: "cta_render_style",
                storageKey: null
            },
            Ra = {
                alias: null,
                args: null,
                concreteType: "MessengerPlatformWebviewMetadata",
                kind: "LinkedField",
                name: "webview_metadata",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "fallback_url",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "messenger_extensions",
                    storageKey: null
                }, {
                    alias: "webview_height_ratio",
                    args: null,
                    kind: "ScalarField",
                    name: "height_ratio",
                    storageKey: null
                }, {
                    alias: "webview_share_button",
                    args: null,
                    kind: "ScalarField",
                    name: "hide_share_button",
                    storageKey: null
                }],
                storageKey: null
            },
            z = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "page_id",
                storageKey: null
            },
            A = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "placeholder",
                storageKey: null
            },
            Sa = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "subtitle",
                storageKey: null
            },
            B = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "length",
                storageKey: null
            },
            Ta = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "format",
                storageKey: null
            },
            Ua = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "form_url",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "form_id",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "form_num_screens",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "form_current_screen_index",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "MessengerPIIFormScreenObject",
                    kind: "LinkedField",
                    name: "form_first_screen",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "screen_title",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "MessengerPIIQuestionObject",
                        kind: "LinkedField",
                        name: "questions",
                        plural: !0,
                        selections: [a, h, i, A, Sa, B, Ta, {
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "mask",
                            storageKey: null
                        }],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "MessengerPIIBusinessPrivacyObject",
                        kind: "LinkedField",
                        name: "business_privacy",
                        plural: !1,
                        selections: [e, o],
                        storageKey: null
                    }],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "form_color_theme",
                    storageKey: null
                }],
                type: "MessengerDirectSendCallToActionData",
                abstractKey: null
            };
        A = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "feedback_form_current_screen_index",
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "MessengerFeedbackFormScreenObject",
                kind: "LinkedField",
                name: "feedback_form_first_screen",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "MessengerFeedbackQuestionObject",
                    kind: "LinkedField",
                    name: "feedback_questions",
                    plural: !0,
                    selections: [a, i, h, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "score_label",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "left_score_label",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "right_score_label",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "score_option",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "MessengerFeedBackQuestionFollowup",
                        kind: "LinkedField",
                        name: "follow_up",
                        plural: !1,
                        selections: [h, A],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "feedback_form_id",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "feedback_form_num_screens",
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "MessengerFeedbackBusinessPrivacyObject",
                kind: "LinkedField",
                name: "feedback_form_privacy_policy",
                plural: !1,
                selections: [e, k, o],
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "feedback_form_state",
                storageKey: null
            }],
            type: "MessengerFeedbackFormOpenCallToActionData",
            abstractKey: null
        };
        var C = {
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "cta_data",
                plural: !1,
                selections: [Ua, A],
                storageKey: null
            },
            Va = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_high_confidence",
                storageKey: null
            },
            D = {
                alias: null,
                args: null,
                concreteType: "MessengerCallToAction",
                kind: "LinkedField",
                name: "messenger_call_to_actions",
                plural: !0,
                selections: [Ga, Ha, y, Ka, La, a, Ma, Na, Oa, Pa, Qa, Ra, z, C, Va, qa],
                storageKey: null
            },
            Wa = {
                alias: null,
                args: null,
                concreteType: "XMALayoutInfo",
                kind: "LinkedField",
                name: "xma_layout_info",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "layout_type",
                    storageKey: null
                }],
                storageKey: null
            },
            E = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "__typename",
                storageKey: null
            },
            Xa = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "listing_type",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "CrisisListingCategoryWrapper",
                    kind: "LinkedField",
                    name: "listing_category",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "Image",
                        kind: "LinkedField",
                        name: "offer_image",
                        plural: !1,
                        selections: m,
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "Image",
                        kind: "LinkedField",
                        name: "request_image",
                        plural: !1,
                        selections: m,
                        storageKey: null
                    }],
                    storageKey: null
                }, {
                    alias: null,
                    args: [{
                        kind: "Literal",
                        name: "height",
                        value: 315
                    }, {
                        kind: "Literal",
                        name: "width",
                        value: 851
                    }],
                    concreteType: "Image",
                    kind: "LinkedField",
                    name: "map_image",
                    plural: !1,
                    selections: m,
                    storageKey: "map_image(height:315,width:851)"
                }],
                type: "CrisisListing",
                abstractKey: null
            },
            F = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "filename",
                storageKey: null
            },
            Ya = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "url_shimhash",
                storageKey: null
            },
            Za = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "extension",
                storageKey: null
            },
            $a = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "filesize",
                storageKey: null
            },
            ab = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "duration",
                storageKey: null
            },
            bb = {
                alias: "transfer_id",
                args: null,
                kind: "ScalarField",
                name: "id",
                storageKey: null
            },
            G = {
                alias: null,
                args: null,
                concreteType: "Image",
                kind: "LinkedField",
                name: "profile_picture",
                plural: !1,
                selections: m,
                storageKey: null
            },
            cb = [a, {
                alias: "name",
                args: null,
                kind: "ScalarField",
                name: "short_name",
                storageKey: null
            }, {
                alias: "full_name",
                args: null,
                kind: "ScalarField",
                name: "name",
                storageKey: null
            }, G, o],
            db = {
                alias: null,
                args: null,
                concreteType: "User",
                kind: "LinkedField",
                name: "sender",
                plural: !1,
                selections: cb,
                storageKey: null
            };
        cb = {
            alias: null,
            args: null,
            concreteType: "User",
            kind: "LinkedField",
            name: "receiver",
            plural: !1,
            selections: cb,
            storageKey: null
        };
        var H = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "value",
            storageKey: null
        };
        v = {
            alias: "actionDatas",
            args: null,
            concreteType: "PaymentActivityActionData",
            kind: "LinkedField",
            name: "action_datas",
            plural: !0,
            selections: [E, {
                alias: "additionalInfo",
                args: null,
                concreteType: "PaymentActivityActionDataAdditionalInfo",
                kind: "LinkedField",
                name: "additional_info",
                plural: !0,
                selections: [v, H],
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "category",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "identifier",
                storageKey: null
            }, {
                alias: "inputType",
                args: null,
                kind: "ScalarField",
                name: "input_type",
                storageKey: null
            }, B, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "optional",
                storageKey: null
            }, {
                alias: "placeholderText",
                args: null,
                kind: "ScalarField",
                name: "placeholder_text",
                storageKey: null
            }],
            storageKey: null
        };
        var eb = {
                alias: "actionIdentifier",
                args: null,
                kind: "ScalarField",
                name: "action_identifier",
                storageKey: null
            },
            fb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "style",
                storageKey: null
            },
            gb = {
                alias: null,
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "title",
                plural: !1,
                selections: f,
                storageKey: null
            };
        Sa = {
            kind: "InlineFragment",
            selections: [{
                alias: "receiptView",
                args: null,
                concreteType: "PaymentReceiptView",
                kind: "LinkedField",
                name: "receipt_view",
                plural: !1,
                selections: [{
                    alias: "additionalInstruction",
                    args: null,
                    concreteType: "TextWithEntities",
                    kind: "LinkedField",
                    name: "additional_instruction",
                    plural: !1,
                    selections: f,
                    storageKey: null
                }, a, {
                    alias: "otherParticipant",
                    args: null,
                    concreteType: "PaymentActivityParticipantView",
                    kind: "LinkedField",
                    name: "other_participant",
                    plural: !1,
                    selections: [{
                        alias: "imageUrl",
                        args: null,
                        kind: "ScalarField",
                        name: "image_url",
                        storageKey: null
                    }, Sa, i],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "PaymentActivityViewSection",
                    kind: "LinkedField",
                    name: "sections",
                    plural: !0,
                    selections: [{
                        alias: "preferredPosition",
                        args: null,
                        kind: "ScalarField",
                        name: "preferred_position",
                        storageKey: null
                    }],
                    storageKey: null
                }, gb],
                storageKey: null
            }],
            type: "P2POpenReceiptActionButton",
            abstractKey: null
        };
        var I = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "amount",
                storageKey: null
            },
            hb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "currency",
                storageKey: null
            },
            J = [I, hb, {
                alias: "formattedAmount",
                args: null,
                kind: "ScalarField",
                name: "formatted_amount",
                storageKey: null
            }],
            ib = {
                alias: "amount",
                args: null,
                concreteType: "CurrencyAmount",
                kind: "LinkedField",
                name: "currency_amount",
                plural: !1,
                selections: J,
                storageKey: null
            },
            K = [E, v, eb, fb, i, Sa, {
                kind: "InlineFragment",
                selections: [{
                    alias: "moneyTransfer",
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "generic_money_transfer",
                    plural: !1,
                    selections: [bb, db, cb, ib],
                    storageKey: null
                }],
                type: "P2PPaymentActionButtonWithTransfer",
                abstractKey: null
            }],
            jb = {
                alias: "componentType",
                args: null,
                kind: "ScalarField",
                name: "component_type",
                storageKey: null
            },
            kb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "color",
                storageKey: null
            };
        J = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                concreteType: "CurrencyAmount",
                kind: "LinkedField",
                name: "amount",
                plural: !1,
                selections: J,
                storageKey: null
            }, kb],
            type: "P2PBubbleAmountComponent",
            abstractKey: null
        };
        var L = [{
                alias: "dimensionlessCacheKey",
                args: null,
                kind: "ScalarField",
                name: "dimensionless_cache_key",
                storageKey: null
            }, p, {
                alias: "isSilhouette",
                args: null,
                kind: "ScalarField",
                name: "is_silhouette",
                storageKey: null
            }, {
                alias: "mimeType",
                args: null,
                kind: "ScalarField",
                name: "mime_type",
                storageKey: null
            }, b, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "scale",
                storageKey: null
            }, l, q],
            lb = {
                kind: "InlineFragment",
                selections: [{
                    alias: "aspectRatio",
                    args: null,
                    kind: "ScalarField",
                    name: "aspect_ratio",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "Image",
                    kind: "LinkedField",
                    name: "image",
                    plural: !1,
                    selections: L,
                    storageKey: null
                }],
                type: "P2PBubbleImageComponent",
                abstractKey: null
            };
        L = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "alignment",
                storageKey: null
            }, kb, {
                alias: "facepileUsers",
                args: null,
                concreteType: "User",
                kind: "LinkedField",
                name: "facepile_users",
                plural: !0,
                selections: [a, {
                    alias: null,
                    args: null,
                    concreteType: "Image",
                    kind: "LinkedField",
                    name: "profile_picture",
                    plural: !1,
                    selections: L,
                    storageKey: null
                }],
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "Image",
                kind: "LinkedField",
                name: "images",
                plural: !0,
                selections: L,
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "size",
                storageKey: null
            }, e],
            type: "P2PBubbleTextComponent",
            abstractKey: null
        };
        var mb = {
            alias: "iconCurrencyCode",
            args: null,
            kind: "ScalarField",
            name: "icon_currency_code",
            storageKey: null
        };
        K = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                concreteType: "P2PBubbleView",
                kind: "LinkedField",
                name: "bubble_view",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "actions",
                    plural: !0,
                    selections: K,
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "components",
                    plural: !0,
                    selections: [jb, J, lb, L],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "P2PBubbleRobotext",
                    kind: "LinkedField",
                    name: "robotext",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "action",
                        plural: !1,
                        selections: K,
                        storageKey: null
                    }, kb, mb, e],
                    storageKey: null
                }, {
                    alias: "rootAction",
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "root_action",
                    plural: !1,
                    selections: K,
                    storageKey: null
                }],
                storageKey: null
            }],
            type: "PaymentViewData",
            abstractKey: "__isPaymentViewData"
        };
        var nb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "short_name",
                storageKey: null
            },
            ob = {
                kind: "InlineFragment",
                selections: [nb, o],
                type: "User",
                abstractKey: null
            },
            pb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "formatted_amount",
                storageKey: null
            },
            qb = {
                alias: null,
                args: null,
                concreteType: "CurrencyAmount",
                kind: "LinkedField",
                name: "transaction_amount",
                plural: !1,
                selections: [I, pb],
                storageKey: null
            },
            rb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "transfer_status",
                storageKey: null
            },
            sb = {
                alias: "completedTime",
                args: null,
                kind: "ScalarField",
                name: "completed_time",
                storageKey: null
            },
            tb = {
                alias: "updatedTime",
                args: null,
                kind: "ScalarField",
                name: "updated_time",
                storageKey: null
            },
            ub = {
                alias: "creationTime",
                args: null,
                kind: "ScalarField",
                name: "creation_time",
                storageKey: null
            },
            vb = {
                alias: null,
                args: null,
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: m,
                storageKey: null
            },
            wb = [vb],
            xb = {
                alias: null,
                args: null,
                concreteType: "MessengerPayTheme",
                kind: "LinkedField",
                name: "transfer_theme",
                plural: !1,
                selections: d,
                storageKey: null
            },
            yb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "formatted",
                storageKey: null
            },
            zb = [yb],
            Ab = {
                alias: null,
                args: null,
                concreteType: "CurrencyQuantity",
                kind: "LinkedField",
                name: "amount_fb_discount",
                plural: !1,
                selections: zb,
                storageKey: null
            },
            Bb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "funds_availability",
                storageKey: null
            },
            Cb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "group_thread_fbid",
                storageKey: null
            },
            M = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "description",
                storageKey: null
            },
            Db = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "status_description",
                storageKey: null
            },
            Eb = {
                alias: null,
                args: null,
                concreteType: "CurrencyAmount",
                kind: "LinkedField",
                name: "currency_amount",
                plural: !1,
                selections: [hb],
                storageKey: null
            },
            Fb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "memo_text",
                storageKey: null
            },
            N = [{
                alias: null,
                args: null,
                concreteType: "User",
                kind: "LinkedField",
                name: "sender",
                plural: !1,
                selections: [{
                    args: null,
                    kind: "FragmentSpread",
                    name: "P2PSenderReceiver"
                }],
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "receiver_profile",
                plural: !1,
                selections: [a, b, G, ob],
                storageKey: null
            }, qb, rb, bb, sb, tb, ub, {
                alias: null,
                args: null,
                concreteType: "PeerToPeerTransferContext",
                kind: "LinkedField",
                name: "transfer_context",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "MessageImage",
                    kind: "LinkedField",
                    name: "memo_images",
                    plural: !0,
                    selections: wb,
                    storageKey: null
                }, xb],
                storageKey: null
            }, Ab, Bb, Cb, {
                alias: null,
                args: null,
                concreteType: "PeerToPeerPlatformSoldItemDetail",
                kind: "LinkedField",
                name: "platform_item",
                plural: !1,
                selections: [b, M, {
                    alias: null,
                    args: null,
                    concreteType: "Photo",
                    kind: "LinkedField",
                    name: "photos",
                    plural: !0,
                    selections: wb,
                    storageKey: null
                }, o],
                storageKey: null
            }, a, Db, Eb, Fb, K];
        yb = {
            alias: null,
            args: null,
            concreteType: "CurrencyQuantity",
            kind: "LinkedField",
            name: "amount",
            plural: !1,
            selections: [yb, hb],
            storageKey: null
        };
        var Gb = {
                alias: null,
                args: null,
                concreteType: "CurrencyAmount",
                kind: "LinkedField",
                name: "transaction_amount",
                plural: !1,
                selections: [I],
                storageKey: null
            },
            O = [b, a, G, ob],
            Hb = {
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "requester",
                plural: !1,
                selections: O,
                storageKey: null
            };
        O = {
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "requestee",
            plural: !1,
            selections: O,
            storageKey: null
        };
        var Ib = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "request_status",
                storageKey: null
            },
            Jb = {
                alias: null,
                args: null,
                concreteType: "MessengerPayTheme",
                kind: "LinkedField",
                name: "request_theme",
                plural: !1,
                selections: d,
                storageKey: null
            },
            Kb = {
                alias: null,
                args: null,
                concreteType: "PeerToPeerTransfer",
                kind: "LinkedField",
                name: "transfer",
                plural: !1,
                selections: N,
                storageKey: null
            },
            Lb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "creation_time",
                storageKey: null
            },
            Mb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "updated_time",
                storageKey: null
            },
            Nb = {
                alias: "message",
                args: null,
                kind: "ScalarField",
                name: "snippet",
                storageKey: null
            };
        y = [Ga, Ha, y, Ka, La, a, Ma, Na, Oa, Pa, Qa, Ra, z, C];
        C = {
            alias: null,
            args: null,
            concreteType: "MessengerCallToAction",
            kind: "LinkedField",
            name: "call_to_actions",
            plural: !0,
            selections: y,
            storageKey: null
        };
        var Ob = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "image_aspect_ratio",
                storageKey: null
            },
            Pb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "first_metaline",
                storageKey: null
            },
            Qb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "source_name",
                storageKey: null
            },
            Rb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "target_url",
                storageKey: null
            };
        y = {
            alias: null,
            args: null,
            concreteType: "MessengerCallToAction",
            kind: "LinkedField",
            name: "default_action",
            plural: !1,
            selections: y,
            storageKey: null
        };
        var Sb = [a, {
                alias: "large_preview",
                args: null,
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: r,
                storageKey: null
            }],
            Tb = {
                kind: "InlineFragment",
                selections: Sb,
                type: "MessageImage",
                abstractKey: null
            };
        Sb = {
            kind: "InlineFragment",
            selections: Sb,
            type: "Photo",
            abstractKey: null
        };
        var Ub = {
                kind: "Literal",
                name: "media_type",
                value: "image/gif"
            },
            Vb = {
                alias: null,
                args: [Ub],
                concreteType: "Image",
                kind: "LinkedField",
                name: "animated_image",
                plural: !1,
                selections: r,
                storageKey: 'animated_image(media_type:"image/gif")'
            };
        Ub = {
            alias: "preview_image",
            args: [{
                kind: "Literal",
                name: "height",
                value: 206
            }, Ub, {
                kind: "Literal",
                name: "width",
                value: 206
            }],
            concreteType: "Image",
            kind: "LinkedField",
            name: "animated_image",
            plural: !1,
            selections: r,
            storageKey: 'animated_image(height:206,media_type:"image/gif",width:206)'
        };
        var Wb = {
                kind: "InlineFragment",
                selections: [Vb, Ub, {
                    alias: "large_preview",
                    args: [{
                        kind: "Literal",
                        name: "height",
                        value: 420
                    }, s, {
                        kind: "Literal",
                        name: "width",
                        value: 420
                    }],
                    concreteType: "Image",
                    kind: "LinkedField",
                    name: "image",
                    plural: !1,
                    selections: r,
                    storageKey: 'image(height:420,sizing:"contain-fit",width:420)'
                }],
                type: "MessageAnimatedImage",
                abstractKey: null
            },
            Xb = {
                alias: null,
                args: null,
                concreteType: "Application",
                kind: "LinkedField",
                name: "attribution_app",
                plural: !1,
                selections: [a, b, {
                    alias: null,
                    args: null,
                    concreteType: "Image",
                    kind: "LinkedField",
                    name: "square_logo",
                    plural: !1,
                    selections: m,
                    storageKey: null
                }],
                storageKey: null
            },
            Yb = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "attribution_metadata",
                storageKey: null
            },
            Zb = [p, q, l],
            $b = {
                alias: null,
                args: null,
                concreteType: "Vect2",
                kind: "LinkedField",
                name: "original_dimensions",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "x",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "y",
                    storageKey: null
                }],
                storageKey: null
            };
        Zb = {
            kind: "InlineFragment",
            selections: [Xb, Yb, F, u, {
                alias: "chat_image",
                args: [{
                    kind: "Literal",
                    name: "height",
                    value: 200
                }, s, {
                    kind: "Literal",
                    name: "width",
                    value: 168
                }],
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: Zb,
                storageKey: 'image(height:200,sizing:"contain-fit",width:168)'
            }, pa, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "video_type",
                storageKey: null
            }, $b, t, {
                alias: "large_image",
                args: [{
                    kind: "Literal",
                    name: "height",
                    value: 640
                }, s, {
                    kind: "Literal",
                    name: "width",
                    value: 640
                }],
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: Zb,
                storageKey: 'image(height:640,sizing:"contain-fit",width:640)'
            }, {
                alias: "inbox_image",
                args: [{
                    kind: "Literal",
                    name: "height",
                    value: 450
                }, s, {
                    kind: "Literal",
                    name: "width",
                    value: 450
                }],
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: Zb,
                storageKey: 'image(height:450,sizing:"contain-fit",width:450)'
            }],
            type: "MessageVideo",
            abstractKey: null
        };
        var ac = {
                kind: "InlineFragment",
                selections: [q, p, a, u],
                type: "Video",
                abstractKey: null
            },
            P = [{
                alias: null,
                args: null,
                concreteType: "MessengerRetailItem",
                kind: "LinkedField",
                name: "nodes",
                plural: !0,
                selections: [a, M, Ob, Ja, Pb, b, Qb, Rb, y, C, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "media_blob_attachments",
                    plural: !0,
                    selections: [E, Tb, Sb, Wb, Zb, ac],
                    storageKey: null
                }],
                storageKey: null
            }],
            bc = {
                kind: "InlineFragment",
                selections: [{
                    alias: "video_id",
                    args: null,
                    kind: "ScalarField",
                    name: "id",
                    storageKey: null
                }],
                type: "Video",
                abstractKey: null
            },
            cc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "values",
                storageKey: null
            },
            dc = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "ComponentFlowLeadGenField",
                    kind: "LinkedField",
                    name: "field_data_list",
                    plural: !0,
                    selections: [{
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "field_type",
                        storageKey: null
                    }, k, cc],
                    storageKey: null
                }],
                type: "PagesPlatformLeadGenInfo",
                abstractKey: null
            },
            ec = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "expiration_time",
                storageKey: null
            },
            Q = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "latitude",
                storageKey: null
            },
            fc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "longitude",
                storageKey: null
            },
            gc = [Q, fc],
            hc = {
                kind: "InlineFragment",
                selections: [{
                    alias: "live_location_id",
                    args: null,
                    kind: "ScalarField",
                    name: "id",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "is_expired",
                    storageKey: null
                }, ec, {
                    alias: null,
                    args: null,
                    concreteType: "User",
                    kind: "LinkedField",
                    name: "sender",
                    plural: !1,
                    selections: d,
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "Coordinate",
                    kind: "LinkedField",
                    name: "coordinate",
                    plural: !1,
                    selections: gc,
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "location_title",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "LiveLocationDestination",
                    kind: "LinkedField",
                    name: "sender_destination",
                    plural: !1,
                    selections: [Q, fc, k],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "stop_reason",
                    storageKey: null
                }],
                type: "MessageLiveLocation",
                abstractKey: null
            },
            ic = {
                alias: null,
                args: null,
                concreteType: "MontageDirectOpenInfo",
                kind: "LinkedField",
                name: "opens",
                plural: !0,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "open_time",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "MessagingParticipant",
                    kind: "LinkedField",
                    name: "open_by",
                    plural: !1,
                    selections: d,
                    storageKey: null
                }],
                storageKey: null
            },
            jc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "message_state",
                storageKey: null
            },
            kc = {
                alias: null,
                args: null,
                concreteType: "MessagingParticipant",
                kind: "LinkedField",
                name: "kept_by",
                plural: !1,
                selections: d,
                storageKey: null
            },
            lc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "kept_at",
                storageKey: null
            },
            mc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_keep_disabled",
                storageKey: null
            },
            nc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "blob_media_type",
                storageKey: null
            },
            oc = [u, o, vb],
            pc = {
                kind: "InlineFragment",
                selections: oc,
                type: "MessageVideo",
                abstractKey: null
            };
        oc = {
            kind: "InlineFragment",
            selections: oc,
            type: "MessageImage",
            abstractKey: null
        };
        var qc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "montage_container_id",
                storageKey: null
            },
            rc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "story_id",
                storageKey: null
            },
            sc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "calendar_sync_type",
                storageKey: null
            },
            tc = {
                alias: null,
                args: null,
                concreteType: "Page",
                kind: "LinkedField",
                name: "page",
                plural: !1,
                selections: [a, sc, {
                    alias: null,
                    args: null,
                    concreteType: "ServicesVerticalPageBasedInfo",
                    kind: "LinkedField",
                    name: "services_vertical_info",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "is_eligible_for_appointment_calendar",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "time_zone_name",
                        storageKey: null
                    }],
                    storageKey: null
                }],
                storageKey: null
            },
            uc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "message_bubble_type",
                storageKey: null
            },
            vc = {
                alias: null,
                args: null,
                concreteType: "User",
                kind: "LinkedField",
                name: "user",
                plural: !1,
                selections: d,
                storageKey: null
            },
            wc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "ls_xma_title",
                storageKey: null
            },
            xc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "ls_xma_subtitle",
                storageKey: null
            },
            yc = {
                alias: "availability",
                args: null,
                kind: "ScalarField",
                name: "user_availability",
                storageKey: null
            },
            zc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "request_flow_type",
                storageKey: null
            },
            Ac = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "service_general_info",
                storageKey: null
            },
            Bc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "has_saved_to_calendar",
                storageKey: null
            },
            Cc = [a, b, G],
            Dc = {
                alias: null,
                args: null,
                concreteType: "Page",
                kind: "LinkedField",
                name: "page",
                plural: !1,
                selections: Cc,
                storageKey: null
            },
            Ec = [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "start",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "end",
                storageKey: null
            }],
            Fc = {
                alias: null,
                args: null,
                concreteType: "TimeRange",
                kind: "LinkedField",
                name: "suggested_time_range",
                plural: !1,
                selections: Ec,
                storageKey: null
            },
            Gc = {
                alias: "duration",
                args: null,
                kind: "ScalarField",
                name: "duration_in_seconds",
                storageKey: null
            },
            Hc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "duration_type",
                storageKey: null
            },
            Ic = [{
                kind: "Literal",
                name: "first",
                value: 1
            }],
            Jc = {
                alias: null,
                args: [{
                    kind: "Literal",
                    name: "sizing",
                    value: "cover-fill-cropped"
                }],
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: m,
                storageKey: 'image(sizing:"cover-fill-cropped")'
            },
            Kc = {
                alias: "price",
                args: null,
                kind: "ScalarField",
                name: "display_price",
                storageKey: null
            },
            Lc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "requested_time",
                storageKey: null
            },
            Mc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "special_request",
                storageKey: null
            },
            Nc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "booking_status_value",
                storageKey: null
            },
            Oc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "status",
                storageKey: null
            },
            Pc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "archived_status",
                storageKey: null
            },
            Qc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "reminder_bubble_text",
                storageKey: null
            },
            Rc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "request_admin_approval_type",
                storageKey: null
            },
            Sc = {
                alias: null,
                args: null,
                concreteType: "JobApplication",
                kind: "LinkedField",
                name: "job_application",
                plural: !1,
                selections: d,
                storageKey: null
            },
            Tc = {
                alias: null,
                args: null,
                concreteType: "User",
                kind: "LinkedField",
                name: "user",
                plural: !1,
                selections: [a, nb, G],
                storageKey: null
            },
            Uc = {
                alias: null,
                args: null,
                concreteType: "ServicesNativeBookingRequestAdditionalInfoField",
                kind: "LinkedField",
                name: "additional_info",
                plural: !0,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "field_key",
                    storageKey: null
                }, H, k],
                storageKey: null
            },
            Vc = {
                alias: null,
                args: null,
                concreteType: "PhoneNumber",
                kind: "LinkedField",
                name: "consumer_phone_number",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "display_number",
                    storageKey: null
                }],
                storageKey: null
            },
            Wc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "recur_message",
                storageKey: null
            },
            Xc = {
                alias: null,
                args: null,
                concreteType: "Page",
                kind: "LinkedField",
                name: "page",
                plural: !1,
                selections: d,
                storageKey: null
            },
            Yc = {
                alias: null,
                args: null,
                concreteType: "User",
                kind: "LinkedField",
                name: "consumer",
                plural: !1,
                selections: d,
                storageKey: null
            };
        Ec = {
            alias: null,
            args: null,
            concreteType: "TimeRange",
            kind: "LinkedField",
            name: "formatted_available_time_ranges",
            plural: !0,
            selections: Ec,
            storageKey: null
        };
        var Zc = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "has_booking_request_created",
                storageKey: null
            },
            $c = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "cta_click_events",
                storageKey: null
            },
            ad = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "cta_texts",
                storageKey: null
            },
            bd = {
                alias: null,
                args: null,
                concreteType: "ServicesWWWURL",
                kind: "LinkedField",
                name: "www_url",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "is_async",
                    storageKey: null
                }, l],
                storageKey: null
            },
            cd = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "render_template",
                storageKey: null
            },
            dd = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "primary_text",
                storageKey: null
            },
            ed = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "visible_on_platforms",
                storageKey: null
            },
            fd = [a, b],
            gd = [{
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "messaging_actor",
                plural: !1,
                selections: fd,
                storageKey: null
            }],
            hd = {
                alias: "eventID",
                args: null,
                kind: "ScalarField",
                name: "id",
                storageKey: null
            },
            id = {
                alias: "guestStatus",
                args: null,
                kind: "ScalarField",
                name: "viewer_guest_status",
                storageKey: null
            },
            jd = {
                alias: "canViewerJoin",
                args: null,
                kind: "ScalarField",
                name: "can_viewer_join",
                storageKey: null
            },
            kd = {
                alias: "timeString",
                args: null,
                kind: "ScalarField",
                name: "start_time_sentence",
                storageKey: null
            },
            ld = [b],
            md = {
                alias: null,
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "social_context",
                plural: !1,
                selections: f,
                storageKey: null
            },
            nd = {
                alias: "watchStatus",
                args: null,
                kind: "ScalarField",
                name: "viewer_watch_status",
                storageKey: null
            },
            od = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "connection_style",
                storageKey: null
            },
            pd = {
                alias: "canViewerWatch",
                args: null,
                kind: "ScalarField",
                name: "can_viewer_watch",
                storageKey: null
            },
            qd = {
                alias: null,
                args: [{
                    kind: "Literal",
                    name: "width",
                    value: 300
                }],
                concreteType: "Image",
                kind: "LinkedField",
                name: "profile_picture",
                plural: !1,
                selections: m,
                storageKey: "profile_picture(width:300)"
            },
            rd = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "start_timestamp",
                storageKey: null
            },
            sd = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "application_name",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "artist_names",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "audio_url",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "duration_ms",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "music_title",
                    storageKey: null
                }],
                type: "ExternalSong",
                abstractKey: null
            },
            td = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "lwa_state",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "lwa_type",
                    storageKey: null
                }],
                type: "LightweightAction",
                abstractKey: null
            },
            ud = {
                alias: "desc",
                args: null,
                kind: "ScalarField",
                name: "description",
                storageKey: null
            },
            vd = {
                alias: "thumb_url",
                args: null,
                kind: "ScalarField",
                name: "image_url",
                storageKey: null
            },
            wd = {
                alias: "item_url",
                args: null,
                kind: "ScalarField",
                name: "target_url",
                storageKey: null
            },
            xd = {
                alias: "source",
                args: null,
                kind: "ScalarField",
                name: "source_name",
                storageKey: null
            },
            yd = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "second_metaline",
                storageKey: null
            },
            zd = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "third_metaline",
                storageKey: null
            },
            Ad = {
                alias: "total_cost",
                args: null,
                kind: "ScalarField",
                name: "formated_price",
                storageKey: null
            },
            Bd = {
                alias: "merchant_name",
                args: null,
                kind: "ScalarField",
                name: "seller_info",
                storageKey: null
            },
            Cd = {
                alias: "raw_amount",
                args: null,
                kind: "ScalarField",
                name: "price_amount",
                storageKey: null
            },
            Dd = {
                alias: null,
                args: null,
                concreteType: "MessengerCommercePayment",
                kind: "LinkedField",
                name: "payment",
                plural: !1,
                selections: d,
                storageKey: null
            },
            Ed = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "price_currency",
                storageKey: null
            },
            Fd = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "price_amount",
                storageKey: null
            },
            Gd = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "can_donate",
                storageKey: null
            },
            Hd = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "has_viewer_donated",
                storageKey: null
            },
            Id = {
                alias: null,
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "fundraiser_detailed_progress_text",
                plural: !1,
                selections: f,
                storageKey: null
            },
            Jd = {
                alias: null,
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "fundraiser_subtitle_text",
                plural: !1,
                selections: f,
                storageKey: null
            },
            Kd = [l, q, p],
            Ld = {
                alias: null,
                args: null,
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: Kd,
                storageKey: null
            },
            Md = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "recipient_name",
                storageKey: null
            },
            Nd = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "merchant_name",
                storageKey: null
            },
            Od = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "account_holder_name",
                storageKey: null
            },
            Pd = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "receipt_id",
                storageKey: null
            },
            Qd = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "shipping_method",
                storageKey: null
            },
            Rd = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "order_payment_method",
                storageKey: null
            },
            Sd = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "receipt_url",
                storageKey: null
            },
            Td = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "cancellation_url",
                storageKey: null
            },
            Ud = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "receipient_address",
                storageKey: null
            },
            Vd = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "streets",
                storageKey: null
            },
            R = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "city",
                storageKey: null
            },
            S = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "country",
                storageKey: null
            },
            Wd = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "postal_code",
                storageKey: null
            },
            Xd = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "state",
                storageKey: null
            },
            Yd = {
                alias: null,
                args: null,
                concreteType: "MessengerCommerceBusinessLocation",
                kind: "LinkedField",
                name: "structured_address",
                plural: !1,
                selections: [Vd, R, S, Wd, Xd],
                storageKey: null
            },
            Zd = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "total",
                storageKey: null
            },
            $d = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "tax",
                storageKey: null
            },
            ae = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "shipping_cost",
                storageKey: null
            },
            be = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "subtotal",
                storageKey: null
            },
            ce = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "bubble_type",
                storageKey: null
            },
            de = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "order_time_for_display",
                storageKey: null
            },
            ee = {
                alias: null,
                args: null,
                concreteType: "RetailReceiptAdjustment",
                kind: "LinkedField",
                name: "retail_adjustments",
                plural: !0,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "adjustment_amount",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "adjustment_type",
                    storageKey: null
                }],
                storageKey: null
            },
            fe = {
                alias: null,
                args: null,
                concreteType: "Image",
                kind: "LinkedField",
                name: "partner_logo",
                plural: !1,
                selections: m,
                storageKey: null
            },
            ge = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "payment_modules_client",
                storageKey: null
            },
            he = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_viewer_seller",
                storageKey: null
            },
            ie = {
                alias: null,
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "payment_snippet",
                plural: !1,
                selections: f,
                storageKey: null
            },
            je = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "item_id",
                storageKey: null
            },
            ke = {
                alias: null,
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "subtitle",
                plural: !1,
                selections: f,
                storageKey: null
            };
        I = [I, hb];
        hb = {
            alias: null,
            args: null,
            concreteType: "CurrencyAmount",
            kind: "LinkedField",
            name: "unit_price",
            plural: !1,
            selections: I,
            storageKey: null
        };
        var le = {
                alias: null,
                args: n,
                concreteType: "Image",
                kind: "LinkedField",
                name: "images",
                plural: !0,
                selections: m,
                storageKey: "images(height:120,width:120)"
            },
            me = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "quantity",
                storageKey: null
            };
        gb = {
            alias: null,
            args: null,
            concreteType: "PaymentPlatformAttachmentComponent",
            kind: "LinkedField",
            name: "components",
            plural: !0,
            selections: [gb, ke, {
                alias: null,
                args: n,
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: m,
                storageKey: "image(height:120,width:120)"
            }],
            storageKey: null
        };
        n = [Xd, {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "action_type",
            storageKey: null
        }, {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "action_detail",
            storageKey: null
        }, {
            alias: null,
            args: null,
            concreteType: "TextWithEntities",
            kind: "LinkedField",
            name: "label",
            plural: !1,
            selections: f,
            storageKey: null
        }, {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "checkmark",
            storageKey: null
        }, {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "extra_data",
            storageKey: null
        }];
        var ne = {
                alias: null,
                args: null,
                concreteType: "PaymentPlatformAttachmentCallToAction",
                kind: "LinkedField",
                name: "payment_call_to_actions",
                plural: !0,
                selections: n,
                storageKey: null
            },
            oe = {
                alias: null,
                args: null,
                concreteType: "PaymentPlatformAttachmentCallToAction",
                kind: "LinkedField",
                name: "click_action",
                plural: !1,
                selections: n,
                storageKey: null
            };
        n = {
            alias: null,
            args: null,
            concreteType: "PaymentPlatformAttachmentCallToAction",
            kind: "LinkedField",
            name: "summary_action",
            plural: !1,
            selections: n,
            storageKey: null
        };
        var pe = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "invoicer_id",
                storageKey: null
            },
            qe = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_last_attachment",
                storageKey: null
            };
        I = {
            alias: null,
            args: null,
            concreteType: "CurrencyAmount",
            kind: "LinkedField",
            name: "payment_total",
            plural: !1,
            selections: I,
            storageKey: null
        };
        var re = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "product_detail",
                storageKey: null
            },
            se = {
                alias: null,
                args: null,
                concreteType: "PaymentPlatformAttachmentIcon",
                kind: "LinkedField",
                name: "payment_status_icon",
                plural: !1,
                selections: [Oc],
                storageKey: null
            },
            te = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "user_facing_payment_status",
                storageKey: null
            },
            ue = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "payment_sub_statuses",
                storageKey: null
            },
            ve = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "should_show_new_xma",
                storageKey: null
            },
            we = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "buyer_name",
                storageKey: null
            },
            xe = {
                alias: null,
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "group_commerce_item_description",
                plural: !1,
                selections: f,
                storageKey: null
            },
            ye = {
                alias: null,
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "formatted_price",
                plural: !1,
                selections: f,
                storageKey: null
            },
            ze = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "group_commerce_item_title",
                storageKey: null
            };
        ua = {
            alias: null,
            args: ua,
            concreteType: "Image",
            kind: "LinkedField",
            name: "image",
            plural: !1,
            selections: m,
            storageKey: 'image(sizing:"contain-fit")'
        };
        var Ae = {
                alias: "primary_photo",
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "primary_listing_photo",
                plural: !1,
                selections: [ua],
                storageKey: null
            },
            Be = {
                alias: null,
                args: null,
                concreteType: "StreetAddress",
                kind: "LinkedField",
                name: "address",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "single_line_full_address",
                    storageKey: null
                }],
                storageKey: null
            },
            Ce = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "top_category_name",
                storageKey: null
            };
        s = {
            alias: null,
            args: null,
            concreteType: "FocusedPhoto",
            kind: "LinkedField",
            name: "cover_photo",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                concreteType: "Photo",
                kind: "LinkedField",
                name: "photo",
                plural: !1,
                selections: [a, {
                    alias: null,
                    args: [{
                        kind: "Literal",
                        name: "height",
                        value: 720
                    }, s, {
                        kind: "Literal",
                        name: "width",
                        value: 720
                    }],
                    concreteType: "Image",
                    kind: "LinkedField",
                    name: "image",
                    plural: !1,
                    selections: Kd,
                    storageKey: 'image(height:720,sizing:"contain-fit",width:720)'
                }],
                storageKey: null
            }],
            storageKey: null
        };
        var De = {
                alias: null,
                args: null,
                concreteType: "Location",
                kind: "LinkedField",
                name: "location",
                plural: !1,
                selections: gc,
                storageKey: null
            },
            Ee = {
                alias: null,
                args: null,
                concreteType: "Rating",
                kind: "LinkedField",
                name: "overall_star_rating",
                plural: !1,
                selections: [H],
                storageKey: null
            },
            Fe = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "price_range_description",
                storageKey: null
            },
            Ge = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_active",
                storageKey: null
            },
            He = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "event_title",
                storageKey: null
            },
            Ie = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "time",
                storageKey: null
            },
            Je = [Ge, He, Ie],
            Ke = {
                kind: "InlineFragment",
                selections: Je,
                type: "MessengerEventReminder",
                abstractKey: null
            },
            Le = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "has_more_upcoming_reminders",
                storageKey: null
            },
            Me = [{
                kind: "Literal",
                name: "orderby",
                value: "m_personal_reminder_list_ordering"
            }],
            Ne = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "tint_color",
                storageKey: null
            },
            Oe = {
                alias: null,
                args: null,
                concreteType: "Image",
                kind: "LinkedField",
                name: "logo",
                plural: !1,
                selections: Kd,
                storageKey: null
            },
            Pe = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "flight_label",
                storageKey: null
            },
            Qe = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "boarding_time_label",
                storageKey: null
            },
            Re = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "departure_label",
                storageKey: null
            },
            Se = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "passenger_names_label",
                storageKey: null
            },
            Te = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "passenger_seat_label",
                storageKey: null
            },
            Ue = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "flight_terminal_label",
                storageKey: null
            },
            Ve = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "flight_gate_label",
                storageKey: null
            },
            We = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "view_boarding_pass_cta_label",
                storageKey: null
            },
            Xe = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "share_cta_label",
                storageKey: null
            },
            Ye = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "message_cta_label",
                storageKey: null
            },
            Ze = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "boarding_pass_title_label",
                storageKey: null
            },
            $e = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "boarding_pass_error_title_label",
                storageKey: null
            },
            af = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "airline_logo_image_url",
                storageKey: null
            },
            bf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "header_image_url",
                storageKey: null
            };
        H = [i, H];
        var cf = {
                alias: null,
                args: null,
                concreteType: "AirlineProductItem",
                kind: "LinkedField",
                name: "auxiliary_fields",
                plural: !0,
                selections: H,
                storageKey: null
            },
            df = {
                alias: null,
                args: null,
                concreteType: "AirlineProductItem",
                kind: "LinkedField",
                name: "secondary_fields",
                plural: !0,
                selections: H,
                storageKey: null
            },
            ef = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "qr_code_header_image_url",
                storageKey: null
            },
            ff = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "qr_code_image_url",
                storageKey: null
            },
            gf = {
                alias: null,
                args: null,
                concreteType: "AirlineProductItem",
                kind: "LinkedField",
                name: "header_text_field",
                plural: !1,
                selections: H,
                storageKey: null
            },
            hf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "flight_number",
                storageKey: null
            },
            jf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "formatted_time_for_display",
                storageKey: null
            },
            kf = [jf],
            lf = {
                alias: null,
                args: null,
                concreteType: "AirlineFlightTimeInfo",
                kind: "LinkedField",
                name: "departure_time_info",
                plural: !1,
                selections: kf,
                storageKey: null
            },
            mf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "terminal",
                storageKey: null
            },
            nf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "gate",
                storageKey: null
            },
            T = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "airport_code",
                storageKey: null
            },
            of = {
                alias: null,
                args: null,
                concreteType: "AirlineFlightTimeInfo",
                kind: "LinkedField",
                name: "arrival_time_info",
                plural: !1,
                selections: kf,
                storageKey: null
            },
            pf = [T, R],
            qf = {
                alias: null,
                args: null,
                concreteType: "AirportInfo",
                kind: "LinkedField",
                name: "arrival_airport",
                plural: !1,
                selections: pf,
                storageKey: null
            };
        kf = {
            alias: null,
            args: null,
            concreteType: "AirlineFlightInfo",
            kind: "LinkedField",
            name: "flight_info",
            plural: !1,
            selections: [hf, {
                alias: null,
                args: null,
                concreteType: "AirlineFlightTimeInfo",
                kind: "LinkedField",
                name: "boarding_time_info",
                plural: !1,
                selections: kf,
                storageKey: null
            }, lf, {
                alias: null,
                args: null,
                concreteType: "AirportInfo",
                kind: "LinkedField",
                name: "departure_airport",
                plural: !1,
                selections: [mf, nf, T, R],
                storageKey: null
            }, of , qf],
            storageKey: null
        };
        var rf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "seat",
                storageKey: null
            },
            sf = {
                alias: null,
                args: null,
                concreteType: "AirlinePassengerSegmentDetail",
                kind: "LinkedField",
                name: "passenger",
                plural: !1,
                selections: [rf, {
                    alias: null,
                    args: null,
                    concreteType: "AirlinePassenger",
                    kind: "LinkedField",
                    name: "passenger",
                    plural: !1,
                    selections: ld,
                    storageKey: null
                }],
                storageKey: null
            },
            tf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "pnr_number",
                storageKey: null
            },
            uf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "booking_number_label",
                storageKey: null
            },
            vf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "arrival_time_label",
                storageKey: null
            },
            wf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "departure_time_label",
                storageKey: null
            };
        pf = {
            kind: "InlineFragment",
            selections: [tf, Ne, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "checkin_url",
                storageKey: null
            }, uf, Pe, vf, wf, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "checkin_cta_label",
                storageKey: null
            }, Oe, {
                alias: null,
                args: null,
                concreteType: "AirlineFlightInfo",
                kind: "LinkedField",
                name: "flight_infos",
                plural: !0,
                selections: [hf, qf, {
                    alias: null,
                    args: null,
                    concreteType: "AirportInfo",
                    kind: "LinkedField",
                    name: "departure_airport",
                    plural: !1,
                    selections: pf,
                    storageKey: null
                }, lf, of ],
                storageKey: null
            }],
            type: "AirlineCheckInReminderMessageAttachment",
            abstractKey: null
        };
        var xf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "tracking_number",
                storageKey: null
            },
            yf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "shipdate_for_display",
                storageKey: null
            },
            zf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "estimated_delivery_time_for_display",
                storageKey: null
            },
            U = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "timezone",
                storageKey: null
            };
        S = [S, R, Wd, fc, Q, Xd, Vd, U];
        Wd = {
            alias: null,
            args: null,
            concreteType: "MessengerCommerceBusinessLocation",
            kind: "LinkedField",
            name: "commerce_origin",
            plural: !1,
            selections: S,
            storageKey: null
        };
        fc = {
            alias: null,
            args: null,
            concreteType: "MessengerCommerceBusinessLocation",
            kind: "LinkedField",
            name: "commerce_destination",
            plural: !1,
            selections: S,
            storageKey: null
        };
        Q = {
            alias: null,
            args: null,
            concreteType: "RetailShipmentItemsConnection",
            kind: "LinkedField",
            name: "retail_shipment_items",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                concreteType: "MessengerRetailItem",
                kind: "LinkedField",
                name: "nodes",
                plural: !0,
                selections: [a, b, ud, vd, wd, xd, Ob, Pb, yd, zd, C],
                storageKey: null
            }],
            storageKey: null
        };
        Vd = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "carrier_tracking_url",
            storageKey: null
        };
        var Af = [q, p, l],
            Bf = {
                alias: null,
                args: null,
                concreteType: "Image",
                kind: "LinkedField",
                name: "logo",
                plural: !1,
                selections: Af,
                storageKey: null
            },
            Cf = {
                alias: null,
                args: null,
                concreteType: "MessengerRetailCarrier",
                kind: "LinkedField",
                name: "retail_carrier",
                plural: !1,
                selections: [b, Vd, Bf],
                storageKey: null
            };
        S = {
            alias: null,
            args: null,
            concreteType: "MessengerCommerceBusinessLocation",
            kind: "LinkedField",
            name: "messenger_commerce_location",
            plural: !1,
            selections: S,
            storageKey: null
        };
        var Df = {
                alias: null,
                args: null,
                concreteType: "RetailShipmentTrackingEventsConnection",
                kind: "LinkedField",
                name: "shipment_tracking_events",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "MessengerRetailShipmentTrackingEvent",
                    kind: "LinkedField",
                    name: "nodes",
                    plural: !0,
                    selections: [a, S],
                    storageKey: null
                }],
                storageKey: null
            },
            Ef = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "tracking_event_time_for_display",
                storageKey: null
            },
            Ff = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "shipment_tracking_event_type",
                storageKey: null
            },
            Gf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "tracking_event_description",
                storageKey: null
            };
        Vd = {
            alias: null,
            args: null,
            concreteType: "MessengerRetailCarrier",
            kind: "LinkedField",
            name: "retail_carrier",
            plural: !1,
            selections: [b, Vd, Bf, {
                alias: null,
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "legal_terms_of_service_text",
                plural: !1,
                selections: f,
                storageKey: null
            }],
            storageKey: null
        };
        Bf = {
            alias: null,
            args: null,
            concreteType: "RetailShipmentTrackingEventsConnection",
            kind: "LinkedField",
            name: "shipment_tracking_events",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                concreteType: "MessengerRetailShipmentTrackingEvent",
                kind: "LinkedField",
                name: "nodes",
                plural: !0,
                selections: [a, Ff, S],
                storageKey: null
            }],
            storageKey: null
        };
        var Hf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "update_type",
                storageKey: null
            },
            If = {
                alias: null,
                args: null,
                concreteType: "Image",
                kind: "LinkedField",
                name: "logo",
                plural: !1,
                selections: r,
                storageKey: null
            };
        qf = {
            kind: "InlineFragment",
            selections: [tf, Ne, Hf, wf, vf, uf, Ve, Pe, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "flight_status_label",
                storageKey: null
            }, Se, Te, If, {
                alias: null,
                args: null,
                concreteType: "AirlineFlightInfo",
                kind: "LinkedField",
                name: "flight_info",
                plural: !1,
                selections: [qf, {
                    alias: null,
                    args: null,
                    concreteType: "AirportInfo",
                    kind: "LinkedField",
                    name: "departure_airport",
                    plural: !1,
                    selections: [T, R, nf],
                    storageKey: null
                }, hf, lf, of ],
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "hightlighted_labels",
                storageKey: null
            }],
            type: "AirlineUpdateMessageAttachment",
            abstractKey: null
        };
        nf = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "confirmation_number",
            storageKey: null
        };
        lf = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "formatted_total",
            storageKey: null
        };
        pb = {
            alias: null,
            args: null,
            concreteType: "AirlinePriceInfo",
            kind: "LinkedField",
            name: "itemized_price_infos",
            plural: !0,
            selections: [i, pb],
            storageKey: null
        };
        var Jf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "formatted_tax",
                storageKey: null
            },
            Kf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "formatted_base_price",
                storageKey: null
            },
            Lf = {
                alias: null,
                args: null,
                concreteType: "AirlinePassenger",
                kind: "LinkedField",
                name: "passenger_infos",
                plural: !0,
                selections: ld,
                storageKey: null
            },
            Mf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "aircraft_type_label",
                storageKey: null
            },
            Nf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "base_price_label",
                storageKey: null
            },
            Of = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "cabin_type_label",
                storageKey: null
            },
            Pf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "flight_confirmation_label",
                storageKey: null
            },
            Qf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "flight_date_label",
                storageKey: null
            },
            Rf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "itinerary_error_title_label",
                storageKey: null
            },
            Sf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "itinerary_title_label",
                storageKey: null
            },
            Tf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "passenger_name_label",
                storageKey: null
            },
            Uf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "purchase_summary_label",
                storageKey: null
            },
            Vf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "taxes_label",
                storageKey: null
            },
            Wf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "total_label",
                storageKey: null
            },
            Xf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "view_details_cta_label",
                storageKey: null
            },
            Yf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "number_of_stops_label",
                storageKey: null
            };
        T = [T, R, mf];
        mf = {
            alias: null,
            args: null,
            concreteType: "AirlineFlightInfo",
            kind: "LinkedField",
            name: "flight_info",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "aircraft_type",
                storageKey: null
            }, hf, {
                alias: null,
                args: null,
                concreteType: "AirportInfo",
                kind: "LinkedField",
                name: "departure_airport",
                plural: !1,
                selections: T,
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "AirportInfo",
                kind: "LinkedField",
                name: "arrival_airport",
                plural: !1,
                selections: T,
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "AirlineFlightTimeInfo",
                kind: "LinkedField",
                name: "departure_time_info",
                plural: !1,
                selections: [jf, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "formatted_datetime_for_display",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "formatted_date_for_display",
                    storageKey: null
                }],
                storageKey: null
            }, of ],
            storageKey: null
        };
        hf = {
            alias: null,
            args: null,
            concreteType: "AirlinePassengerSegmentDetail",
            kind: "LinkedField",
            name: "passenger_details",
            plural: !0,
            selections: [{
                alias: null,
                args: null,
                concreteType: "AirlinePassenger",
                kind: "LinkedField",
                name: "passenger",
                plural: !1,
                selections: [b, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "ticket_number",
                    storageKey: null
                }],
                storageKey: null
            }, rf, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "seat_type",
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "AirlineProductItem",
                kind: "LinkedField",
                name: "product_items",
                plural: !0,
                selections: H,
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "travel_class",
                storageKey: null
            }],
            storageKey: null
        };
        T = {
            alias: null,
            args: null,
            concreteType: "Image",
            kind: "LinkedField",
            name: "cover_image",
            plural: !1,
            selections: Kd,
            storageKey: null
        };
        jf = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "headline",
            storageKey: null
        }; of = {
            alias: null,
            args: null,
            concreteType: "Page",
            kind: "LinkedField",
            name: "page",
            plural: !1,
            selections: fd,
            storageKey: null
        };
        rf = {
            alias: null,
            args: null,
            concreteType: "EventAttendanceAnswer",
            kind: "LinkedField",
            name: "attendee_answers",
            plural: !0,
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "question_id",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "answer",
                storageKey: null
            }],
            storageKey: null
        };
        H = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "num_guests",
            storageKey: null
        };
        Kd = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "start_time_sentence",
            storageKey: null
        };
        var Zf = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "contextual_name",
                storageKey: null
            },
            $f = {
                alias: null,
                args: [{
                    kind: "Literal",
                    name: "height",
                    value: 64
                }, {
                    kind: "Literal",
                    name: "width",
                    value: 64
                }],
                concreteType: "Image",
                kind: "LinkedField",
                name: "profile_picture",
                plural: !1,
                selections: m,
                storageKey: "profile_picture(height:64,width:64)"
            },
            ag = {
                kind: "Literal",
                name: "first",
                value: 3
            },
            bg = [ag],
            cg = {
                alias: null,
                args: bg,
                concreteType: "EventAttendanceConfigToOrderedQuestionsConnection",
                kind: "LinkedField",
                name: "attendance_questions",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "EventAttendanceQuestion",
                    kind: "LinkedField",
                    name: "nodes",
                    plural: !0,
                    selections: [a, e],
                    storageKey: null
                }],
                storageKey: "attendance_questions(first:3)"
            };
        cc = {
            alias: null,
            args: null,
            concreteType: "LeadGenUserInfoField",
            kind: "LinkedField",
            name: "field_data",
            plural: !0,
            selections: [k, b, cc],
            storageKey: null
        };
        var dg = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "sender_wec_number",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "sender_wec_number_formated",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "sender_wec_number_fbid",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "sender_wec_name",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "wec_referral_url",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "wec_referral_body",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "wec_referral_headline",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "wec_referral_media",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "wec_referral_media_type",
                    storageKey: null
                }],
                type: "WECMessage",
                abstractKey: null
            },
            eg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_malicious",
                storageKey: null
            },
            fg = {
                alias: null,
                args: null,
                concreteType: "Image",
                kind: "LinkedField",
                name: "thumbnail_image",
                plural: !1,
                selections: r,
                storageKey: null
            },
            gg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "ad_id",
                storageKey: null
            },
            hg = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "ice_breaker_title",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "IceBreakerMessage",
                    kind: "LinkedField",
                    name: "ice_breaker_messages",
                    plural: !0,
                    selections: [{
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "message",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "message_key",
                        storageKey: null
                    }],
                    storageKey: null
                }, gg],
                type: "IceBreakerMessageAttachment",
                abstractKey: null
            },
            ig = {
                kind: "Literal",
                name: "height",
                value: 280
            },
            jg = {
                kind: "Literal",
                name: "width",
                value: 280
            },
            kg = [ig, jg],
            lg = {
                alias: "preview",
                args: kg,
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: r,
                storageKey: "image(height:280,width:280)"
            },
            mg = {
                kind: "Literal",
                name: "height",
                value: 480
            },
            ng = {
                kind: "Literal",
                name: "width",
                value: 480
            },
            og = {
                alias: "large_preview",
                args: [mg, ng],
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: r,
                storageKey: "image(height:480,width:480)"
            },
            pg = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "friend_id",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "confidence",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "birthday_date",
                    storageKey: null
                }],
                type: "MBirthdayReminderAttachment",
                abstractKey: null
            },
            qg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "module_name",
                storageKey: null
            },
            rg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "program_name",
                storageKey: null
            },
            sg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "curriculum_message",
                storageKey: null
            },
            tg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "prompt",
                storageKey: null
            },
            ug = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "step_count",
                storageKey: null
            },
            vg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "total_steps",
                storageKey: null
            },
            wg = {
                alias: null,
                args: null,
                concreteType: "MentorshipProgram",
                kind: "LinkedField",
                name: "mentorship_program",
                plural: !1,
                selections: [a, {
                    alias: null,
                    args: null,
                    concreteType: "MentorshipCurriculum",
                    kind: "LinkedField",
                    name: "curriculum",
                    plural: !1,
                    selections: d,
                    storageKey: null
                }],
                storageKey: null
            },
            xg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "topics",
                storageKey: null
            },
            yg = [nb],
            zg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "xma_type",
                storageKey: null
            },
            Ag = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "xma_title",
                storageKey: null
            },
            Bg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "xma_disclaimer",
                storageKey: null
            },
            Cg = {
                alias: null,
                args: null,
                concreteType: "MentorshipProgram",
                kind: "LinkedField",
                name: "mentorship_program",
                plural: !1,
                selections: d,
                storageKey: null
            },
            Dg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "xma_body",
                storageKey: null
            },
            V = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "offset",
                storageKey: null
            },
            Eg = {
                alias: null,
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "title",
                plural: !1,
                selections: [e, {
                    alias: null,
                    args: null,
                    concreteType: "EntityAtRange",
                    kind: "LinkedField",
                    name: "ranges",
                    plural: !0,
                    selections: [B, V],
                    storageKey: null
                }],
                storageKey: null
            },
            Fg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "block_type",
                storageKey: null
            },
            Gg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "data",
                storageKey: null
            },
            Hg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "depth",
                storageKey: null
            },
            Ig = {
                alias: null,
                args: null,
                concreteType: "InlineStyleAtRange",
                kind: "LinkedField",
                name: "inline_style_ranges",
                plural: !0,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "inline_style",
                    storageKey: null
                }, B, V],
                storageKey: null
            },
            Jg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "comment_count_reduced",
                storageKey: null
            },
            Kg = {
                alias: null,
                args: null,
                concreteType: "TopLevelCommentsConnection",
                kind: "LinkedField",
                name: "top_level_comments",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "total_count",
                    storageKey: null
                }],
                storageKey: null
            },
            Lg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "reaction_count_reduced",
                storageKey: null
            };
        ag = [ag, {
            kind: "Literal",
            name: "orderby",
            value: ["COUNT_DESC", "REACTION_TYPE"]
        }];
        var Mg = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "reaction_type",
                storageKey: null
            },
            Ng = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "post_id",
                storageKey: null
            },
            Og = {
                alias: "description",
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "message",
                plural: !1,
                selections: f,
                storageKey: null
            },
            Pg = {
                kind: "InlineFragment",
                selections: yg,
                type: "User",
                abstractKey: null
            },
            Qg = [o],
            Rg = {
                kind: "InlineFragment",
                selections: Qg,
                type: "Entity",
                abstractKey: "__isEntity"
            },
            Sg = {
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "actors",
                plural: !0,
                selections: [E, b, a, Pg, Rg, {
                    alias: null,
                    args: null,
                    concreteType: "Image",
                    kind: "LinkedField",
                    name: "profile_picture",
                    plural: !1,
                    selections: r,
                    storageKey: null
                }],
                storageKey: null
            },
            Tg = {
                alias: null,
                args: null,
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: r,
                storageKey: null
            },
            W = {
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "media",
                plural: !1,
                selections: [wa, Tg],
                storageKey: null
            },
            Ug = {
                alias: "title",
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "title_with_entities",
                plural: !1,
                selections: f,
                storageKey: null
            },
            X = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "count",
                storageKey: null
            },
            Vg = [{
                kind: "Literal",
                name: "if_style",
                value: "file_upload"
            }],
            Wg = {
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "media",
                plural: !1,
                selections: wb,
                storageKey: null
            },
            Xg = [{
                kind: "Literal",
                name: "if_style",
                value: "photo"
            }],
            Yg = {
                alias: null,
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "message",
                plural: !1,
                selections: f,
                storageKey: null
            },
            Zg = {
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "actors",
                plural: !0,
                selections: [E, b, a, Pg, Rg],
                storageKey: null
            },
            $g = {
                alias: null,
                args: null,
                concreteType: "Photo",
                kind: "LinkedField",
                name: "photo",
                plural: !1,
                selections: wb,
                storageKey: null
            },
            ah = {
                alias: null,
                args: null,
                concreteType: "FocusedPhoto",
                kind: "LinkedField",
                name: "cover_photo",
                plural: !1,
                selections: [$g],
                storageKey: null
            },
            bh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "job_title",
                storageKey: null
            },
            ch = {
                alias: null,
                args: null,
                concreteType: "WorkUserInfo",
                kind: "LinkedField",
                name: "work_info",
                plural: !1,
                selections: [bh],
                storageKey: null
            },
            dh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "subscribe_status",
                storageKey: null
            },
            eh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "visibility",
                storageKey: null
            };
        f = {
            alias: null,
            args: null,
            concreteType: "TextWithEntities",
            kind: "LinkedField",
            name: "visibility_sentence",
            plural: !1,
            selections: f,
            storageKey: null
        };
        var fh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "viewer_join_state",
                storageKey: null
            },
            gh = {
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "group_general_chat",
                plural: !1,
                selections: d,
                storageKey: null
            },
            hh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "attachment_type_name",
                storageKey: null
            },
            ih = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "privacy_status",
                storageKey: null
            },
            jh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "file_type_category",
                storageKey: null
            },
            kh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "app_integration_type",
                storageKey: null
            },
            lh = {
                alias: null,
                args: [{
                    kind: "Literal",
                    name: "size",
                    value: "D32"
                }],
                concreteType: "Image",
                kind: "LinkedField",
                name: "logo",
                plural: !1,
                selections: m,
                storageKey: 'logo(size:"D32")'
            },
            mh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "viewer_auth_link",
                storageKey: null
            },
            nh = {
                alias: null,
                args: null,
                concreteType: "Image",
                kind: "LinkedField",
                name: "attachment_icon",
                plural: !1,
                selections: m,
                storageKey: null
            },
            oh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "content_uri",
                storageKey: null
            },
            ph = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "timestamp",
                storageKey: null
            },
            qh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "referral_offer_link",
                storageKey: null
            },
            rh = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "PostPurchaseOrderUpdateXmaProgress",
                    kind: "LinkedField",
                    name: "order_progress",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "total_segments",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "filled_segments",
                        storageKey: null
                    }],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "order_id",
                    storageKey: null
                }],
                type: "PostPurchaseOrderUpdateXma",
                abstractKey: null
            },
            sh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "cta_title",
                storageKey: null
            },
            th = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "action_prefill",
                    storageKey: null
                }, gg, sh, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "customer_id",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "index",
                    storageKey: null
                }, z, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "reply_image_uri",
                    storageKey: null
                }],
                type: "InThreadMultiphotoItemCTAData",
                abstractKey: null
            };
        N = {
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "target",
            plural: !1,
            selections: [E, Xa, {
                kind: "InlineFragment",
                selections: [a, F, u, Ya, Za, $a, ab],
                type: "WECMessageAudio",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [bb, db, cb, K],
                type: "MoneyTransfer",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: N,
                type: "PeerToPeerTransfer",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [yb, Gb, Hb, O, Ib, Jb, a, Fb, Kb, Lb, Cb, Mb, Db, K, {
                    alias: null,
                    args: null,
                    concreteType: "PeerToPeerPaymentRequest",
                    kind: "LinkedField",
                    name: "individual_requests",
                    plural: !0,
                    selections: [yb, Gb, Hb, O, Ib, Jb, a, Fb, Kb, Lb, Cb, Mb, Db, K],
                    storageKey: null
                }],
                type: "PeerToPeerPaymentRequest",
                abstractKey: null
            }, K, {
                kind: "InlineFragment",
                selections: [Nb, C, {
                    alias: null,
                    args: null,
                    concreteType: "RetailPromotionItemsConnection",
                    kind: "LinkedField",
                    name: "promotion_items",
                    plural: !1,
                    selections: P,
                    storageKey: null
                }],
                type: "MessengerRetailPromotion",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [Nb, C, {
                    alias: null,
                    args: null,
                    concreteType: "MessengerBusinessMessageItemsConnection",
                    kind: "LinkedField",
                    name: "business_items",
                    plural: !1,
                    selections: P,
                    storageKey: null
                }],
                type: "MessengerBusinessMessage",
                abstractKey: null
            }, bc, dc, hc, {
                kind: "InlineFragment",
                selections: [a, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "invite_sender",
                    plural: !1,
                    selections: d,
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "invite_recipient",
                    plural: !1,
                    selections: d,
                    storageKey: null
                }],
                type: "QuickInvite",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [ic, jc, kc, lc, mc, nc, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "blob_media",
                    plural: !1,
                    selections: [pc, oc],
                    storageKey: null
                }],
                type: "MontageDirect",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, qc, c, rc],
                type: "MontageShare",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, tc, uc, vc, wc, xc, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "native_component_flow_request",
                    plural: !1,
                    selections: [{
                        kind: "InlineFragment",
                        selections: [yc, zc, Ac, a, sc, Bc, Dc, Fc, {
                            alias: null,
                            args: null,
                            concreteType: "NativeComponentFlowBookingRequestServicesProductItemsConnection",
                            kind: "LinkedField",
                            name: "services_product_items",
                            plural: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: "ServicesProductItem",
                                kind: "LinkedField",
                                name: "nodes",
                                plural: !0,
                                selections: [a, b, M, Gc, Hc, {
                                    alias: null,
                                    args: Ic,
                                    concreteType: "ProductImage",
                                    kind: "LinkedField",
                                    name: "images",
                                    plural: !0,
                                    selections: [Jc],
                                    storageKey: "images(first:1)"
                                }, Kc],
                                storageKey: null
                            }],
                            storageKey: null
                        }, Lc, Mc, Nc, Oc, Pc, Qc, Rc, Sc, Tc, Uc, Vc, wc, xc, Wc],
                        type: "NativeComponentFlowBookingRequest",
                        abstractKey: null
                    }],
                    storageKey: null
                }],
                type: "PagesPlatformBookingMessage",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, Xc, Yc, Ec, Zc],
                type: "ServicesAppointmentAvailability",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, $c, ad, bd, cd, dd, ed],
                type: "ServicesGenericAdminText",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "MessagingParticipant",
                    kind: "LinkedField",
                    name: "genie_sender",
                    plural: !1,
                    selections: gd,
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "StoryAttachment",
                    kind: "LinkedField",
                    name: "story_attachment",
                    plural: !1,
                    selections: [g, j, xa, ya, za, Aa, Ba, Ca, Da, Ea, Fa, D, Wa],
                    storageKey: null
                }],
                type: "GenieMessage",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [hd, id, jd, kd, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "event_place",
                    plural: !1,
                    selections: ld,
                    storageKey: null
                }, md, nd, od, pd, qd, b, rd],
                type: "Event",
                abstractKey: null
            }, sd, td, {
                kind: "InlineFragment",
                selections: [a, b, ud, vd, wd, xd, Ob, Pb, yd, zd, y, C],
                type: "MessengerRetailItem",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, ud, Ad, Bd, Rb, vd, Cd, Dd, Ed, Fd, b],
                type: "AgentItemSuggestion",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, Gd, Hd, Id, Jd, {
                    kind: "InlineFragment",
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "FundraiserCoverPhoto",
                        kind: "LinkedField",
                        name: "focused_cover_photo",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "Photo",
                            kind: "LinkedField",
                            name: "photo",
                            plural: !1,
                            selections: [Ld],
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    type: "FundraiserWithPresence",
                    abstractKey: "__isFundraiserWithPresence"
                }],
                type: "Fundraiser",
                abstractKey: "__isFundraiser"
            }, {
                kind: "InlineFragment",
                selections: [a, Md, Nd, Od, Pd, Qd, Rd, Sd, Td, Ud, Yd, Oc, Zd, $d, ae, be, {
                    alias: null,
                    args: null,
                    concreteType: "RetailReceiptItemsConnection",
                    kind: "LinkedField",
                    name: "retail_items",
                    plural: !1,
                    selections: P,
                    storageKey: null
                }, ce, de, ee, fe],
                type: "MessengerRetailReceipt",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [ge, he, ie, {
                    alias: null,
                    args: null,
                    concreteType: "PaymentInvoiceProduct",
                    kind: "LinkedField",
                    name: "item_list",
                    plural: !0,
                    selections: [je, b, ke, M, hb, le, me],
                    storageKey: null
                }, gb, ne, oe, n, pe, qe, I, re, se, te, ue, ve, we],
                type: "PaymentPlatformAttachment",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: d,
                type: "JobApplication",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [xe, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "group_commerce_item_seller",
                    plural: !1,
                    selections: d,
                    storageKey: null
                }, ye, ze, Ae, o],
                type: "GroupCommerceProductItem",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [ye, Ae],
                type: "MarketplaceListingRenderable",
                abstractKey: "__isMarketplaceListingRenderable"
            }, {
                kind: "InlineFragment",
                selections: [Be, Ce, s, De, b, Ee, a, Fe],
                type: "Page",
                abstractKey: null
            }, Ke, {
                kind: "InlineFragment",
                selections: [Le, {
                    alias: null,
                    args: Me,
                    concreteType: "MPersonalRemindersListToPersonalRemindersConnection",
                    kind: "LinkedField",
                    name: "personal_reminders",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "MPersonalRemindersListToPersonalRemindersEdge",
                        kind: "LinkedField",
                        name: "edges",
                        plural: !0,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "MessengerEventReminder",
                            kind: "LinkedField",
                            name: "node",
                            plural: !1,
                            selections: Je,
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    storageKey: 'personal_reminders(orderby:"m_personal_reminder_list_ordering")'
                }],
                type: "MPersonalRemindersList",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [Ne, Oe, Pe, Qe, Re, Se, Te, Ue, Ve, We, Xe, Ye, Ze, $e, {
                    alias: null,
                    args: null,
                    concreteType: "AirlineBoardingPassesConnection",
                    kind: "LinkedField",
                    name: "boarding_passes",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "AirlineBoardingPassMessageAttachment",
                        kind: "LinkedField",
                        name: "nodes",
                        plural: !0,
                        selections: [af, bf, cf, df, ef, ff, gf, kf, sf],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "AirlineBoardingPassCollectionMessageAttachment",
                abstractKey: null
            }, pf, {
                kind: "InlineFragment",
                selections: [a, {
                    alias: null,
                    args: null,
                    concreteType: "MessengerRetailShipment",
                    kind: "LinkedField",
                    name: "shipment",
                    plural: !1,
                    selections: [a, xf, yf, zf, Wd, fc, Q, Cf, Df],
                    storageKey: null
                }, Ef, Ff, S, Gf, ce],
                type: "MessengerRetailShipmentTrackingEvent",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, xf, yf, zf, Wd, fc, Q, Vd, Bf, {
                    alias: null,
                    args: null,
                    concreteType: "MessengerRetailReceipt",
                    kind: "LinkedField",
                    name: "receipt",
                    plural: !1,
                    selections: [Pd],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "User",
                    kind: "LinkedField",
                    name: "recipient",
                    plural: !1,
                    selections: ld,
                    storageKey: null
                }, ce],
                type: "MessengerRetailShipment",
                abstractKey: null
            }, qf, {
                kind: "InlineFragment",
                selections: [nf, tf, Ne, lf, pb, Jf, Kf, Lf, If, Mf, vf, Nf, uf, Of, wf, Pf, Qf, Pe, Ue, Rf, Sf, Tf, Se, Te, Uf, Vf, Wf, Xf, {
                    alias: null,
                    args: null,
                    concreteType: "AirlineItineraryLegsConnection",
                    kind: "LinkedField",
                    name: "itinerary_legs",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "AirlineItineraryLeg",
                        kind: "LinkedField",
                        name: "nodes",
                        plural: !0,
                        selections: [Yf, {
                            alias: null,
                            args: null,
                            concreteType: "AirlineItinerarySegmentsConnection",
                            kind: "LinkedField",
                            name: "segments",
                            plural: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: "AirlineItinerarySegmentMessageAttachment",
                                kind: "LinkedField",
                                name: "nodes",
                                plural: !0,
                                selections: [mf, hf],
                                storageKey: null
                            }],
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "AirlineItineraryMessageAttachment",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, T, jf, b, of ],
                type: "LeadGenDeepLinkData",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, rf, H, {
                    alias: null,
                    args: null,
                    concreteType: "Event",
                    kind: "LinkedField",
                    name: "event",
                    plural: !1,
                    selections: [a, b, Kd, {
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "event_place",
                        plural: !1,
                        selections: [Zf],
                        storageKey: null
                    }, $f, {
                        alias: null,
                        args: null,
                        concreteType: "EventAttendanceConfig",
                        kind: "LinkedField",
                        name: "attendance_config",
                        plural: !1,
                        selections: [cg],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "EventAttendanceConfirmation",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, cc],
                type: "UserLeadGenInfo",
                abstractKey: null
            }, dg, {
                kind: "InlineFragment",
                selections: [a, b, eg, l, Za, $a],
                type: "WECMessageFile",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, u, Ya, Za, $a, F, p, fg, q],
                type: "WECMessageVideo",
                abstractKey: null
            }, hg, {
                kind: "InlineFragment",
                selections: [a, Za, lg, og],
                type: "WECMessageImage",
                abstractKey: null
            }, pg, {
                kind: "InlineFragment",
                selections: [a, qg, rg, sg, tg, ug, vg, wg],
                type: "MentorshipMessengerCurriculumStep",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, xg],
                type: "MentorshipMessengerDiscussionTopicSet",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, {
                    alias: null,
                    args: null,
                    concreteType: "MentorshipProgram",
                    kind: "LinkedField",
                    name: "mentorship_program",
                    plural: !1,
                    selections: [a, {
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "other_member",
                        plural: !1,
                        selections: yg,
                        storageKey: null
                    }],
                    storageKey: null
                }, zg],
                type: "MentorshipMessengerLeavePrompt",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, zg, Ag, Bg, Cg],
                type: "MentorshipMessengerSurvey",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, zg],
                type: "MentorshipMessengerReminder",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, zg, Ag, Dg],
                type: "MentorshipMessengerProgressTracker",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [Eg, {
                    alias: null,
                    args: null,
                    concreteType: "ComposedBlockWithEntities",
                    kind: "LinkedField",
                    name: "message_richtext",
                    plural: !0,
                    selections: [Fg, Gg, Hg, {
                        alias: null,
                        args: null,
                        concreteType: "ComposedEntityAtRange",
                        kind: "LinkedField",
                        name: "entity_ranges",
                        plural: !0,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: null,
                            kind: "LinkedField",
                            name: "entity",
                            plural: !1,
                            selections: [E],
                            storageKey: null
                        }, B, V],
                        storageKey: null
                    }, Ig, e],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "Feedback",
                    kind: "LinkedField",
                    name: "feedback",
                    plural: !1,
                    selections: [Jg, Kg, Lg, {
                        alias: null,
                        args: ag,
                        concreteType: "TopReactionsConnection",
                        kind: "LinkedField",
                        name: "top_reactions",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "FeedbackReactionInfo",
                            kind: "LinkedField",
                            name: "nodes",
                            plural: !0,
                            selections: [Mg],
                            storageKey: null
                        }],
                        storageKey: 'top_reactions(first:3,orderby:["COUNT_DESC","REACTION_TYPE"])'
                    }],
                    storageKey: null
                }, Ng, Lb, Og, Sg, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "to",
                    plural: !1,
                    selections: [E, b, Pg, Rg],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "StoryAttachment",
                    kind: "LinkedField",
                    name: "attachments",
                    plural: !0,
                    selections: [za, o, ya, g, W, Ug, {
                        alias: null,
                        args: bg,
                        concreteType: "SubattachmentsConnection",
                        kind: "LinkedField",
                        name: "all_subattachments",
                        plural: !1,
                        selections: [X, {
                            alias: "files",
                            args: Vg,
                            concreteType: "StoryAttachment",
                            kind: "LinkedField",
                            name: "nodes",
                            plural: !0,
                            selections: [Ug, Wg],
                            storageKey: 'nodes(if_style:"file_upload")'
                        }, {
                            alias: "images",
                            args: Xg,
                            concreteType: "StoryAttachment",
                            kind: "LinkedField",
                            name: "nodes",
                            plural: !0,
                            selections: [Wg],
                            storageKey: 'nodes(if_style:"photo")'
                        }],
                        storageKey: "all_subattachments(first:3)"
                    }],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "Story",
                    kind: "LinkedField",
                    name: "attached_story",
                    plural: !1,
                    selections: [Yg, Zg, {
                        alias: null,
                        args: null,
                        concreteType: "StoryAttachment",
                        kind: "LinkedField",
                        name: "attachments",
                        plural: !0,
                        selections: [W],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "Story",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, b, G, ah, ch, dh],
                type: "User",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, b, eh, f, fh, ah, gh, {
                    alias: null,
                    args: null,
                    concreteType: "GroupsSyncMetadata",
                    kind: "LinkedField",
                    name: "work_groups_sync_metadata",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "messenger_group",
                        plural: !1,
                        selections: d,
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "Group",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, hh, ih, jh, {
                    alias: null,
                    args: null,
                    concreteType: "AppIntegration",
                    kind: "LinkedField",
                    name: "app_integration",
                    plural: !1,
                    selections: [kh, b, lh, mh],
                    storageKey: null
                }, nh, oh, {
                    alias: null,
                    args: null,
                    concreteType: "AppContentAdditionalData",
                    kind: "LinkedField",
                    name: "link_preview_additional_data",
                    plural: !0,
                    selections: [i, e, kb, Ta, ph, {
                        alias: null,
                        args: null,
                        concreteType: "User",
                        kind: "LinkedField",
                        name: "profiles",
                        plural: !0,
                        selections: [G, b],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "AppContent",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: d,
                type: "OfferItem",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [y],
                type: "CommerceProductItemShare",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [a, qh],
                type: "ApplicationReferralXMA",
                abstractKey: null
            }, rh, th],
            storageKey: null
        };
        Hb = {
            alias: null,
            args: null,
            concreteType: "StoryAttachment",
            kind: "LinkedField",
            name: "story_attachment",
            plural: !1,
            selections: [g, j, xa, ya, za, Aa, Ba, Ca, Da, Ea, Fa, D, Wa, N, {
                alias: null,
                args: null,
                concreteType: "StoryAttachment",
                kind: "LinkedField",
                name: "subattachments",
                plural: !0,
                selections: [g, j, xa, ya, za, Aa, Ba, Ca, Da, Ea, Fa, D, Wa, N],
                storageKey: null
            }],
            storageKey: null
        };
        O = {
            kind: "InlineFragment",
            selections: d,
            type: "Node",
            abstractKey: "__isNode"
        };
        Kb = {
            alias: null,
            args: null,
            concreteType: "ExtensibleMessageAttachment",
            kind: "LinkedField",
            name: "extensible_attachment",
            plural: !1,
            selections: [pa, Hb, {
                alias: "genie_attachment",
                args: null,
                concreteType: "StoryAttachment",
                kind: "LinkedField",
                name: "story_attachment",
                plural: !1,
                selections: [{
                    alias: "genie_message",
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "target",
                    plural: !1,
                    selections: [{
                        kind: "InlineFragment",
                        selections: [a, {
                            alias: null,
                            args: null,
                            concreteType: "MessagingParticipant",
                            kind: "LinkedField",
                            name: "genie_sender",
                            plural: !1,
                            selections: [a, {
                                alias: null,
                                args: null,
                                concreteType: null,
                                kind: "LinkedField",
                                name: "messaging_actor",
                                plural: !1,
                                selections: [O, b],
                                storageKey: null
                            }],
                            storageKey: null
                        }, Hb],
                        type: "GenieMessage",
                        abstractKey: null
                    }],
                    storageKey: null
                }],
                storageKey: null
            }],
            storageKey: null
        };
        K = {
            alias: null,
            args: null,
            concreteType: "Sticker",
            kind: "LinkedField",
            name: "sticker",
            plural: !1,
            selections: ra,
            storageKey: null
        };
        C = {
            kind: "Literal",
            name: "sizing",
            value: "cover-fill"
        };
        P = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "projection_type",
            storageKey: null
        };
        Ae = {
            kind: "InlineFragment",
            selections: [Xb, Yb, F, {
                alias: "preview",
                args: [ig, C, jg],
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: r,
                storageKey: 'image(height:280,sizing:"cover-fill",width:280)'
            }, {
                alias: "large_preview",
                args: [mg, C, ng],
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: r,
                storageKey: 'image(height:480,sizing:"cover-fill",width:480)'
            }, {
                alias: "thumbnail",
                args: [{
                    kind: "Literal",
                    name: "height",
                    value: 38
                }, {
                    kind: "Literal",
                    name: "width",
                    value: 58
                }],
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: m,
                storageKey: "image(height:38,width:58)"
            }, {
                alias: null,
                args: null,
                concreteType: "PhotoEncoding",
                kind: "LinkedField",
                name: "photo_encodings",
                plural: !0,
                selections: [a, q, p, P, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "cdn_uri",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "max_tile_level",
                    storageKey: null
                }, {
                    alias: null,
                    args: [{
                        kind: "Literal",
                        name: "thumbnail_dimensions",
                        value: [{
                            height: 280,
                            width: 280
                        }, {
                            height: 480,
                            width: 480
                        }]
                    }],
                    concreteType: "SphericalPhotoThumbnail",
                    kind: "LinkedField",
                    name: "thumbnails",
                    plural: !0,
                    selections: Af,
                    storageKey: 'thumbnails(thumbnail_dimensions:[{"height":280,"width":280},{"height":480,"width":480}])'
                }, {
                    alias: null,
                    args: [{
                        kind: "Literal",
                        name: "tile_levels",
                        value: [0]
                    }],
                    concreteType: "PhotoTile",
                    kind: "LinkedField",
                    name: "tiles",
                    plural: !0,
                    selections: [{
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "level",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "face",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "col",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "row",
                        storageKey: null
                    }, l],
                    storageKey: "tiles(tile_levels:[0])"
                }, {
                    alias: null,
                    args: null,
                    concreteType: "PhotosphereMetadata",
                    kind: "LinkedField",
                    name: "spherical_metadata",
                    plural: !1,
                    selections: [P, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "full_pano_width_pixels",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "full_pano_height_pixels",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "cropped_area_image_width_pixels",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "cropped_area_image_height_pixels",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "cropped_area_left_pixels",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "cropped_area_top_pixels",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "initial_view_heading_degrees",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "initial_view_pitch_degrees",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "initial_view_vertical_fov_degrees",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "initial_view_roll_degrees",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "pose_heading_degrees",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "pose_pitch_degrees",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "pose_roll_degrees",
                        storageKey: null
                    }],
                    storageKey: null
                }],
                storageKey: null
            }, pa, $b, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "original_extension",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "render_as_sticker",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "blurred_image_uri",
                storageKey: null
            }],
            type: "MessageImage",
            abstractKey: null
        };
        Je = {
            kind: "InlineFragment",
            selections: [Xb, Yb, F, Vb, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "animated_image_caption",
                storageKey: null
            }, pa, Ub, $b],
            type: "MessageAnimatedImage",
            abstractKey: null
        };
        Q = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "url_skipshim",
            storageKey: null
        };
        yg = {
            kind: "InlineFragment",
            selections: [Xb, Yb, F, u, t, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_voicemail",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "audio_type",
                storageKey: null
            }, Ya, Q],
            type: "MessageAudio",
            abstractKey: null
        };
        Wg = {
            kind: "InlineFragment",
            selections: [Xb, Yb, F, o, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "mimetype",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "content_type",
                storageKey: null
            }, eg, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "message_file_fbid",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "preview_url",
                storageKey: null
            }, Ya, Q, {
                alias: "preview",
                args: null,
                concreteType: "Image",
                kind: "LinkedField",
                name: "image",
                plural: !1,
                selections: m,
                storageKey: null
            }],
            type: "MessageFile",
            abstractKey: null
        };
        W = [E, Ae, Je, yg, Zb, Wg];
        ah = {
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "blob_attachments",
            plural: !0,
            selections: W,
            storageKey: null
        };
        y = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "extensible_message_admin_text_type",
            storageKey: null
        };
        xa = {
            alias: null,
            args: null,
            concreteType: "Application",
            kind: "LinkedField",
            name: "game",
            plural: !1,
            selections: d,
            storageKey: null
        };
        Ea = {
            kind: "InlineFragment",
            selections: [xa],
            type: "InstantGameUpdateExtensibleMessageAdminText",
            abstractKey: null
        };
        D = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "platform_xmd_encoded",
            storageKey: null
        };
        N = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "message_unsendability_status",
            storageKey: null
        };
        Hb = {
            alias: null,
            args: null,
            concreteType: "ThreadConnectivityData",
            kind: "LinkedField",
            name: "thread_connectivity_data",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "connectivity_status",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "first_sender_id",
                storageKey: null
            }],
            storageKey: null
        };
        ra = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "job_status",
            storageKey: null
        };
        ig = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "should_show_jobs_feature",
            storageKey: null
        };
        jg = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "should_show_schdule_interview_dialog",
            storageKey: null
        };
        mg = {
            alias: null,
            args: null,
            concreteType: "User",
            kind: "LinkedField",
            name: "thread_associated_page_admin",
            plural: !1,
            selections: Cc,
            storageKey: null
        };
        C = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "unread_count",
            storageKey: null
        };
        ng = {
            condition: "is_work_teamwork_not_putting_muted_in_unreads",
            kind: "Condition",
            passingValue: !0,
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "unread_mentions_count",
                storageKey: null
            }]
        };
        r = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "messages_count",
            storageKey: null
        };
        Af = {
            alias: null,
            args: [{
                kind: "Literal",
                name: "size",
                value: 60
            }],
            concreteType: "Image",
            kind: "LinkedField",
            name: "square_image",
            plural: !1,
            selections: m,
            storageKey: "square_image(size:60)"
        };
        P = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "updated_time_precise",
            storageKey: null
        };
        Vb = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "mute_until",
            storageKey: null
        };
        Ub = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "is_pin_protected",
            storageKey: null
        };
        Xb = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "is_pinned",
            storageKey: null
        };
        Yb = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "is_viewer_subscribed",
            storageKey: null
        };
        Q = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "is_other_recipient_page",
            storageKey: null
        };
        Cc = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "thread_queue_enabled",
            storageKey: null
        };
        var uh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "folder",
                storageKey: null
            },
            vh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "has_viewer_archived",
                storageKey: null
            },
            wh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_page_follow_up",
                storageKey: null
            },
            xh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_page_unresponded_thread",
                storageKey: null
            },
            yh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "cannot_reply_reason",
                storageKey: null
            },
            zh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "can_viewer_report",
                storageKey: null
            },
            Ah = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "composer_input_disabled",
                storageKey: null
            },
            Bh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "ephemeral_ttl_mode",
                storageKey: null
            },
            Ch = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "emoji",
                storageKey: null
            },
            Dh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "participant_id",
                storageKey: null
            },
            Eh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "nickname",
                storageKey: null
            },
            Fh = {
                alias: null,
                args: null,
                concreteType: "MessageThreadParticipantCustomization",
                kind: "LinkedField",
                name: "participant_customizations",
                plural: !0,
                selections: [Dh, Eh],
                storageKey: null
            },
            Gh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "outgoing_bubble_color",
                storageKey: null
            },
            Hh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "fallback_color",
                storageKey: null
            },
            Ih = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "accessibility_label",
                storageKey: null
            },
            Jh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "reverse_gradients_for_radial",
                storageKey: null
            },
            Kh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "gradient_colors",
                storageKey: null
            },
            Lh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "keyframe_asset_uri",
                storageKey: null
            },
            Mh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "reaction_name",
                storageKey: null
            },
            Nh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "reaction_emoji",
                storageKey: null
            },
            Oh = {
                alias: null,
                args: null,
                concreteType: "Image",
                kind: "LinkedField",
                name: "static_asset",
                plural: !1,
                selections: m,
                storageKey: null
            },
            Ph = {
                alias: "approval_mode",
                args: null,
                kind: "ScalarField",
                name: "group_approval_mode",
                storageKey: null
            },
            Qh = {
                alias: null,
                args: null,
                concreteType: "MessageThreadJoinableMode",
                kind: "LinkedField",
                name: "joinable_mode",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "mode",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "link",
                    storageKey: null
                }],
                storageKey: null
            },
            Rh = {
                alias: null,
                args: null,
                concreteType: "GroupApprovalQueueConnection",
                kind: "LinkedField",
                name: "group_approval_queue",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "MessengerGroupRequesterInfo",
                    kind: "LinkedField",
                    name: "nodes",
                    plural: !0,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "User",
                        kind: "LinkedField",
                        name: "requester",
                        plural: !1,
                        selections: d,
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "User",
                        kind: "LinkedField",
                        name: "inviter",
                        plural: !1,
                        selections: d,
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "request_source",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "request_timestamp",
                        storageKey: null
                    }],
                    storageKey: null
                }],
                storageKey: null
            },
            Sh = [{
                alias: null,
                args: null,
                concreteType: "User",
                kind: "LinkedField",
                name: "nodes",
                plural: !0,
                selections: d,
                storageKey: null
            }],
            Th = {
                alias: null,
                args: null,
                concreteType: "ApprovalRequestsOfThreadConnection",
                kind: "LinkedField",
                name: "approval_requests",
                plural: !1,
                selections: Sh,
                storageKey: null
            },
            Uh = {
                alias: null,
                args: null,
                concreteType: "User",
                kind: "LinkedField",
                name: "lightweight_event_creator",
                plural: !1,
                selections: d,
                storageKey: null
            },
            Vh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "lightweight_event_type",
                storageKey: null
            },
            Wh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "location_name",
                storageKey: null
            };
        gc = {
            alias: null,
            args: null,
            concreteType: "Location",
            kind: "LinkedField",
            name: "location_coordinates",
            plural: !1,
            selections: gc,
            storageKey: null
        };
        var Xh = {
                alias: null,
                args: null,
                concreteType: "StreetAddress",
                kind: "LinkedField",
                name: "address",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "full_address",
                    storageKey: null
                }],
                storageKey: null
            },
            Yh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "lightweight_event_status",
                storageKey: null
            },
            Zh = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "note",
                storageKey: null
            },
            $h = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "repeat_mode",
                storageKey: null
            },
            Y = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "message_id",
                storageKey: null
            },
            ai = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "seconds_to_notify_before",
                storageKey: null
            },
            bi = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "allows_rsvp",
                storageKey: null
            },
            ci = {
                alias: null,
                args: null,
                concreteType: "Event",
                kind: "LinkedField",
                name: "related_event",
                plural: !1,
                selections: d,
                storageKey: null
            },
            di = {
                alias: null,
                args: null,
                concreteType: "MessengerEventReminderMembersConnection",
                kind: "LinkedField",
                name: "event_reminder_members",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "MessengerEventReminderMembersEdge",
                    kind: "LinkedField",
                    name: "edges",
                    plural: !0,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "User",
                        kind: "LinkedField",
                        name: "node",
                        plural: !1,
                        selections: d,
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "guest_list_state",
                        storageKey: null
                    }],
                    storageKey: null
                }],
                storageKey: null
            },
            ei = {
                alias: null,
                args: null,
                concreteType: "MessageThread",
                kind: "LinkedField",
                name: "montage_thread",
                plural: !1,
                selections: d,
                storageKey: null
            },
            fi = [na],
            gi = {
                alias: "last_read_receipt",
                args: ma,
                concreteType: "MessagingReadReceiptsOfThreadConnection",
                kind: "LinkedField",
                name: "read_receipts",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "MessagingReadReceipt",
                    kind: "LinkedField",
                    name: "nodes",
                    plural: !0,
                    selections: fi,
                    storageKey: null
                }],
                storageKey: "read_receipts(last:1)"
            },
            hi = {
                alias: "is_flagged",
                args: [{
                    kind: "Literal",
                    name: "page_message_tag",
                    value: "FLAG"
                }],
                kind: "ScalarField",
                name: "has_tag",
                storageKey: 'has_tag(page_message_tag:"FLAG")'
            },
            ii = [a, b, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "label_color",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "data_silo",
                storageKey: null
            }],
            ji = {
                alias: null,
                args: null,
                concreteType: "PageMessageThreadCustomThreadLabelsConnection",
                kind: "LinkedField",
                name: "custom_thread_labels",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "BusinessPresenceCustomLabel",
                    kind: "LinkedField",
                    name: "nodes",
                    plural: !0,
                    selections: ii,
                    storageKey: null
                }],
                storageKey: null
            },
            ki = {
                alias: null,
                args: null,
                concreteType: "PageMessageThreadCustomTagsConnection",
                kind: "LinkedField",
                name: "custom_thread_tags",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "PageCustomTag",
                    kind: "LinkedField",
                    name: "nodes",
                    plural: !0,
                    selections: [a, b, kb],
                    storageKey: null
                }],
                storageKey: null
            };
        ii = {
            alias: null,
            args: null,
            concreteType: "PageMessageThreadCorpThreadLabelsConnection",
            kind: "LinkedField",
            name: "corp_thread_labels",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                concreteType: "BusinessPresenceCorporationLabel",
                kind: "LinkedField",
                name: "nodes",
                plural: !0,
                selections: ii,
                storageKey: null
            }],
            storageKey: null
        };
        var li = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "call_state",
                storageKey: null
            },
            mi = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "server_info_data",
                storageKey: null
            };
        R = {
            alias: null,
            args: null,
            concreteType: "Location",
            kind: "LinkedField",
            name: "location",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                concreteType: "ReverseGeocodeData",
                kind: "LinkedField",
                name: "reverse_geocode",
                plural: !1,
                selections: [R, Xd],
                storageKey: null
            }],
            storageKey: null
        };
        Xd = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "inventory_count",
            storageKey: null
        };
        var ni = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "delivery_types",
                storageKey: null
            },
            oi = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "c2c_shipping_eligible",
                storageKey: null
            },
            pi = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_pending",
                storageKey: null
            },
            qi = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_shipping_offered",
                storageKey: null
            },
            ri = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_sold",
                storageKey: null
            },
            si = {
                alias: null,
                args: null,
                concreteType: "ProductItem",
                kind: "LinkedField",
                name: "product_item",
                plural: !1,
                selections: [a, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "is_commerce_post_item",
                    storageKey: null
                }],
                storageKey: null
            },
            ti = {
                alias: null,
                args: [{
                    kind: "Literal",
                    name: "site",
                    value: "www"
                }],
                kind: "ScalarField",
                name: "url",
                storageKey: 'url(site:"www")'
            },
            ui = {
                alias: null,
                args: null,
                concreteType: "MarketplaceRatingState",
                kind: "LinkedField",
                name: "rating_state",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "is_eligible_to_rate",
                    storageKey: null
                }],
                storageKey: null
            },
            vi = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_eligible",
                storageKey: null
            },
            wi = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "MarketplaceC2CShippingSeller",
                    kind: "LinkedField",
                    name: "marketplace_c2c_shipping_seller",
                    plural: !1,
                    selections: [vi],
                    storageKey: null
                }],
                type: "User",
                abstractKey: null
            },
            xi = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "label_type",
                storageKey: null
            },
            yi = {
                alias: null,
                args: null,
                concreteType: "MarketplaceThreadLabel",
                kind: "LinkedField",
                name: "seller_added_labels",
                plural: !0,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "label_string",
                    storageKey: null
                }, xi],
                storageKey: null
            },
            zi = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "eligible_profile_selling_invoice_actions",
                storageKey: null
            },
            Ai = {
                alias: "action_link",
                args: null,
                kind: "ScalarField",
                name: "url",
                storageKey: null
            },
            Bi = {
                alias: "room_type",
                args: null,
                kind: "ScalarField",
                name: "time_spent_room_type",
                storageKey: null
            },
            Ci = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "privacy_mode",
                storageKey: null
            },
            Di = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "approval_mode_toggleable",
                storageKey: null
            },
            Ei = {
                alias: null,
                args: null,
                concreteType: "MentorshipProgram",
                kind: "LinkedField",
                name: "mentorship_program",
                plural: !1,
                selections: fd,
                storageKey: null
            },
            Fi = {
                alias: null,
                args: null,
                concreteType: "GroupSavesConnection",
                kind: "LinkedField",
                name: "group_saves",
                plural: !1,
                selections: [X],
                storageKey: null
            },
            Gi = {
                alias: null,
                args: [{
                    kind: "Literal",
                    name: "external_ref",
                    value: "messenger"
                }],
                kind: "ScalarField",
                name: "verse_group_link",
                storageKey: 'verse_group_link(external_ref:"messenger")'
            },
            Hi = {
                kind: "InlineFragment",
                selections: [b, Be],
                type: "Page",
                abstractKey: null
            },
            Ii = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "reactions_mute_mode",
                storageKey: null
            },
            Ji = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "mentions_mute_mode",
                storageKey: null
            },
            Ki = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "customization_enabled",
                storageKey: null
            },
            Li = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "thread_type",
                storageKey: null
            },
            Mi = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "group_thread_subtype",
                storageKey: null
            },
            Ni = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "participant_add_mode_as_string",
                storageKey: null
            },
            Oi = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_canonical_neo_user",
                storageKey: null
            };
        Dh = {
            alias: null,
            args: null,
            concreteType: "MessageThreadParticipantEventStatusInfo",
            kind: "LinkedField",
            name: "participants_event_status",
            plural: !0,
            selections: [Dh, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "event_status",
                storageKey: null
            }],
            storageKey: null
        };
        var Pi = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "comm_status",
                storageKey: null
            },
            Qi = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "comm_source_id",
                storageKey: null
            },
            Ri = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_priority",
                storageKey: null
            },
            Si = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "biz_inbox_tags",
                storageKey: null
            },
            Ti = {
                alias: null,
                args: null,
                concreteType: "User",
                kind: "LinkedField",
                name: "admin",
                plural: !1,
                selections: [a, b, {
                    alias: null,
                    args: [{
                        kind: "Literal",
                        name: "height",
                        value: 20
                    }, {
                        kind: "Literal",
                        name: "width",
                        value: 20
                    }],
                    concreteType: "Image",
                    kind: "LinkedField",
                    name: "profile_picture",
                    plural: !1,
                    selections: m,
                    storageKey: "profile_picture(height:20,width:20)"
                }],
                storageKey: null
            },
            Ui = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "comm_icon_type",
                storageKey: null
            },
            Vi = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "admin_model_status_string",
                storageKey: null
            },
            Wi = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "groups_sync_status_string",
                storageKey: null
            },
            Xi = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "pinning_time",
                storageKey: null
            },
            Yi = {
                alias: null,
                args: null,
                concreteType: "OmniMActionLite",
                kind: "LinkedField",
                name: "m_suggestions",
                plural: !0,
                selections: [a, k, h, {
                    alias: null,
                    args: null,
                    concreteType: "OmniMActionDataLite",
                    kind: "LinkedField",
                    name: "data",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "OmniMActionReminderDataLite",
                        kind: "LinkedField",
                        name: "reminder",
                        plural: !1,
                        selections: [ph, {
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "topic",
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    storageKey: null
                }, ec],
                storageKey: null
            },
            Zi = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "offline_threading_id",
                storageKey: null
            },
            $i = {
                alias: null,
                args: null,
                concreteType: "MessagingParticipant",
                kind: "LinkedField",
                name: "message_sender",
                plural: !1,
                selections: [a, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "email",
                    storageKey: null
                }],
                storageKey: null
            },
            aj = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "ttl",
                storageKey: null
            },
            bj = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "unread",
                storageKey: null
            },
            cj = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_sponsored",
                storageKey: null
            },
            dj = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "ad_client_token",
                storageKey: null
            },
            ej = {
                alias: null,
                args: null,
                concreteType: "MessageCustomization",
                kind: "LinkedField",
                name: "customizations",
                plural: !0,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "customization_type",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "customization_value",
                    storageKey: null
                }],
                storageKey: null
            },
            fj = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "tags_list",
                storageKey: null
            },
            gj = {
                alias: null,
                args: null,
                concreteType: "MessageSourceData",
                kind: "LinkedField",
                name: "message_source_data",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "message_source",
                    storageKey: null
                }],
                storageKey: null
            },
            hj = {
                alias: null,
                args: null,
                concreteType: "MontageReplyData",
                kind: "LinkedField",
                name: "montage_reply_data",
                plural: !1,
                selections: [Y, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "reply_action",
                    storageKey: null
                }, c],
                storageKey: null
            },
            ij = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "reaction",
                storageKey: null
            },
            jj = {
                alias: null,
                args: null,
                concreteType: "MessageReaction",
                kind: "LinkedField",
                name: "message_reactions",
                plural: !0,
                selections: [ij, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "user",
                    plural: !1,
                    selections: d,
                    storageKey: null
                }],
                storageKey: null
            },
            kj = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "unsent_timestamp_precise",
                storageKey: null
            },
            lj = {
                alias: null,
                args: null,
                concreteType: "MessagingParticipant",
                kind: "LinkedField",
                name: "unsender",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "messaging_actor",
                    plural: !1,
                    selections: [a, b, Pg],
                    storageKey: null
                }],
                storageKey: null
            },
            mj = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "verse_group_role_xmd",
                storageKey: null
            },
            nj = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "secondary_language_body",
                storageKey: null
            },
            oj = {
                kind: "InlineFragment",
                selections: d,
                type: "Profile",
                abstractKey: "__isProfile"
            },
            pj = {
                kind: "InlineFragment",
                selections: d,
                type: "MessengerViewerGroupThread",
                abstractKey: null
            };
        ka = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                concreteType: "MessageThreadKey",
                kind: "LinkedField",
                name: "thread_key",
                plural: !1,
                selections: [ka],
                storageKey: null
            }],
            type: "MessageThread",
            abstractKey: null
        };
        var qj = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "message_profile_range_type",
                storageKey: null
            },
            rj = {
                alias: null,
                args: null,
                concreteType: "MetaAtRange",
                kind: "LinkedField",
                name: "meta_ranges",
                plural: !0,
                selections: [B, V, h, Gg],
                storageKey: null
            };
        xi = {
            alias: null,
            args: null,
            concreteType: "MessagePageAdminSender",
            kind: "LinkedField",
            name: "page_admin_sender",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "admin_id",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "sender_type",
                storageKey: null
            }, b, xi, z, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "profile_uri",
                storageKey: null
            }],
            storageKey: null
        };
        var sj = {
                kind: "InlineFragment",
                selections: [nj, {
                    alias: null,
                    args: null,
                    concreteType: "TextWithEntities",
                    kind: "LinkedField",
                    name: "message",
                    plural: !1,
                    selections: [e, {
                        alias: null,
                        args: null,
                        concreteType: "EntityAtRange",
                        kind: "LinkedField",
                        name: "ranges",
                        plural: !0,
                        selections: [B, V, {
                            alias: null,
                            args: null,
                            concreteType: null,
                            kind: "LinkedField",
                            name: "entity",
                            plural: !1,
                            selections: [E, oj, pj, ka],
                            storageKey: null
                        }, qj],
                        storageKey: null
                    }],
                    storageKey: null
                }, rj, Kb, K, ah, xi],
                type: "UserMessage",
                abstractKey: null
            },
            tj = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "answered",
                storageKey: null
            },
            uj = {
                kind: "InlineFragment",
                selections: [tj, c],
                type: "VoiceCallMessage",
                abstractKey: null
            };
        W = [{
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "node",
            plural: !1,
            selections: W,
            storageKey: null
        }];
        var vj = {
                kind: "InlineFragment",
                selections: [tj, c, {
                    alias: null,
                    args: null,
                    concreteType: "VideoCallMessageToCaptureAttachmentsConnection",
                    kind: "LinkedField",
                    name: "call_capture_attachments",
                    plural: !1,
                    selections: [X, {
                        alias: null,
                        args: null,
                        concreteType: "VideoCallMessageToCaptureAttachmentsEdge",
                        kind: "LinkedField",
                        name: "edges",
                        plural: !0,
                        selections: W,
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "VideoCallMessage",
                abstractKey: null
            },
            wj = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "thread_name",
                    storageKey: null
                }, c],
                type: "ThreadNameMessage",
                abstractKey: null
            };
        kg = {
            alias: "preview",
            args: kg,
            concreteType: "Image",
            kind: "LinkedField",
            name: "image",
            plural: !1,
            selections: m,
            storageKey: "image(height:280,width:280)"
        };
        var xj = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "MessageImage",
                    kind: "LinkedField",
                    name: "image_with_metadata",
                    plural: !1,
                    selections: [kg, pa, $b],
                    storageKey: null
                }, c],
                type: "ThreadImageMessage",
                abstractKey: null
            },
            yj = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "MessagingParticipant",
                    kind: "LinkedField",
                    name: "participants_added",
                    plural: !0,
                    selections: d,
                    storageKey: null
                }, c],
                type: "ParticipantsAddedMessage",
                abstractKey: null
            },
            zj = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "MessagingParticipant",
                    kind: "LinkedField",
                    name: "participants_removed",
                    plural: !0,
                    selections: d,
                    storageKey: null
                }, c],
                type: "ParticipantLeftMessage",
                abstractKey: null
            },
            Aj = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "viewer_has_voted",
                storageKey: null
            };
        Aj = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "event_type",
                storageKey: null
            }, {
                alias: "total_count",
                args: null,
                kind: "ScalarField",
                name: "option_count",
                storageKey: null
            }, {
                alias: null,
                args: null,
                concreteType: "Question",
                kind: "LinkedField",
                name: "question",
                plural: !1,
                selections: [a, e, Aj, {
                    alias: null,
                    args: [{
                        kind: "Literal",
                        name: "orderby",
                        value: "creation_time"
                    }],
                    concreteType: "QuestionOptionsConnection",
                    kind: "LinkedField",
                    name: "options",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "QuestionOption",
                        kind: "LinkedField",
                        name: "nodes",
                        plural: !0,
                        selections: [a, e, Aj, {
                            alias: null,
                            args: null,
                            concreteType: "QuestionOptionVotersConnection",
                            kind: "LinkedField",
                            name: "voters",
                            plural: !1,
                            selections: Sh,
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    storageKey: 'options(orderby:"creation_time")'
                }],
                storageKey: null
            }],
            type: "GroupPollExtensibleMessageAdminText",
            abstractKey: null
        };
        Sh = {
            alias: null,
            args: null,
            concreteType: "MessengerEventReminder",
            kind: "LinkedField",
            name: "event_reminder",
            plural: !1,
            selections: [a, Ie, He, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "end_time",
                storageKey: null
            }, Wh, Vh, bi, ai, Uh, {
                alias: null,
                args: null,
                concreteType: "Page",
                kind: "LinkedField",
                name: "location_page",
                plural: !1,
                selections: d,
                storageKey: null
            }, gc, {
                alias: null,
                args: null,
                concreteType: "TimezoneInfo",
                kind: "LinkedField",
                name: "timezone_id",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "display_name",
                    storageKey: null
                }, U, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "timezone_id",
                    storageKey: null
                }],
                storageKey: null
            }, di],
            storageKey: null
        };
        U = [Sh];
        var Bj = {
                kind: "InlineFragment",
                selections: U,
                type: "LightweightEventCreateExtensibleMessageAdminText",
                abstractKey: null
            },
            Cj = {
                kind: "InlineFragment",
                selections: U,
                type: "LightweightEventDeleteExtensibleMessageAdminText",
                abstractKey: null
            },
            Dj = {
                kind: "InlineFragment",
                selections: U,
                type: "LightweightEventNotifyBeforeEventExtensibleMessageAdminText",
                abstractKey: null
            },
            Ej = {
                kind: "InlineFragment",
                selections: U,
                type: "LightweightEventNotifyExtensibleMessageAdminText",
                abstractKey: null
            },
            Fj = {
                kind: "InlineFragment",
                selections: U,
                type: "LightweightEventUpdateExtensibleMessageAdminText",
                abstractKey: null
            },
            Gj = {
                kind: "InlineFragment",
                selections: U,
                type: "LightweightEventUpdateLocationExtensibleMessageAdminText",
                abstractKey: null
            },
            Hj = {
                kind: "InlineFragment",
                selections: U,
                type: "LightweightEventUpdateTimeExtensibleMessageAdminText",
                abstractKey: null
            };
        U = {
            kind: "InlineFragment",
            selections: U,
            type: "LightweightEventUpdateTitleExtensibleMessageAdminText",
            abstractKey: null
        };
        Sh = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "guest_id",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "guest_status",
                storageKey: null
            }, Sh],
            type: "LightweightEventRSVPExtensibleMessageAdminText",
            abstractKey: null
        };
        var Ij = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "theme_color",
                    storageKey: null
                }],
                type: "ThemeColorExtensibleMessageAdminText",
                abstractKey: null
            },
            Jj = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "thread_icon",
                    storageKey: null
                }],
                type: "ThreadIconExtensibleMessageAdminText",
                abstractKey: null
            };
        Eh = {
            kind: "InlineFragment",
            selections: [Eh, {
                alias: "participant_id",
                args: null,
                kind: "ScalarField",
                name: "target_id",
                storageKey: null
            }],
            type: "ThreadNicknameExtensibleMessageAdminText",
            abstractKey: null
        };
        var Kj = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "accepter_id",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "requester_id",
                    storageKey: null
                }],
                type: "AcceptPendingThreadExtensibleMessageAdminText",
                abstractKey: null
            },
            Lj = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "contact_added_id",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "contact_adder_id",
                    storageKey: null
                }],
                type: "AddContactExtensibleMessageAdminText",
                abstractKey: null
            },
            Mj = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "event",
                storageKey: null
            },
            Nj = {
                kind: "InlineFragment",
                selections: [Mj, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "is_video_call",
                    storageKey: null
                }, mi],
                type: "RtcCallLogExtensibleMessageAdminText",
                abstractKey: null
            },
            Oj = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "collapsed_text",
                storageKey: null
            },
            Pj = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "expanded_text",
                storageKey: null
            },
            Qj = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "cta_url",
                storageKey: null
            },
            Rj = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "template",
                storageKey: null
            },
            Sj = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "leaderboard_json",
                storageKey: null
            },
            Tj = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "game_type",
                    storageKey: null
                }],
                type: "GameScoreExtensibleMessageAdminText",
                abstractKey: null
            },
            Uj = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "parties_user_id",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "parties_invite_type",
                    storageKey: null
                }],
                type: "PartiesInviteExtensibleMessageAdminText",
                abstractKey: null
            },
            Vj = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "icebreaker_type",
                storageKey: null
            },
            Wj = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "icebreaker_title",
                storageKey: null
            },
            Xj = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "icebreaker_subtitle",
                storageKey: null
            },
            Yj = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "vote_buttons_with_icons",
                storageKey: null
            },
            Zj = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "friend_request_recipient",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "friend_request_sender",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "friend_request_subtype",
                    storageKey: null
                }, Vj, Wj, Xj, Yj],
                type: "ConfirmFriendRequestExtensibleMessageAdminText",
                abstractKey: null
            },
            $j = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "bump_type",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "recipient_id",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "sender_id",
                    storageKey: null
                }, i, M, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "icon_uri",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "image_uri",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "facepile_ids",
                    storageKey: null
                }, sh, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "cta_uri",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "admin_message_string",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "banner_uri",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "is_two_way",
                    storageKey: null
                }],
                type: "MessengerGrowthGenericExtensibleMessageAdminText",
                abstractKey: null
            },
            ak = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "submitted_time",
                    storageKey: null
                }],
                type: "BizInboxFormBuilderSubmitNotifyAdminText",
                abstractKey: null
            },
            bk = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "customer_name",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "rating_feedback",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "freeform_feedback",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "instance_id",
                    storageKey: null
                }],
                type: "BizInboxCSATSurveyCustomerSubmitNotifyAdminText",
                abstractKey: null
            },
            ck = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "cta_text",
                storageKey: null
            },
            dk = {
                kind: "InlineFragment",
                selections: [dd, ck, Qj, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "async_url",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "www_is_async_url",
                    storageKey: null
                }],
                type: "LinkCTAExtensibleMessageAdminText",
                abstractKey: null
            },
            ek = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "referer_uri",
                    storageKey: null
                }],
                type: "MessengerLiveChatPluginURLUpdateAdminText",
                abstractKey: null
            },
            fk = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "fb_user_name",
                    storageKey: null
                }],
                type: "MessengerLiveChatPluginFBUserStartChatAdminText",
                abstractKey: null
            };
        ec = {
            kind: "InlineFragment",
            selections: [ec],
            type: "MessengerLiveChatPluginGuestUserStartChatAdminText",
            abstractKey: null
        };
        ck = {
            kind: "InlineFragment",
            selections: [ck, Qj, Y, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "recipient_is_the_sender",
                storageKey: null
            }],
            type: "WorkChatReminderLinkCTAExtensibleMessageAdminText",
            abstractKey: null
        };
        var gk = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "post_uri",
                    storageKey: null
                }],
                type: "PostSharedFromGroupExtensibleMessageAdminText",
                abstractKey: null
            },
            hk = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "ad_url",
                storageKey: null
            },
            ik = {
                kind: "InlineFragment",
                selections: [hk],
                type: "MessengerAdContextAdminText",
                abstractKey: null
            },
            jk = {
                kind: "InlineFragment",
                selections: [dj, gg, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "ad_preferences_link",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "ad_properties",
                    storageKey: null
                }],
                type: "AdExtensibleMessageAdminText",
                abstractKey: null
            },
            kk = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "page_name",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "start_time",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "product_name",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "user_name",
                    storageKey: null
                }],
                type: "AppointmentReminderExtensibleMessageAdminText",
                abstractKey: null
            },
            lk = [z],
            mk = {
                kind: "InlineFragment",
                selections: lk,
                type: "GraphQLServicesAppointmentsOptOutExtensibleMessageAdminText",
                abstractKey: null
            },
            nk = {
                kind: "InlineFragment",
                selections: lk,
                type: "ServicesLeadGenSurveyExtensibleMessageAdminText",
                abstractKey: null
            };
        lk = {
            kind: "InlineFragment",
            selections: lk,
            type: "ServicesLeadGenSurveyEditExtensibleMessageAdminText",
            abstractKey: null
        };
        var ok = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "caller_id",
                storageKey: null
            },
            pk = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "callee_id",
                storageKey: null
            },
            qk = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "conference_name",
                storageKey: null
            },
            rk = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "server_info",
                storageKey: null
            },
            sk = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "video",
                storageKey: null
            },
            tk = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "call_duration",
                storageKey: null
            },
            uk = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "rating",
                storageKey: null
            };
        Vj = {
            kind: "InlineFragment",
            selections: [Vj, Wj, Xj, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "votes_cast",
                storageKey: null
            }, Yj],
            type: "MessengerIcebreakerVoteCastExtensibleMessageAdminText",
            abstractKey: null
        };
        Wj = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "user_id",
            storageKey: null
        };
        Xj = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "currency_code",
            storageKey: null
        };
        Yj = [z, Wj, {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "receipt_photo_id",
            storageKey: null
        }, Xj, {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "detection_type",
            storageKey: null
        }];
        var vk = {
            kind: "InlineFragment",
            selections: Yj,
            type: "PagesMarkAsPaidExtensibleMessageAdminText",
            abstractKey: null
        };
        Yj = {
            kind: "InlineFragment",
            selections: Yj,
            type: "PagesMarkAsPaidNewExtensibleMessageAdminText",
            abstractKey: null
        };
        Wj = {
            kind: "InlineFragment",
            selections: [z, Wj, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "interaction_type",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "interaction_id",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "should_show_cta",
                storageKey: null
            }],
            type: "PageThreadActionSystemAddDetailsXMAT",
            abstractKey: null
        };
        var wk = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                concreteType: "Page",
                kind: "LinkedField",
                name: "bot_page",
                plural: !1,
                selections: d,
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "show_landing_page",
                storageKey: null
            }],
            type: "WorkBotInstalledExtensibleMessageAdminText",
            abstractKey: null
        };
        hk = {
            kind: "InlineFragment",
            selections: [hk, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "should_show_url",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "results_url",
                storageKey: null
            }],
            type: "AdReplyMessageAdminText",
            abstractKey: null
        };
        var xk = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "new_magic_word_count",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "magic_word",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "emoji_effect",
                    storageKey: null
                }],
                type: "MagicWordsExtensibleMessageAdminText",
                abstractKey: null
            },
            yk = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "token_ent_id",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "user_action_type",
                    storageKey: null
                }],
                type: "NotificationMessagesAdminText",
                abstractKey: null
            },
            zk = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "admin_assigner_name",
                storageKey: null
            },
            Ak = {
                kind: "InlineFragment",
                selections: [zk, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "assigned_admin_name",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "assign_conversation",
                    storageKey: null
                }],
                type: "BizInboxAssignAdminAdminText",
                abstractKey: null
            };
        zk = {
            kind: "InlineFragment",
            selections: [zk, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "note_input",
                storageKey: null
            }],
            type: "BizInboxAdminAssignmentNoteAdminText",
            abstractKey: null
        };
        var Bk = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "email_thread_id",
                    storageKey: null
                }],
                type: "BizInboxOmnichannelEmailSentAdminText",
                abstractKey: null
            },
            Ck = {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "user_subscription_management_action_type",
                    storageKey: null
                }],
                type: "InstantGameBotMessageSubscriptionManagementAdminText",
                abstractKey: null
            };
        $g = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "extensible_message_admin_text",
                plural: !1,
                selections: [E, Aj, Bj, Cj, Dj, Ej, Fj, Gj, Hj, U, Sh, Ij, Jj, Eh, Kj, Lj, Nj, {
                    kind: "InlineFragment",
                    selections: [xa, Hf, Oj, Pj, {
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "instant_game_update_data",
                        plural: !1,
                        selections: [{
                            kind: "InlineFragment",
                            selections: [Qj, sh, $g, Rj],
                            type: "InstantGameXMATCustomMessageClientData",
                            abstractKey: null
                        }],
                        storageKey: null
                    }, Sj],
                    type: "InstantGameUpdateExtensibleMessageAdminText",
                    abstractKey: null
                }, Tj, Uj, Zj, $j, ak, bk, dk, ek, fk, ec, ck, gk, ik, jk, kk, mk, nk, lk, {
                    kind: "InlineFragment",
                    selections: [ok, pk, qk, Mj, rk, sk, tk, uk, {
                        alias: null,
                        args: null,
                        concreteType: "MessengerCallLogExtensibleMessageAdminTextCallCaptureAttachmentsConnection",
                        kind: "LinkedField",
                        name: "call_capture_attachments",
                        plural: !1,
                        selections: [X, {
                            alias: null,
                            args: null,
                            concreteType: "MessengerCallLogExtensibleMessageAdminTextCallCaptureAttachmentsEdge",
                            kind: "LinkedField",
                            name: "edges",
                            plural: !0,
                            selections: W,
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    type: "MessengerCallLogExtensibleMessageAdminText",
                    abstractKey: null
                }, Vj, vk, Yj, Wj, wk, hk, xk, yk, Ak, zk, Bk, Ck],
                storageKey: null
            }, y, c],
            type: "GenericAdminTextMessage",
            abstractKey: null
        };
        W = [{
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "transfer_id",
            storageKey: null
        }, {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "message_type",
            storageKey: null
        }, {
            alias: null,
            args: null,
            concreteType: "CurrencyQuantity",
            kind: "LinkedField",
            name: "amount",
            plural: !1,
            selections: zb,
            storageKey: null
        }, {
            alias: null,
            args: null,
            concreteType: "MessagingParticipant",
            kind: "LinkedField",
            name: "p2p_sender",
            plural: !1,
            selections: d,
            storageKey: null
        }, {
            alias: null,
            args: null,
            concreteType: "MessagingParticipant",
            kind: "LinkedField",
            name: "p2p_receiver",
            plural: !1,
            selections: d,
            storageKey: null
        }, c];
        zb = {
            kind: "InlineFragment",
            selections: W,
            type: "P2PPaymentRequestMessage",
            abstractKey: null
        };
        W = {
            kind: "InlineFragment",
            selections: W,
            type: "P2PPaymentMessage",
            abstractKey: null
        };
        jj = [Yi, E, Y, Zi, $i, aj, na, bj, cj, gg, dj, oa, ej, fj, D, gj, hj, jj, kj, lj, mj, N, sj, uj, vj, wj, xj, yj, zj, $g, zb, W, {
            alias: null,
            args: null,
            concreteType: "RepliedToMessage",
            kind: "LinkedField",
            name: "replied_to_message",
            plural: !1,
            selections: [Oc, {
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "message",
                plural: !1,
                selections: [Yi, E, Y, Zi, $i, aj, na, bj, cj, gg, dj, oa, ej, fj, D, gj, hj, jj, kj, lj, mj, N, sj, uj, vj, wj, xj, yj, zj, $g, zb, W],
                storageKey: null
            }],
            storageKey: null
        }];
        lj = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "is_default_child_group",
            storageKey: null
        };
        sj = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "emoji_codepoints",
            storageKey: null
        };
        vj = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "joinable_link",
            storageKey: null
        };
        xj = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "is_fuss_red_page",
            storageKey: null
        };
        $g = {
            alias: null,
            args: null,
            concreteType: "Group",
            kind: "LinkedField",
            name: "program_group",
            plural: !1,
            selections: [a, {
                alias: null,
                args: [{
                    kind: "Literal",
                    name: "height",
                    value: 24
                }, {
                    kind: "Literal",
                    name: "width",
                    value: 24
                }],
                concreteType: "Image",
                kind: "LinkedField",
                name: "profile_picture",
                plural: !1,
                selections: m,
                storageKey: "profile_picture(height:24,width:24)"
            }],
            storageKey: null
        };
        fd = {
            alias: null,
            args: null,
            concreteType: "Group",
            kind: "LinkedField",
            name: "mentorship_group",
            plural: !1,
            selections: fd,
            storageKey: null
        };
        var Dk = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "banner_title",
                storageKey: null
            },
            Ek = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "banner_subtitle",
                storageKey: null
            },
            Fk = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "thread_unsendability_status",
                storageKey: null
            },
            Gk = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "thread_pin_timestamp",
                storageKey: null
            },
            Hk = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_business_page_active",
                storageKey: null
            },
            Ik = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "trigger_id",
                storageKey: null
            };
        vi = {
            alias: null,
            args: null,
            concreteType: "ConversionDetectionData",
            kind: "LinkedField",
            name: "conversion_detection_data",
            plural: !1,
            selections: [vi, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "conversion_type",
                storageKey: null
            }, Xj, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "currency_amount",
                storageKey: null
            }, {
                alias: "timestamp",
                args: null,
                kind: "ScalarField",
                name: "timestamp_graphql_time",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "page_reply",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "icebreaker_key",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "icebreaker_message",
                storageKey: null
            }, Ik],
            storageKey: null
        };
        Xj = {
            alias: null,
            args: null,
            concreteType: "SuggestedReplyData",
            kind: "LinkedField",
            name: "suggested_reply_data",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "suggestion_type",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "suggestion_content",
                storageKey: null
            }, {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "triggered_timestamp",
                storageKey: null
            }, Ik],
            storageKey: null
        };
        Ik = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "admin_type",
            storageKey: null
        };
        var Jk = {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "gender",
            storageKey: null
        };
        m = {
            alias: "big_image_src",
            args: [{
                kind: "Literal",
                name: "height",
                value: 60
            }, {
                kind: "Literal",
                name: "width",
                value: 60
            }],
            concreteType: "Image",
            kind: "LinkedField",
            name: "profile_picture",
            plural: !1,
            selections: m,
            storageKey: "profile_picture(height:60,width:60)"
        };
        var Kk = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "username",
                storageKey: null
            },
            Lk = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_viewer_friend",
                storageKey: null
            },
            Mk = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_messenger_user",
                storageKey: null
            },
            Nk = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_message_blocked_by_viewer",
                storageKey: null
            },
            Ok = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_viewer_coworker",
                storageKey: null
            },
            Pk = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_employee",
                storageKey: null
            },
            Qk = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_aloha_proxy_confirmed",
                storageKey: null
            },
            Rk = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "company_title",
                storageKey: null
            };
        ld = {
            alias: null,
            args: null,
            concreteType: "WorkUserInfo",
            kind: "LinkedField",
            name: "work_info",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                concreteType: "Group",
                kind: "LinkedField",
                name: "work_community",
                plural: !1,
                selections: ld,
                storageKey: null
            }, bh],
            storageKey: null
        };
        var Sk = {
                kind: "InlineFragment",
                selections: [Jk, o, m, nb, Lk, Mk, Nk, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "is_viewer_managing_parent",
                    storageKey: null
                }],
                type: "NeoApprovedUser",
                abstractKey: null
            },
            Tk = {
                kind: "InlineFragment",
                selections: [o, m, Kk, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "accepts_messenger_user_feedback",
                    storageKey: null
                }, Mk, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "is_messenger_platform_bot",
                    storageKey: null
                }, Nk, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "is_viewer_subscribed_to_message_updates",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "InstantGameChannelInfo",
                    kind: "LinkedField",
                    name: "instant_game_channel",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "Application",
                        kind: "LinkedField",
                        name: "application",
                        plural: !1,
                        selections: d,
                        storageKey: null
                    }],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "verification_status",
                    storageKey: null
                }],
                type: "Page",
                abstractKey: null
            },
            Uk = [o, m, Nk],
            Vk = {
                kind: "InlineFragment",
                selections: Uk,
                type: "SmsMessagingParticipant",
                abstractKey: null
            },
            Wk = {
                kind: "InlineFragment",
                selections: [m, Nk],
                type: "InstagramMessagingUser",
                abstractKey: null
            },
            Z = [m],
            Xk = {
                kind: "InlineFragment",
                selections: Z,
                type: "LiveChatOnlyPerson",
                abstractKey: null
            };
        Uk = {
            kind: "InlineFragment",
            selections: Uk,
            type: "UnavailableMessagingActor",
            abstractKey: null
        };
        var Yk = {
                kind: "InlineFragment",
                selections: Z,
                type: "UnifiedMessagingInstagramUser",
                abstractKey: null
            },
            Zk = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "is_blocked_by_viewer",
                storageKey: null
            },
            $k = [o, m, Kk],
            al = {
                kind: "InlineFragment",
                selections: $k,
                type: "Group",
                abstractKey: null
            };
        $k = {
            kind: "InlineFragment",
            selections: $k,
            type: "Event",
            abstractKey: null
        };
        k = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                concreteType: "WorkForeignEntityInfo",
                kind: "LinkedField",
                name: "work_foreign_entity_info",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "detail",
                    storageKey: null
                }, k, h],
                storageKey: null
            }],
            type: "WorkForeignEntity",
            abstractKey: "__isWorkForeignEntity"
        };
        h = {
            kind: "InlineFragment",
            selections: Z,
            type: "MessengerCallGuestUser",
            abstractKey: null
        };
        var bl = {
                kind: "InlineFragment",
                selections: Z,
                type: "WorkVCEndpointUser",
                abstractKey: null
            },
            cl = {
                kind: "InlineFragment",
                selections: Z,
                type: "WECMailboxAccount",
                abstractKey: null
            };
        Z = {
            kind: "InlineFragment",
            selections: Z,
            type: "WECCustomer",
            abstractKey: null
        };
        var dl = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "wec_group_creation_time",
                storageKey: null
            },
            el = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "wec_group_invite_link",
                storageKey: null
            };
        gd = {
            alias: null,
            args: null,
            concreteType: "MessagingParticipant",
            kind: "LinkedField",
            name: "nodes",
            plural: !0,
            selections: gd,
            storageKey: null
        };
        var fl = [{
                kind: "Variable",
                name: "before_time_precise",
                variableName: "before"
            }, {
                kind: "Variable",
                name: "last",
                variableName: "message_limit"
            }],
            gl = {
                alias: null,
                args: null,
                concreteType: "PageInfo",
                kind: "LinkedField",
                name: "page_info",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "has_previous_page",
                    storageKey: null
                }],
                storageKey: null
            },
            hl = {
                alias: "watermark",
                args: null,
                kind: "ScalarField",
                name: "timestamp_precise",
                storageKey: null
            },
            il = {
                alias: "action",
                args: null,
                kind: "ScalarField",
                name: "action_timestamp_precise",
                storageKey: null
            };
        fi = {
            condition: "load_delivery_receipts",
            kind: "Condition",
            passingValue: !0,
            selections: [{
                alias: null,
                args: null,
                concreteType: "MessagingDeliveryReceiptsOfThreadConnection",
                kind: "LinkedField",
                name: "delivery_receipts",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "MessagingDeliveryReceipt",
                    kind: "LinkedField",
                    name: "nodes",
                    plural: !0,
                    selections: fi,
                    storageKey: null
                }],
                storageKey: null
            }]
        };
        var $ = [E, a],
            jl = {
                kind: "InlineFragment",
                selections: d,
                type: "GenericAttachmentMedia",
                abstractKey: null
            },
            kl = {
                kind: "InlineFragment",
                selections: d,
                type: "MontageImage",
                abstractKey: null
            },
            ll = {
                kind: "InlineFragment",
                selections: d,
                type: "MontageVideo",
                abstractKey: null
            };
        sa = {
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "media",
            plural: !1,
            selections: [E, sa, ta, va, t, wa, u, O, jl, kl, ll],
            storageKey: null
        };
        ta = {
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "action_links",
            plural: !0,
            selections: [E, i, o],
            storageKey: null
        };
        va = {
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "action_objects",
            plural: !0,
            selections: [E, a, {
                kind: "InlineFragment",
                selections: [Ia, w, x, Ja],
                type: "MessengerPlatformEntPreview",
                abstractKey: "__isMessengerPlatformEntPreview"
            }],
            storageKey: null
        };
        t = {
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "cta_data",
            plural: !1,
            selections: [E, Ua, A],
            storageKey: null
        };
        Ia = {
            alias: null,
            args: null,
            concreteType: "MessengerCallToAction",
            kind: "LinkedField",
            name: "messenger_call_to_actions",
            plural: !0,
            selections: [Ga, Ha, va, Ka, La, a, Ma, Na, Oa, Pa, Qa, Ra, z, t, Va, qa],
            storageKey: null
        };
        w = [E, {
            kind: "TypeDiscriminator",
            abstractKey: "__isPaymentActivityAction"
        }, v, eb, fb, i, Sa, {
            kind: "InlineFragment",
            selections: [{
                alias: "moneyTransfer",
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "generic_money_transfer",
                plural: !1,
                selections: [E, bb, db, cb, ib, a],
                storageKey: null
            }],
            type: "P2PPaymentActionButtonWithTransfer",
            abstractKey: null
        }];
        x = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                concreteType: "P2PBubbleView",
                kind: "LinkedField",
                name: "bubble_view",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "actions",
                    plural: !0,
                    selections: w,
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "components",
                    plural: !0,
                    selections: [E, jb, J, lb, L],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "P2PBubbleRobotext",
                    kind: "LinkedField",
                    name: "robotext",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "action",
                        plural: !1,
                        selections: w,
                        storageKey: null
                    }, kb, mb, e],
                    storageKey: null
                }, {
                    alias: "rootAction",
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "root_action",
                    plural: !1,
                    selections: w,
                    storageKey: null
                }],
                storageKey: null
            }],
            type: "PaymentViewData",
            abstractKey: "__isPaymentViewData"
        };
        Ua = {
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "receiver_profile",
            plural: !1,
            selections: [E, a, b, G, ob],
            storageKey: null
        };
        A = [vb, a];
        Va = {
            alias: null,
            args: null,
            concreteType: "PeerToPeerTransferContext",
            kind: "LinkedField",
            name: "transfer_context",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                concreteType: "MessageImage",
                kind: "LinkedField",
                name: "memo_images",
                plural: !0,
                selections: A,
                storageKey: null
            }, xb, a],
            storageKey: null
        };
        qa = {
            alias: null,
            args: null,
            concreteType: "PeerToPeerPlatformSoldItemDetail",
            kind: "LinkedField",
            name: "platform_item",
            plural: !1,
            selections: [b, M, {
                alias: null,
                args: null,
                concreteType: "Photo",
                kind: "LinkedField",
                name: "photos",
                plural: !0,
                selections: A,
                storageKey: null
            }, o, a],
            storageKey: null
        };
        v = [E, b, a, G, ob];
        eb = {
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "requester",
            plural: !1,
            selections: v,
            storageKey: null
        };
        fb = {
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "requestee",
            plural: !1,
            selections: v,
            storageKey: null
        };
        Sa = {
            alias: null,
            args: null,
            concreteType: "PeerToPeerTransfer",
            kind: "LinkedField",
            name: "transfer",
            plural: !1,
            selections: [db, Ua, qb, rb, bb, sb, tb, ub, Va, Ab, Bb, Cb, qa, a, Db, Eb, Fb, x],
            storageKey: null
        };
        ib = [Ga, Ha, va, Ka, La, a, Ma, Na, Oa, Pa, Qa, Ra, z, t];
        jb = {
            alias: null,
            args: null,
            concreteType: "MessengerCallToAction",
            kind: "LinkedField",
            name: "call_to_actions",
            plural: !0,
            selections: ib,
            storageKey: null
        };
        J = {
            alias: null,
            args: null,
            concreteType: "MessengerCallToAction",
            kind: "LinkedField",
            name: "default_action",
            plural: !1,
            selections: ib,
            storageKey: null
        };
        lb = [{
            alias: null,
            args: null,
            concreteType: "MessengerRetailItem",
            kind: "LinkedField",
            name: "nodes",
            plural: !0,
            selections: [a, M, Ob, Ja, Pb, b, Qb, Rb, J, jb, {
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "media_blob_attachments",
                plural: !0,
                selections: [E, Tb, Sb, Wb, Zb, ac, O, jl, kl, ll],
                storageKey: null
            }],
            storageKey: null
        }];
        L = [{
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "messaging_actor",
            plural: !1,
            selections: [E, a, b],
            storageKey: null
        }, a];
        mb = {
            alias: "primary_photo",
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "primary_listing_photo",
            plural: !1,
            selections: [E, ua, a],
            storageKey: null
        };
        w = {
            alias: null,
            args: null,
            concreteType: "RetailShipmentItemsConnection",
            kind: "LinkedField",
            name: "retail_shipment_items",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                concreteType: "MessengerRetailItem",
                kind: "LinkedField",
                name: "nodes",
                plural: !0,
                selections: [a, b, ud, vd, wd, xd, Ob, Pb, yd, zd, jb],
                storageKey: null
            }],
            storageKey: null
        };
        xb = [b, a];
        ob = {
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "media",
            plural: !1,
            selections: [E, wa, Tg, O, jl, kl, ll],
            storageKey: null
        };
        v = {
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "media",
            plural: !1,
            selections: [E, vb, O, jl, kl, ll],
            storageKey: null
        };
        Ga = {
            alias: null,
            args: null,
            concreteType: "Photo",
            kind: "LinkedField",
            name: "photo",
            plural: !1,
            selections: A,
            storageKey: null
        };
        Ha = {
            alias: null,
            args: null,
            concreteType: "FocusedPhoto",
            kind: "LinkedField",
            name: "cover_photo",
            plural: !1,
            selections: [Ga],
            storageKey: null
        };
        va = {
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "group_general_chat",
            plural: !1,
            selections: $,
            storageKey: null
        };
        Ka = {
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "target",
            plural: !1,
            selections: [E, a, Xa, {
                kind: "InlineFragment",
                selections: [F, u, Ya, Za, $a, ab],
                type: "WECMessageAudio",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [bb, db, cb, x],
                type: "MoneyTransfer",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [db, Ua, qb, rb, bb, sb, tb, ub, Va, Ab, Bb, Cb, qa, Db, Eb, Fb, x],
                type: "PeerToPeerTransfer",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [yb, Gb, eb, fb, Ib, Jb, Fb, Sa, Lb, Cb, Mb, Db, {
                    alias: null,
                    args: null,
                    concreteType: "PeerToPeerPaymentRequest",
                    kind: "LinkedField",
                    name: "individual_requests",
                    plural: !0,
                    selections: [yb, Gb, eb, fb, Ib, Jb, a, Fb, Sa, Lb, Cb, Mb, Db, x],
                    storageKey: null
                }, x],
                type: "PeerToPeerPaymentRequest",
                abstractKey: null
            }, x, {
                kind: "InlineFragment",
                selections: [Nb, jb, {
                    alias: null,
                    args: null,
                    concreteType: "RetailPromotionItemsConnection",
                    kind: "LinkedField",
                    name: "promotion_items",
                    plural: !1,
                    selections: lb,
                    storageKey: null
                }],
                type: "MessengerRetailPromotion",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [Nb, jb, {
                    alias: null,
                    args: null,
                    concreteType: "MessengerBusinessMessageItemsConnection",
                    kind: "LinkedField",
                    name: "business_items",
                    plural: !1,
                    selections: lb,
                    storageKey: null
                }],
                type: "MessengerBusinessMessage",
                abstractKey: null
            }, bc, dc, hc, {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "invite_sender",
                    plural: !1,
                    selections: $,
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "invite_recipient",
                    plural: !1,
                    selections: $,
                    storageKey: null
                }],
                type: "QuickInvite",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [ic, jc, kc, lc, mc, nc, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "blob_media",
                    plural: !1,
                    selections: [E, pc, oc, O],
                    storageKey: null
                }],
                type: "MontageDirect",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [qc, c, rc],
                type: "MontageShare",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [tc, uc, vc, wc, xc, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "native_component_flow_request",
                    plural: !1,
                    selections: [E, a, {
                        kind: "InlineFragment",
                        selections: [yc, zc, Ac, sc, Bc, Dc, Fc, {
                            alias: null,
                            args: null,
                            concreteType: "NativeComponentFlowBookingRequestServicesProductItemsConnection",
                            kind: "LinkedField",
                            name: "services_product_items",
                            plural: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: "ServicesProductItem",
                                kind: "LinkedField",
                                name: "nodes",
                                plural: !0,
                                selections: [a, b, M, Gc, Hc, {
                                    alias: null,
                                    args: Ic,
                                    concreteType: "ProductImage",
                                    kind: "LinkedField",
                                    name: "images",
                                    plural: !0,
                                    selections: [Jc, a],
                                    storageKey: "images(first:1)"
                                }, Kc],
                                storageKey: null
                            }],
                            storageKey: null
                        }, Lc, Mc, Nc, Oc, Pc, Qc, Rc, Sc, Tc, Uc, Vc, wc, xc, Wc],
                        type: "NativeComponentFlowBookingRequest",
                        abstractKey: null
                    }],
                    storageKey: null
                }],
                type: "PagesPlatformBookingMessage",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [Xc, Yc, Ec, Zc],
                type: "ServicesAppointmentAvailability",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [$c, ad, bd, cd, dd, ed],
                type: "ServicesGenericAdminText",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "MessagingParticipant",
                    kind: "LinkedField",
                    name: "genie_sender",
                    plural: !1,
                    selections: L,
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "StoryAttachment",
                    kind: "LinkedField",
                    name: "story_attachment",
                    plural: !1,
                    selections: [g, j, sa, ya, za, Aa, Ba, Ca, Da, ta, Fa, Ia, Wa],
                    storageKey: null
                }],
                type: "GenieMessage",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [hd, id, jd, kd, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "event_place",
                    plural: !1,
                    selections: [E, b, O],
                    storageKey: null
                }, md, nd, od, pd, qd, b, rd],
                type: "Event",
                abstractKey: null
            }, sd, td, {
                kind: "InlineFragment",
                selections: [b, ud, vd, wd, xd, Ob, Pb, yd, zd, J, jb],
                type: "MessengerRetailItem",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [ud, Ad, Bd, Rb, vd, Cd, Dd, Ed, Fd, b],
                type: "AgentItemSuggestion",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [Gd, Hd, Id, Jd, {
                    kind: "InlineFragment",
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "FundraiserCoverPhoto",
                        kind: "LinkedField",
                        name: "focused_cover_photo",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "Photo",
                            kind: "LinkedField",
                            name: "photo",
                            plural: !1,
                            selections: [Ld, a],
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    type: "FundraiserWithPresence",
                    abstractKey: "__isFundraiserWithPresence"
                }],
                type: "Fundraiser",
                abstractKey: "__isFundraiser"
            }, {
                kind: "InlineFragment",
                selections: [Md, Nd, Od, Pd, Qd, Rd, Sd, Td, Ud, Yd, Oc, Zd, $d, ae, be, {
                    alias: null,
                    args: null,
                    concreteType: "RetailReceiptItemsConnection",
                    kind: "LinkedField",
                    name: "retail_items",
                    plural: !1,
                    selections: lb,
                    storageKey: null
                }, ce, de, ee, fe],
                type: "MessengerRetailReceipt",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [ge, he, ie, {
                    alias: null,
                    args: null,
                    concreteType: "PaymentInvoiceProduct",
                    kind: "LinkedField",
                    name: "item_list",
                    plural: !0,
                    selections: [je, b, ke, M, hb, le, me, a],
                    storageKey: null
                }, gb, ne, oe, n, pe, qe, I, re, se, te, ue, ve, we],
                type: "PaymentPlatformAttachment",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [xe, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "group_commerce_item_seller",
                    plural: !1,
                    selections: $,
                    storageKey: null
                }, ye, ze, mb, o],
                type: "GroupCommerceProductItem",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [ye, mb],
                type: "MarketplaceListingRenderable",
                abstractKey: "__isMarketplaceListingRenderable"
            }, {
                kind: "InlineFragment",
                selections: [Be, Ce, s, De, b, Ee, Fe],
                type: "Page",
                abstractKey: null
            }, Ke, {
                kind: "InlineFragment",
                selections: [Le, {
                    alias: null,
                    args: Me,
                    concreteType: "MPersonalRemindersListToPersonalRemindersConnection",
                    kind: "LinkedField",
                    name: "personal_reminders",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "MPersonalRemindersListToPersonalRemindersEdge",
                        kind: "LinkedField",
                        name: "edges",
                        plural: !0,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "MessengerEventReminder",
                            kind: "LinkedField",
                            name: "node",
                            plural: !1,
                            selections: [Ge, He, Ie, a],
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    storageKey: 'personal_reminders(orderby:"m_personal_reminder_list_ordering")'
                }],
                type: "MPersonalRemindersList",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [Ne, Oe, Pe, Qe, Re, Se, Te, Ue, Ve, We, Xe, Ye, Ze, $e, {
                    alias: null,
                    args: null,
                    concreteType: "AirlineBoardingPassesConnection",
                    kind: "LinkedField",
                    name: "boarding_passes",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "AirlineBoardingPassMessageAttachment",
                        kind: "LinkedField",
                        name: "nodes",
                        plural: !0,
                        selections: [af, bf, cf, df, ef, ff, gf, kf, sf, a],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "AirlineBoardingPassCollectionMessageAttachment",
                abstractKey: null
            }, pf, {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "MessengerRetailShipment",
                    kind: "LinkedField",
                    name: "shipment",
                    plural: !1,
                    selections: [a, xf, yf, zf, Wd, fc, w, Cf, Df],
                    storageKey: null
                }, Ef, Ff, S, Gf, ce],
                type: "MessengerRetailShipmentTrackingEvent",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [xf, yf, zf, Wd, fc, w, Vd, Bf, {
                    alias: null,
                    args: null,
                    concreteType: "MessengerRetailReceipt",
                    kind: "LinkedField",
                    name: "receipt",
                    plural: !1,
                    selections: [Pd, a],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "User",
                    kind: "LinkedField",
                    name: "recipient",
                    plural: !1,
                    selections: xb,
                    storageKey: null
                }, ce],
                type: "MessengerRetailShipment",
                abstractKey: null
            }, qf, {
                kind: "InlineFragment",
                selections: [nf, tf, Ne, lf, pb, Jf, Kf, Lf, If, Mf, vf, Nf, uf, Of, wf, Pf, Qf, Pe, Ue, Rf, Sf, Tf, Se, Te, Uf, Vf, Wf, Xf, {
                    alias: null,
                    args: null,
                    concreteType: "AirlineItineraryLegsConnection",
                    kind: "LinkedField",
                    name: "itinerary_legs",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "AirlineItineraryLeg",
                        kind: "LinkedField",
                        name: "nodes",
                        plural: !0,
                        selections: [Yf, {
                            alias: null,
                            args: null,
                            concreteType: "AirlineItinerarySegmentsConnection",
                            kind: "LinkedField",
                            name: "segments",
                            plural: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: "AirlineItinerarySegmentMessageAttachment",
                                kind: "LinkedField",
                                name: "nodes",
                                plural: !0,
                                selections: [mf, hf, a],
                                storageKey: null
                            }],
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "AirlineItineraryMessageAttachment",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [T, jf, b, of ],
                type: "LeadGenDeepLinkData",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [rf, H, {
                    alias: null,
                    args: null,
                    concreteType: "Event",
                    kind: "LinkedField",
                    name: "event",
                    plural: !1,
                    selections: [a, b, Kd, {
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "event_place",
                        plural: !1,
                        selections: [E, Zf, O],
                        storageKey: null
                    }, $f, {
                        alias: null,
                        args: null,
                        concreteType: "EventAttendanceConfig",
                        kind: "LinkedField",
                        name: "attendance_config",
                        plural: !1,
                        selections: [cg, a],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "EventAttendanceConfirmation",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [cc],
                type: "UserLeadGenInfo",
                abstractKey: null
            }, dg, {
                kind: "InlineFragment",
                selections: [b, eg, l, Za, $a],
                type: "WECMessageFile",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [u, Ya, Za, $a, F, p, fg, q],
                type: "WECMessageVideo",
                abstractKey: null
            }, hg, {
                kind: "InlineFragment",
                selections: [Za, lg, og],
                type: "WECMessageImage",
                abstractKey: null
            }, pg, {
                kind: "InlineFragment",
                selections: [qg, rg, sg, tg, ug, vg, wg],
                type: "MentorshipMessengerCurriculumStep",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [xg],
                type: "MentorshipMessengerDiscussionTopicSet",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "MentorshipProgram",
                    kind: "LinkedField",
                    name: "mentorship_program",
                    plural: !1,
                    selections: [a, {
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "other_member",
                        plural: !1,
                        selections: [E, nb, a],
                        storageKey: null
                    }],
                    storageKey: null
                }, zg],
                type: "MentorshipMessengerLeavePrompt",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [zg, Ag, Bg, Cg],
                type: "MentorshipMessengerSurvey",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [zg],
                type: "MentorshipMessengerReminder",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [zg, Ag, Dg],
                type: "MentorshipMessengerProgressTracker",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [Eg, {
                    alias: null,
                    args: null,
                    concreteType: "ComposedBlockWithEntities",
                    kind: "LinkedField",
                    name: "message_richtext",
                    plural: !0,
                    selections: [Fg, Gg, Hg, {
                        alias: null,
                        args: null,
                        concreteType: "ComposedEntityAtRange",
                        kind: "LinkedField",
                        name: "entity_ranges",
                        plural: !0,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: null,
                            kind: "LinkedField",
                            name: "entity",
                            plural: !1,
                            selections: [E, O],
                            storageKey: null
                        }, B, V],
                        storageKey: null
                    }, Ig, e],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "Feedback",
                    kind: "LinkedField",
                    name: "feedback",
                    plural: !1,
                    selections: [Jg, Kg, Lg, {
                        alias: null,
                        args: ag,
                        concreteType: "TopReactionsConnection",
                        kind: "LinkedField",
                        name: "top_reactions",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "FeedbackReactionInfo",
                            kind: "LinkedField",
                            name: "nodes",
                            plural: !0,
                            selections: [Mg, a],
                            storageKey: null
                        }],
                        storageKey: 'top_reactions(first:3,orderby:["COUNT_DESC","REACTION_TYPE"])'
                    }, a],
                    storageKey: null
                }, Ng, Lb, Og, Sg, {
                    alias: null,
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "to",
                    plural: !1,
                    selections: [E, b, Pg, Rg, a],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "StoryAttachment",
                    kind: "LinkedField",
                    name: "attachments",
                    plural: !0,
                    selections: [za, o, ya, g, ob, Ug, {
                        alias: null,
                        args: bg,
                        concreteType: "SubattachmentsConnection",
                        kind: "LinkedField",
                        name: "all_subattachments",
                        plural: !1,
                        selections: [X, {
                            alias: "files",
                            args: Vg,
                            concreteType: "StoryAttachment",
                            kind: "LinkedField",
                            name: "nodes",
                            plural: !0,
                            selections: [Ug, v],
                            storageKey: 'nodes(if_style:"file_upload")'
                        }, {
                            alias: "images",
                            args: Xg,
                            concreteType: "StoryAttachment",
                            kind: "LinkedField",
                            name: "nodes",
                            plural: !0,
                            selections: [v],
                            storageKey: 'nodes(if_style:"photo")'
                        }],
                        storageKey: "all_subattachments(first:3)"
                    }],
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    concreteType: "Story",
                    kind: "LinkedField",
                    name: "attached_story",
                    plural: !1,
                    selections: [Yg, Zg, {
                        alias: null,
                        args: null,
                        concreteType: "StoryAttachment",
                        kind: "LinkedField",
                        name: "attachments",
                        plural: !0,
                        selections: [ob],
                        storageKey: null
                    }, a],
                    storageKey: null
                }],
                type: "Story",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [b, G, Ha, ch, dh],
                type: "User",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [b, eh, f, fh, Ha, va, {
                    alias: null,
                    args: null,
                    concreteType: "GroupsSyncMetadata",
                    kind: "LinkedField",
                    name: "work_groups_sync_metadata",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "messenger_group",
                        plural: !1,
                        selections: $,
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "Group",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [hh, ih, jh, {
                    alias: null,
                    args: null,
                    concreteType: "AppIntegration",
                    kind: "LinkedField",
                    name: "app_integration",
                    plural: !1,
                    selections: [kh, b, lh, mh, a],
                    storageKey: null
                }, nh, oh, {
                    alias: null,
                    args: null,
                    concreteType: "AppContentAdditionalData",
                    kind: "LinkedField",
                    name: "link_preview_additional_data",
                    plural: !0,
                    selections: [i, e, kb, Ta, ph, {
                        alias: null,
                        args: null,
                        concreteType: "User",
                        kind: "LinkedField",
                        name: "profiles",
                        plural: !0,
                        selections: [G, b, a],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "AppContent",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [J],
                type: "CommerceProductItemShare",
                abstractKey: null
            }, {
                kind: "InlineFragment",
                selections: [qh],
                type: "ApplicationReferralXMA",
                abstractKey: null
            }, rh, th],
            storageKey: null
        };
        La = {
            alias: null,
            args: null,
            concreteType: "StoryAttachment",
            kind: "LinkedField",
            name: "story_attachment",
            plural: !1,
            selections: [g, j, sa, ya, za, Aa, Ba, Ca, Da, ta, Fa, Ia, Wa, Ka, {
                alias: null,
                args: null,
                concreteType: "StoryAttachment",
                kind: "LinkedField",
                name: "subattachments",
                plural: !0,
                selections: [g, j, sa, ya, za, Aa, Ba, Ca, Da, ta, Fa, Ia, Wa, Ka],
                storageKey: null
            }],
            storageKey: null
        };
        Ma = {
            alias: null,
            args: null,
            concreteType: "ExtensibleMessageAttachment",
            kind: "LinkedField",
            name: "extensible_attachment",
            plural: !1,
            selections: [pa, La, {
                alias: "genie_attachment",
                args: null,
                concreteType: "StoryAttachment",
                kind: "LinkedField",
                name: "story_attachment",
                plural: !1,
                selections: [{
                    alias: "genie_message",
                    args: null,
                    concreteType: null,
                    kind: "LinkedField",
                    name: "target",
                    plural: !1,
                    selections: [E, a, {
                        kind: "InlineFragment",
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "MessagingParticipant",
                            kind: "LinkedField",
                            name: "genie_sender",
                            plural: !1,
                            selections: [a, {
                                alias: null,
                                args: null,
                                concreteType: null,
                                kind: "LinkedField",
                                name: "messaging_actor",
                                plural: !1,
                                selections: [E, b, a, {
                                    kind: "TypeDiscriminator",
                                    abstractKey: "__isNode"
                                }],
                                storageKey: null
                            }],
                            storageKey: null
                        }, La],
                        type: "GenieMessage",
                        abstractKey: null
                    }],
                    storageKey: null
                }],
                storageKey: null
            }, a],
            storageKey: null
        };
        Na = [E, {
            kind: "TypeDiscriminator",
            abstractKey: "__isMessageBlobAttachment"
        }, Ae, Je, yg, Zb, Wg, O];
        Oa = {
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "blob_attachments",
            plural: !0,
            selections: Na,
            storageKey: null
        };
        Pa = {
            kind: "TypeDiscriminator",
            abstractKey: "__isMessage"
        };
        Qa = {
            alias: null,
            args: null,
            concreteType: "MessageReaction",
            kind: "LinkedField",
            name: "message_reactions",
            plural: !0,
            selections: [ij, {
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "user",
                plural: !1,
                selections: $,
                storageKey: null
            }],
            storageKey: null
        };
        Ra = {
            alias: null,
            args: null,
            concreteType: "MessagingParticipant",
            kind: "LinkedField",
            name: "unsender",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "messaging_actor",
                plural: !1,
                selections: [E, a, b, Pg],
                storageKey: null
            }, a],
            storageKey: null
        };
        z = {
            kind: "InlineFragment",
            selections: [nj, {
                alias: null,
                args: null,
                concreteType: "TextWithEntities",
                kind: "LinkedField",
                name: "message",
                plural: !1,
                selections: [e, {
                    alias: null,
                    args: null,
                    concreteType: "EntityAtRange",
                    kind: "LinkedField",
                    name: "ranges",
                    plural: !0,
                    selections: [B, V, {
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "entity",
                        plural: !1,
                        selections: [E, oj, pj, ka, O],
                        storageKey: null
                    }, qj],
                    storageKey: null
                }],
                storageKey: null
            }, rj, Ma, K, Oa, xi],
            type: "UserMessage",
            abstractKey: null
        };
        t = [{
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "node",
            plural: !1,
            selections: Na,
            storageKey: null
        }];
        ib = {
            kind: "InlineFragment",
            selections: [tj, c, {
                alias: null,
                args: null,
                concreteType: "VideoCallMessageToCaptureAttachmentsConnection",
                kind: "LinkedField",
                name: "call_capture_attachments",
                plural: !1,
                selections: [X, {
                    alias: null,
                    args: null,
                    concreteType: "VideoCallMessageToCaptureAttachmentsEdge",
                    kind: "LinkedField",
                    name: "edges",
                    plural: !0,
                    selections: t,
                    storageKey: null
                }],
                storageKey: null
            }],
            type: "VideoCallMessage",
            abstractKey: null
        };
        Ja = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                concreteType: "MessageImage",
                kind: "LinkedField",
                name: "image_with_metadata",
                plural: !1,
                selections: [kg, pa, $b, a],
                storageKey: null
            }, c],
            type: "ThreadImageMessage",
            abstractKey: null
        };
        Qb = {
            kind: "InlineFragment",
            selections: [{
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "extensible_message_admin_text",
                plural: !1,
                selections: [E, Aj, Bj, Cj, Dj, Ej, Fj, Gj, Hj, U, Sh, Ij, Jj, Eh, Kj, Lj, Nj, {
                    kind: "InlineFragment",
                    selections: [xa, Hf, Oj, Pj, {
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "instant_game_update_data",
                        plural: !1,
                        selections: [E, {
                            kind: "InlineFragment",
                            selections: [Qj, sh, Ga, Rj],
                            type: "InstantGameXMATCustomMessageClientData",
                            abstractKey: null
                        }],
                        storageKey: null
                    }, Sj],
                    type: "InstantGameUpdateExtensibleMessageAdminText",
                    abstractKey: null
                }, Tj, Uj, Zj, $j, ak, bk, dk, ek, fk, ec, ck, gk, ik, jk, kk, mk, nk, lk, {
                    kind: "InlineFragment",
                    selections: [ok, pk, qk, Mj, rk, sk, tk, uk, {
                        alias: null,
                        args: null,
                        concreteType: "MessengerCallLogExtensibleMessageAdminTextCallCaptureAttachmentsConnection",
                        kind: "LinkedField",
                        name: "call_capture_attachments",
                        plural: !1,
                        selections: [X, {
                            alias: null,
                            args: null,
                            concreteType: "MessengerCallLogExtensibleMessageAdminTextCallCaptureAttachmentsEdge",
                            kind: "LinkedField",
                            name: "edges",
                            plural: !0,
                            selections: t,
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    type: "MessengerCallLogExtensibleMessageAdminText",
                    abstractKey: null
                }, Vj, vk, Yj, Wj, wk, hk, xk, yk, Ak, zk, Bk, Ck],
                storageKey: null
            }, y, c],
            type: "GenericAdminTextMessage",
            abstractKey: null
        };
        Tb = [E, Pa, Yi, Y, Zi, $i, aj, na, bj, cj, gg, dj, oa, ej, fj, D, gj, hj, Qa, kj, Ra, mj, N, {
            alias: null,
            args: null,
            concreteType: "RepliedToMessage",
            kind: "LinkedField",
            name: "replied_to_message",
            plural: !1,
            selections: [Oc, {
                alias: null,
                args: null,
                concreteType: null,
                kind: "LinkedField",
                name: "message",
                plural: !1,
                selections: [E, Pa, Yi, Y, Zi, $i, aj, na, bj, cj, gg, dj, oa, ej, fj, D, gj, hj, Qa, kj, Ra, mj, N, z, uj, ib, wj, Ja, yj, zj, Qb, zb, W, O],
                storageKey: null
            }],
            storageKey: null
        }, z, uj, ib, wj, Ja, yj, zj, Qb, zb, W, O];
        Sb = {
            alias: null,
            args: null,
            concreteType: "WorkUserInfo",
            kind: "LinkedField",
            name: "work_info",
            plural: !1,
            selections: [{
                alias: null,
                args: null,
                concreteType: "Group",
                kind: "LinkedField",
                name: "work_community",
                plural: !1,
                selections: xb,
                storageKey: null
            }, bh],
            storageKey: null
        };
        Wb = {
            alias: null,
            args: null,
            concreteType: "MessagingParticipant",
            kind: "LinkedField",
            name: "nodes",
            plural: !0,
            selections: L,
            storageKey: null
        };
        return {
            fragment: {
                argumentDefinitions: [aa, ba, ca, da, ea, fa, ga, ha, ia],
                kind: "Fragment",
                metadata: null,
                name: "MessengerThreadsQuery",
                selections: [{
                    alias: null,
                    args: ja,
                    concreteType: "MessageThread",
                    kind: "LinkedField",
                    name: "message_thread",
                    plural: !1,
                    selections: [a, la, b, {
                        alias: "last_message",
                        args: ma,
                        concreteType: "MessagesOfThreadConnection",
                        kind: "LinkedField",
                        name: "messages",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: null,
                            kind: "LinkedField",
                            name: "nodes",
                            plural: !0,
                            selections: [c, {
                                alias: null,
                                args: null,
                                concreteType: "MessagingParticipant",
                                kind: "LinkedField",
                                name: "message_sender",
                                plural: !1,
                                selections: [{
                                    alias: null,
                                    args: null,
                                    concreteType: null,
                                    kind: "LinkedField",
                                    name: "messaging_actor",
                                    plural: !1,
                                    selections: d,
                                    storageKey: null
                                }],
                                storageKey: null
                            }, na, oa, {
                                kind: "InlineFragment",
                                selections: [Kb, K, ah],
                                type: "UserMessage",
                                abstractKey: null
                            }, {
                                kind: "InlineFragment",
                                selections: [y, {
                                    alias: null,
                                    args: null,
                                    concreteType: null,
                                    kind: "LinkedField",
                                    name: "extensible_message_admin_text",
                                    plural: !1,
                                    selections: [Ea],
                                    storageKey: null
                                }],
                                type: "GenericAdminTextMessage",
                                abstractKey: null
                            }, D, N],
                            storageKey: null
                        }],
                        storageKey: "messages(last:1)"
                    }, Hb, {
                        alias: null,
                        args: null,
                        concreteType: "JobApplicationsFromThreadConnection",
                        kind: "LinkedField",
                        name: "thread_associated_job_applications",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "JobApplication",
                            kind: "LinkedField",
                            name: "nodes",
                            plural: !0,
                            selections: [a, {
                                alias: null,
                                args: null,
                                concreteType: "JobOpening",
                                kind: "LinkedField",
                                name: "job_opening",
                                plural: !1,
                                selections: [ra, {
                                    alias: null,
                                    args: null,
                                    concreteType: "Page",
                                    kind: "LinkedField",
                                    name: "employer",
                                    plural: !1,
                                    selections: [ig, jg],
                                    storageKey: null
                                }],
                                storageKey: null
                            }],
                            storageKey: null
                        }],
                        storageKey: null
                    }, mg, C, ng, r, Af, vb, P, Vb, Ub, Xb, Yb, Q, Cc, uh, vh, wh, xh, yh, zh, Ah, Bh, {
                        alias: null,
                        args: null,
                        concreteType: "MessageThreadCustomization",
                        kind: "LinkedField",
                        name: "customization_info",
                        plural: !1,
                        selections: [Ch, Fh, Gh],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "MessengerThreadTheme",
                        kind: "LinkedField",
                        name: "thread_theme",
                        plural: !1,
                        selections: [a, Hh, Ih, Jh, Kh, {
                            alias: null,
                            args: null,
                            concreteType: "MessengerReactionPack",
                            kind: "LinkedField",
                            name: "reaction_pack",
                            plural: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: "MessengerReactionPackReactionAssetsConnection",
                                kind: "LinkedField",
                                name: "reaction_assets",
                                plural: !1,
                                selections: [{
                                    alias: null,
                                    args: null,
                                    concreteType: "MessengerReactionAsset",
                                    kind: "LinkedField",
                                    name: "nodes",
                                    plural: !0,
                                    selections: [Lh, Mh, Nh, Oh],
                                    storageKey: null
                                }],
                                storageKey: null
                            }],
                            storageKey: null
                        }],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "thread_admins",
                        plural: !0,
                        selections: d,
                        storageKey: null
                    }, Ph, Qh, Rh, {
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "thread_queue_metadata",
                        plural: !1,
                        selections: [Th],
                        storageKey: null
                    }, {
                        alias: null,
                        args: Ic,
                        concreteType: "MessengerEventRemindersOfThreadConnection",
                        kind: "LinkedField",
                        name: "event_reminders",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "MessengerEventReminder",
                            kind: "LinkedField",
                            name: "nodes",
                            plural: !0,
                            selections: [a, Uh, Ie, Vh, Wh, gc, {
                                alias: null,
                                args: null,
                                concreteType: "Page",
                                kind: "LinkedField",
                                name: "location_page",
                                plural: !1,
                                selections: [Xh],
                                storageKey: null
                            }, Yh, Zh, $h, He, {
                                alias: null,
                                args: null,
                                concreteType: "UserMessage",
                                kind: "LinkedField",
                                name: "trigger_message",
                                plural: !1,
                                selections: [Y],
                                storageKey: null
                            }, ai, bi, ci, di],
                            storageKey: null
                        }],
                        storageKey: "event_reminders(first:1)"
                    }, ei, gi, {
                        alias: null,
                        args: null,
                        concreteType: "PageMessageThread",
                        kind: "LinkedField",
                        name: "related_page_thread",
                        plural: !1,
                        selections: [hi, Xc, ji, ki, ii],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "RtcCallData",
                        kind: "LinkedField",
                        name: "rtc_call_data",
                        plural: !1,
                        selections: [li, mi, {
                            alias: null,
                            args: null,
                            concreteType: null,
                            kind: "LinkedField",
                            name: "initiator",
                            plural: !1,
                            selections: d,
                            storageKey: null
                        }],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "MarketplaceThreadData",
                        kind: "LinkedField",
                        name: "marketplace_thread_data",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "GroupCommerceProductItem",
                            kind: "LinkedField",
                            name: "for_sale_item",
                            plural: !1,
                            selections: [a, rc, ze, ye, R, Xd, ni, oi, pi, qi, ri, {
                                alias: "primary_photo",
                                args: null,
                                concreteType: null,
                                kind: "LinkedField",
                                name: "primary_listing_photo",
                                plural: !1,
                                selections: wb,
                                storageKey: null
                            }, si, ti],
                            storageKey: null
                        }, ui, {
                            alias: null,
                            args: null,
                            concreteType: null,
                            kind: "LinkedField",
                            name: "buyer",
                            plural: !1,
                            selections: d,
                            storageKey: null
                        }, {
                            alias: null,
                            args: null,
                            concreteType: null,
                            kind: "LinkedField",
                            name: "seller",
                            plural: !1,
                            selections: [a, wi],
                            storageKey: null
                        }, yi, zi],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "associated_object",
                        plural: !1,
                        selections: [{
                            kind: "InlineFragment",
                            selections: [Ai, a, b, G, gh, Bi, Ci, Di, Ei, Fi, Gi],
                            type: "Group",
                            abstractKey: null
                        }, {
                            kind: "InlineFragment",
                            selections: [Ai, a, b, G, Bi, Ci, Di, rd, {
                                alias: null,
                                args: null,
                                concreteType: null,
                                kind: "LinkedField",
                                name: "event_place",
                                plural: !1,
                                selections: [Hi],
                                storageKey: null
                            }],
                            type: "Event",
                            abstractKey: null
                        }],
                        storageKey: null
                    }, Ci, Ii, Ji, Ki, Li, Mi, Ni, Oi, Dh, {
                        alias: null,
                        args: null,
                        concreteType: "PageCommItem",
                        kind: "LinkedField",
                        name: "page_comm_item",
                        plural: !1,
                        selections: [a, Pi, Qi, Ri, Si, {
                            alias: null,
                            args: null,
                            concreteType: "PageCommItemToPageCommItemOwnersConnection",
                            kind: "LinkedField",
                            name: "comm_item_owners",
                            plural: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: "PageCommItemOwner",
                                kind: "LinkedField",
                                name: "nodes",
                                plural: !0,
                                selections: [Ti],
                                storageKey: null
                            }],
                            storageKey: null
                        }, {
                            alias: null,
                            args: null,
                            concreteType: "TextWithEntities",
                            kind: "LinkedField",
                            name: "subtitle",
                            plural: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: "ImageAtRange",
                                kind: "LinkedField",
                                name: "image_ranges",
                                plural: !0,
                                selections: [{
                                    alias: null,
                                    args: null,
                                    concreteType: null,
                                    kind: "LinkedField",
                                    name: "entity_with_image",
                                    plural: !1,
                                    selections: wb,
                                    storageKey: null
                                }, B, V],
                                storageKey: null
                            }, Ig, e],
                            storageKey: null
                        }, Ui],
                        storageKey: null
                    }, Vi, Wi, {
                        alias: null,
                        args: null,
                        concreteType: "GroupsSyncMetadata",
                        kind: "LinkedField",
                        name: "groups_sync_metadata",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "Group",
                            kind: "LinkedField",
                            name: "fb_group",
                            plural: !1,
                            selections: Qg,
                            storageKey: null
                        }],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "PinnedMessageData",
                        kind: "LinkedField",
                        name: "pinned_messages",
                        plural: !0,
                        selections: [Y, Xi, {
                            condition: "threadlistViewFieldsOnly",
                            kind: "Condition",
                            passingValue: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: null,
                                kind: "LinkedField",
                                name: "message",
                                plural: !1,
                                selections: jj,
                                storageKey: null
                            }]
                        }],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "GroupsSyncMetadata",
                        kind: "LinkedField",
                        name: "work_groups_sync_metadata",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "Group",
                            kind: "LinkedField",
                            name: "fb_group",
                            plural: !1,
                            selections: [o, a, b, eh, lj, G, Fi, {
                                alias: null,
                                args: null,
                                concreteType: "MultiBackgroundIcon",
                                kind: "LinkedField",
                                name: "group_icon",
                                plural: !1,
                                selections: [sj],
                                storageKey: null
                            }],
                            storageKey: null
                        }],
                        storageKey: null
                    }, {
                        condition: "threadlistViewFieldsOnly",
                        kind: "Condition",
                        passingValue: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: null,
                            kind: "LinkedField",
                            name: "saved_messages",
                            plural: !0,
                            selections: jj,
                            storageKey: null
                        }]
                    }, M, vj, xj, {
                        alias: null,
                        args: Ic,
                        concreteType: "MessengerMentorshipProgramOfThreadConnection",
                        kind: "LinkedField",
                        name: "linked_mentorship_programs",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "MentorshipProgram",
                            kind: "LinkedField",
                            name: "nodes",
                            plural: !0,
                            selections: [a, $g, fd, {
                                alias: null,
                                args: Ic,
                                concreteType: "MentorshipProgramToMentorshipMessengerCurriculumStepOrderByStepCountConnection",
                                kind: "LinkedField",
                                name: "messenger_curriculum_steps",
                                plural: !1,
                                selections: [{
                                    alias: null,
                                    args: null,
                                    concreteType: "MentorshipMessengerCurriculumStep",
                                    kind: "LinkedField",
                                    name: "nodes",
                                    plural: !0,
                                    selections: [Dk, Ek],
                                    storageKey: null
                                }],
                                storageKey: "messenger_curriculum_steps(first:1)"
                            }],
                            storageKey: null
                        }],
                        storageKey: "linked_mentorship_programs(first:1)"
                    }, Fk, Gk, Hk, vi, Xj, {
                        alias: null,
                        args: null,
                        concreteType: "AllMessagingParticipantsOfThreadConnection",
                        kind: "LinkedField",
                        name: "all_participants",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "AllMessagingParticipantsOfThreadEdge",
                            kind: "LinkedField",
                            name: "edges",
                            plural: !0,
                            selections: [Ik, {
                                alias: null,
                                args: null,
                                concreteType: "MessagingParticipant",
                                kind: "LinkedField",
                                name: "node",
                                plural: !1,
                                selections: [{
                                    alias: null,
                                    args: null,
                                    concreteType: null,
                                    kind: "LinkedField",
                                    name: "messaging_actor",
                                    plural: !1,
                                    selections: [a, E, b, {
                                        kind: "InlineFragment",
                                        selections: [Jk, o, m, nb, Kk, Lk, Mk, Nk, Ok, Pk, Qk, {
                                            alias: null,
                                            args: null,
                                            concreteType: "ScimCompanyUser",
                                            kind: "LinkedField",
                                            name: "scim_company_user",
                                            plural: !1,
                                            selections: [Rk],
                                            storageKey: null
                                        }, ld],
                                        type: "User",
                                        abstractKey: null
                                    }, Sk, Tk, Vk, Wk, Xk, Uk, Yk, {
                                        kind: "InlineFragment",
                                        selections: [o, m, Kk, Zk, Nk, ld],
                                        type: "ReducedMessagingActor",
                                        abstractKey: null
                                    }, al, $k, k, h, bl, cl, Z, {
                                        kind: "InlineFragment",
                                        selections: [m, dl, el, {
                                            alias: null,
                                            args: null,
                                            concreteType: "WECGroupParticipantsConnection",
                                            kind: "LinkedField",
                                            name: "wec_group_participants",
                                            plural: !1,
                                            selections: [gd, X],
                                            storageKey: null
                                        }, {
                                            alias: null,
                                            args: null,
                                            concreteType: "WECGroupAdminsConnection",
                                            kind: "LinkedField",
                                            name: "wec_group_admins",
                                            plural: !1,
                                            selections: [gd],
                                            storageKey: null
                                        }],
                                        type: "WECGroupRecipient",
                                        abstractKey: null
                                    }],
                                    storageKey: null
                                }],
                                storageKey: null
                            }],
                            storageKey: null
                        }],
                        storageKey: null
                    }, {
                        condition: "load_messages",
                        kind: "Condition",
                        passingValue: !0,
                        selections: [{
                            alias: null,
                            args: fl,
                            concreteType: "MessagesOfThreadConnection",
                            kind: "LinkedField",
                            name: "messages",
                            plural: !1,
                            selections: [gl, {
                                alias: null,
                                args: null,
                                concreteType: null,
                                kind: "LinkedField",
                                name: "nodes",
                                plural: !0,
                                selections: jj,
                                storageKey: null
                            }],
                            storageKey: null
                        }]
                    }, {
                        condition: "load_read_receipts",
                        kind: "Condition",
                        passingValue: !0,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "MessagingReadReceiptsOfThreadConnection",
                            kind: "LinkedField",
                            name: "read_receipts",
                            plural: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: "MessagingReadReceipt",
                                kind: "LinkedField",
                                name: "nodes",
                                plural: !0,
                                selections: [hl, il, {
                                    alias: null,
                                    args: null,
                                    concreteType: null,
                                    kind: "LinkedField",
                                    name: "actor",
                                    plural: !1,
                                    selections: d,
                                    storageKey: null
                                }],
                                storageKey: null
                            }],
                            storageKey: null
                        }]
                    }, fi],
                    storageKey: null
                }],
                type: "Query",
                abstractKey: null
            },
            kind: "Request",
            operation: {
                argumentDefinitions: [ba, ga, aa, ea, fa, da, ca, ia, ha],
                kind: "Operation",
                name: "MessengerThreadsQuery",
                selections: [{
                    alias: null,
                    args: ja,
                    concreteType: "MessageThread",
                    kind: "LinkedField",
                    name: "message_thread",
                    plural: !1,
                    selections: [a, la, b, {
                        alias: "last_message",
                        args: ma,
                        concreteType: "MessagesOfThreadConnection",
                        kind: "LinkedField",
                        name: "messages",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: null,
                            kind: "LinkedField",
                            name: "nodes",
                            plural: !0,
                            selections: [E, c, {
                                alias: null,
                                args: null,
                                concreteType: "MessagingParticipant",
                                kind: "LinkedField",
                                name: "message_sender",
                                plural: !1,
                                selections: [{
                                    alias: null,
                                    args: null,
                                    concreteType: null,
                                    kind: "LinkedField",
                                    name: "messaging_actor",
                                    plural: !1,
                                    selections: $,
                                    storageKey: null
                                }, a],
                                storageKey: null
                            }, na, oa, D, N, {
                                kind: "InlineFragment",
                                selections: [Ma, K, Oa],
                                type: "UserMessage",
                                abstractKey: null
                            }, {
                                kind: "InlineFragment",
                                selections: [y, {
                                    alias: null,
                                    args: null,
                                    concreteType: null,
                                    kind: "LinkedField",
                                    name: "extensible_message_admin_text",
                                    plural: !1,
                                    selections: [E, Ea],
                                    storageKey: null
                                }],
                                type: "GenericAdminTextMessage",
                                abstractKey: null
                            }, O],
                            storageKey: null
                        }],
                        storageKey: "messages(last:1)"
                    }, Hb, {
                        alias: null,
                        args: null,
                        concreteType: "JobApplicationsFromThreadConnection",
                        kind: "LinkedField",
                        name: "thread_associated_job_applications",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "JobApplication",
                            kind: "LinkedField",
                            name: "nodes",
                            plural: !0,
                            selections: [a, {
                                alias: null,
                                args: null,
                                concreteType: "JobOpening",
                                kind: "LinkedField",
                                name: "job_opening",
                                plural: !1,
                                selections: [ra, {
                                    alias: null,
                                    args: null,
                                    concreteType: "Page",
                                    kind: "LinkedField",
                                    name: "employer",
                                    plural: !1,
                                    selections: [ig, jg, a],
                                    storageKey: null
                                }, a],
                                storageKey: null
                            }],
                            storageKey: null
                        }],
                        storageKey: null
                    }, mg, C, r, Af, vb, P, Vb, Ub, Xb, Yb, Q, Cc, uh, vh, wh, xh, yh, zh, Ah, Bh, {
                        alias: null,
                        args: null,
                        concreteType: "MessageThreadCustomization",
                        kind: "LinkedField",
                        name: "customization_info",
                        plural: !1,
                        selections: [Ch, Fh, Gh, a],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "MessengerThreadTheme",
                        kind: "LinkedField",
                        name: "thread_theme",
                        plural: !1,
                        selections: [a, Hh, Ih, Jh, Kh, {
                            alias: null,
                            args: null,
                            concreteType: "MessengerReactionPack",
                            kind: "LinkedField",
                            name: "reaction_pack",
                            plural: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: "MessengerReactionPackReactionAssetsConnection",
                                kind: "LinkedField",
                                name: "reaction_assets",
                                plural: !1,
                                selections: [{
                                    alias: null,
                                    args: null,
                                    concreteType: "MessengerReactionAsset",
                                    kind: "LinkedField",
                                    name: "nodes",
                                    plural: !0,
                                    selections: [Lh, Mh, Nh, Oh, a],
                                    storageKey: null
                                }],
                                storageKey: null
                            }, a],
                            storageKey: null
                        }],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "thread_admins",
                        plural: !0,
                        selections: $,
                        storageKey: null
                    }, Ph, Qh, Rh, {
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "thread_queue_metadata",
                        plural: !1,
                        selections: [E, Th, a],
                        storageKey: null
                    }, {
                        alias: null,
                        args: Ic,
                        concreteType: "MessengerEventRemindersOfThreadConnection",
                        kind: "LinkedField",
                        name: "event_reminders",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "MessengerEventReminder",
                            kind: "LinkedField",
                            name: "nodes",
                            plural: !0,
                            selections: [a, Uh, Ie, Vh, Wh, gc, {
                                alias: null,
                                args: null,
                                concreteType: "Page",
                                kind: "LinkedField",
                                name: "location_page",
                                plural: !1,
                                selections: [Xh, a],
                                storageKey: null
                            }, Yh, Zh, $h, He, {
                                alias: null,
                                args: null,
                                concreteType: "UserMessage",
                                kind: "LinkedField",
                                name: "trigger_message",
                                plural: !1,
                                selections: [Y, a],
                                storageKey: null
                            }, ai, bi, ci, di],
                            storageKey: null
                        }],
                        storageKey: "event_reminders(first:1)"
                    }, ei, gi, {
                        alias: null,
                        args: null,
                        concreteType: "PageMessageThread",
                        kind: "LinkedField",
                        name: "related_page_thread",
                        plural: !1,
                        selections: [hi, Xc, ji, ki, ii, a],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "RtcCallData",
                        kind: "LinkedField",
                        name: "rtc_call_data",
                        plural: !1,
                        selections: [li, mi, {
                            alias: null,
                            args: null,
                            concreteType: null,
                            kind: "LinkedField",
                            name: "initiator",
                            plural: !1,
                            selections: $,
                            storageKey: null
                        }],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "MarketplaceThreadData",
                        kind: "LinkedField",
                        name: "marketplace_thread_data",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "GroupCommerceProductItem",
                            kind: "LinkedField",
                            name: "for_sale_item",
                            plural: !1,
                            selections: [a, rc, ze, ye, R, Xd, ni, oi, pi, qi, ri, {
                                alias: "primary_photo",
                                args: null,
                                concreteType: null,
                                kind: "LinkedField",
                                name: "primary_listing_photo",
                                plural: !1,
                                selections: [E, vb, a],
                                storageKey: null
                            }, si, ti],
                            storageKey: null
                        }, ui, {
                            alias: null,
                            args: null,
                            concreteType: null,
                            kind: "LinkedField",
                            name: "buyer",
                            plural: !1,
                            selections: $,
                            storageKey: null
                        }, {
                            alias: null,
                            args: null,
                            concreteType: null,
                            kind: "LinkedField",
                            name: "seller",
                            plural: !1,
                            selections: [E, a, wi],
                            storageKey: null
                        }, yi, zi],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: null,
                        kind: "LinkedField",
                        name: "associated_object",
                        plural: !1,
                        selections: [E, a, {
                            kind: "InlineFragment",
                            selections: [Ai, b, G, va, Bi, Ci, Di, Ei, Fi, Gi],
                            type: "Group",
                            abstractKey: null
                        }, {
                            kind: "InlineFragment",
                            selections: [Ai, b, G, Bi, Ci, Di, rd, {
                                alias: null,
                                args: null,
                                concreteType: null,
                                kind: "LinkedField",
                                name: "event_place",
                                plural: !1,
                                selections: [E, Hi, O],
                                storageKey: null
                            }],
                            type: "Event",
                            abstractKey: null
                        }],
                        storageKey: null
                    }, Ci, Ii, Ji, Ki, Li, Mi, Ni, Oi, Dh, {
                        alias: null,
                        args: null,
                        concreteType: "PageCommItem",
                        kind: "LinkedField",
                        name: "page_comm_item",
                        plural: !1,
                        selections: [a, Pi, Qi, Ri, Si, {
                            alias: null,
                            args: null,
                            concreteType: "PageCommItemToPageCommItemOwnersConnection",
                            kind: "LinkedField",
                            name: "comm_item_owners",
                            plural: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: "PageCommItemOwner",
                                kind: "LinkedField",
                                name: "nodes",
                                plural: !0,
                                selections: [Ti, a],
                                storageKey: null
                            }],
                            storageKey: null
                        }, {
                            alias: null,
                            args: null,
                            concreteType: "TextWithEntities",
                            kind: "LinkedField",
                            name: "subtitle",
                            plural: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: "ImageAtRange",
                                kind: "LinkedField",
                                name: "image_ranges",
                                plural: !0,
                                selections: [{
                                    alias: null,
                                    args: null,
                                    concreteType: null,
                                    kind: "LinkedField",
                                    name: "entity_with_image",
                                    plural: !1,
                                    selections: [E, vb, O],
                                    storageKey: null
                                }, B, V],
                                storageKey: null
                            }, Ig, e],
                            storageKey: null
                        }, Ui],
                        storageKey: null
                    }, Vi, Wi, {
                        alias: null,
                        args: null,
                        concreteType: "GroupsSyncMetadata",
                        kind: "LinkedField",
                        name: "groups_sync_metadata",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "Group",
                            kind: "LinkedField",
                            name: "fb_group",
                            plural: !1,
                            selections: [o, a],
                            storageKey: null
                        }],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "PinnedMessageData",
                        kind: "LinkedField",
                        name: "pinned_messages",
                        plural: !0,
                        selections: [Y, Xi, {
                            condition: "threadlistViewFieldsOnly",
                            kind: "Condition",
                            passingValue: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: null,
                                kind: "LinkedField",
                                name: "message",
                                plural: !1,
                                selections: Tb,
                                storageKey: null
                            }]
                        }],
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        concreteType: "GroupsSyncMetadata",
                        kind: "LinkedField",
                        name: "work_groups_sync_metadata",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "Group",
                            kind: "LinkedField",
                            name: "fb_group",
                            plural: !1,
                            selections: [o, a, b, eh, lj, G, Fi, {
                                alias: null,
                                args: null,
                                concreteType: "MultiBackgroundIcon",
                                kind: "LinkedField",
                                name: "group_icon",
                                plural: !1,
                                selections: [sj, a],
                                storageKey: null
                            }],
                            storageKey: null
                        }],
                        storageKey: null
                    }, M, vj, xj, {
                        alias: null,
                        args: Ic,
                        concreteType: "MessengerMentorshipProgramOfThreadConnection",
                        kind: "LinkedField",
                        name: "linked_mentorship_programs",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "MentorshipProgram",
                            kind: "LinkedField",
                            name: "nodes",
                            plural: !0,
                            selections: [a, $g, fd, {
                                alias: null,
                                args: Ic,
                                concreteType: "MentorshipProgramToMentorshipMessengerCurriculumStepOrderByStepCountConnection",
                                kind: "LinkedField",
                                name: "messenger_curriculum_steps",
                                plural: !1,
                                selections: [{
                                    alias: null,
                                    args: null,
                                    concreteType: "MentorshipMessengerCurriculumStep",
                                    kind: "LinkedField",
                                    name: "nodes",
                                    plural: !0,
                                    selections: [Dk, Ek, a],
                                    storageKey: null
                                }],
                                storageKey: "messenger_curriculum_steps(first:1)"
                            }],
                            storageKey: null
                        }],
                        storageKey: "linked_mentorship_programs(first:1)"
                    }, Fk, Gk, Hk, vi, Xj, {
                        alias: null,
                        args: null,
                        concreteType: "AllMessagingParticipantsOfThreadConnection",
                        kind: "LinkedField",
                        name: "all_participants",
                        plural: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "AllMessagingParticipantsOfThreadEdge",
                            kind: "LinkedField",
                            name: "edges",
                            plural: !0,
                            selections: [Ik, {
                                alias: null,
                                args: null,
                                concreteType: "MessagingParticipant",
                                kind: "LinkedField",
                                name: "node",
                                plural: !1,
                                selections: [{
                                    alias: null,
                                    args: null,
                                    concreteType: null,
                                    kind: "LinkedField",
                                    name: "messaging_actor",
                                    plural: !1,
                                    selections: [E, {
                                        kind: "TypeDiscriminator",
                                        abstractKey: "__isMessagingActor"
                                    }, a, b, {
                                        kind: "InlineFragment",
                                        selections: [Jk, o, m, nb, Kk, Lk, Mk, Nk, Ok, Pk, Qk, {
                                            alias: null,
                                            args: null,
                                            concreteType: "ScimCompanyUser",
                                            kind: "LinkedField",
                                            name: "scim_company_user",
                                            plural: !1,
                                            selections: [Rk, a],
                                            storageKey: null
                                        }, Sb],
                                        type: "User",
                                        abstractKey: null
                                    }, Sk, Tk, Vk, Wk, Xk, Uk, Yk, {
                                        kind: "InlineFragment",
                                        selections: [o, m, Kk, Zk, Nk, Sb],
                                        type: "ReducedMessagingActor",
                                        abstractKey: null
                                    }, al, $k, k, h, bl, cl, Z, {
                                        kind: "InlineFragment",
                                        selections: [m, dl, el, {
                                            alias: null,
                                            args: null,
                                            concreteType: "WECGroupParticipantsConnection",
                                            kind: "LinkedField",
                                            name: "wec_group_participants",
                                            plural: !1,
                                            selections: [Wb, X],
                                            storageKey: null
                                        }, {
                                            alias: null,
                                            args: null,
                                            concreteType: "WECGroupAdminsConnection",
                                            kind: "LinkedField",
                                            name: "wec_group_admins",
                                            plural: !1,
                                            selections: [Wb],
                                            storageKey: null
                                        }],
                                        type: "WECGroupRecipient",
                                        abstractKey: null
                                    }],
                                    storageKey: null
                                }, a],
                                storageKey: null
                            }],
                            storageKey: null
                        }],
                        storageKey: null
                    }, ng, {
                        condition: "threadlistViewFieldsOnly",
                        kind: "Condition",
                        passingValue: !1,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: null,
                            kind: "LinkedField",
                            name: "saved_messages",
                            plural: !0,
                            selections: Tb,
                            storageKey: null
                        }]
                    }, {
                        condition: "load_messages",
                        kind: "Condition",
                        passingValue: !0,
                        selections: [{
                            alias: null,
                            args: fl,
                            concreteType: "MessagesOfThreadConnection",
                            kind: "LinkedField",
                            name: "messages",
                            plural: !1,
                            selections: [gl, {
                                alias: null,
                                args: null,
                                concreteType: null,
                                kind: "LinkedField",
                                name: "nodes",
                                plural: !0,
                                selections: Tb,
                                storageKey: null
                            }],
                            storageKey: null
                        }]
                    }, {
                        condition: "load_read_receipts",
                        kind: "Condition",
                        passingValue: !0,
                        selections: [{
                            alias: null,
                            args: null,
                            concreteType: "MessagingReadReceiptsOfThreadConnection",
                            kind: "LinkedField",
                            name: "read_receipts",
                            plural: !1,
                            selections: [{
                                alias: null,
                                args: null,
                                concreteType: "MessagingReadReceipt",
                                kind: "LinkedField",
                                name: "nodes",
                                plural: !0,
                                selections: [hl, il, {
                                    alias: null,
                                    args: null,
                                    concreteType: null,
                                    kind: "LinkedField",
                                    name: "actor",
                                    plural: !1,
                                    selections: $,
                                    storageKey: null
                                }],
                                storageKey: null
                            }],
                            storageKey: null
                        }]
                    }, fi],
                    storageKey: null
                }]
            },
            params: {
                id: "5956115261081471",
                metadata: {},
                name: "MessengerThreadsQuery",
                operationKind: "query",
                text: null
            }
        }
    }();
    ba("relay-runtime").PreloadableQueryRegistry.set(aa.params.id, aa);
    ea.exports = aa
}), null);
__d("ChatPluginSetupFlowCustomizationMutation_facebookRelayOperation", [], (function(a, b, c, d, e, f) {
    e.exports = "4905850822815294"
}), null);
__d("ChatPluginSetupFlowCustomizationMutation.graphql", ["ChatPluginSetupFlowCustomizationMutation_facebookRelayOperation"], (function(a, b, c, d, e, f) {
    "use strict";
    a = function() {
        var a = [{
                defaultValue: null,
                kind: "LocalArgument",
                name: "input"
            }],
            c = [{
                kind: "Variable",
                name: "data",
                variableName: "input"
            }],
            d = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "alignment",
                storageKey: null
            },
            e = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "away_greeting",
                storageKey: null
            },
            f = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "away_hours_enabled",
                storageKey: null
            },
            g = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "default_locale",
                storageKey: null
            },
            h = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "desktop_bottom_spacing",
                storageKey: null
            },
            i = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "desktop_entry_point_size",
                storageKey: null
            },
            j = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "desktop_window_size",
                storageKey: null
            },
            k = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "desktop_side_spacing",
                storageKey: null
            },
            l = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "entry_point_icon",
                storageKey: null
            },
            m = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "entry_point_label",
                storageKey: null
            },
            n = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "greeting_dialog_display",
                storageKey: null
            },
            o = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "guest_mode_enabled",
                storageKey: null
            },
            p = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "logged_in_greeting",
                storageKey: null
            },
            q = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "logged_out_greeting",
                storageKey: null
            },
            r = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "mobile_bottom_spacing",
                storageKey: null
            },
            s = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "mobile_entry_point_size",
                storageKey: null
            },
            t = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "mobile_optin",
                storageKey: null
            },
            u = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "mobile_side_spacing",
                storageKey: null
            },
            v = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "theme_color",
                storageKey: null
            },
            w = {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "whitelisted_domains",
                storageKey: null
            };
        return {
            fragment: {
                argumentDefinitions: a,
                kind: "Fragment",
                metadata: null,
                name: "ChatPluginSetupFlowCustomizationMutation",
                selections: [{
                    alias: null,
                    args: c,
                    concreteType: "UpsertLiveChatCustomizationConfigWithErrorLoggingResponsePayload",
                    kind: "LinkedField",
                    name: "upsert_live_chat_customization_config_with_error_logging",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "LiveChatCustomizationConfig",
                        kind: "LinkedField",
                        name: "live_chat_customization_config",
                        plural: !1,
                        selections: [d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w],
                        storageKey: null
                    }],
                    storageKey: null
                }],
                type: "Mutation",
                abstractKey: null
            },
            kind: "Request",
            operation: {
                argumentDefinitions: a,
                kind: "Operation",
                name: "ChatPluginSetupFlowCustomizationMutation",
                selections: [{
                    alias: null,
                    args: c,
                    concreteType: "UpsertLiveChatCustomizationConfigWithErrorLoggingResponsePayload",
                    kind: "LinkedField",
                    name: "upsert_live_chat_customization_config_with_error_logging",
                    plural: !1,
                    selections: [{
                        alias: null,
                        args: null,
                        concreteType: "LiveChatCustomizationConfig",
                        kind: "LinkedField",
                        name: "live_chat_customization_config",
                        plural: !1,
                        selections: [d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, {
                            alias: null,
                            args: null,
                            kind: "ScalarField",
                            name: "id",
                            storageKey: null
                        }],
                        storageKey: null
                    }],
                    storageKey: null
                }]
            },
            params: {
                id: b("ChatPluginSetupFlowCustomizationMutation_facebookRelayOperation"),
                metadata: {},
                name: "ChatPluginSetupFlowCustomizationMutation",
                operationKind: "mutation",
                text: null
            }
        }
    }();
    e.exports = a
}), null);
__d("CreateCustomerChatPluginGuestUserMutation_facebookRelayOperation", [], (function(a, b, c, d, e, f) {
    e.exports = "4659103927473111"
}), null);
__d("CreateCustomerChatPluginGuestUserMutation.graphql", ["CreateCustomerChatPluginGuestUserMutation_facebookRelayOperation"], (function(a, b, c, d, e, f) {
    "use strict";
    a = function() {
        var a = [{
                defaultValue: null,
                kind: "LocalArgument",
                name: "input"
            }],
            c = [{
                alias: null,
                args: [{
                    kind: "Variable",
                    name: "data",
                    variableName: "input"
                }],
                concreteType: "CreateCustomerChatPluginGuestUserResponsePayload",
                kind: "LinkedField",
                name: "create_customer_chat_plugin_guest_user",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "session_key",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "fbid",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "access_token",
                    storageKey: null
                }, {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "is_lightswitch_enabled",
                    storageKey: null
                }],
                storageKey: null
            }];
        return {
            fragment: {
                argumentDefinitions: a,
                kind: "Fragment",
                metadata: null,
                name: "CreateCustomerChatPluginGuestUserMutation",
                selections: c,
                type: "Mutation",
                abstractKey: null
            },
            kind: "Request",
            operation: {
                argumentDefinitions: a,
                kind: "Operation",
                name: "CreateCustomerChatPluginGuestUserMutation",
                selections: c
            },
            params: {
                id: b("CreateCustomerChatPluginGuestUserMutation_facebookRelayOperation"),
                metadata: {},
                name: "CreateCustomerChatPluginGuestUserMutation",
                operationKind: "mutation",
                text: null
            }
        }
    }();
    e.exports = a
}), null);
__d("LiveChatPluginGuestPersistentMenuQuery_facebookRelayOperation", [], (function(a, b, c, d, e, f) {
    e.exports = "4554664381281258"
}), null);
__d("LiveChatPluginGuestPersistentMenuQuery.graphql", ["LiveChatPluginGuestPersistentMenuQuery_facebookRelayOperation"], (function(a, b, c, d, e, f) {
    "use strict";
    a = function() {
        var a = [{
                defaultValue: null,
                kind: "LocalArgument",
                name: "data"
            }],
            c = [{
                alias: null,
                args: [{
                    kind: "Variable",
                    name: "data",
                    variableName: "data"
                }],
                concreteType: "CustomerChatPluginGuestUserPersistentMenuResult",
                kind: "LinkedField",
                name: "customer_chat_plugin_guest_user_persistent_menu",
                plural: !1,
                selections: [{
                    alias: null,
                    args: null,
                    concreteType: "MessengerNonNestedCTAShareData",
                    kind: "LinkedField",
                    name: "menu_items",
                    plural: !0,
                    selections: [{
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "id",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "action_link",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "action_type",
                        storageKey: null
                    }, {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "title",
                        storageKey: null
                    }],
                    storageKey: null
                }],
                storageKey: null
            }];
        return {
            fragment: {
                argumentDefinitions: a,
                kind: "Fragment",
                metadata: null,
                name: "LiveChatPluginGuestPersistentMenuQuery",
                selections: c,
                type: "Query",
                abstractKey: null
            },
            kind: "Request",
            operation: {
                argumentDefinitions: a,
                kind: "Operation",
                name: "LiveChatPluginGuestPersistentMenuQuery",
                selections: c
            },
            params: {
                id: b("LiveChatPluginGuestPersistentMenuQuery_facebookRelayOperation"),
                metadata: {},
                name: "LiveChatPluginGuestPersistentMenuQuery",
                operationKind: "query",
                text: null
            }
        }
    }();
    e.exports = a
}), null);
__d("CometBlueBridgeKeyCommandListener.react", ["BaseKeyCommandListener.react", "CometGlobalKeyCommandWidget", "CometLayerKeyCommandWrapper.react", "react"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h = d("react");

    function a(a) {
        return h.jsx(c("CometGlobalKeyCommandWidget").Wrapper, {
            debugName: "global",
            children: h.jsx(c("BaseKeyCommandListener.react"), {
                observersEnabled: !1,
                children: h.jsx(c("CometLayerKeyCommandWrapper.react"), {
                    debugName: "Comet blue bridge layer",
                    children: a.children
                })
            })
        })
    }
    a.displayName = a.name + " [from " + f.id + "]";
    g["default"] = a
}), 98);
__d("MWChatDeleteMessageEventEmitter", ["BaseEventEmitter"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h = "deleteMessage",
        i = new(c("BaseEventEmitter"))();

    function a(a) {
        i.emit(h, a)
    }

    function b(a) {
        var b = i.addListener(h, a);
        return function() {
            return b.remove()
        }
    }
    g.emit = a;
    g.subscribe = b
}), 98);
__d("MessengerSharedMediaActionsLoader", ["JSResource"], (function(a, b, c, d, e, f, g) {
    "use strict";

    function a(a, b) {
        c("JSResource").loadAll([c("JSResource")("MessengerSharedMediaActions").__setRef("MessengerSharedMediaActionsLoader")], function(c) {
            c.deletePhotos(a, b)
        })
    }
    g.deletePhotos = a
}), 98);
__d("MessengerSpinnerReact.bs", ["cx", "fbt", "ix", "Image.react", "joinClasses", "react"], (function(a, b, c, d, e, f, g, h, i) {
    "use strict";
    var j, k = j || b("react"),
        l = i("86853"),
        m = i("86857"),
        n = i("86854");

    function o(a) {
        var c = a.className,
            d = a.color,
            e = a.size;
        a = a.center;
        var f = c !== void 0 ? c : "",
            g = d !== void 0 ? d : "blue",
            i = e !== void 0 ? e : 24;
        c = a !== void 0 ? a : !1;
        var j = function(a) {
            if (i === 24)
                if (g === "blue") return l;
                else return m;
            else return n
        };
        d = function(a) {
            return k.jsx(b("Image.react"), {
                className: b("joinClasses")(f, "_3u55 _3qh2"),
                "aria-label": h._( /*FBT_CALL*/ "\u05d1\u05d8\u05e2\u05d9\u05e0\u05d4" /*FBT_CALL*/ ),
                "aria-busy": !0,
                src: j(void 0),
                height: i,
                width: i
            })
        };
        if (c) return k.jsx("div", {
            className: "_8a6k",
            children: d(void 0)
        });
        else return d(void 0)
    }

    function a(a) {
        var b = a.className,
            c = a.color,
            d = a.size;
        a = a.center;
        return o({
            className: b == null ? "" : b,
            color: c == null ? "blue" : c,
            size: d == null ? 24 : d,
            center: a == null ? !1 : a
        })
    }
    c = 32;
    d = 24;
    e = o;
    f.large_size = c;
    f.medium_size = d;
    f.blue_src = l;
    f.grey_src = m;
    f.large_blue_src = n;
    f.make = e;
    f.jsComponent = a
}), null);
__d("MessengerSpinner.react", ["MessengerSpinnerReact.bs"], (function(a, b, c, d, e, f) {
    e.exports = b("MessengerSpinnerReact.bs").make, e.exports.large_size = b("MessengerSpinnerReact.bs").large_size, e.exports.medium_size = b("MessengerSpinnerReact.bs").medium_size
}), null);
__d("MercuryMessageIDs.bs", ["KeyedCallbackManager", "bs_curry", "bs_js_dict"], (function(a, b, c, d, e, f) {
    "use strict";
    var g = new(b("KeyedCallbackManager"))();

    function a(a, c) {
        var d = a.filter(function(a) {
                return a.indexOf("id") === -1
            }),
            e = function(d) {
                return b("bs_curry")._1(c, a.map(function(a) {
                    var c = b("bs_js_dict").get(d, a);
                    if (c !== void 0) return c;
                    else return a
                }))
            };
        return g.executeOrEnqueue(d, e)
    }

    function c(a, b) {
        g.setResource(a, b)
    }
    f.getServerIDs = a;
    f.addServerID = c
}), null);
__d("MessengerAttachmentTransformerForSend.bs", ["MercuryAttachmentType", "MessengerAttachmentTransformer.bs", "MessengerMessageTransformer.bs"], (function(a, b, c, d, e, f) {
    "use strict";

    function g(a, c, d, e) {
        c = c.node;
        if (c == null) return {
            attach_type: b("MercuryAttachmentType").ERROR
        };
        if (c.__typename === "ExtensibleMessageAttachment") {
            var f = c.story_attachment,
                g = c.genie_attachment,
                h;
            if (g == null) h = null;
            else {
                g = g.genie_message;
                var i;
                if (g == null) i = null;
                else {
                    g = g.story_attachment;
                    i = {
                        story_attachment: g == null ? null : b("MessengerMessageTransformer.bs").unsafeCastExtensibleAttachment(g)
                    }
                }
                h = {
                    genie_message: i
                }
            }
            g = {
                legacy_attachment_id: c.legacy_attachment_id,
                story_attachment: f == null ? null : b("MessengerMessageTransformer.bs").unsafeCastExtensibleAttachment(f),
                genie_attachment: h
            }
        } else g = null;
        i = c.__typename === "Sticker" ? c : null;
        f = c.__typename;
        var j;
        switch (f) {
            case "MessageAnimatedImage":
            case "MessageAudio":
            case "MessageFile":
            case "MessageImage":
            case "MessageVideo":
                j = [c];
                break;
            default:
                j = null
        }
        h = b("MessengerMessageTransformer.bs").unsafeCastBlobAttachments({
            blob_attachments: j
        });
        f = b("MessengerAttachmentTransformer.bs").transformAttachment(a, {
            extensible_attachment: g,
            blob_attachments: h,
            sticker: i
        }, d, e);
        if (f.length !== 0) return f[0];
        else return {}
    }

    function a(a, b, c, d) {
        return b.map(function(b) {
            return g(a, b, c, d)
        })
    }
    f._transform = g;
    f.transform = a
}), null);
__d("MessengerFolders.bs", ["MercuryFoldersConfig", "MessagingThreadType", "MessengerEnvironment", "gkx", "qex"], (function(a, b, c, d, e, f) {
    "use strict";
    d = b("qex")._("1997") === !0 && b("MessengerEnvironment").messengerdotcom ? ["inbox", "pending", "other", "action:archived", "marketplace_folder"] : ["inbox", "pending", "other", "action:archived"];
    var g = d.filter(function(a) {
        if (a === "pending") return !b("MercuryFoldersConfig").hide_message_filtered;
        else if (a === "other") return !b("MercuryFoldersConfig").hide_message_requests;
        else return !0
    });

    function a(a) {
        return [].concat(g)
    }

    function c(a) {
        if (a.is_archived) return "action:archived";
        var c = a.thread_type;
        if (!(c == null) && c === b("MessagingThreadType").MARKETPLACE && b("gkx")("965951")) return "marketplace_folder";
        else return a.folder
    }
    f.getSupportedFolders = a;
    f.getFromMeta = c
}), null);
__d("MessengerThreadFetchLoggerUtil", ["FBLogger", "MercuryIDs", "QuickPerformanceLogger", "performanceAbsoluteNow", "qpl"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h = 1,
        i = new Map();
    a = function(a) {
        try {
            c("QuickPerformanceLogger").markerStart(c("qpl")._(25296904, "8295"), h);
            a = d("MercuryIDs").isValid(a) ? d("MercuryIDs").tokenize(a).value : a;
            i.set(a, h);
            h++
        } catch (a) {
            c("FBLogger")("mercury").catching(a).warn("Logging thread info fetch encountered error")
        }
    };
    b = function(a, b) {
        try {
            a = d("MercuryIDs").isValid(a) ? d("MercuryIDs").tokenize(a).value : a;
            var e = i.get(a);
            e != null && (c("QuickPerformanceLogger").markerEnd(c("qpl")._(25296904, "8295"), b, e), i["delete"](a))
        } catch (a) {
            c("FBLogger")("mercury").catching(a).warn("Logging thread info fetch encountered error")
        }
    };
    e = function(a, b, d) {
        d === void 0 && (d = c("performanceAbsoluteNow")());
        a = i.get(a);
        a != null && c("QuickPerformanceLogger").markerPoint(c("qpl")._(25296904, "8295"), b, {
            instanceKey: a,
            timestamp: d
        })
    };
    g.markerStart = a;
    g.markerEnd = b;
    g.markerPoint = e
}), 98);
__d("MessengerGraphQLThreadFetcher.bs", ["ChatReliabilityInstrumentation", "MercuryServerRequestsConfig", "MessengerServerPayloadTransformer.bs", "MessengerThreadFetchLoggerUtil", "MessengerThreadsQuery.graphql", "MessengerWebGraphQLHelper", "ODS", "Promise", "bs_caml_array", "bs_caml_exceptions", "bs_caml_format", "bs_caml_option", "bs_js_null_undefined", "bs_pervasives", "gkx"], (function(a, b, c, d, e, f) {
    "use strict";
    var g = {
        contents: !0
    };

    function h(a, c, d, e, f) {
        if (a == null)
            if (e) return {
                actions: null,
                thread: void 0,
                end_of_history: {
                    type: "user",
                    fbid: c
                },
                roger: null,
                delivery_receipts: []
            };
            else return {
                actions: null,
                thread: void 0,
                end_of_history: void 0,
                roger: null,
                delivery_receipts: []
            };
        e = [];
        var g = b("MessengerServerPayloadTransformer.bs").getThreadFBID(a),
            h = b("MessengerServerPayloadTransformer.bs").getOtherUserID(a);
        g = h == null ? g == null ? b("bs_pervasives").failwith("No thread ID") : g : h;
        g !== c && b("bs_pervasives").failwith("Thread ID mismatch");
        h = b("MessengerServerPayloadTransformer.bs").transformThread(d, a, f);
        g = b("bs_js_null_undefined").fromOption(b("MessengerServerPayloadTransformer.bs").transformMessages(d, a, f));
        f = b("MessengerServerPayloadTransformer.bs").transformReadReceipts(d, a);
        if (f !== void 0) {
            d = {};
            d[c] = b("bs_caml_option").valFromOption(f);
            f = d
        } else f = null;
        d = b("MessengerServerPayloadTransformer.bs").transformDeliveryReceipts(a);
        if (d.length >= 1) {
            d = b("bs_caml_array").get(d, 0);
            h.is_canonical ? e.push({
                other_user_fbid: c,
                thread_fbid: null,
                time: b("bs_caml_format").caml_float_of_string(d.timestamp_precise)
            }) : e.push({
                other_user_fbid: null,
                thread_fbid: c,
                time: b("bs_caml_format").caml_float_of_string(d.timestamp_precise)
            })
        }
        d = b("MessengerServerPayloadTransformer.bs").getMessagePageInfo(a);
        if (d !== void 0)
            if (b("bs_caml_option").valFromOption(d).has_previous_page) return {
                actions: g,
                thread: h,
                end_of_history: void 0,
                roger: f,
                delivery_receipts: e
            };
            else return {
                actions: g,
                thread: h,
                end_of_history: {
                    type: "thread",
                    fbid: c
                },
                roger: f,
                delivery_receipts: e
            };
        else return {
            actions: g,
            thread: h,
            end_of_history: void 0,
            roger: f,
            delivery_receipts: e
        }
    }

    function i(a) {
        b("MessengerThreadFetchLoggerUtil").markerPoint(a.id, "sendThreadInfoFetchRequest");
        return {
            id: b("MessengerThreadsQuery.graphql").params.id,
            variables: {
                id: a.id,
                message_limit: a.limit,
                load_messages: a.limit > 0,
                load_read_receipts: a.loadReadReceipts,
                load_delivery_receipts: a.loadDeliveryReceipts,
                before: a.timestamp,
                is_work_teamwork_not_putting_muted_in_unreads: !1,
                threadlistViewFieldsOnly: b("gkx")("1950744"),
                source: a.source
            }
        }
    }
    var j = b("bs_caml_exceptions").create("MessengerGraphQLThreadFetcher.SessionLoggedOut");

    function a(a, c, d) {
        if (!g.contents) return b("Promise").reject({
            RE_EXN_ID: j
        });
        var e = c.map(i);
        return b("Promise").all(b("MessengerWebGraphQLHelper").execAll(e, {
            actorID: d ? a : null,
            batchName: "MessengerGraphQLThreadFetcher",
            msgrRegion: b("MercuryServerRequestsConfig").msgrRegion
        }))["catch"](function(a) {
            var d;
            try {
                d = b("bs_caml_array").get(a.errors, 0).should_end_session
            } catch (a) {
                d = !1
            }
            d && (g.contents = !1);
            b("ODS").bumpEntityKey(2966, "messenger_webgraphql", "fetch_thread.failure");
            c.forEach(function(a) {
                b("MessengerThreadFetchLoggerUtil").markerEnd(a.id, "FAIL")
            });
            b("ChatReliabilityInstrumentation").logERROR("fetch_thread_fail");
            return b("Promise").reject(a)
        }).then(function(e) {
            b("ODS").bumpEntityKey(2966, "messenger_webgraphql", "fetch_thread.success");
            return e.map(function(e, f) {
                e = e.message_thread;
                f = b("bs_caml_array").get(c, f);
                b("MessengerThreadFetchLoggerUtil").markerPoint(f.id, "getThreadInfoFetchResponse");
                return h(e, f.id, a, f.isCanonical, d)
            })
        })
    }
    f.canMakeRequests = g;
    f._transformPayload = h;
    f._getQueryParams = i;
    f.SessionLoggedOut = j;
    f.fetchAll = a
}), null);
__d("MercuryActionStatus", [], (function(a, b, c, d, e, f) {
    a = Object.freeze({
        UNSENT: 0,
        SUCCESS: 1,
        UNCONFIRMED: 3,
        FAILED_UNKNOWN_REASON: 4,
        UNABLE_TO_CONFIRM: 5,
        RESENT: 6,
        RESENDING: 7,
        ERROR: 10
    });
    f["default"] = a
}), 66);
__d("MercuryMessageDeliveryState", [], (function(a, b, c, d, e, f) {
    "use strict";
    a = Object.freeze({
        SENDING: 1,
        SENT: 2,
        DELIVERED: 3,
        ERROR: 0,
        UNKNOWN: -1
    });
    f["default"] = a
}), 66);
__d("MercuryPayloadSource", [], (function(a, b, c, d, e, f) {
    a = Object.freeze({
        UNKNOWN: "unknown",
        CLIENT_CHANNEL_MESSAGE: "client_channel_message",
        CLIENT_SEND_MESSAGE: "client_send_message",
        CLIENT_CHANGE_ARCHIVED_STATUS: "client_change-archived_status",
        CLIENT_CHANGE_PINNED_MESSAGES: "client_change-pinned_messages",
        CLIENT_CHANGE_PINNED_STATUS: "client_change-pinned_status",
        CLIENT_CHANGE_PAGE_FOLLOW_UP_STATUS: "client_change_page_follow_up_status",
        CLIENT_CHANGE_PRIORITIZATION_STATUS: "client_change_prioritization_status",
        CLIENT_CHANGE_UNRESPONDED_STATUS: "client_change_unresponded_status",
        CLIENT_CHANGE_FOLDER: "client_change_folder",
        CLIENT_CHANGE_MUTE_SETTINGS: "client_change_mute_settings",
        CLIENT_CHANGE_READ_STATUS: "client_change_read_status",
        CLIENT_CHANGE_CUSTOM_LIKE: "client_change_custom_like",
        CLIENT_MARK_THREAD_SEEN: "client_mark_thread_seen",
        CLIENT_ADD_PARTICIPANTS: "client_add_participants",
        CLIENT_FETCH_PARTICIPANTS: "client_fetch_participants",
        CLIENT_DELETE_MESSAGES: "client_delete_messages",
        CLIENT_DELETE_THREAD: "client_delete_thread",
        CLIENT_UPDATE_SNIPPET: "client_update_snippet",
        CLIENT_HANDLE_ERROR: "client_handle_error",
        CLIENT_CHANGE_FLAG: "client_change_flag",
        CLIENT_MOVE_PENDING_TO_INBOX: "client_move_pending_to_inbox",
        CLIENT_CREATE_PAGE_ADMIN_NOTE: "client_create_page_admin_note",
        CLIENT_UNWRAP_MESSAGE: "client_unwrap_message",
        CLIENT_UPDATE_COMM_STATUS: "client_update_comm_status",
        CLIENT_UPDATE_COMM_ITEM_OWNER: "client_update_comm_item_owner",
        CLIENT_CHANGE_SAVED_MESSAGE_STATUS: "client_update_saved_message_status",
        SERVER_INITIAL_DATA: "server_initial_data",
        SERVER_SEND_MESSAGE: "server_send_message",
        SERVER_CHANGE_ARCHIVED_STATUS: "server_change_archived_status",
        SERVER_CHANGE_PINNED_MESSAGES: "server_change-pinned_messages",
        SERVER_CHANGE_PINNED_STATUS: "server_change_pinned_status",
        SERVER_CHANGE_PAGE_FOLLOW_UP_STATUS: "server_change_page_follow_up_status",
        SERVER_CHANGE_READ_STATUS: "server_change_read_status",
        SERVER_MARK_FOLDER_READ: "server_mark_folder_read",
        SERVER_MARK_SEEN: "server_mark_seen",
        SERVER_FETCH_PARTICIPANTS: "server_fetch_participants",
        SERVER_FETCH_THREAD_INFO: "server_fetch_thread_info",
        SERVER_FETCH_THREADLIST_INFO: "server_fetch_threadlist_info",
        SERVER_STANDALONE_NOTIFICATIONS: "server_standalone_notifications",
        SERVER_THREAD_SYNC: "server_thread_sync",
        SERVER_TAB_PRESENCE: "server_tab_presence",
        SERVER_UNREAD_THREADS: "server_unread_threads",
        SERVER_UNSEEN_THREADS: "server_unseen_threads",
        SERVER_SEARCH: "server_search",
        SERVER_CHANGE_FLAG: "server_change_flag",
        SERVER_INVALIDATE_THREAD_STATE: "server_invalidate_thread_state",
        SERVER_INVALIDATE_GLOBAL_STATE: "server_invalidate_global_state"
    });
    f["default"] = a
}), 66);
__d("MercuryViewer", ["CurrentUser", "MercuryAssert"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h = "fbid:" + c("CurrentUser").getID();

    function a() {
        return h
    }

    function b(a) {
        d("MercuryAssert").isParticipantID(a);
        return a === h
    }
    g.getID = a;
    g.isViewer = b
}), 98);
__d("Utils.bs", [], (function(a, b, c, d, e, f) {
    "use strict";

    function a(a) {
        if (a == null) return !1;
        else return a
    }

    function b(a) {
        if (a !== void 0) return a;
        else return !1
    }
    f.isTruthy = a;
    f.optionBoolToBool = b
}), null);
__d("MessengerMessage.bs", ["MercuryActionStatus", "MercuryActionType", "MercuryLogMessageType", "MercuryMessageDeliveryState", "MercuryPayloadSource", "MercuryViewer", "URI", "Utils.bs", "bs_caml", "bs_caml_obj", "bs_caml_option", "bs_js_dict", "bs_js_json", "isMessengerDotComURI"], (function(a, b, c, d, e, f) {
    "use strict";
    var g;

    function a(a, b, c, d, e, f) {
        b = {
            thread_id: b,
            thread_fbid: null,
            other_user_fbid: null,
            action_type: d,
            message_id: a,
            secondary_language_body: null,
            threading_id: null,
            offline_threading_id: null,
            author: c,
            author_email: "",
            ephemeral_ttl_mode: null,
            timestamp: e,
            is_unread: null,
            is_filtered_content: !1,
            is_filtered_content_bh: !1,
            is_filtered_content_account: !1,
            is_filtered_content_quasar: !1,
            is_filtered_content_invalid_app: !1,
            is_sponsored: !1,
            is_one_way_sent: !1,
            ad_id: null,
            ad_client_token: null,
            commerce_message_type: null,
            customizations: [],
            source: "",
            source_tags: [],
            m_suggestions: null,
            tags: [],
            is_spoof_warning: !1,
            folder: "inbox",
            platform_xmd: null,
            message_source: null,
            montage_reply_data: null,
            replied_to_message: null,
            skip_bump_thread: !1,
            profile_ranges: null,
            reactions: null,
            attachments: null,
            ranges: null,
            meta_ranges: null,
            status: null,
            log_message_type: null,
            log_message_data: null,
            log_message_body: null,
            raw_attachments: null,
            body: null,
            subject: null,
            has_attachment: null,
            creator_info: null,
            error_data: null,
            removed_timestamp: null,
            unsender: null,
            verse_group_role_xmd: null,
            message_unsendability_status: null,
            is_forwarded: !1,
            preview_attachments: null,
            sticker_id: null,
            mib_direct_message_data: null
        };
        return Object.assign(b, f)
    }

    function c(a) {
        var b = a.offline_threading_id;
        if (b == null) return !1;
        else return b === a.message_id
    }

    function d(a) {
        if (b("bs_caml_obj").caml_equal(a.action_type, b("MercuryActionType").USER_GENERATED_MESSAGE)) return !0;
        a = a.log_message_type;
        if (a == null) return !0;
        else return !(b("bs_caml_obj").caml_equal(a, b("MercuryLogMessageType").SUBSCRIBE) || b("bs_caml_obj").caml_equal(a, b("MercuryLogMessageType").UNSUBSCRIBE) || b("bs_caml_obj").caml_equal(a, b("MercuryLogMessageType").SERVER_ERROR) || b("bs_caml_obj").caml_equal(a, b("MercuryLogMessageType").LIVE_LISTEN))
    }

    function e(a) {
        var c = a.ranges;
        if (c == null) return;
        c = c.map(function(a) {
            var c = a.entity;
            if (c == null) return a;
            var d = b("Utils.bs").isTruthy(c.external),
                e = c.url;
            if (d) return a;
            if (e == null) return a;
            d = new(g || (g = b("URI")))(e);
            e = b("isMessengerDotComURI")(g.getRequestURI());
            var f = d.getDomain();
            if (!e) return a;
            return !(f == null) && f !== "" ? a : Object.assign(Object.assign({}, a), {
                entity: Object.assign(Object.assign({}, c), {
                    url: d.setProtocol("https").setDomain("www.facebook.com").toString()
                })
            })
        });
        Object.assign(a, {
            ranges: c
        })
    }

    function h(a) {
        if (b("bs_caml_obj").caml_equal(a, b("MercuryPayloadSource").UNKNOWN) || b("bs_caml_obj").caml_equal(a, b("MercuryPayloadSource").SERVER_INITIAL_DATA) || b("bs_caml_obj").caml_equal(a, b("MercuryPayloadSource").SERVER_FETCH_THREAD_INFO)) return !0;
        else return b("bs_caml_obj").caml_equal(a, b("MercuryPayloadSource").SERVER_THREAD_SYNC)
    }

    function i(a) {
        a = a.author;
        if (a == null) return !1;
        else return a === b("MercuryViewer").getID()
    }

    function j(a) {
        a = a.author;
        if (a == null) return !1;
        else return a !== b("MercuryViewer").getID()
    }

    function k(a) {
        a = a.status;
        if (a == null) return !1;
        else if (b("bs_caml_obj").caml_equal(a, b("MercuryActionStatus").UNSENT) || b("bs_caml_obj").caml_equal(a, b("MercuryActionStatus").UNCONFIRMED) || b("bs_caml_obj").caml_equal(a, b("MercuryActionStatus").UNABLE_TO_CONFIRM)) return !0;
        else return b("bs_caml_obj").caml_equal(a, b("MercuryActionStatus").RESENDING)
    }

    function l(a) {
        a = a.status;
        if (a == null) return !0;
        else return b("bs_caml_obj").caml_equal(a, b("MercuryActionStatus").SUCCESS)
    }

    function m(a, c) {
        return b("bs_caml").caml_float_compare(a.timestamp, c.timestamp)
    }

    function n(a) {
        a = a.status;
        if (a == null) return !1;
        else if (b("bs_caml_obj").caml_equal(a, b("MercuryActionStatus").FAILED_UNKNOWN_REASON) || b("bs_caml_obj").caml_equal(a, b("MercuryActionStatus").UNABLE_TO_CONFIRM)) return !0;
        else return b("bs_caml_obj").caml_equal(a, b("MercuryActionStatus").ERROR)
    }

    function o(a) {
        a = a.error_data;
        if (!(a == null)) return b("bs_caml_option").nullable_to_opt(a.description)
    }

    function p(a, c) {
        if (n(a)) return b("MercuryMessageDeliveryState").ERROR;
        else if (k(a)) return b("MercuryMessageDeliveryState").SENDING;
        else if (l(a))
            if (a.is_one_way_sent || a.timestamp > c) return b("MercuryMessageDeliveryState").SENT;
            else return b("MercuryMessageDeliveryState").DELIVERED;
        else return b("MercuryMessageDeliveryState").UNKNOWN
    }

    function q(a, b) {
        if (n(a)) return 4;
        else if (k(a)) return 1;
        else if (l(a))
            if (a.timestamp <= b && !a.is_one_way_sent) return 3;
            else return 2;
        else return 0
    }

    function r(a) {
        try {
            a = b("bs_caml_option").some(JSON.parse(a))
        } catch (b) {
            a = void 0
        }
        if (a === void 0) return;
        a = b("bs_js_json").classify(b("bs_caml_option").valFromOption(a));
        if (typeof a === "number") return;
        if (a.TAG !== 2) return;
        a = b("bs_js_dict").get(a._0, "persona");
        if (a === void 0) return;
        a = b("bs_js_json").classify(b("bs_caml_option").valFromOption(a));
        if (typeof a === "number" || a.TAG !== 2) return;
        else return b("bs_caml_option").some(a._0)
    }

    function s(a) {
        if (a == null) return null;
        a = a.platform_xmd;
        if (a == null) return null;
        a = r(a);
        if (a === void 0) return null;
        a = b("bs_caml_option").valFromOption(a);
        var c = b("bs_js_dict").get(a, "id"),
            d = b("bs_js_dict").get(a, "name");
        a = b("bs_js_dict").get(a, "profile_picture_url");
        if (c !== void 0 && d !== void 0 && a !== void 0) return {
            id: b("bs_caml_option").valFromOption(c),
            name: b("bs_caml_option").valFromOption(d),
            profile_picture_url: b("bs_caml_option").valFromOption(a)
        };
        else return null
    }

    function t(a) {
        var c = a.log_message_type;
        if (!(c == null) && b("bs_caml_obj").caml_equal(c, b("MercuryLogMessageType").SERVER_ERROR)) return b("bs_caml_obj").caml_equal(a.action_type, b("MercuryActionType").LOG_MESSAGE);
        else return !1
    }

    function u(a, b) {
        var c = a.thread_fbid,
            d = a.other_user_fbid;
        a = a.is_from_iris;
        if (!(b == null) && b) return !1;
        if (!(c == null) || !(d == null) || a) return !0;
        else return !1
    }
    f.makeFakeMessage = a;
    f.isLocalMessage = c;
    f.isTitanMessage = d;
    f.finalizeRanges = e;
    f.shouldSortForPayloadSource = h;
    f.isOutbound = i;
    f.isInbound = j;
    f.isSending = k;
    f.isSent = l;
    f.compare = m;
    f.hasError = n;
    f.getError = o;
    f.getDeliveryState = p;
    f.getGutterItemStatus = q;
    f.getPersonaData = r;
    f.getPersona = s;
    f.isErrorLogMessage = t;
    f.hasServerTimestamp = u
}), null);
__d("MessengerMessageDFFFetcher.bs", ["MessengerMessageQuery.graphql", "MessengerMessageTransformer.bs", "MessengerThreadMetadataQuery.graphql", "MessengerWebGraphQLHelper", "Promise", "bs_caml_array"], (function(a, b, c, d, e, f) {
    "use strict";

    function a(a, c, d) {
        var e = {
            id: b("MessengerThreadMetadataQuery.graphql").params.id,
            variables: {
                id: c.thread_id,
                source: c.source
            }
        };
        c = {
            id: b("MessengerMessageQuery.graphql").params.id,
            variables: {
                thread_and_message_id: {
                    thread_id: c.thread_id,
                    message_id: c.message_id
                },
                source: c.source
            }
        };
        return b("Promise").all([b("MessengerWebGraphQLHelper").exec(e, {
            actorID: a,
            batchName: "MessengerMessageDFFFetcher",
            msgrRegion: null
        }), b("MessengerWebGraphQLHelper").exec(c, {
            actorID: a,
            batchName: "MessengerMessageDFFFetcher",
            msgrRegion: null
        })]).then(function(c) {
            var e = b("bs_caml_array").get(c, 0);
            c = b("bs_caml_array").get(c, 1);
            e = e.message_thread;
            c = c.message;
            if (e == null) throw {
                RE_EXN_ID: "Not_found",
                Error: new Error()
            };
            if (!(c == null)) return b("Promise").resolve(b("MessengerMessageTransformer.bs").transformMessage(a, c, {
                thread_id: null,
                thread_fbid: e.thread_key.thread_fbid,
                other_user_fbid: e.thread_key.other_user_id,
                folder: e.folder.toLowerCase()
            }, d));
            throw {
                RE_EXN_ID: "Not_found",
                Error: new Error()
            }
        })
    }
    f.fetch_ = a
}), null);
__d("MessengerPersonas.bs", ["bs_js_dict", "bs_js_null_undefined"], (function(a, b, c, d, e, f) {
    "use strict";
    var g = {};

    function a(a) {
        if (a == null) return;
        var c = b("bs_js_dict").get(g, a.id);
        if (c !== void 0) return;
        else {
            g[a.id] = a;
            return
        }
    }

    function c(a) {
        return b("bs_js_null_undefined").fromOption(b("bs_js_dict").get(g, a))
    }
    f.personas = g;
    f.addPersona = a;
    f.getNow = c
}), null);
__d("MessengerRealtimeAttachmentTransformer.bs", ["MessengerAttachmentTransformer.bs", "MessengerMessageTransformer.bs"], (function(a, b, c, d, e, f) {
    "use strict";

    function a(a, c, d) {
        var e = b("MessengerMessageTransformer.bs").unsafeCastBlobAttachments(c),
            f = c.extensible_attachment,
            g;
        if (f == null) g = null;
        else {
            var h = f.story_attachment,
                i = f.genie_attachment,
                j;
            if (i == null) j = null;
            else {
                i = i.genie_message;
                var k;
                if (i == null) k = null;
                else {
                    i = i.story_attachment;
                    k = {
                        story_attachment: i == null ? null : b("MessengerMessageTransformer.bs").unsafeCastExtensibleAttachment(i)
                    }
                }
                j = {
                    genie_message: k
                }
            }
            g = {
                legacy_attachment_id: f.legacy_attachment_id,
                story_attachment: h == null ? null : b("MessengerMessageTransformer.bs").unsafeCastExtensibleAttachment(h),
                genie_attachment: j
            }
        }
        return b("MessengerAttachmentTransformer.bs").transformAttachment(a, {
            extensible_attachment: g,
            blob_attachments: e,
            sticker: c.sticker
        }, null, d)
    }
    f.transform = a
}), null);
__d("MessengerSharedPhotosVideosBaseData.bs", ["bs_js_dict"], (function(a, b, c, d, e, f) {
    "use strict";
    var g = {};

    function a(a) {
        return b("bs_js_dict").get(g, a)
    }

    function h(a, b) {
        g[a] = b
    }

    function c(a, c) {
        var d = b("bs_js_dict").get(g, a);
        if (d === void 0) return;
        var e = d.actualData;
        if (e === void 0) return;
        var f = e.edges;
        if (f.length === 0) return;
        f = f.filter(function(a) {
            return !c.some(function(b) {
                return b === a.node.legacy_attachment_id
            })
        });
        d = d.fetchingState;
        f = {
            edges: f,
            newestItemCursor: e.newestItemCursor,
            oldestItemCursor: e.oldestItemCursor,
            hasNextPage: e.hasNextPage
        };
        e = {
            fetchingState: d,
            actualData: f
        };
        return h(a, e)
    }
    f.data = g;
    f.get = a;
    f.set = h;
    f.localRemove = c
}), null);
__d("MessengerThreadFetcher.bs", ["FBIDCheck", "LogHistory", "MercuryDispatcher", "MercuryIDs", "MercuryPayloadSource", "MercuryThreadIDMap", "MessengerGraphQLThreadFetcher.bs", "Promise", "bs_belt_Array", "bs_caml_option", "bs_curry", "gkx", "setTimeoutAcrossTransitions"], (function(a, b, c, d, e, f) {
    "use strict";
    var g = new Map();

    function h(a, c) {
        var d = c.other_user_fbid;
        if (d == null) {
            c = c.thread_fbid;
            if (c == null) throw {
                RE_EXN_ID: "Invalid_argument",
                _1: "Encountered thread with no server identifier",
                Error: new Error()
            };
            c = [c, b("MercuryIDs").getThreadIDFromThreadFBID(c)]
        } else c = [d, b("MercuryIDs").getThreadIDFromUserID(d)];
        d = c[1];
        c = c[0];
        a = b("MercuryThreadIDMap").getForFBID(a);
        var e = {},
            f = a.getClientIDFromServerIDNow(c);
        if (f == null) {
            b("gkx")("1199097") && b("LogHistory").getInstance("MessengerThreadFetcher").debug("setServerIDToClientID", d);
            a.setServerIDToClientID(c, d);
            e[c] = d;
            return [d, e]
        } else return [f, e]
    }

    function i(a, c, d) {
        var e = !b("FBIDCheck").isUser_deprecated(a);
        return b("MessengerGraphQLThreadFetcher.bs").fetchAll(a, [{
            id: c,
            limit: 0,
            loadReadReceipts: !1,
            loadDeliveryReceipts: !1,
            timestamp: null,
            isCanonical: d,
            source: null
        }], e).then(function(c) {
            c = b("bs_belt_Array").get(c, 0);
            if (c === void 0) return b("Promise").resolve(!1);
            c = b("bs_caml_option").valFromOption(c).thread;
            if (c == null) return b("Promise").resolve(!1);
            var d = h(a, c);
            b("MercuryDispatcher").getForFBID(a).handleUpdate({
                threads: [Object.assign(c, {
                    thread_id: d[0]
                })],
                pinned_thread_ids: [],
                newlyAddedClientIDs: d[1],
                actions: [],
                preprocessed: !0,
                payload_source: b("MercuryPayloadSource").SERVER_FETCH_THREAD_INFO
            });
            return b("Promise").resolve(!0)
        })
    }

    function j(a, c, d) {
        return i(a, c, d).then(function(d) {
            var e = g.get(a);
            if (e == null) return b("Promise").resolve(!1);
            var f = e.get(c);
            if (f == null) return b("Promise").resolve(!1);
            else {
                b("bs_belt_Array").forEach(f[1], function(a) {
                    return b("bs_curry")._1(a, d)
                });
                e["delete"](c);
                return b("Promise").resolve(d)
            }
        })["catch"](function(e) {
            var f = g.get(a);
            if (f == null) return b("Promise").resolve(!1);
            e = f.get(c);
            if (e == null) return b("Promise").resolve(!1);
            var h = e[1];
            e = e[0];
            if (e < 5 || b("gkx")("678666")) {
                var k = Math.imul(Math.pow(2, Math.min(e, 5)) | 0, 1e3),
                    l = new(b("Promise"))(function(e, g) {
                        b("setTimeoutAcrossTransitions")(function(g) {
                            i(a, c, d).then(function(a) {
                                e(a);
                                b("bs_belt_Array").forEach(h, function(c) {
                                    return b("bs_curry")._1(c, a)
                                });
                                f["delete"](c);
                                return b("Promise").resolve(a)
                            })["catch"](function(b) {
                                return j(a, c, d)
                            })
                        }, k)
                    });
                f.set(c, [e + 1 | 0, h]);
                return l
            }
            f["delete"](c);
            return b("Promise").resolve(!1)
        })
    }

    function a(a, b, c, d) {
        var e = g.get(a);
        if (e == null) {
            var f = new Map();
            f.set(b, [0, [d]]);
            g.set(a, f);
            j(a, b, c);
            return
        }
        f = e.get(b);
        f == null ? (e.set(b, [0, [d]]), j(a, b, c)) : f[1].push(d)
    }
    f.$$fetch = a
}), null);
__d("ClientSyncProtocol_GroupsSyncAction", [], (function(a, b, c, d, e, f) {
    a = Object.freeze({
        OPT_IN: 0,
        OPT_OUT: 1,
        UPDATE_EMOJI: 2
    });
    f["default"] = a
}), 66);
__d("IrisProtocolMessageLifetime", [], (function(a, b, c, d, e, f) {
    e.exports = Object.freeze({
        TTL_OFF: 0,
        TTL_ON_UNKNOWN: 1,
        TTL_30SECONDS: 3e4,
        TTL_1MINUTE: 6e4,
        TTL_3MINUTES: 18e4,
        TTL_5MINUTES: 3e5,
        TTL_10MINUTES: 6e5,
        TTL_15MINUTES: 9e5,
        TTL_30MINUTES: 18e5,
        TTL_1HOUR: 36e5,
        TTL_2HOURS: 72e5,
        TTL_4HOURS: 144e5,
        TTL_8HOURS: 288e5,
        TTL_12HOURS: 432e5,
        TTL_24HOURS: 864e5,
        TTL_36HOURS: 1296e5,
        TTL_72HOURS: 2592e5
    })
}), null);
__d("MSuggestionDispatcher", ["ExplicitRegistrationDispatcher"], (function(a, b, c, d, e, f, g) {
    "use strict";
    a = new(c("ExplicitRegistrationDispatcher"))({
        strict: !1
    });
    g["default"] = a
}), 98);
__d("MSuggestionActions", ["MSuggestionDispatcher", "keyMirror"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h = c("keyMirror")({
        SAVE_ALL_SUGGESTIONS: null,
        REMOVE_ALL_SUGGESTIONS: null,
        REMOVE_SUGGESTIONS_BY_TYPE: null
    });

    function a(a, b) {
        c("MSuggestionDispatcher").dispatch({
            type: h.SAVE_ALL_SUGGESTIONS,
            threadID: a,
            suggestions: b
        })
    }

    function b(a) {
        a && c("MSuggestionDispatcher").dispatch({
            type: h.REMOVE_ALL_SUGGESTIONS,
            threadID: a
        })
    }

    function d(a, b) {
        c("MSuggestionDispatcher").dispatch({
            type: h.REMOVE_SUGGESTIONS_BY_TYPE,
            threadID: a,
            typeID: b
        })
    }
    g.Types = h;
    g.saveAllSuggestions = a;
    g.removeAllSuggestions = b;
    g.removeSuggestionsByType = d
}), 98);
__d("MercuryGlobalActionType", [], (function(a, b, c, d, e, f) {
    a = Object.freeze({
        MARK_ALL_READ: "mga-type:mark-all-read",
        MARK_ALL_SEEN: "mga-type:mark-all-seen"
    });
    f["default"] = a
}), 66);
__d("MercuryMessageCustomizations", [], (function(a, b, c, d, e, f) {
    "use strict";

    function a(a) {
        var b = JSON.parse(a),
            c = [];
        Object.keys(b).forEach(function(a) {
            c.push({
                customization_type: a,
                customization_value: b[a]
            })
        });
        return c
    }
    f.parseCustomizations = a
}), 66);
__d("MercuryProfileRanges", [], (function(a, b, c, d, e, f) {
    "use strict";

    function g(a) {
        return !a.id && a.i ? {
            id: a.i,
            offset: a.o,
            length: a.l,
            type: a.t
        } : a
    }
    e.exports = {
        extractFromDelta: function(a) {
            a = (a = a) != null ? (a = a.data) != null ? a.prng : a : a;
            if (!a) return [];
            var b = [];
            try {
                b = JSON.parse(a);
                if (b.length > 0) return b.map(g)
            } catch (a) {}
            return b
        }
    }
}), null);
__d("MercurySyncDeltaTypes", [], (function(a, b, c, d, e, f) {
    "use strict";
    a = {
        AdminAddedToGroupThread: "AdminAddedToGroupThread",
        AdminRemovedFromGroupThread: "AdminRemovedFromGroupThread",
        AdminTextMessage: "AdminTextMessage",
        ChangeViewerStatus: "ChangeViewerStatus",
        DeliveryReceipt: "DeliveryReceipt",
        ForcedFetch: "ForcedFetch",
        MarkRead: "MarkRead",
        MarkUnread: "MarkUnread",
        MarkFolderSeen: "MarkFolderSeen",
        MessageDelete: "MessageDelete",
        NewMessage: "NewMessage",
        NoOp: "NoOp",
        PagesManagerEvent: "PagesManagerEvent",
        ParticipantLeftGroupThread: "ParticipantLeftGroupThread",
        ParticipantsAddedToGroupThread: "ParticipantsAddedToGroupThread",
        ReadReceipt: "ReadReceipt",
        ReplaceMessage: "ReplaceMessage",
        ThreadAction: "ThreadAction",
        ThreadDelete: "ThreadDelete",
        ThreadFolder: "ThreadFolder",
        ThreadMuteSettings: "ThreadMuteSettings",
        ThreadName: "ThreadName",
        JoinableMode: "JoinableMode",
        ApprovalMode: "ApprovalMode",
        ApprovalQueue: "ApprovalQueue",
        ClientPayload: "ClientPayload",
        GenieMessage: "GenieMessage",
        MontageMessage: "MontageMessage",
        RtcCallData: "RtcCallData"
    };
    b = a;
    f["default"] = b
}), 66);
__d("MessageThreadReadState", [], (function(a, b, c, d, e, f) {
    "use strict";
    a = {
        MARK_READ: 1,
        MARK_UNREAD: 2,
        KEEP_AS_IS: 3
    };
    b = a;
    f["default"] = b
}), 66);
__d("MessageThreadReadStateEffect", ["MessageThreadReadState"], (function(a, b, c, d, e, f, g) {
    "use strict";

    function a(a, b) {
        var d = b.messageMetadata.threadReadStateEffect;
        if (d != null) {
            var e = c("MessageThreadReadState")[d];
            return e === void 0 && typeof d === "number" ? d : e
        }
        d = b.messageMetadata.skipBumpThread;
        return d === !0 ? c("MessageThreadReadState").KEEP_AS_IS : a !== b.messageMetadata.actorFbId ? c("MessageThreadReadState").MARK_UNREAD : c("MessageThreadReadState").KEEP_AS_IS
    }
    g.extractThreadStateEffectFromDelta = a
}), 98);
__d("MessagingThreadAction", [], (function(a, b, c, d, e, f) {
    a = Object.freeze({
        ACTION_INVALID: "ACTION_INVALID",
        ACTION_ARCHIVED: "ACTION_ARCHIVED",
        ACTION_UNARCHIVED: "ACTION_UNARCHIVED"
    });
    f["default"] = a
}), 66);
__d("MessengerApprovalModeTypes", [], (function(a, b, c, d, e, f) {
    a = Object.freeze({
        OPEN: 0,
        APPROVALS: 1
    });
    f["default"] = a
}), 66);
__d("MessengerApprovalQueueTypes", [], (function(a, b, c, d, e, f) {
    a = Object.freeze({
        REQUESTED: "REQUESTED",
        REMOVED: "REMOVED"
    });
    f["default"] = a
}), 66);
__d("MessengerGroupRequestSource", [], (function(a, b, c, d, e, f) {
    a = Object.freeze({
        ADD: 0,
        JOIN_THROUGH_LINK: 1,
        AUTO_ADD: 2
    });
    f["default"] = a
}), 66);
__d("MessengerWebDeltaEvents", [], (function(a, b, c, d, e, f) {
    a = Object.freeze({
        DELTA_RECEIVED: "DELTA_RECEIVED",
        DELTA_IGNORED: "DELTA_IGNORED"
    });
    f["default"] = a
}), 66);
__d("PagesMessagingEventType", [], (function(a, b, c, d, e, f) {
    a = Object.freeze({
        FLAG: 1,
        CREATE_ADMIN_NOTE: 2,
        PRIORITY_UPDATE: 3
    });
    f["default"] = a
}), 66);
__d("RepliedToMessageStatusForGraphQL", [], (function(a, b, c, d, e, f) {
    a = Object.freeze({
        VALID: "VALID",
        DELETED: "DELETED",
        TEMPORARILY_UNAVAILABLE: "TEMPORARILY_UNAVAILABLE"
    });
    f["default"] = a
}), 66);
__d("MessengerDeltaTransformer.bs", ["Bootloader", "ClientSyncProtocol_GroupsSyncAction", "DateConsts", "FBID.bs", "FBIDCheck", "IrisProtocolMessageLifetime", "MSuggestionActions", "MercuryActionType", "MercuryDispatcher", "MercuryGlobalActionType", "MercuryIDs", "MercuryLogMessageType", "MercuryMessageCustomizations", "MercuryPayloadSource", "MercuryProfileRanges", "MercuryServerRequests", "MercurySyncDeltaTypes", "MercuryThreadIDMap", "MessageLiveLocationClientSyncProtocolStopReason", "MessageThreadReadState", "MessageThreadReadStateEffect", "MessageUnsendabilityStatus.bs", "MessagingThreadAction", "MessengerApprovalModeTypes", "MessengerApprovalQueueTypes", "MessengerGroupRequestSource", "MessengerGroupsSyncStatus", "MessengerGroupsSyncStatus.bs", "MessengerMessageDFFFetcher.bs", "MessengerParticipantsFetcher.bs", "MessengerRealtimeAttachmentTransformer.bs", "MessengerState.bs", "MessengerThreadFetcher.bs", "MessengerWebDeltaEvents", "MontageActions", "PageCommItemStatus", "PagesMessagingEventType", "Promise", "RepliedToMessageStatusForGraphQL", "bs_belt_Array", "bs_belt_Option", "bs_caml_array", "bs_caml_obj", "bs_caml_option", "bs_curry", "bs_js_dict", "bs_js_json", "bs_js_null_undefined", "gkx"], (function(a, b, c, d, e, f) {
    "use strict";

    function g(a) {
        try {
            return JSON.parse(a)
        } catch (a) {
            return {}
        }
    }
    var h = b("gkx")("780647") ? 0 : 1;

    function i(a, c) {
        var d = b("bs_belt_Option").map(b("bs_caml_option").nullable_to_opt(c.otherUserFbId), function(a) {
            return a.toString()
        });
        c = b("bs_belt_Option").map(b("bs_caml_option").nullable_to_opt(c.threadFbId), function(a) {
            return a.toString()
        });
        a = b("MercuryThreadIDMap").getForFBID(a);
        d = d !== void 0 ? [b("bs_caml_option").some(b("MercuryIDs").getThreadIDFromUserID(b("FBID.bs").ofStringExn(d))), d] : c !== void 0 ? [b("bs_caml_option").some(b("MercuryIDs").getThreadIDFromThreadFBID(b("FBID.bs").ofStringExn(c))), c] : [void 0, void 0];
        c = d[1];
        d = d[0];
        if (c !== void 0 && d !== void 0)
            if (a.hasClientIDForServerID(c)) return b("bs_caml_option").nullable_to_opt(a.getClientIDFromServerIDNow(c));
            else return b("bs_caml_option").valFromOption(d)
    }

    function j(a, b, c, d) {
        if (!(a == null)) return [a.toString(), {
            otherUserFbId: null,
            threadFbId: a
        }];
        if (b == null) return [void 0, void 0];
        a = c.toString() !== d ? c : b;
        return [a.toString(), {
            otherUserFbId: a,
            threadFbId: null
        }]
    }

    function k(a, c) {
        var d = parseInt(c.messageMetadata.timestamp, 10),
            e = b("MessageThreadReadStateEffect").extractThreadStateEffectFromDelta(a, c),
            f = {
                contents: c.messageMetadata.actorFbId.toString()
            },
            h = !b("FBIDCheck").isUser_deprecated(a),
            j = c.attachments;
        j = j == null ? [] : b("bs_belt_Array").keepMapU(j, function(c) {
            var d = c.mercury;
            if (d == null) {
                c = c.mercuryJSON;
                c = c == null ? null : g(c)
            } else c = d;
            if (c == null) return;
            d = c.extensible_attachment;
            var e = c.blob_attachment;
            c = c.sticker_attachment;
            c = d == null ? e == null ? c == null ? [] : b("MessengerRealtimeAttachmentTransformer.bs").transform(a, {
                extensible_attachment: null,
                blob_attachments: null,
                sticker: c
            }, h) : b("MessengerRealtimeAttachmentTransformer.bs").transform(a, {
                extensible_attachment: null,
                blob_attachments: [e],
                sticker: null
            }, h) : b("MessengerRealtimeAttachmentTransformer.bs").transform(a, {
                extensible_attachment: b("bs_js_null_undefined").fromOption(d == null ? void 0 : b("bs_caml_option").some(d)),
                blob_attachments: null,
                sticker: null
            }, h);
            e = b("bs_belt_Array").get(c, 0);
            if (e !== void 0) {
                d = b("bs_caml_option").valFromOption(e).share;
                if (d == null) c = f.contents;
                else {
                    d = d.target;
                    if (d == null) c = f.contents;
                    else {
                        d = d.genie_id;
                        c = d == null ? f.contents : d
                    }
                }
            } else c = f.contents;
            f.contents = c;
            return e
        });
        var k = c.messageMetadata.tags;
        k = k == null ? void 0 : b("bs_js_null_undefined").fromOption(b("bs_belt_Array").get(k, 0));
        var l = c.data,
            m;
        if (l == null) m = null;
        else {
            var n = b("bs_js_dict").get(l, "adminSignatureCreatorID");
            m = n !== void 0 ? {
                creatorID: b("bs_js_null_undefined").fromOption(b("bs_js_dict").get(l, "adminSignatureCreatorID")),
                creatorName: b("bs_js_null_undefined").fromOption(b("bs_js_dict").get(l, "adminSignatureCreatorName")),
                creatorType: b("bs_js_null_undefined").fromOption(b("bs_js_dict").get(l, "adminSignatureCreatorType")),
                labelType: b("bs_js_null_undefined").fromOption(b("bs_js_dict").get(l, "adminSignatureLabelType")),
                pageID: b("bs_js_null_undefined").fromOption(b("bs_js_dict").get(l, "adminSignaturePageID")),
                profileURI: b("bs_js_null_undefined").fromOption(b("bs_js_dict").get(l, "adminSignatureProfileURI"))
            } : null
        }
        n = f.contents;
        l = b("bs_caml_obj").caml_equal(e, b("MessageThreadReadState").MARK_UNREAD) && a !== n;
        var o = i(a, c.messageMetadata.threadKey);
        if (o !== void 0) {
            var p = c.ttl,
                q = c.messageMetadata.threadKey.threadFbId,
                r = c.messageMetadata.threadKey.otherUserFbId,
                s = c.body,
                t = c.data;
            if (t == null) {
                var u = c.untypedData;
                u = u == null ? !1 : b("bs_belt_Option").getWithDefault(b("bs_js_dict").get(u, "is_sponsored"), "false") === "true"
            } else u = b("bs_belt_Option").getWithDefault(b("bs_js_dict").get(t, "is_sponsored"), "false") === "true";
            t = c.data;
            var v = c.data,
                w;
            if (v == null) w = null;
            else {
                v = b("bs_js_dict").get(v, "customization");
                w = v !== void 0 ? b("MercuryMessageCustomizations").parseCustomizations(v) : null
            }
            v = c.data;
            var x = c.data,
                y = c.data,
                z;
            if (y == null) z = null;
            else {
                y = b("bs_js_dict").get(y, "mib_direct_message_data");
                z = y !== void 0 ? g(y) : null
            }
            y = c.data;
            var A;
            if (y == null) A = null;
            else {
                y = b("bs_js_dict").get(y, "message_source_data");
                if (y !== void 0) {
                    y = g(y);
                    y = b("bs_js_json").classify(y);
                    if (typeof y === "number" || y.TAG !== 2) A = null;
                    else {
                        y = b("bs_js_dict").get(y._0, "message_source");
                        A = y !== void 0 ? b("bs_js_null_undefined").fromOption(y) : null
                    }
                } else A = null
            }
            y = c.messageMetadata.skipBumpThread;
            var B = c.data,
                C;
            if (B == null) C = null;
            else {
                B = b("bs_js_dict").get(B, "montage_reply_data");
                C = B !== void 0 ? g(B) : null
            }
            B = c.data;
            var D;
            if (B == null) D = null;
            else {
                B = b("bs_js_dict").get(B, "meta_ranges");
                D = B !== void 0 ? g(B) : null
            }
            return {
                message_id: c.messageMetadata.messageId,
                threading_id: null,
                offline_threading_id: c.messageMetadata.offlineThreadingId,
                author: b("MercuryIDs").getParticipantIDFromUserID(b("FBID.bs").ofStringExn(n)),
                author_email: n + "@facebook.com",
                ephemeral_ttl_mode: p == null ? 0 : b("bs_belt_Option").getWithDefault(b("bs_js_dict").get(b("IrisProtocolMessageLifetime"), p), 0),
                timestamp: d,
                is_unread: l,
                is_filtered_content: !1,
                is_filtered_content_bh: !1,
                is_filtered_content_account: !1,
                is_filtered_content_quasar: !1,
                is_filtered_content_invalid_app: !1,
                is_one_way_sent: b("bs_belt_Option").getWithDefault(b("bs_caml_option").nullable_to_opt(c.messageMetadata.tags), []).some(function(a) {
                    return a === "one_way_message"
                }),
                is_forwarded: b("bs_belt_Option").getWithDefault(b("bs_caml_option").nullable_to_opt(c.messageMetadata.tags), []).some(function(a) {
                    if (a === "action:copy_message" || a === "copy_self_message" || a === "action:copy_attachment") return !0;
                    else return a === "copy_self_attachment"
                }),
                source: k,
                tags: c.messageMetadata.tags,
                is_spoof_warning: !1,
                folder: null,
                thread_fbid: q == null ? null : q.toString(),
                other_user_fbid: r == null ? null : r.toString(),
                body: s == null ? "" : s,
                html_body: null,
                subject: null,
                has_attachment: j.length !== 0,
                attachments: j,
                ranges: void 0,
                thread_id: o,
                action_type: b("MercuryActionType").USER_GENERATED_MESSAGE,
                is_from_iris: !0,
                is_sponsored: u,
                commerce_message_type: t == null ? null : b("bs_js_null_undefined").fromOption(b("bs_js_dict").get(t, "commerce_message_type")),
                customizations: w,
                platform_xmd: v == null ? null : b("bs_js_null_undefined").fromOption(b("bs_js_dict").get(v, "platform_xmd")),
                profile_ranges: b("MercuryProfileRanges").extractFromDelta(c),
                verse_group_role_xmd: x == null ? null : b("bs_js_null_undefined").fromOption(b("bs_js_dict").get(x, "verse_group_role_id")),
                mib_direct_message_data: z,
                message_source: A,
                skip_bump_thread: y == null ? !1 : y,
                thread_read_state_effect: e,
                montage_reply_data: C,
                meta_ranges: D,
                creator_info: m,
                message_unsendability_status: b("MessageUnsendabilityStatus.bs").fromNullableString(c.messageMetadata.unsendType),
                comm_status: h ? b("PageCommItemStatus").TODO : null
            }
        }
        throw {
            RE_EXN_ID: "Invalid_argument",
            _1: "invalid thread id",
            Error: new Error()
        }
    }

    function l(a, c, d, e) {
        b("Bootloader").loadModules(["MessengerWebDeltasTypedLogger.bs"], function(f) {
            f = b("bs_curry")._1(f.messengerWebDeltasTypedLogger, void 0);
            f = f.setDeltaEvent(a).setDeltaType(c).setIgnoreReason(d).setSyncSeqID(e);
            f.log()
        }, "MessengerDeltaTransformer.bs")
    }

    function m(a) {
        return l(b("MessengerWebDeltaEvents").DELTA_RECEIVED, a, null, null)
    }

    function n(a, c) {
        return l(b("MessengerWebDeltaEvents").DELTA_IGNORED, a, c, null)
    }

    function o(a, c, d, e, f) {
        return b("MessengerThreadFetcher.bs").$$fetch(a, c, d, function(c) {
            if (c) {
                b("MercuryDispatcher").getForFBID(a).handleUpdate({
                    actions: [e],
                    pinned_thread_ids: [],
                    newlyAddedClientIDs: {},
                    preprocessed: !0,
                    payload_source: b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE
                });
                return m(f)
            } else return n(f, "thread fetch failed")
        })
    }

    function p(a, c, d, e) {
        var f = c.other_user_fbid;
        if (f == null) {
            var g = c.thread_fbid;
            if (g == null) throw {
                RE_EXN_ID: "Invalid_argument",
                _1: "invalid thread id",
                Error: new Error()
            };
            g = [g, !1]
        } else g = [f, !0];
        f = g[1];
        g = g[0];
        var h = b("MercuryThreadIDMap").getForFBID(a);
        h = h.getClientIDFromServerIDNow(g);
        var i = h == null ? null : b("MessengerState.bs").getThreadMetaNow(a, h),
            j = b("gkx")("1143875");
        if (h == null)
            if (e) return o(a, g, f, c, d);
            else return n(d, "thread not already loaded, not required to be loaded");
        if (i == null)
            if (e) {
                if (j) return o(a, g, f, c, d);
                if (j) return n(d, "thread not already loaded, not required to be loaded")
            } else if (j) return n(d, "thread not already loaded, not required to be loaded");
        b("MercuryDispatcher").getForFBID(a).handleUpdate({
            actions: [c],
            pinned_thread_ids: [],
            newlyAddedClientIDs: {},
            preprocessed: !0,
            payload_source: b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE
        });
        return m(d)
    }

    function q(a, c) {
        var d = a.threadId,
            e = b("MercuryIDs").isGroupChat(d);
        d = b("MercuryIDs").getThreadFBIDFromThreadID(d);
        e = {
            action_type: b("MercuryActionType").PIN_MESSAGE,
            thread_fbid: e ? d : null,
            other_user_fbid: e ? null : d,
            thread_id: a.threadId,
            actor_fbid: a.actorFbid,
            pin_message_action: {
                message: {
                    message_id: a.pinnedMessage.pinnedMessageId,
                    pinning_time: a.pinnedMessage.timestamp,
                    is_content_loaded: !0,
                    message: c
                }
            }
        };
        return p(a.viewerFBID, e, "DeltaClientDelta.deltaUpdatePinnedMessage", h)
    }

    function r(a, c, d) {
        var e = a.viewerFBID,
            f = a.pinnedMessage.pinnedMessageId,
            g = b("MessengerState.bs").getMessageFromID(a.viewerFBID, f);
        if (g !== void 0) return q(a, b("bs_caml_option").valFromOption(g));
        else {
            b("MessengerMessageDFFFetcher.bs").fetch_(e, {
                message_id: f,
                thread_id: b("MercuryIDs").getThreadFBIDFromThreadID(a.threadId),
                source: null
            }, !1).then(function(d) {
                q(a, d);
                b("bs_curry")._1(c, d);
                return b("Promise").resolve(void 0)
            })["catch"](function(c) {
                q(a, null);
                b("bs_curry")._1(d, c);
                return b("Promise").resolve(void 0)
            });
            return
        }
    }

    function s(a, c) {
        var d = c.threadKey.threadFbId,
            e = d == null ? void 0 : b("bs_caml_option").some(d);
        if (d == null) {
            d = c.threadKey.otherUserFbId;
            var f = d == null ? void 0 : b("bs_caml_option").some(d);
            d = d == null ? [void 0, void 0] : [f, {
                otherUserFbId: b("bs_js_null_undefined").fromOption(f),
                threadFbId: null
            }]
        } else d = [e, {
            otherUserFbId: null,
            threadFbId: b("bs_js_null_undefined").fromOption(e)
        }];
        f = d[1];
        e = d[0];
        if (e === void 0) return;
        if (f === void 0) return;
        d = i(a, b("bs_caml_option").valFromOption(f));
        if (d !== void 0) return {
            thread_id: d,
            action_type: b("MercuryActionType").REACTION_UPDATE,
            messageId: c.messageId,
            offlineThreadingId: c.offlineThreadingId,
            reaction: c.reaction,
            senderId: c.senderId.toString(),
            thread_fbid: e.toString(),
            other_user_fbid: null,
            userId: c.userId.toString()
        }
    }

    function t(a) {
        return a / Math.pow(10, 8)
    }

    function u(a, c) {
        var d = c.threadKey.threadFbId,
            e = d == null ? void 0 : b("bs_caml_option").some(d),
            f = c.threadKey.otherUserFbId,
            g = f == null ? void 0 : b("bs_caml_option").some(f);
        d = d == null ? f == null ? [void 0, void 0] : [g, {
            otherUserFbId: null,
            threadFbId: b("bs_js_null_undefined").fromOption(g)
        }] : [e, {
            otherUserFbId: b("bs_js_null_undefined").fromOption(e),
            threadFbId: null
        }];
        f = d[1];
        g = d[0];
        if (g === void 0) return;
        if (f === void 0) return;
        e = i(a, b("bs_caml_option").valFromOption(f));
        if (e === void 0) return;
        if (c.messageLiveLocations.length !== 1) return;
        d = b("bs_caml_array").get(c.messageLiveLocations, 0);
        a = d.expirationTime;
        f = d.stopReason;
        c = f == null ? Date.now() / b("DateConsts").MS_PER_SEC > a : !0;
        f = d.coordinate;
        f = f == null ? null : {
            latitude: t(f.latitude),
            longitude: t(f.longitude)
        };
        var h = d.destination;
        h = h == null ? null : {
            latitude: t(h.latitude),
            longitude: t(h.longitude),
            label: h.label
        };
        var j = d.stopReason;
        j = j == null ? null : j === b("MessageLiveLocationClientSyncProtocolStopReason").EXPIRED || j === b("MessageLiveLocationClientSyncProtocolStopReason").CANCELED ? "EXPIRED" : j === b("MessageLiveLocationClientSyncProtocolStopReason").ARRIVED ? "ARRIVED" : null;
        return {
            thread_id: e,
            action_type: b("MercuryActionType").LIVE_LOCATION_UPDATE,
            thread_fbid: g.toString(),
            other_user_fbid: null,
            messageId: d.messageId,
            liveLocation: {
                live_location_id: d.id.toString(),
                is_expired: c,
                expiration_time: a,
                sender: {
                    id: d.senderId.toString()
                },
                coordinate: f,
                location_title: d.locationTitle,
                sender_destination: h,
                stop_reason: j
            }
        }
    }

    function v(a, c) {
        var d = c.threadKey.threadFbId;
        if (d == null) return;
        a = i(a, {
            otherUserFbId: null,
            threadFbId: d
        });
        if (a !== void 0) return {
            action_type: b("MercuryActionType").EVENT_RSVP_CHANGED,
            actor_fbid: c.actorFbId.toString(),
            rsvp_status: c.rsvpStatus,
            thread_fbid: d.toString(),
            other_user_fbid: null,
            thread_id: a
        }
    }

    function w(a, c) {
        var d = c.threadKey.otherUserFbId;
        if (d == null) return;
        a = i(a, {
            otherUserFbId: d,
            threadFbId: null
        });
        if (a !== void 0) return {
            action_type: b("MercuryActionType").UPDATE_COMM_STATUS,
            comm_status: c.isFollowUp ? b("PageCommItemStatus").FOLLOW_UP : b("PageCommItemStatus").TODO,
            thread_fbid: d.toString(),
            other_user_fbid: null,
            thread_id: a
        }
    }

    function x(a, c) {
        var d = [];
        c.forEach(function(a) {
            a = b("MercuryIDs").getUserIDFromParticipantID(a);
            if (!(a == null)) {
                d.push(a);
                return
            }
        });
        return b("MessengerParticipantsFetcher.bs").$$fetch({
            ids: d
        }).then(function(c) {
            var d = [],
                e = [];
            c.forEach(function(a) {
                var b = a.id;
                a.is_messenger_blocked || a.is_facebook_blocked ? d.push(b) : e.push(b)
            });
            b("MercuryDispatcher").getForFBID(a).handleUpdate({
                from_client: !0,
                message_blocked_ids: d,
                message_unblocked_ids: e
            });
            return b("Promise").resolve(void 0)
        })["catch"](function(a) {
            return b("Promise").resolve(void 0)
        })
    }

    function y(a, c) {
        var d = c.actorFbid.toString(),
            e = b("FBID.bs").ofStringExn(d);
        if (b("bs_caml_obj").caml_notequal(e, a)) e = b("bs_caml_option").some(b("MercuryIDs").getParticipantIDFromUserID(a));
        else {
            var f = c.threadKey.otherUserFbId;
            if (f == null) e = void 0;
            else {
                f = b("FBID.bs").ofString(f.toString());
                e = f !== void 0 ? b("bs_caml_option").some(b("MercuryIDs").getParticipantIDFromUserID(b("bs_caml_option").valFromOption(f))) : void 0
            }
        }
        if (e === void 0) return;
        f = b("bs_caml_option").valFromOption(e);
        e = c.threadKey.otherUserFbId;
        if (e == null) return;
        x(a, [f]);
        a = i(a, {
            otherUserFbId: e,
            threadFbId: null
        });
        if (a !== void 0) return {
            action_type: b("MercuryActionType").BLOCK_STATUS_CHANGED,
            actorFbid: d,
            canViewerReply: c.canViewerReply,
            reason: c.reason,
            message_blocked_ids: [f],
            other_user_fbid: e.toString(),
            thread_fbid: null,
            thread_id: a
        }
    }

    function z(a, c) {
        var d = c.threadKey.threadFbId;
        if (d == null) {
            var e = c.threadKey.otherUserFbId;
            e = e == null ? [void 0, void 0] : [e.toString(), {
                otherUserFbId: e,
                threadFbId: null
            }]
        } else e = [d.toString(), {
            otherUserFbId: null,
            threadFbId: d
        }];
        d = e[1];
        e = e[0];
        if (e === void 0) return;
        if (d === void 0) return;
        a = i(a, b("bs_caml_option").valFromOption(d));
        if (a !== void 0) return {
            action_type: b("MercuryActionType").MONTAGE_DIRECT_EXPIRE,
            messageId: c.messageId,
            timestamp: c.timestamp,
            thread_fbid: e,
            other_user_fbid: null,
            keep_expiry_timestamp: c.keepExpiryTimestamp,
            thread_id: a
        }
    }

    function A(a, c) {
        var d = k(a, c.message),
            e = c.repliedToMessage;
        if (e == null) return b("bs_caml_option").some(d);
        a = k(a, e);
        e = c.status;
        var f;
        if (e == null) f = void 0;
        else switch (e) {
            case 0:
                f = b("bs_caml_option").some(b("RepliedToMessageStatusForGraphQL").VALID);
                break;
            case 1:
                f = b("bs_caml_option").some(b("RepliedToMessageStatusForGraphQL").DELETED);
                break;
            case 2:
                f = b("bs_caml_option").some(b("RepliedToMessageStatusForGraphQL").TEMPORARILY_UNAVAILABLE);
                break;
            default:
                f = void 0
        }
        if (f !== void 0) return b("bs_caml_option").some(Object.assign(d, {
            replied_to_message: {
                status: b("bs_caml_option").valFromOption(f),
                message: a
            }
        }))
    }

    function B(a, c) {
        var d = c.threadKey.threadFbId,
            e = d == null ? void 0 : b("bs_caml_option").some(d);
        if (d == null) {
            d = c.threadKey.otherUserFbId;
            var f = d == null ? void 0 : b("bs_caml_option").some(d);
            d = d == null ? [void 0, void 0] : [f, {
                otherUserFbId: b("bs_js_null_undefined").fromOption(f),
                threadFbId: null
            }]
        } else d = [e, {
            otherUserFbId: null,
            threadFbId: b("bs_js_null_undefined").fromOption(e)
        }];
        f = d[1];
        e = d[0];
        if (e === void 0) return;
        if (f === void 0) return;
        d = i(a, b("bs_caml_option").valFromOption(f));
        if (d !== void 0) return {
            action_type: b("MercuryActionType").GROUPS_SYNC_STATUS_CHANGED,
            thread_fbid: e.toString(),
            other_user_fbid: null,
            actor_fbid: c.actorFbid.toString(),
            groups_sync_status_string: b("MessengerGroupsSyncStatus.bs").fromNullableString(c.groupsSyncStatus),
            thread_id: d
        }
    }

    function C(a, c) {
        var d = c.threadKey.threadFbId,
            e = d == null ? void 0 : b("bs_caml_option").some(d);
        if (d == null) {
            d = c.threadKey.otherUserFbId;
            var f = d == null ? void 0 : b("bs_caml_option").some(d);
            d = d == null ? [void 0, void 0] : [f, {
                otherUserFbId: b("bs_js_null_undefined").fromOption(f),
                threadFbId: null
            }]
        } else d = [e, {
            otherUserFbId: null,
            threadFbId: b("bs_js_null_undefined").fromOption(e)
        }];
        f = d[1];
        e = d[0];
        d = c.syncAction === b("ClientSyncProtocol_GroupsSyncAction").OPT_IN ? b("bs_caml_option").some(b("MessengerGroupsSyncStatus").OPT_IN) : c.syncAction === b("ClientSyncProtocol_GroupsSyncAction").OPT_OUT ? b("bs_caml_option").some(b("MessengerGroupsSyncStatus").OPT_OUT) : void 0;
        if (e === void 0) return;
        if (d === void 0) return;
        if (f === void 0) return;
        a = i(a, b("bs_caml_option").valFromOption(f));
        if (a === void 0) return;
        f = c.syncedFbGroupId;
        return {
            action_type: b("MercuryActionType").GROUPS_SYNC_METADATA_UPDATE,
            thread_fbid: e.toString(),
            other_user_fbid: null,
            actor_fbid: c.actorFbid.toString(),
            groups_sync_action: b("bs_caml_option").valFromOption(d),
            source_surface: c.sourceSurface,
            fb_group_id: f == null ? null : f.toString(),
            thread_id: a,
            emoji_codepoints: c.emojiCodePoints
        }
    }

    function D(a, c) {
        var d = c.threadKey.threadFbId;
        if (d == null) return;
        a = i(a, {
            otherUserFbId: null,
            threadFbId: d
        });
        if (a !== void 0) return {
            action_type: b("MercuryActionType").DESCRIPTION_CHANGED,
            thread_fbid: d.toString(),
            other_user_fbid: null,
            group_thread_description_string: c.threadDescription,
            thread_id: a
        }
    }

    function E(a) {
        return "#" + a.slice(2)
    }

    function F(a, c) {
        var d = c.threadKey.threadFbId,
            e = d == null ? void 0 : b("bs_caml_option").some(d);
        if (d == null) {
            d = c.threadKey.otherUserFbId;
            var f = d == null ? void 0 : b("bs_caml_option").some(d);
            d = d == null ? [void 0, void 0] : [f, {
                otherUserFbId: b("bs_js_null_undefined").fromOption(f),
                threadFbId: null
            }]
        } else d = [e, {
            otherUserFbId: null,
            threadFbId: b("bs_js_null_undefined").fromOption(e)
        }];
        f = d[1];
        e = d[0];
        if (e === void 0) return;
        if (f === void 0) return;
        d = i(a, b("bs_caml_option").valFromOption(f));
        if (d === void 0) return;
        a = c.fallbackColor !== "" ? E(c.fallbackColor) : "";
        f = c.reactionPack;
        var g;
        if (f == null) g = [void 0, void 0];
        else {
            var h = f.reactionAssets;
            f = f.fontAsset;
            g = [h == null ? void 0 : h.map(function(a) {
                return {
                    reactionName: a.reactionName,
                    reactionEmoji: a.reactionEmoji,
                    keyframeAssetUri: a.keyframeAssetUri
                }
            }), f == null ? void 0 : f.assetUri]
        }
        h = g[1];
        f = g[0];
        g = c.gradientColors;
        if (!(g == null) && g.length !== 0) {
            g = b("bs_belt_Array").map(g, E);
            return {
                action_type: b("MercuryActionType").UPDATE_THREAD_THEME,
                thread_fbid: e.toString(),
                other_user_fbid: null,
                theme_id: c.themeId.toString(),
                solid_color: a,
                header_color: b("bs_caml_array").get(g, 0),
                footer_color: b("bs_caml_array").get(g, g.length - 1 | 0),
                gradient_colors: g,
                thread_id: d,
                reactions: f,
                reactionFont: h
            }
        }
        return {
            action_type: b("MercuryActionType").UPDATE_THREAD_THEME,
            thread_fbid: e.toString(),
            other_user_fbid: null,
            theme_id: c.themeId.toString(),
            solid_color: a,
            header_color: a,
            footer_color: a,
            gradient_colors: [],
            thread_id: d,
            reactions: f,
            reactionFont: h
        }
    }

    function G(a, c, d) {
        var e = c.pinnedMessage,
            f = j(c.threadKey.threadFbId, c.threadKey.otherUserFbId, c.actorFbid, a);
        f = f[1];
        var g = function(a) {},
            h = function(a) {
                d.contents = {
                    TAG: 1,
                    _0: "DeltaClientDelta.deltaUpdatePinnedMessage",
                    _1: "error on fetching pinned message payload"
                }
            };
        if (f === void 0) {
            d.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaUpdatePinnedMessage",
                _1: "transform failed"
            };
            return
        }
        f = i(a, b("bs_caml_option").valFromOption(f));
        if (f !== void 0) return r({
            viewerFBID: a,
            threadId: f,
            actorFbid: c.actorFbid.toString(),
            pinnedMessage: e
        }, g, h);
        else {
            d.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaUpdatePinnedMessage",
                _1: "transform failed"
            };
            return
        }
    }

    function H(a, c) {
        var d = j(c.threadKey.threadFbId, c.threadKey.otherUserFbId, c.actorFbid, a),
            e = d[1];
        d = d[0];
        if (d === void 0) return;
        if (e === void 0) return;
        e = b("bs_caml_option").valFromOption(e);
        a = i(a, e);
        if (a !== void 0) return {
            action_type: b("MercuryActionType").UNPIN_MESSAGE,
            thread_fbid: e.threadFbId === null ? null : d,
            other_user_fbid: e.otherUserFbId === null ? null : d,
            thread_id: a,
            unpin_message_action: {
                message_id: c.pinnedMessage.pinnedMessageId
            },
            actor_fbid: c.actorFbid.toString()
        }
    }

    function I(a, c) {
        var d = c.threadKey.threadFbId;
        if (d == null) {
            var e = c.threadKey.otherUserFbId;
            e = e == null ? [void 0, void 0] : [e.toString(), {
                otherUserFbId: e,
                threadFbId: null
            }]
        } else e = [d.toString(), {
            otherUserFbId: null,
            threadFbId: d
        }];
        d = e[1];
        e = e[0];
        if (e === void 0) return;
        if (d === void 0) return;
        a = i(a, b("bs_caml_option").valFromOption(d));
        if (a !== void 0) return {
            action_type: b("MercuryActionType").CHANGE_PINNED_STATUS,
            thread_fbid: e,
            other_user_fbid: null,
            is_pinned: c.isPinned,
            thread_id: a,
            thread_pin_timestamp: c.timestamp
        }
    }

    function J(a, c) {
        var d = c.threadKey.threadFbId,
            e = c.threadKey.otherUserFbId;
        e = d == null ? e == null ? [void 0, void 0] : [e.toString(), {
            otherUserFbId: e,
            threadFbId: null
        }] : [d.toString(), {
            otherUserFbId: null,
            threadFbId: d
        }];
        d = e[1];
        e = e[0];
        if (e === void 0) return;
        if (d === void 0) return;
        a = i(a, b("bs_caml_option").valFromOption(d));
        if (a !== void 0) return {
            action_type: b("MercuryActionType").MUTATE_TAGS,
            thread_fbid: e,
            other_user_fbid: null,
            thread_id: a,
            messageId: c.messageId,
            tags_to_add: c.isSaved ? ["message:save"] : [],
            tags_to_delete: c.isSaved ? [] : ["message:save"]
        }
    }

    function K(a, c) {
        var d = c.threadKey.threadFbId;
        if (d == null) return;
        a = i(a, {
            otherUserFbId: null,
            threadFbId: d
        });
        if (a !== void 0) return {
            action_type: b("MercuryActionType").UPDATE_JOINABLE_LINK,
            joinable_link: c.privateGroupLink,
            thread_fbid: d.toString(),
            other_user_fbid: null,
            thread_id: a
        }
    }

    function L(a) {
        a = a.directives;
        if (a == null) return;
        a = b("bs_belt_Array").get(a, 0);
        if (a === void 0) return;
        a = b("bs_caml_option").valFromOption(a).data;
        if (a == null) return;
        a = a.add_actions;
        if (a == null) return;
        var c = a.actions;
        if (c == null) return;
        c = b("bs_belt_Array").get(c, 0);
        if (c === void 0) return;
        c = b("bs_caml_option").valFromOption(c).thread_key;
        if (c == null) return;
        var d = c.thread_fbid;
        c = c.other_user_fbid;
        if (d == null) {
            if (c == null) return;
            c = c
        } else c = d;
        return {
            action_type: b("MercuryActionType").CREATE_OMNI_M_SUGGESTIONS,
            thread_fbid: b("MercuryIDs").getThreadIDFromThreadFBID(b("FBID.bs").ofStringExn(c)),
            other_user_fbid: null,
            thread_id: c,
            suggestions: a
        }
    }

    function M(a, c) {
        var d = c.threadKey.threadFbId;
        if (d == null) return;
        a = i(a, {
            otherUserFbId: null,
            threadFbId: d
        });
        if (a !== void 0) return {
            action_type: b("MercuryActionType").PROMOTE_GROUP_ADMINS,
            thread_fbid: d.toString(),
            other_user_fbid: null,
            promoted_admins: b("bs_belt_Array").map(c.promotedAdmins, function(a) {
                return {
                    admin_fbid: a.adminFbId.toString(),
                    admin_type: a.adminType
                }
            }),
            thread_id: a
        }
    }

    function N(a, c) {
        var d = c.threadKey.threadFbId,
            e = c.threadKey.otherUserFbId;
        if (d == null) {
            if (e == null) return;
            var f = i(a, {
                otherUserFbId: e,
                threadFbId: null
            });
            if (f !== void 0) return {
                action_type: b("MercuryActionType").REMOVE_MESSAGE,
                thread_fbid: null,
                messageId: c.messageID,
                other_user_fbid: e.toString(),
                removed_timestamp: c.deletionTimestamp,
                thread_id: f,
                author: b("MercuryIDs").getParticipantIDFromUserID(c.senderID)
            };
            else return
        }
        e = i(a, {
            otherUserFbId: null,
            threadFbId: d
        });
        if (e !== void 0) return {
            action_type: b("MercuryActionType").REMOVE_MESSAGE,
            thread_fbid: d.toString(),
            messageId: c.messageID,
            other_user_fbid: null,
            removed_timestamp: c.deletionTimestamp,
            thread_id: e,
            author: b("MercuryIDs").getParticipantIDFromUserID(c.senderID)
        }
    }

    function O(a, c) {
        var d = c.threadKey.otherUserFbId;
        if (d == null) return;
        a = i(a, {
            otherUserFbId: d,
            threadFbId: null
        });
        if (a !== void 0) return {
            action_type: b("MercuryActionType").UNSUBSCRIBE_STATUS_UPDATE,
            page_unsubscribe_status: c.unSubscribeStatus,
            thread_fbid: d.toString(),
            other_user_fbid: null,
            thread_id: a
        }
    }

    function P(a, c) {
        var d = c.threadKey.otherUserFbId;
        if (d == null) return;
        a = i(a, {
            otherUserFbId: d,
            threadFbId: null
        });
        if (a !== void 0) return {
            action_type: b("MercuryActionType").BLURRED_IMAGE_STATUS,
            blurred_image_uri: c.blurredImageUri,
            image_message_id: c.messageId,
            image_id: c.imageId,
            should_show: c.shouldShow,
            thread_fbid: d.toString(),
            other_user_fbid: null,
            thread_id: a
        }
    }

    function Q(a, c) {
        var d = c.threadKey.otherUserFbId;
        if (d == null) return;
        a = i(a, {
            otherUserFbId: d,
            threadFbId: null
        });
        if (a !== void 0) return {
            action_type: b("MercuryActionType").IS_PIN_PROTECTED,
            thread_fbid: d.toString(),
            other_user_fbid: null,
            is_pin_protected: c.isPinProtected,
            thread_id: a
        }
    }

    function R(a, c) {
        var d = c.threadKey.otherUserFbId;
        if (d == null) return;
        a = i(a, {
            otherUserFbId: d,
            threadFbId: null
        });
        if (a !== void 0) return {
            action_type: b("MercuryActionType").UPDATE_CONNECTIVITY_STATUS,
            other_user_fbid: d.toString(),
            subtitle_type: c.subtitleType,
            thread_connectivity_status: c.threadConnectivityStatus,
            thread_fbid: d.toString(),
            thread_id: a
        }
    }

    function S(a, c) {
        var d = c.threadkey.otherUserFbId;
        if (d == null) return;
        a = i(a, {
            otherUserFbId: d,
            threadFbId: null
        });
        if (a !== void 0) return {
            action_type: b("MercuryActionType").ADS_CONVERSION_UPDATE,
            other_user_fbid: d.toString(),
            thread_fbid: d.toString(),
            thread_id: a,
            conversion_detection_data: {
                is_eligible: c.isEligible,
                conversion_type: c.conversionType,
                currency_code: c.currencyCode,
                currency_amount: c.currencyAmount,
                timestamp: c.timestamp,
                classifier: c.classifier,
                page_reply: c.pageReply,
                icebreaker_key: c.icebreakerKey,
                icebreaker_message: c.icebreakerMessage,
                trigger_id: c.triggerId
            }
        }
    }

    function T(a, c) {
        var d = c.threadkey.otherUserFbId;
        if (d == null) return;
        a = i(a, {
            otherUserFbId: d,
            threadFbId: null
        });
        if (a !== void 0) return {
            action_type: b("MercuryActionType").SUGGESTED_REPLY_UPDATE,
            other_user_fbid: d.toString(),
            thread_fbid: d.toString(),
            thread_id: a,
            suggested_reply_data: {
                suggestion_type: c.suggestionType,
                suggestion_content: c.suggestionContent,
                triggered_timestamp: c.triggeredTimestamp,
                trigger_id: c.triggerId
            }
        }
    }

    function U(a, c) {
        var d = c.threadKey.threadFbId,
            e = d == null ? void 0 : b("bs_caml_option").some(d);
        if (d == null) {
            d = c.threadKey.otherUserFbId;
            var f = d == null ? void 0 : b("bs_caml_option").some(d);
            d = d == null ? [void 0, void 0] : [f, {
                otherUserFbId: b("bs_js_null_undefined").fromOption(f),
                threadFbId: null
            }]
        } else d = [e, {
            otherUserFbId: null,
            threadFbId: b("bs_js_null_undefined").fromOption(e)
        }];
        f = d[1];
        e = d[0];
        if (e === void 0) return;
        if (f === void 0) return;
        d = i(a, b("bs_caml_option").valFromOption(f));
        if (d !== void 0) return {
            thread_id: d,
            action_type: b("MercuryActionType").UPDATE_SECONDARY_LANGUAGE_BODY,
            messageId: c.messageId,
            thread_fbid: e.toString(),
            other_user_fbid: null,
            secondary_language_body: c.secondaryLanguageBody
        }
    }
    var V = function(a) {
        return String.fromCharCode.apply(null, a)
    };

    function W(a, c) {
        c = JSON.parse(V(c.payload));
        c = b("bs_js_json").classify(c);
        if (typeof c === "number") return {
            TAG: 1,
            _0: "DeltaClientDelta",
            _1: "malformed payload"
        };
        if (c.TAG !== 2) return {
            TAG: 1,
            _0: "DeltaClientDelta",
            _1: "malformed payload"
        };
        c = b("bs_js_dict").get(c._0, "deltas");
        if (c === void 0) return {
            TAG: 1,
            _0: "DeltaClientDelta",
            _1: "client delta has no deltas"
        };
        c = b("bs_js_json").classify(b("bs_caml_option").valFromOption(c));
        if (typeof c === "number") return {
            TAG: 1,
            _0: "DeltaClientDelta",
            _1: "delta is not an array"
        };
        if (c.TAG !== 3) return {
            TAG: 1,
            _0: "DeltaClientDelta",
            _1: "delta is not an array"
        };
        c = b("bs_belt_Array").get(c._0, 0);
        if (c === void 0) return {
            TAG: 1,
            _0: "DeltaClientDelta",
            _1: "client delta is missing"
        };
        c = b("bs_js_json").classify(b("bs_caml_option").valFromOption(c));
        if (typeof c === "number") return {
            TAG: 1,
            _0: "DeltaClientDelta",
            _1: "client delta is not an object"
        };
        if (c.TAG !== 2) return {
            TAG: 1,
            _0: "DeltaClientDelta",
            _1: "client delta is not an object"
        };
        c = c._0;
        var d = !1,
            e = {
                contents: 0
            },
            f = b("bs_js_dict").get(c, "deltaMessageReaction");
        if (f !== void 0) {
            d = !0;
            f = s(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? p(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaMessageReaction", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaMessageReaction",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "liveLocationData");
        if (f !== void 0 && !d) {
            d = !0;
            f = u(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? p(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.liveLocationData", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.liveLocationData",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaUpdateGroupEventRSVPStatus");
        if (f !== void 0 && !d) {
            d = !0;
            f = v(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? p(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaUpdateGroupEventRSVPStatus", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaUpdateGroupEventRSVPStatus",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaPageThreadFollowUpData");
        if (f !== void 0 && !d) {
            d = !0;
            f = w(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? p(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaPageThreadFollowUpData", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaPageThreadFollowUpData",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaChangeViewerStatus");
        if (f !== void 0 && !d) {
            d = !0;
            f = y(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? p(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaChangeViewerStatus", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaChangeViewerStatus",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaMontageDirectExpire");
        if (f !== void 0 && !d) {
            d = !0;
            f = z(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? p(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaMontageDirectExpire", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaMontageDirectExpire",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaMessageReply");
        if (f !== void 0 && !d) {
            d = !0;
            f = A(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? p(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaMessageReply", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaMessageReply",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaUpdateGroupsSyncStatus");
        if (f !== void 0 && !d) {
            d = !0;
            f = B(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? p(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaUpdateGroupsSyncStatus", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaUpdateGroupsSyncStatus",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaUpdateGroupsSyncMetadata");
        if (f !== void 0 && !d) {
            d = !0;
            f = C(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? p(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaUpdateGroupsSyncMetadata", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaUpdateGroupsSyncMetadata",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaGroupThreadDescription");
        if (f !== void 0 && !d) {
            d = !0;
            f = D(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? p(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaGroupThreadDescription", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaGroupThreadDescription",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaUpdateThreadTheme");
        if (f !== void 0 && !d) {
            d = !0;
            f = F(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? p(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaUpdateThreadTheme", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaUpdateThreadTheme",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaUpdateSavedMessage");
        if (f !== void 0 && !d) {
            d = !0;
            f = J(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? p(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaUpdateSavedMessage", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaUpdateSavedMessage",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaUpdatePinnedThread");
        if (f !== void 0 && !d) {
            d = !0;
            f = I(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? p(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaUpdatePinnedThread", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaUpdatePinnedThread",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaUpdatePinnedMessage");
        if (f !== void 0 && !d) {
            f = b("bs_caml_option").valFromOption(f);
            d = !0;
            if (f.pinnedMessageAction === 0) G(a, f, e);
            else {
                f = H(a, f);
                f !== void 0 ? p(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaUpdatePinnedMessage", h) : e.contents = {
                    TAG: 1,
                    _0: "DeltaClientDelta.deltaUpdatePinnedMessage",
                    _1: "transform failed"
                }
            }
        }
        f = b("bs_js_dict").get(c, "deltaUpdatePrivateGroupJoinableLink");
        if (f !== void 0 && !d) {
            d = !0;
            f = K(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? p(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaUpdatePrivateGroupJoinableLink", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaUpdatePrivateGroupJoinableLink",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaOmniMDirectivesV2");
        if (f !== void 0 && !d) {
            d = !0;
            f = L(b("bs_caml_option").valFromOption(f));
            if (f !== void 0) {
                f = b("bs_caml_option").valFromOption(f);
                e.contents = {
                    TAG: 0,
                    _0: "DeltaClientDelta.deltaOmniMDirectivesV2"
                };
                b("MSuggestionActions").saveAllSuggestions(f.thread_id, f.suggestions)
            } else e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaOmniMDirectivesV2",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaPromoteGroupThreadAdmin");
        if (f !== void 0 && !d) {
            d = !0;
            f = M(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? p(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaPromoteGroupThreadAdmin", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaPromoteGroupThreadAdmin",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaRecallMessageData");
        if (f !== void 0 && !d) {
            d = !0;
            f = N(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? p(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaRecallMessageData", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaRecallMessageData",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaPageUnSubscribeStatus");
        if (f !== void 0 && !d) {
            d = !0;
            f = O(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? p(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaPageUnSubscribeStatus", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaPageUnSubscribeStatus",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaPageBlurredImageStatus");
        if (f !== void 0 && !d) {
            d = !0;
            f = P(a, b("bs_caml_option").valFromOption(f));
            f !== void 0 ? p(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaPageBlurredImageStatus", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.deltaPageBlurredImageStatus",
                _1: "transform failed"
            }
        }
        f = b("bs_js_dict").get(c, "deltaPaymentPinProtectionStatusData");
        if (f !== void 0) {
            if (!d) {
                d = !0;
                f = Q(a, b("bs_caml_option").valFromOption(f));
                f !== void 0 ? p(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaPaymentPinProtectionStatusData", h) : e.contents = {
                    TAG: 1,
                    _0: "DeltaClientDelta.deltaPaymentPinProtectionStatusData",
                    _1: "transform failed"
                }
            }
        } else d || (e.contents = {
            TAG: 1,
            _0: "DeltaClientDelta",
            _1: "unknown delta type: " + Object.keys(c).join(",")
        });
        f = b("bs_js_dict").get(c, "deltaThreadConnectivityStatusUpdate");
        if (f !== void 0) {
            if (!d) {
                d = !0;
                f = R(a, b("bs_caml_option").valFromOption(f));
                f !== void 0 ? p(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaThreadConnectivityStatusUpdateData", h) : e.contents = {
                    TAG: 1,
                    _0: "DeltaClientDelta.deltaThreadConnectivityStatusUpdateData",
                    _1: "transform failed"
                }
            }
        } else d || (e.contents = {
            TAG: 1,
            _0: "DeltaClientDelta",
            _1: "unknown delta type: " + Object.keys(c).join(",")
        });
        f = b("bs_js_dict").get(c, "deltaMessengerAdsConversionUpdate");
        if (f !== void 0) {
            if (!d) {
                d = !0;
                f = S(a, b("bs_caml_option").valFromOption(f));
                f !== void 0 ? p(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaMessengerAdsConversionUpdate", h) : e.contents = {
                    TAG: 1,
                    _0: "DeltaClientDelta.deltaMessengerAdsConversionUpdate",
                    _1: "transform failed"
                }
            }
        } else d || (e.contents = {
            TAG: 1,
            _0: "DeltaClientDelta",
            _1: "unknown delta type: " + Object.keys(c).join(",")
        });
        f = b("bs_js_dict").get(c, "deltaMessengerBusinessSuggestedReplyUpdate");
        if (f !== void 0) {
            if (!d) {
                d = !0;
                f = T(a, b("bs_caml_option").valFromOption(f));
                f !== void 0 ? p(a, b("bs_caml_option").valFromOption(f), "DeltaClientDelta.deltaMessengerBusinessSuggestedReplyUpdate", h) : e.contents = {
                    TAG: 1,
                    _0: "DeltaClientDelta.deltaMessengerBusinessSuggestedReplyUpdate",
                    _1: "transform failed"
                }
            }
        } else d || (e.contents = {
            TAG: 1,
            _0: "DeltaClientDelta",
            _1: "unknown delta type: " + Object.keys(c).join(",")
        });
        f = b("bs_js_dict").get(c, "deltaSecondaryLanguageBody");
        if (f !== void 0 && !d) {
            d = !0;
            c = U(a, b("bs_caml_option").valFromOption(f));
            c !== void 0 ? p(a, b("bs_caml_option").valFromOption(c), "DeltaClientDelta.secondaryLanguageBody", h) : e.contents = {
                TAG: 1,
                _0: "DeltaClientDelta.secondaryLanguageBody",
                _1: "transform failed"
            }
        }
        return e.contents
    }

    function X(a, c) {
        var d = [],
            e = [],
            f = c.folders,
            g = 0;
        f == null || f.length === 0 ? g = 1 : b("bs_belt_Array").forEachU(f, function(a) {
            d.push({
                action_type: b("MercuryGlobalActionType").MARK_ALL_READ,
                action_id: null,
                folder: b("bs_js_dict").get(b("MessengerState.bs").irisMapping, a),
                timestamp: parseInt(c.watermarkTimestamp, 10)
            })
        });
        g === 1 && b("bs_belt_Array").forEachU(c.threadKeys, function(d) {
            var f = i(a, d);
            if (f === void 0) return;
            var g = parseInt(c.watermarkTimestamp, 10);
            b("MercuryServerRequests").getForFBID(a).updateLastActionTimestamp(g);
            e.push({
                thread_id: f,
                action_type: b("MercuryActionType").CHANGE_READ_STATUS,
                other_user_fbid: d.otherUserFbId,
                thread_fbid: d.threadFbId,
                mark_as_read: !0,
                timestamp: g,
                folder: "inbox"
            })
        });
        return [d, e]
    }

    function Y(a) {
        if (a == null) return null;
        else return a.toString()
    }

    function Z(a) {
        a = a.skipBumpThread;
        if (!(a == null) && a) return h;
        else return 1
    }

    function $(a, c) {
        var d;
        switch (c.TAG | 0) {
            case 0:
                var e = c._0,
                    f = k(a, e);
                p(a, f, "deltaNewMessage", Z(e.messageMetadata));
                d = 0;
                break;
            case 1:
                f = c._0;
                p(a, Object.assign(k(a, f.newMessage), {
                    action_type: b("MercuryActionType").REPLACE_MESSAGE,
                    replaced_message_id: f.replacedMessageId
                }), "deltaReplaceMessage", h);
                d = 0;
                break;
            case 2:
                e = c._0;
                f = e.threadKey.otherUserFbId;
                var g;
                if (f == null) {
                    var j = e.threadKey.threadFbId;
                    if (j == null) g = void 0;
                    else {
                        var l = b("MercuryThreadIDMap").getForFBID(a);
                        l = l.getClientIDFromServerIDNow(j.toString());
                        g = l == null ? void 0 : b("bs_caml_option").some(l)
                    }
                } else {
                    j = b("FBID.bs").ofString(f.toString());
                    g = j !== void 0 ? b("bs_caml_option").some(b("MercuryIDs").getThreadIDFromUserID(b("bs_caml_option").valFromOption(j))) : void 0
                }
                if (g !== void 0) {
                    l = {};
                    f = parseInt(e.deliveredWatermarkTimestampMs, 10);
                    l[b("bs_caml_option").valFromOption(g)] = f;
                    b("MercuryDispatcher").getForFBID(a).handleUpdate({
                        delivery_receipts: l,
                        pinned_thread_ids: [],
                        newlyAddedClientIDs: {},
                        actions: [],
                        preprocessed: !0
                    });
                    d = {
                        TAG: 0,
                        _0: "DeltaDeliveryReceipt"
                    }
                } else d = {
                    TAG: 1,
                    _0: "DeltaDeliveryReceipt",
                    _1: "no thread id"
                };
                break;
            case 3:
                j = X(a, c._0);
                e = j[1];
                g = j[0];
                g.length !== 0 && b("MercuryDispatcher").getForFBID(a).handleUpdate({
                    actions: [],
                    global_actions: g,
                    pinned_thread_ids: [],
                    newlyAddedClientIDs: {},
                    preprocessed: !0,
                    payload_source: b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE
                });
                e.length !== 0 && b("MercuryDispatcher").getForFBID(a).handleUpdate({
                    pinned_thread_ids: [],
                    newlyAddedClientIDs: {},
                    actions: e,
                    preprocessed: !0,
                    payload_source: b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE
                });
                d = g.length === 0 && e.length === 0 ? {
                    TAG: 1,
                    _0: "DeltaMarkRead",
                    _1: "no local or global action"
                } : {
                    TAG: 0,
                    _0: "DeltaMarkRead"
                };
                break;
            case 4:
                var o = c._0;
                f = b("bs_belt_Array").keepMapU(o.threadKeys, function(c) {
                    var d = i(a, c);
                    if (d === void 0) return;
                    var e = parseInt(o.watermarkTimestamp, 10);
                    b("MercuryServerRequests").getForFBID(a).updateLastActionTimestamp(e);
                    return {
                        thread_id: d,
                        action_type: b("MercuryActionType").CHANGE_READ_STATUS,
                        other_user_fbid: c.otherUserFbId,
                        thread_fbid: c.threadFbId,
                        mark_as_read: !1,
                        timestamp: e,
                        folder: "inbox"
                    }
                });
                b("MercuryDispatcher").getForFBID(a).handleUpdate({
                    pinned_thread_ids: [],
                    newlyAddedClientIDs: {},
                    actions: f,
                    preprocessed: !0,
                    payload_source: b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE
                });
                d = {
                    TAG: 0,
                    _0: "DeltaMarkUnread"
                };
                break;
            case 5:
                l = c._0;
                p(a, Object.assign(k(a, l), {
                    action_type: b("MercuryActionType").LOG_MESSAGE,
                    log_message_body: l.messageMetadata.adminText,
                    log_message_data: {
                        removed_participants: [b("MercuryIDs").getParticipantIDFromUserID(l.leftParticipantFbId)]
                    },
                    log_message_type: b("MercuryLogMessageType").UNSUBSCRIBE
                }), "DeltaParticipantLeftGroupThread", Z(l.messageMetadata));
                d = 0;
                break;
            case 6:
                j = c._0;
                p(a, Object.assign(k(a, j), {
                    action_type: b("MercuryActionType").LOG_MESSAGE,
                    log_message_body: j.messageMetadata.adminText,
                    log_message_data: {
                        added_participants: b("bs_belt_Array").map(j.addedParticipants, function(a) {
                            return b("MercuryIDs").getParticipantIDFromUserID(a.userFbId)
                        })
                    },
                    log_message_type: b("MercuryLogMessageType").SUBSCRIBE
                }), "DeltaParticipantsAddedToGroupThread", Z(j.messageMetadata));
                d = 0;
                break;
            case 7:
                g = c._0;
                p(a, Object.assign(k(a, g), {
                    action_type: b("MercuryActionType").LOG_MESSAGE,
                    log_message_body: g.messageMetadata.adminText,
                    log_message_data: {
                        name: g.name
                    },
                    log_message_type: b("MercuryLogMessageType").THREAD_NAME
                }), "DeltaThreadName", Z(g.messageMetadata));
                d = 0;
                break;
            case 8:
                e = c._0;
                f = {
                    watermark: parseInt(e.watermarkTimestampMs, 10),
                    action: parseInt(e.actionTimestampMs, 10)
                };
                l = e.threadKey.otherUserFbId;
                j = l == null ? b("bs_caml_option").nullable_to_opt(e.actorFbId) : l.toString();
                g = e.threadKey.otherUserFbId;
                if (g == null) {
                    l = e.threadKey.threadFbId;
                    e = l == null ? void 0 : l.toString()
                } else e = g.toString();
                if (j !== void 0)
                    if (e !== void 0) {
                        l = b("MercuryThreadIDMap").getForFBID(a);
                        g = l.getClientIDFromServerIDNow(e);
                        if (g == null) d = {
                            TAG: 1,
                            _0: "DeltaReadReceipt",
                            _1: "No clientID for serverID: " + e
                        };
                        else {
                            l = {};
                            e = {};
                            j = b("MercuryIDs").getParticipantIDFromUserID(b("FBID.bs").ofStringExn(j));
                            e[j] = f;
                            l[g] = e;
                            b("MercuryDispatcher").getForFBID(a).handleUpdate({
                                roger: l,
                                pinned_thread_ids: [],
                                newlyAddedClientIDs: {},
                                actions: [],
                                preprocessed: !0
                            });
                            d = {
                                TAG: 0,
                                _0: "DeltaReadReceipt"
                            }
                        }
                    } else d = {
                        TAG: 1,
                        _0: "DeltaReadReceipt",
                        _1: "serverID is invalid"
                    };
                else d = {
                    TAG: 1,
                    _0: "DeltaReadReceipt",
                    _1: "userID is invalid"
                };
                break;
            case 9:
                j = c._0;
                p(a, Object.assign(k(a, j), {
                    action_type: b("MercuryActionType").LOG_MESSAGE,
                    log_message_body: j.messageMetadata.adminText,
                    log_message_data: {
                        message_type: j.type,
                        untypedData: j.untypedData
                    },
                    log_message_type: b("MercuryLogMessageType").GENERIC_ADMIN_TEXT,
                    message_unsendability_status: b("MessageUnsendabilityStatus.bs").fromNullableString(j.messageMetadata.unsendType)
                }), "DeltaAdminTextMessage", Z(j.messageMetadata));
                d = 0;
                break;
            case 10:
                f = c._0;
                g = i(a, {
                    otherUserFbId: f.threadKey.otherUserFbId,
                    threadFbId: f.threadKey.threadFbId
                });
                e = g !== void 0 ? {
                    action_type: b("MercuryActionType").DELETE_MESSAGES,
                    message_ids: f.messageIds,
                    other_user_fbid: Y(f.threadKey.otherUserFbId),
                    thread_fbid: Y(f.threadKey.threadFbId),
                    thread_id: g
                } : void 0;
                l = f.threadKey.threadFbId;
                j = f.folder;
                if (e !== void 0) {
                    g = b("bs_caml_option").valFromOption(e);
                    l == null || j == null ? (p(a, g, "DeltaMessageDelete", h), d = 0) : (j === "FOLDER_MONTAGE" ? b("MontageActions").requestUpdate(l.toString()) : p(a, g, "DeltaMessageDelete", h), d = 0)
                } else d = {
                    TAG: 1,
                    _0: "DeltaMessageDelete",
                    _1: "transform failed"
                };
                break;
            case 11:
                f = c._0;
                e = i(a, {
                    otherUserFbId: f.threadKey.otherUserFbId,
                    threadFbId: f.threadKey.threadFbId
                });
                if (e !== void 0) {
                    j = f.action;
                    p(a, {
                        action_type: b("MercuryActionType").CHANGE_ARCHIVED_STATUS,
                        thread_fbid: Y(f.threadKey.threadFbId),
                        other_user_fbid: Y(f.threadKey.otherUserFbId),
                        archived: j == null ? !1 : j === b("MessagingThreadAction").ACTION_ARCHIVED,
                        thread_id: e
                    }, "DeltaThreadAction", h);
                    d = 0
                } else d = {
                    TAG: 1,
                    _0: "DeltaThreadAction",
                    _1: "transform failed"
                };
                break;
            case 12:
                l = b("bs_belt_Array").keepMapU(c._0.threadKeys, function(c) {
                    var d = i(a, c);
                    if (d !== void 0) return {
                        thread_id: d,
                        action_type: b("MercuryActionType").DELETE_THREAD,
                        other_user_fbid: c.otherUserFbId,
                        thread_fbid: c.threadFbId
                    }
                });
                b("MercuryDispatcher").getForFBID(a).handleUpdate({
                    pinned_thread_ids: [],
                    newlyAddedClientIDs: {},
                    actions: l,
                    preprocessed: !0,
                    payload_source: b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE
                });
                d = {
                    TAG: 0,
                    _0: "DeltaThreadDelete"
                };
                break;
            case 13:
                g = c._0;
                f = i(a, {
                    otherUserFbId: null,
                    threadFbId: g.messageMetadata.threadKey.threadFbId
                });
                f !== void 0 ? (p(a, {
                    action_type: b("MercuryActionType").REMOVE_GROUP_ADMINS,
                    action_id: null,
                    thread_fbid: Y(g.messageMetadata.threadKey.threadFbId),
                    other_user_fbid: null,
                    removed_admin_ids: g.removedAdminFbIds,
                    thread_id: f
                }, "DeltaAdminRemovedFromGroupThread", h), d = 0) : d = {
                    TAG: 1,
                    _0: "DeltaAdminRemovedFromGroupThread",
                    _1: "transform failed"
                };
                break;
            case 14:
                j = c._0;
                e = i(a, j.threadKey);
                if (e !== void 0) {
                    l = [{
                        thread_id: e,
                        action_type: b("MercuryActionType").CHANGE_MUTE_SETTINGS,
                        thread_fbid: j.threadKey.threadFbId,
                        other_user_fbid: j.threadKey.otherUserFbId,
                        mute_until: parseInt(j.expireTime, 10)
                    }];
                    b("MercuryDispatcher").getForFBID(a).handleUpdate({
                        pinned_thread_ids: [],
                        newlyAddedClientIDs: {},
                        actions: l,
                        preprocessed: !0,
                        payload_source: b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE
                    });
                    d = {
                        TAG: 0,
                        _0: "DeltaThreadMuteSettings"
                    }
                } else d = {
                    TAG: 1,
                    _0: "DeltaThreadMuteSettings",
                    _1: "invalid thread ID"
                };
                break;
            case 15:
                g = c._0;
                f = g.jsonBlob;
                if (f == null) d = {
                    TAG: 1,
                    _0: "DeltaPagesManagerEvent",
                    _1: "no jsonBlob"
                };
                else {
                    try {
                        e = JSON.parse(f)
                    } catch (a) {
                        e = {}
                    }
                    j = b("bs_js_json").classify(e);
                    if (typeof j === "number" || j.TAG !== 2) d = {
                        TAG: 1,
                        _0: "DeltaPagesManagerEvent",
                        _1: "jsonBlob is not an object"
                    };
                    else {
                        l = j._0;
                        f = b("bs_js_dict").get(l, "type");
                        if (f !== void 0) {
                            e = b("bs_js_json").classify(b("bs_caml_option").valFromOption(f));
                            if (typeof e === "number" || e.TAG !== 1) d = {
                                TAG: 1,
                                _0: "DeltaPagesManagerEvent",
                                _1: "type is not a number"
                            };
                            else if (e._0 === b("PagesMessagingEventType").FLAG) {
                                j = b("bs_js_dict").get(l, "flagData");
                                if (j !== void 0) {
                                    f = b("bs_js_json").classify(b("bs_caml_option").valFromOption(j));
                                    if (typeof f === "number" || f.TAG !== 2) e = !1;
                                    else {
                                        l = b("bs_js_dict").get(f._0, "state");
                                        if (l !== void 0) {
                                            j = b("bs_js_json").classify(b("bs_caml_option").valFromOption(l));
                                            e = j === 1
                                        } else e = !1
                                    }
                                } else e = !1;
                                f = i(a, g.threadKey);
                                if (f !== void 0) {
                                    l = [{
                                        thread_id: f,
                                        action_type: b("MercuryActionType").CHANGE_FLAG,
                                        mark_as_flag: e,
                                        other_user_fbid: g.threadKey.otherUserFbId,
                                        thread_fbid: g.threadKey.threadFbId
                                    }];
                                    b("MercuryDispatcher").getForFBID(a).handleUpdate({
                                        pinned_thread_ids: [],
                                        newlyAddedClientIDs: {},
                                        actions: l,
                                        preprocessed: !0,
                                        payload_source: b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE
                                    });
                                    d = {
                                        TAG: 0,
                                        _0: "DeltaPagesManagerEvent"
                                    }
                                } else d = {
                                    TAG: 1,
                                    _0: "DeltaPagesManagerEvent",
                                    _1: "threadID is invalid"
                                }
                            } else d = {
                                TAG: 1,
                                _0: "DeltaPagesManagerEvent",
                                _1: "type is not pagesFlag"
                            }
                        } else d = {
                            TAG: 1,
                            _0: "DeltaPagesManagerEvent",
                            _1: "no type on jsonBlob"
                        }
                    }
                }
                break;
            case 16:
                j = c._0;
                f = i(a, {
                    otherUserFbId: null,
                    threadFbId: j.messageMetadata.threadKey.threadFbId
                });
                f !== void 0 ? (p(a, {
                    action_type: b("MercuryActionType").APPROVAL_MODE,
                    action_id: null,
                    thread_fbid: Y(j.messageMetadata.threadKey.threadFbId),
                    other_user_fbid: null,
                    approval_mode: b("bs_js_null_undefined").fromOption(b("bs_js_dict").get(b("MessengerApprovalModeTypes"), j.mode)),
                    thread_id: f
                }, "DeltaApprovalMode", h), d = 0) : d = {
                    TAG: 1,
                    _0: "DeltaApprovalMode",
                    _1: "transform failed"
                };
                break;
            case 17:
                e = c._0;
                g = i(a, {
                    otherUserFbId: e.messageMetadata.threadKey.otherUserFbId,
                    threadFbId: e.messageMetadata.threadKey.threadFbId
                });
                if (g !== void 0) {
                    l = e.inviterFbId;
                    if (l == null) {
                        j = e.recipientFbId;
                        if (!(j == null)) {
                            f = b("MercuryIDs").getParticipantIDFromUserID(b("FBID.bs").ofStringExn(j));
                            p(a, {
                                action_type: b("MercuryActionType").APPROVAL_QUEUE,
                                action_id: null,
                                thread_fbid: Y(e.messageMetadata.threadKey.threadFbId),
                                other_user_fbid: Y(e.messageMetadata.threadKey.otherUserFbId),
                                removed_id: e.action === b("MessengerApprovalQueueTypes").REMOVED ? f : null,
                                added_id: e.action === b("MessengerApprovalQueueTypes").REQUESTED ? f : null,
                                thread_id: g
                            }, "DeltaApprovalQueue", h)
                        }
                    } else {
                        if (e.action === b("MessengerApprovalQueueTypes").REQUESTED) {
                            j = e.requestSource;
                            var q;
                            if (j == null) q = b("MessengerGroupRequestSource").ADD;
                            else switch (j) {
                                case "ADD":
                                    q = b("MessengerGroupRequestSource").ADD;
                                    break;
                                case "JOIN_THROUGH_LINK":
                                    q = b("MessengerGroupRequestSource").JOIN_THROUGH_LINK;
                                    break;
                                default:
                                    q = b("MessengerGroupRequestSource").ADD
                            }
                            f = {
                                requester: {
                                    id: e.recipientFbId
                                },
                                inviter: {
                                    id: l
                                },
                                request_source: q,
                                request_timestamp: e.requestTimestamp
                            }
                        } else f = null;
                        p(a, {
                            action_type: b("MercuryActionType").APPROVAL_QUEUE,
                            action_id: null,
                            thread_fbid: Y(e.messageMetadata.threadKey.threadFbId),
                            other_user_fbid: Y(e.messageMetadata.threadKey.otherUserFbId),
                            removed_group_id: e.action === b("MessengerApprovalQueueTypes").REMOVED ? e.recipientFbId : null,
                            added_group_id: f,
                            thread_id: g
                        }, "DeltaApprovalQueue", h)
                    }
                    d = 0
                } else d = {
                    TAG: 1,
                    _0: "DeltaApprovalQueue",
                    _1: "transform failed"
                };
                break;
            case 18:
                j = c._0;
                p(a, k(a, j.deltaNewMessage), "DeltaGenieMessage", Z(j.deltaNewMessage.messageMetadata));
                d = 0;
                break;
            case 19:
                l = c._0;
                e = l.messageMetadata.threadKey;
                if (e == null) f = void 0;
                else {
                    g = e.threadFbId;
                    f = g == null ? void 0 : g
                }
                j = l.initiator;
                if (j == null) e = void 0;
                else {
                    g = j.userFbId;
                    e = g == null ? void 0 : g.toString()
                }
                j = i(a, {
                    otherUserFbId: null,
                    threadFbId: f
                });
                j !== void 0 ? (p(a, {
                    action_type: b("MercuryActionType").UPDATE_RTC_CALL_DATA,
                    thread_fbid: Y(f),
                    other_user_fbid: null,
                    call_state: l.callState,
                    server_info_data: l.serverInfoData,
                    initiator_fbid: e,
                    thread_id: j
                }, "DeltaRTCCallData", h), d = 0) : d = {
                    TAG: 1,
                    _0: "DeltaRTCCallData",
                    _1: "transform failed"
                };
                break;
            case 20:
                g = c._0;
                f = i(a, g.threadKey);
                if (f !== void 0) {
                    l = [{
                        thread_id: f,
                        action_type: b("MercuryActionType").CHANGE_FOLDER,
                        other_user_fbid: g.threadKey.otherUserFbId,
                        new_folder: b("bs_js_dict").get(b("MessengerState.bs").irisMapping, g.folder)
                    }];
                    b("MercuryDispatcher").getForFBID(a).handleUpdate({
                        pinned_thread_ids: [],
                        newlyAddedClientIDs: {},
                        actions: l,
                        preprocessed: !0,
                        payload_source: b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE
                    });
                    d = {
                        TAG: 0,
                        _0: "DeltaThreadFolder"
                    }
                } else d = {
                    TAG: 1,
                    _0: "DeltaThreadFolder",
                    _1: "threadID is invalid"
                };
                break;
            case 21:
                e = c._0;
                j = i(a, e.threadKey);
                if (j !== void 0) {
                    f = [{
                        thread_id: j,
                        action_type: b("MercuryActionType").MUTATE_TAGS,
                        messageId: e.messageId,
                        tags_to_add: e.tagsToAdd,
                        tags_to_delete: e.tagsToDelete
                    }];
                    b("MercuryDispatcher").getForFBID(a).handleUpdate({
                        pinned_thread_ids: [],
                        newlyAddedClientIDs: {},
                        actions: f,
                        preprocessed: !0,
                        payload_source: b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE
                    });
                    d = {
                        TAG: 0,
                        _0: "DeltaMutateMessageTags"
                    }
                } else d = {
                    TAG: 1,
                    _0: "DeltaMutateMessageTags",
                    _1: "threadID is invalid"
                };
                break;
            case 22:
                d = W(a, c._0);
                break
        }
        if (typeof d === "number") return;
        else if (d.TAG === 0) return m(d._0);
        else return n(d._0, d._1)
    }

    function a(a, c) {
        if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").NewMessage)) return $(a, {
            TAG: 0,
            _0: c
        });
        else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").ReplaceMessage)) return $(a, {
            TAG: 1,
            _0: c
        });
        else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").DeliveryReceipt)) return $(a, {
            TAG: 2,
            _0: c
        });
        else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").MarkRead)) return $(a, {
            TAG: 3,
            _0: c
        });
        else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").MarkUnread)) return $(a, {
            TAG: 4,
            _0: c
        });
        else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").ParticipantLeftGroupThread)) return $(a, {
            TAG: 5,
            _0: c
        });
        else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").ParticipantsAddedToGroupThread)) return $(a, {
            TAG: 6,
            _0: c
        });
        else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").ThreadName)) return $(a, {
            TAG: 7,
            _0: c
        });
        else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").ReadReceipt)) return $(a, {
            TAG: 8,
            _0: c
        });
        else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").AdminTextMessage)) return $(a, {
            TAG: 9,
            _0: c
        });
        else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").MessageDelete)) return $(a, {
            TAG: 10,
            _0: c
        });
        else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").ThreadAction)) return $(a, {
            TAG: 11,
            _0: c
        });
        else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").ThreadDelete)) return $(a, {
            TAG: 12,
            _0: c
        });
        else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").AdminRemovedFromGroupThread)) return $(a, {
            TAG: 13,
            _0: c
        });
        else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").ThreadMuteSettings)) return $(a, {
            TAG: 14,
            _0: c
        });
        else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").PagesManagerEvent)) return $(a, {
            TAG: 15,
            _0: c
        });
        else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").ApprovalMode)) return $(a, {
            TAG: 16,
            _0: c
        });
        else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").ApprovalQueue)) return $(a, {
            TAG: 17,
            _0: c
        });
        else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").ClientPayload)) return $(a, {
            TAG: 22,
            _0: c
        });
        else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").GenieMessage)) return $(a, {
            TAG: 18,
            _0: c
        });
        else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").RtcCallData)) return $(a, {
            TAG: 19,
            _0: c
        });
        else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").MarkFolderSeen)) {
            m("DeltaMarkFolderSeen");
            return b("MessengerState.bs").send(b("bs_caml_option").some(a), [{
                TAG: 0,
                _0: {
                    TAG: 68,
                    _0: c
                }
            }])
        } else if (b("bs_caml_obj").caml_equal(c["class"], b("MercurySyncDeltaTypes").ThreadFolder)) return $(a, {
            TAG: 20,
            _0: c
        });
        else return
    }
    f.transform = a;
    f.fetchAndUpdatePinnedMessage = r
}), null);
__d("BizInboxUnifiedTags", [], (function(a, b, c, d, e, f) {
    a = Object.freeze({
        AUTO_RESPONDED: "auto_responded",
        FOLLOW_UP: "follow_up",
        PRIORITY: "priority",
        SPAM_LIKELY: "spam_likely",
        STORY_REACTION: "story_reaction",
        UNREAD: "unread",
        UNRESPONDED: "unresponded"
    });
    f["default"] = a
}), 66);
__d("EmojiLikeConstants", ["EmojiStaticConfig"], (function(a, b, c, d, e, f, g) {
    "use strict";
    a = Object.freeze({
        XSMALL: "xsmall",
        SMALL: "small",
        MEDIUM: "medium",
        LARGE: "large"
    });
    b = {
        dp16: "xsmall",
        dp32: "small",
        dp64: "medium",
        db64: "medium",
        dp128: "large"
    };
    d = Object.freeze({
        PICKER: "picker",
        HOT_LIKE: "hot_like"
    });
    e = [983040];
    f = "hot_emoji_source";
    var h = "hot_emoji_size",
        i = "emoji_like",
        j = "\ud83d\udc4d",
        k = [128077];
    g.sizeMap = c("EmojiStaticConfig").sizeMap;
    g.size = a;
    g.sizeMapTransfer = b;
    g.source = d;
    g.FB_THUMBS_UP_EMOJI = e;
    g.SOURCE_TAG_PREFIX = f;
    g.TAG_PREFIX_NEW = h;
    g.TAG_PREFIX_OLD = i;
    g.THUMBS_UP_EMOJI = j;
    g.THUMBS_UP_EMOJI_CODES = k
}), 98);
__d("MercuryTagHelper", [], (function(a, b, c, d, e, f) {
    "use strict";

    function a(a, b) {
        a = a.find(function(a) {
            return a != null ? a.startsWith(b) : !1
        });
        return a == null ? a : a.substr(a.indexOf(":") + 1)
    }
    f.get = a
}), 66);
__d("EmojiLikeUtils", ["EmojiLikeConstants", "MercuryTagHelper"], (function(a, b, c, d, e, f, g) {
    "use strict";

    function a(a, b) {
        !a.tags ? a.tags = [h(b)] : a.tags.push(h(b));
        return a
    }

    function h(a) {
        var b = d("EmojiLikeConstants").TAG_PREFIX_NEW;
        return b + ":" + a
    }

    function b(a, b) {
        !a.tags ? a.tags = [i(b)] : a.tags.push(i(b));
        return a
    }

    function i(a) {
        return d("EmojiLikeConstants").SOURCE_TAG_PREFIX + ":" + a
    }

    function c(a) {
        return j(a) != null
    }

    function j(a) {
        if (!a.tags) return null;
        var b = d("MercuryTagHelper").get(a.tags, d("EmojiLikeConstants").TAG_PREFIX_NEW);
        return b ? b : d("MercuryTagHelper").get(a.tags, d("EmojiLikeConstants").TAG_PREFIX_OLD)
    }
    g.setEmojiSize = a;
    g.setEmojiSource = b;
    g.isEmojiLike = c;
    g.getEmojiSize = j
}), 98);
__d("MercuryAttachment", ["cx", "EmojiLikeUtils", "MercuryAudioType"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h = function(a) {
            return a === Object(a)
        },
        i = "_1c_u",
        j = new Set(["animated_image", "photo", "video", "third_party_sticker"]),
        k = {
            getAttachIconClass: function(a) {
                switch (a) {
                    case "attach:image":
                        return "_y2-";
                    case "attach:video":
                        return "_y2_";
                    case "attach:music":
                        return "_y30";
                    case "attach:voice":
                        return "_y31";
                    case "attach:text":
                        return "_y32";
                    case "attach:pdf":
                        return "_1k9k";
                    case "attach:richtext":
                        return "_1k9l";
                    case "attach:spreadsheet":
                        return "_1k9p";
                    case "attach:presentation":
                        return "_1k9r";
                    case "attach:archive":
                        return "_1k9s";
                    case "attach:ms:word":
                        return "_y33";
                    case "attach:ms:xls":
                        return "_y34";
                    case "attach:ms:ppt":
                        return "_y35"
                }
                return "_y36"
            },
            getAttachIconClassByMime: function(a) {
                return k.getAttachIconClass(k.getAttachTypeByMime(a))
            },
            getAttachTypeByMime: function(a) {
                if (!a) return "attach:unknown";
                if (a.startsWith("image")) return "attach:image";
                else if (a.startsWith("video")) return "attach:video";
                else if (a.startsWith("audio")) return "attach:music";
                else if (a.startsWith("text/plain")) return "attach:text";
                else if (a == "text/pdf" || a == "application/pdf" || a == "application/vnd.pdf" || a == "application/x-pdf") return "attach:pdf";
                else if (a == "text/richtext" || a == "application/rtf" || a == "application/x-iwork-pages-sffkey") return "attach:richtext";
                else if (a == "text/csv" || a == "application/x-iwork-numbers-sffkey") return "attach:spreadsheet";
                else if (a == "application/x-iwork-keynote-sffkey") return "attach:presentation";
                else if (a == "application/vnd.ms-cab-compressed" || a == "application/x-7z-compressed" || a == "application/x-ace-compressed" || a == "application/x-apple-diskimage" || a == "application/x-compress" || a == "application/x-compressed" || a == "application/x-gzip" || a == "application/x-rar-compressed" || a == "application/x-tar" || a == "application/x-zip-compressed" || a == "application/zip") return "attach:archive";
                else if (a == "application/msword" || a.startsWith("application/vnd.ms-word") || a.startsWith("application/vnd.openxmlformats-officedocument.wordprocessingml")) return "attach:ms:word";
                else if (a.startsWith("application/vnd.ms-excel") || a.startsWith("application/vnd.openxmlformats-officedocument.spreadsheetml")) return "attach:ms:xls";
                else if (a.startsWith("application/vnd.ms-powerpoint") || a.startsWith("application/vnd.openxmlformats-officedocument.presentationml")) return "attach:ms:ppt";
                else return "attach:unknown"
            },
            convertRaw: function(a) {
                var b = [];
                for (var c = 0; c < a.length; c++) {
                    var d = a[c];
                    if (d.attach_type === "photo") b.push(d);
                    else if (d.filename) {
                        var e = k.getAttachTypeByMime(d.filetype);
                        d = {
                            attach_type: "file",
                            name: d.filename,
                            icon_type: e,
                            url: ""
                        };
                        b.push(d)
                    }
                }
                return b
            },
            get: function(a) {
                var c = [];
                a.attachments ? c = a.attachments : a.raw_attachments && (c = k.convertRaw(a.raw_attachments));
                var d = b("EmojiLikeUtils").getEmojiSize(a);
                d && (c = c.concat([{
                    attach_type: "emoji_like",
                    size: d
                }]));
                if (!(a.attachments && a.attachments.length > 0)) {
                    if (a.sticker_id) return c.concat([{
                        attach_type: "sticker"
                    }]);
                    if (a.preview_attachments && a.preview_attachments.length > 0) return c.concat(a.preview_attachments)
                }
                return c
            },
            resizeContain: function(a, b) {
                var c = a.width / a.height,
                    d = b.width / b.height;
                if (d < c) return {
                    width: Math.ceil(Math.min(a.height * d, b.width)),
                    height: Math.ceil(Math.min(a.height, b.height))
                };
                else return {
                    width: Math.ceil(Math.min(a.width, b.width)),
                    height: Math.ceil(Math.min(a.width / d, b.height))
                }
            },
            isBubblePreferred: function(a) {
                return k.isFileAttachment(a)
            },
            isPhotoAttachment: function(a) {
                return (k == null ? void 0 : k.getAttachTypeByMime) && k.getAttachTypeByMime(a.mime_type) === "attach:pdf" ? !1 : !!(a.attach_type == "photo" || a.attach_type == "animated_image" || a.attach_type == "third_party_sticker" || a.attach_type == "file" && a.preview_url)
            },
            isPhotoGroupAttachment: function(a) {
                return j.has(a.attach_type)
            },
            isSinglePhotoGroupAttachment: function(a) {
                return !!(a.attachments && a.attachments.length === 1 && a.attachments[0] && k.isPhotoGroupAttachment(a.attachments[0]))
            },
            isVideoAttachment: function(a) {
                return a.attach_type == "video"
            },
            isShareAttachment: function(a) {
                return a.attach_type == "share"
            },
            isFileAttachment: function(a) {
                return a.attach_type == "file"
            },
            isErrorAttachment: function(a) {
                return a.attach_type == "error"
            },
            isStickerAttachment: function(a) {
                return a.attach_type == "sticker"
            },
            isEmojiLikeAttachment: function(a) {
                return a.attach_type === "emoji_like"
            },
            isVoiceAttachment: function(a) {
                return !a.metadata ? !1 : a.metadata.type === b("MercuryAudioType").AudioClip || a.metadata.type === b("MercuryAudioType").VoiceMessageWithTranscript
            },
            hasAttribution: function(a) {
                return !!a.app_attribution
            },
            isLightweightActionAttachment: function(a) {
                return !!(k.isShareAttachment(a) && a.share && a.share.target != null && a.share.target.lwa_type != null)
            },
            isSingleVideoAttachment: function(a) {
                a = k.get(a).filter(h).filter(function(a) {
                    return k.isVideoAttachment(a)
                });
                return a.length === 1
            },
            isSharedVideoAttachment: function(a) {
                a = a.attach_type === "share" && a.share && a.share.subattachments && a.share.subattachments[0];
                return !!(a && a.target && a.target.video_id)
            },
            isGenieSharedVideoAttachment: function(a) {
                return !!(a.attach_type === "share" && a.share && a.share.style_list.indexOf("genie_message") > -1 && a.share.target && a.share.target.attachment && k.isSharedVideoAttachment(a.share.target.attachment))
            },
            isSharedVideoAttachmentMessage: function(a) {
                a = k.get(a).filter(h).filter(function(a) {
                    return k.isSharedVideoAttachment(a) || k.isGenieSharedVideoAttachment(a)
                });
                return a.length === 1
            },
            getVideoElem: function(a, b) {
                b = b.getMessageElement(a);
                if (!b) return null;
                a = b.getElementsByClassName(i);
                return a && a.length ? a[0] : b
            }
        };
    e.exports = k
}), null);
__d("MercuryDisplayTimeFilterMessageRenderer", ["fbt"], (function(a, b, c, d, e, f, g) {
    "use strict";
    a = {
        renderFilteredContent: function(a) {
            if (a.is_filtered_content_bh) return g._( /*FBT_CALL*/ "\u05d4\u05d5\u05d3\u05e2\u05d4 \u05d6\u05d5 \u05d4\u05d5\u05e1\u05e8\u05d4 \u05de\u05e4\u05e0\u05d9 \u05e9\u05d4\u05d9\u05d0 \u05de\u05db\u05d9\u05dc\u05d4 \u05e7\u05d9\u05e9\u05d5\u05e8 \u05d4\u05de\u05e0\u05d5\u05d2\u05d3 \u05dc\u05db\u05dc\u05dc\u05d9 \u05d4\u05e7\u05d4\u05d9\u05dc\u05d4 \u05e9\u05dc\u05e0\u05d5." /*FBT_CALL*/ );
            if (a.is_filtered_content_account) return g._( /*FBT_CALL*/ "\u05d4\u05d5\u05d3\u05e2\u05d4 \u05d6\u05d5 \u05d4\u05d5\u05e1\u05e8\u05d4 \u05d1\u05d0\u05d5\u05e4\u05df \u05d6\u05de\u05e0\u05d9 \u05de\u05e4\u05e0\u05d9 \u05e9\u05d7\u05e9\u05d1\u05d5\u05df \u05d4\u05e9\u05d5\u05dc\u05d7 \u05d3\u05d5\u05e8\u05e9 \u05d0\u05d9\u05de\u05d5\u05ea." /*FBT_CALL*/ );
            if (a.is_filtered_content_quasar) return g._( /*FBT_CALL*/ "\u05d4\u05d5\u05d3\u05e2\u05d4 \u05d6\u05d5 \u05d4\u05d5\u05e1\u05e8\u05d4 \u05de\u05e4\u05e0\u05d9 \u05e9\u05d4\u05d9\u05d0 \u05de\u05db\u05d9\u05dc\u05d4 \u05ea\u05d5\u05db\u05df \u05d7\u05e1\u05d5\u05dd \u05d0\u05d5 \u05de\u05d6\u05d9\u05e7." /*FBT_CALL*/ );
            return a.is_filtered_content_invalid_app ? g._( /*FBT_CALL*/ "\u05d4\u05d5\u05d3\u05e2\u05d4 \u05d6\u05d5 \u05d4\u05d5\u05e1\u05e8\u05d4 \u05de\u05e4\u05e0\u05d9 \u05e9\u05d4\u05d0\u05e4\u05dc\u05d9\u05e7\u05e6\u05d9\u05d4 \u05e9\u05de\u05de\u05e0\u05d4 \u05d4\u05d9\u05d0 \u05e0\u05e9\u05dc\u05d7\u05d4 \u05d7\u05e1\u05d5\u05de\u05d4 \u05d5\u05dc\u05d0 \u05d9\u05db\u05d5\u05dc\u05d4 \u05dc\u05e9\u05dc\u05d5\u05d7 \u05d4\u05d5\u05d3\u05e2\u05d5\u05ea." /*FBT_CALL*/ ) : g._( /*FBT_CALL*/ "\u05d4\u05d5\u05d3\u05e2\u05d4 \u05d6\u05d5 \u05d4\u05d5\u05e1\u05e8\u05d4 \u05d1\u05d0\u05d5\u05e4\u05df \u05d6\u05de\u05e0\u05d9 \u05de\u05e4\u05e0\u05d9 \u05e9\u05d7\u05e9\u05d1\u05d5\u05df \u05d4\u05e9\u05d5\u05dc\u05d7 \u05de\u05e6\u05e8\u05d9\u05da \u05d0\u05d9\u05de\u05d5\u05ea, \u05d0\u05d5 \u05e9\u05d4\u05d5\u05d0 \u05d6\u05d5\u05d4\u05d4 \u05db\u05e4\u05d5\u05d2\u05e2\u05e0\u05d9." /*FBT_CALL*/ )
        }
    };
    e.exports = a
}), null);
__d("MercuryLocalIDs", ["randomInt"], (function(a, b, c, d, e, f, g) {
    "use strict";

    function a(a) {
        return "root:" + h(a)
    }

    function h(a) {
        a = a != null ? a : Date.now();
        var b = c("randomInt")(0, 4294967295);
        b = ("0000000000000000000000" + b.toString(2)).slice(-22);
        a = a.toString(2) + b;
        return i(a.slice(-63))
    }

    function i(a) {
        var b = "";
        a = a;
        while (a != "0") {
            var c = 0,
                d = "";
            for (var e = 0; e < a.length; e++) c = 2 * c + parseInt(a[e], 10), c >= 10 ? (d += "1", c -= 10) : d += "0";
            b = c.toString() + b;
            a = d.slice(d.indexOf("1"))
        }
        return b
    }
    g.generateThreadID = a;
    g.generateOfflineThreadingID = h
}), 98);
__d("MercuryMessageClientState", [], (function(a, b, c, d, e, f) {
    a = Object.freeze({
        DO_NOT_SEND_TO_SERVER: "do_not_send_to_server",
        SEND_TO_SERVER: "send_to_server"
    });
    b = a;
    f["default"] = b
}), 66);
__d("MercurySingletonProvider", ["CurrentUser"], (function(a, b, c, d, e, f) {
    "use strict";
    a = function() {
        function a(a) {
            this.$1 = {}, this.$2 = a
        }
        var c = a.prototype;
        c.getForFBID = function(a) {
            this.$1[a] || (this.$1[a] = new this.$2(a));
            return this.$1[a]
        };
        c.get = function() {
            return this.getForFBID(b("CurrentUser").getID())
        };
        c.resetAll = function() {
            var a = this.$1;
            this.$1 = {};
            return a
        };
        a.mock = function(a) {
            throw new Error("MercurySingletonProvider.mock() must only be used in tests.")
        };
        return a
    }();
    e.exports = a
}), null);
__d("MessengerMQTTConnectionEvents", [], (function(a, b, c, d, e, f) {
    "use strict";
    a = "messenger-mqtt-delta";
    b = "messenger-mqtt-stream-disconnect";
    c = "messenger-mqtt-stream-connecting";
    d = "messenger-mqtt-stream-connect";
    e = "Connected";
    var g = "Disconnected",
        h = "Connecting",
        i = "messenger-mqtt-typ";
    f.DELTA_EVENT = a;
    f.STREAM_DISCONNECT = b;
    f.STREAM_CONNECTING = c;
    f.STREAM_CONNECT = d;
    f.STATE_CONNECTED = e;
    f.STATE_DISCONNECTED = g;
    f.STATE_CONNECTING = h;
    f.TYP = i
}), 66);
__d("MercurySyncEventsProxy", ["Arbiter", "ChannelConstants", "LogHistory", "MercuryMessagingLightswitch", "MercurySingletonProvider", "MessengerMQTTConnectionEvents"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h = d("LogHistory").getInstance("mercury_event_proxy"),
        i = {
            DELTA: "DELTA",
            FAKE_DFF: "FAKE_DFF",
            FLOW: "FLOW",
            FLOW_REJECT: "FLOW_REJECT",
            INIT: "MercurySyncDeltaHandler/initSeqID",
            CONNECTED: "CONNECTED",
            RECONNECTING: "RECONNECTING",
            SHUTDOWN: "SHUTDOWN",
            TYP: "TYP"
        };
    a = function() {
        a.getArbiterTypeForFBID = function(a, b) {
            return a + "/" + b
        };
        a.getForFBID = function(a) {
            return j.getForFBID(a)
        };
        a.get = function() {
            return j.get()
        };

        function a(a) {
            this.$2 = [], this.$1 = a, this.init()
        }
        var b = a.prototype;
        b.getArbiterType = function(b) {
            return a.getArbiterTypeForFBID(this.$1, b)
        };
        b.init = function() {
            var a = this;
            this.$2.forEach(function(a) {
                return c("Arbiter").unsubscribe(a)
            });
            this.$2 = [c("Arbiter").subscribe(d("MessengerMQTTConnectionEvents").DELTA_EVENT, function(b) {
                for (var d = arguments.length, e = new Array(d > 1 ? d - 1 : 0), f = 1; f < d; f++) e[f - 1] = arguments[f];
                return c("Arbiter").inform.apply(c("Arbiter"), [a.getArbiterType(i.DELTA)].concat(e))
            }), c("Arbiter").subscribe(d("MessengerMQTTConnectionEvents").STREAM_CONNECT, function(b) {
                for (var d = arguments.length, e = new Array(d > 1 ? d - 1 : 0), f = 1; f < d; f++) e[f - 1] = arguments[f];
                return c("Arbiter").inform.apply(c("Arbiter"), [a.getArbiterType(i.CONNECTED)].concat(e))
            }), c("Arbiter").subscribe(d("MessengerMQTTConnectionEvents").STREAM_DISCONNECT, function(b) {
                for (var d = arguments.length, e = new Array(d > 1 ? d - 1 : 0), f = 1; f < d; f++) e[f - 1] = arguments[f];
                return c("Arbiter").inform.apply(c("Arbiter"), [a.getArbiterType(i.SHUTDOWN)].concat(e))
            }), c("Arbiter").subscribe(d("MessengerMQTTConnectionEvents").STREAM_CONNECTING, function(b) {
                for (var d = arguments.length, e = new Array(d > 1 ? d - 1 : 0), f = 1; f < d; f++) e[f - 1] = arguments[f];
                return c("Arbiter").inform.apply(c("Arbiter"), [a.getArbiterType(i.RECONNECTING)].concat(e))
            }), c("Arbiter").subscribe(d("ChannelConstants").getArbiterType(d("ChannelConstants").FAKE_DFF), function(b) {
                c("MercuryMessagingLightswitch").guard(function() {
                    h.debug("fakedff", JSON.stringify({
                        fbid: a.$1
                    }))
                });
                for (var d = arguments.length, e = new Array(d > 1 ? d - 1 : 0), f = 1; f < d; f++) e[f - 1] = arguments[f];
                c("Arbiter").inform.apply(c("Arbiter"), [a.getArbiterType(i.FAKE_DFF)].concat(e))
            }), c("Arbiter").subscribe(d("MessengerMQTTConnectionEvents").TYP, function(b) {
                for (var d = arguments.length, e = new Array(d > 1 ? d - 1 : 0), f = 1; f < d; f++) e[f - 1] = arguments[f];
                c("Arbiter").inform.apply(c("Arbiter"), [a.getArbiterType(i.TYP)].concat(e))
            })]
        };
        return a
    }();
    a.Events = i;
    var j = new(c("MercurySingletonProvider"))(a);
    g["default"] = a
}), 98);
__d("MercuryThreadInfo", ["MercuryIDs"], (function(a, b, c, d, e, f, g) {
    "use strict";

    function a(a) {
        return !!(a.is_subscribed && (a.can_reply === void 0 || a.can_reply) && !a.has_email_participant && !a.read_only)
    }

    function h(a) {
        return a.mute_until == null ? void 0 : a.mute_until
    }

    function i(a) {
        return d("MercuryIDs").tokenize(a.thread_id).type === "root" && !a.timestamp
    }

    function b(a) {
        a = h(a);
        return a != null && (a > Date.now() / 1e3 || a === -1)
    }

    function c(a) {
        return a.mentions_mute_mode === 1
    }

    function e(a) {
        return a.reactions_mute_mode === 1
    }

    function f(a) {
        return !!(i(a) && a.participants && a.participants.length === 0)
    }

    function j(a) {
        return !!((a.can_reply || !a.cannot_reply_reason || a.cannot_reply_reason.toLowerCase() === "blocked" || a.cannot_reply_reason.toLowerCase() === "messenger_blockee") && !a.has_email_participant && !a.read_only && a.is_subscribed)
    }

    function k(a) {
        return !!(a.is_canonical_user && (a.message_count === 0 || !a.timestamp))
    }
    g.canReply = a;
    g.getMuteSetting = h;
    g.isEmptyLocalThread = i;
    g.isMuted = b;
    g.areMentionsMuted = c;
    g.areReactionsMuted = e;
    g.isNewEmptyLocalThread = f;
    g.showSettingsMenu = j;
    g.isColdOpen = k
}), 98);
__d("MercuryThreadInformer", ["ArbiterMixin", "LogHistory", "MercuryAssert", "MercuryMessagingLightswitch", "MercurySingletonProvider", "mixin"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h = d("LogHistory").getInstance("mercury_informer");
    a = function(a) {
        babelHelpers.inheritsLoose(b, a);
        b.get = function() {
            return i.get()
        };
        b.getForFBID = function(a) {
            return i.getForFBID(a)
        };

        function b(b) {
            var c;
            c = a.call(this) || this;
            c.$MercuryThreadInformer1 = b;
            c.$MercuryThreadInformer2 = {};
            c.$MercuryThreadInformer3 = {};
            c.$MercuryThreadInformer4 = {};
            c.$MercuryThreadInformer5 = {};
            c.$MercuryThreadInformer6 = !1;
            c.$MercuryThreadInformer7 = !1;
            c.$MercuryThreadInformer8 = !1;
            c.$MercuryThreadInformer9 = !1;
            c.$MercuryThreadInformer10 = {};
            c.$MercuryThreadInformer11 = {};
            c.$MercuryThreadInformer12 = {};
            c.$MercuryThreadInformer13 = {};
            c.$MercuryThreadInformer14 = {};
            c.$MercuryThreadInformer15 = 0;
            return c
        }
        var e = b.prototype;
        e.informNewMessage = function(a, b) {
            this.inform("new-message", {
                threadID: a,
                message: b
            })
        };
        e.informNewLogMessage = function(a, b) {
            this.inform("new-log-message", {
                threadID: a,
                message: b
            })
        };
        e.updatedThread = function(a) {
            this.$MercuryThreadInformer3[a] = !0, this.$MercuryThreadInformer16()
        };
        e.updateError = function(a) {
            this.$MercuryThreadInformer14 = a, this.$MercuryThreadInformer16()
        };
        e.invalidatedThread = function(a) {
            this.$MercuryThreadInformer4[a] = !0, this.$MercuryThreadInformer16()
        };
        e.deletedThread = function(a) {
            this.$MercuryThreadInformer2[a] = !0, this.$MercuryThreadInformer16()
        };
        e.updatedThreadlist = function() {
            this.$MercuryThreadInformer6 = !0, this.$MercuryThreadInformer16()
        };
        e.updatedUnseenState = function() {
            this.$MercuryThreadInformer7 = !0, this.$MercuryThreadInformer16()
        };
        e.updatedUnseenTimestamp = function() {
            this.$MercuryThreadInformer8 = !0, this.$MercuryThreadInformer16()
        };
        e.updatedUnreadState = function() {
            this.$MercuryThreadInformer9 = !0, this.$MercuryThreadInformer16()
        };
        e.changedThreadReadState = function(a, b, c) {
            (!this.$MercuryThreadInformer5[a] || this.$MercuryThreadInformer5[a].timestamp < c) && (this.$MercuryThreadInformer5[a] = {
                mark_as_read: b,
                timestamp: c
            }), this.$MercuryThreadInformer16()
        };
        e.receivedMessage = function(a) {
            d("MercuryAssert").isThreadID(a.thread_id);
            var b = a.thread_id;
            this.$MercuryThreadInformer10[b] || (this.$MercuryThreadInformer10[b] = []);
            this.$MercuryThreadInformer10[b].push(a);
            this.updatedThread(b)
        };
        e.reorderedMessages = function(a, b) {
            this.$MercuryThreadInformer11[a] = {
                source: b
            }, this.$MercuryThreadInformer16()
        };
        e.updatedMessage = function(a, b, c) {
            this.$MercuryThreadInformer12[a] || (this.$MercuryThreadInformer12[a] = {}), this.$MercuryThreadInformer12[a][b] = {
                source: c
            }, this.updatedThread(a)
        };
        e.deletedMessage = function(a, b, c, d) {
            this.$MercuryThreadInformer13[a] || (this.$MercuryThreadInformer13[a] = {}), this.$MercuryThreadInformer13[a][b] = {
                attachmentIDs: d,
                source: c
            }, this.updatedThread(a)
        };
        e.synchronizeInforms = function(a) {
            this.$MercuryThreadInformer15++;
            try {
                a()
            } catch (a) {
                throw a
            } finally {
                this.$MercuryThreadInformer15--, this.$MercuryThreadInformer16()
            }
        };
        e.listen = function(a, b) {
            return this.subscribe("threads-updated", function(c, d) {
                d[a] && b(a)
            })
        };
        e.$MercuryThreadInformer16 = function() {
            if (!this.$MercuryThreadInformer15) {
                var a = this.$MercuryThreadInformer2,
                    b = this.$MercuryThreadInformer3,
                    c = this.$MercuryThreadInformer4,
                    d = this.$MercuryThreadInformer5,
                    e = this.$MercuryThreadInformer6,
                    f = this.$MercuryThreadInformer7,
                    g = this.$MercuryThreadInformer8,
                    h = this.$MercuryThreadInformer9,
                    i = this.$MercuryThreadInformer10,
                    j = this.$MercuryThreadInformer11,
                    k = this.$MercuryThreadInformer12,
                    l = this.$MercuryThreadInformer13,
                    m = this.$MercuryThreadInformer14;
                this.$MercuryThreadInformer2 = {};
                this.$MercuryThreadInformer3 = {};
                this.$MercuryThreadInformer4 = {};
                this.$MercuryThreadInformer5 = {};
                this.$MercuryThreadInformer6 = !1;
                this.$MercuryThreadInformer7 = !1;
                this.$MercuryThreadInformer8 = !1;
                this.$MercuryThreadInformer9 = !1;
                this.$MercuryThreadInformer10 = {};
                this.$MercuryThreadInformer11 = {};
                this.$MercuryThreadInformer12 = {};
                this.$MercuryThreadInformer13 = {};
                this.$MercuryThreadInformer14 = {};
                var n = Object.keys(b);
                (n.length || e) && this.inform("threadlist-updated", n);
                Object.keys(m).length && this.$MercuryThreadInformer17("threadlist-error-updated", m);
                n.length && this.$MercuryThreadInformer17("threads-updated", b);
                for (var e in c) {
                    this.$MercuryThreadInformer17("thread-invalidated", c);
                    break
                }
                for (var m in d) {
                    this.$MercuryThreadInformer17("thread-read-changed", d);
                    break
                }
                for (var n in a) {
                    this.$MercuryThreadInformer17("threads-deleted", a);
                    break
                }
                f && this.$MercuryThreadInformer17("unseen-updated", null);
                g && this.$MercuryThreadInformer17("unseen-timestamp-updated", null);
                h && this.$MercuryThreadInformer17("unread-updated", null);
                for (var b in i) {
                    this.$MercuryThreadInformer17("messages-received", i);
                    break
                }
                for (var e in j) {
                    this.$MercuryThreadInformer17("messages-reordered", j);
                    break
                }
                for (var c in k) {
                    this.$MercuryThreadInformer17("messages-updated", k);
                    break
                }
                for (var m in l) {
                    this.$MercuryThreadInformer17("messages-deleted", l);
                    break
                }
            }
        };
        e.$MercuryThreadInformer17 = function(a, b) {
            a === "threads-updated" && c("MercuryMessagingLightswitch").guard(function() {
                h.debug(a, JSON.stringify(b))
            }), this.inform(a, b)
        };
        return b
    }(c("mixin")(c("ArbiterMixin")));
    var i = new(c("MercurySingletonProvider"))(a);
    g["default"] = a
}), 98);
__d("ThreadConnectivityStatusGraphQLType.bs", [], (function(a, b, c, d, e, f) {
    "use strict";
    a = "UNCONNECTED";
    b = "IMPLICIT_OR_TWO_WAY_MESSAGING";
    f.unconnected = a;
    f.implicitOrTwoWayMessaging = b
}), null);
__d("ThreadConnectivityStatusGraphQLType.re", ["ThreadConnectivityStatusGraphQLType.bs"], (function(a, b, c, d, e, f) {
    a = b("ThreadConnectivityStatusGraphQLType.bs").unconnected;
    f.unconnected = a;
    c = b("ThreadConnectivityStatusGraphQLType.bs").implicitOrTwoWayMessaging;
    f.implicitOrTwoWayMessaging = c
}), null);
__d("getPageIDFromThreadID", ["FBIDCheck", "MercuryIDs"], (function(a, b, c, d, e, f, g) {
    "use strict";

    function a(a) {
        a = d("MercuryIDs").getUserIDFromThreadID(a);
        return !a || d("FBIDCheck").isUser_deprecated(a) ? null : a
    }
    g["default"] = a
}), 98);
__d("MessageRequestUtils", ["CurrentUser", "MercuryIDs", "MessagingTag", "ThreadConnectivityStatusGraphQLType.re", "getPageIDFromThreadID"], (function(a, b, c, d, e, f, g) {
    "use strict";

    function h(a) {
        return (a.folder === c("MessagingTag").PENDING || a.folder === c("MessagingTag").OTHER) && a.can_reply
    }

    function a(a) {
        return a.folder === c("MessagingTag").OTHER
    }

    function b(a) {
        return h(a) && (d("MercuryIDs").isGroupChat(a.thread_id) || !!c("getPageIDFromThreadID")(a.thread_id) || c("CurrentUser").isWorkUser())
    }

    function e(a) {
        var b;
        return !c("CurrentUser").isWorkUser() && c("CurrentUser").getID() !== a.other_user_fbid && ((b = a.thread_connectivity_data) == null ? void 0 : b.connectivity_status) === d("ThreadConnectivityStatusGraphQLType.re").unconnected && ((b = a.thread_connectivity_data) == null ? void 0 : b.first_sender_id) === a.other_user_fbid
    }

    function f(a) {
        if (!a) return !1;
        if (h(a)) return !1;
        return c("CurrentUser").isWorkUser() || d("MercuryIDs").isGroupChat(a.thread_id) ? !0 : ((a = a.thread_connectivity_data) == null ? void 0 : a.connectivity_status) === d("ThreadConnectivityStatusGraphQLType.re").implicitOrTwoWayMessaging
    }
    g.isMessageRequest = h;
    g.isFiltered = a;
    g.shouldShowComposerPendingActions = b;
    g.shouldShowUnconnectedThreadInfoText = e;
    g.shouldSendTypingIndicators = f
}), 98);
__d("MessengerJoinableModeType", [], (function(a, b, c, d, e, f) {
    a = Object.freeze({
        PRIVATE: 0,
        JOINABLE: 1
    });
    f["default"] = a
}), 66);
__d("MessengerThreadUtils.bs", ["CurrentUser", "FBID.bs", "ImmutableObject", "MercuryIDs", "MercuryParticipantTypes", "MessengerJoinableModeType", "MessengerObjectAssociationType", "MessengerParticipants.bs", "MessengerThreadCannotReplyReason", "bs_caml_obj"], (function(a, b, c, d, e, f) {
    "use strict";

    function g(a, c) {
        return c.filter(function(c) {
            return b("bs_caml_obj").caml_notequal(c, a)
        }).length <= 1
    }

    function h(a, c, d, e) {
        var f = b("MercuryIDs").tokenize(c),
            h = f.type;
        f = f.value;
        var i = d.find(function(b) {
            return b !== a
        });
        i = i !== void 0 ? b("MessengerParticipants.bs").getNow(i) : null;
        var j = b("CurrentUser").isWorkUser();
        j = !(i == null) && j && i.work_foreign_entity_info == null && i.user_type === b("MercuryParticipantTypes").USER ? [!1, b("MessengerThreadCannotReplyReason").RECIPIENTS_INVALID] : [!0, null];
        return new(b("ImmutableObject"))({
            thread_id: c,
            participants: Array.from(d),
            preloaded_participants: [],
            admins: {},
            name: "",
            snippet: "",
            snippet_sender: null,
            unread_count: e == null ? 0 : e,
            message_count: 0,
            image_src: null,
            square_image_src: null,
            timestamp: 0,
            other_user_fbid: h === "user" ? b("FBID.bs").ofStringExn(f) : null,
            is_canonical_user: h === "user",
            is_canonical: g(a, d),
            is_subscribed: !0,
            is_other_recipient_page: !1,
            folder: "inbox",
            is_archived: !1,
            is_page_follow_up: !1,
            is_page_unresponded_thread: !1,
            admin_model_status: null,
            approval_mode: 0,
            approval_queue_ids: [],
            associated_object: null,
            can_reply: j[0],
            cannot_reply_reason: j[1],
            can_viewer_report: !1,
            comm_item_owners: null,
            comm_source_id: null,
            comm_status: null,
            is_priority: !1,
            biz_inbox_tags: [],
            comm_icon_type: [],
            composer_input_disabled: null,
            custom_like_icon: null,
            custom_nickname: null,
            customization_enabled: !1,
            description: null,
            ephemeral_ttl_mode: 0,
            footer_color: null,
            game_id: null,
            group_approval_queue: null,
            work_associated_group: null,
            pinned_messages: null,
            groups_sync_status: null,
            group_thread_subtype: null,
            has_email_participant: !1,
            has_montage: !1,
            unread_mentions_count: 0,
            header_color: null,
            is_canonical_neo_user: !1,
            is_from_weak_entry_point: !1,
            is_pin_protected: !1,
            is_pinned: !1,
            is_thread_queue_enabled: !1,
            joinable_mode: {
                mode: 0,
                link: ""
            },
            last_message_timestamp: 0,
            last_message_id: null,
            last_message_type: null,
            last_read_timestamp: 0,
            last_message_admin_text_type: null,
            last_message_unsendability_status: null,
            lightweight_event: null,
            lightweight_events: {},
            marketplace_thread_data: null,
            mentions_mute_mode: 0,
            mute_until: null,
            object_association_type: null,
            page_comm_item_id: null,
            page_thread_info: null,
            page_unsubscribe_status: !1,
            participant_add_mode: null,
            participants_event_status: null,
            reactions_mute_mode: 0,
            read_only: !1,
            recipients_loadable: !1,
            rtc_call_data: null,
            server_timestamp: 0,
            snippet_attachments: [],
            solid_color: null,
            subtitle: null,
            theme_id: null,
            reactions: void 0,
            thread_connectivity_data: null,
            thread_fbid: null,
            thread_pin_timestamp: null,
            thread_type: null,
            thread_unsendability_status: null,
            gradient_colors: [],
            accessibility_label: null,
            reverse_gradients_for_radial: null,
            joinable_link: null,
            linked_mentorship_programs: null,
            is_business_page_active: !1,
            thread_associated_job_applications: null,
            thread_associated_page_admin: null,
            graphql_token: null,
            conversion_detection_data: null,
            suggested_reply_data: null
        })
    }

    function a(a, c, d, e) {
        a = h(a, c, d, null);
        return b("ImmutableObject").set(a, {
            associated_object: e,
            name: e.name,
            joinable_mode: {
                mode: b("MessengerJoinableModeType").JOINABLE,
                link: ""
            },
            object_association_type: b("MessengerObjectAssociationType").GENERAL_CHAT
        })
    }
    f.isCanonicalFromInitialParticipants = g;
    f.createNewLocalThread = h;
    f.createNewLocalGroupGeneralThread = a
}), null);
__d("ParticipantId.bs", ["bs_belt_Id", "bs_string"], (function(a, b, c, d, e, f) {
    "use strict";
    a = b("bs_string").compare;
    c = b("bs_belt_Id").MakeComparable({
        cmp: a
    });
    d = c.cmp;
    f.cmp = d
}), null);
__d("RemoteAction.bs", ["bs_curry"], (function(a, b, c, d, e, f) {
    "use strict";

    function g(a) {}

    function a(a) {
        return {
            send: g
        }
    }

    function c(a, b) {
        if (b.send === g) {
            b.send = a;
            return b
        }
    }

    function d(a) {
        a.send = g
    }

    function e(a, c) {
        return b("bs_curry")._1(a.send, c)
    }
    f.create = a;
    f.subscribe = c;
    f.unsubscribe = d;
    f.send = e
}), null);
__d("ThreadConnectivityStatus", [], (function(a, b, c, d, e, f) {
    a = Object.freeze({
        UNCONNECTED: 0,
        IMPLICIT_OR_TWO_WAY_MESSAGING: 1
    });
    f["default"] = a
}), 66);
__d("ThreadConnectivityStatus.bs", ["ThreadConnectivityStatus", "ThreadConnectivityStatusGraphQLType.bs", "bs_caml_obj"], (function(a, b, c, d, e, f) {
    "use strict";

    function a(a) {
        if (b("bs_caml_obj").caml_equal(a, b("ThreadConnectivityStatus").UNCONNECTED)) return b("ThreadConnectivityStatusGraphQLType.bs").unconnected;
        else return b("ThreadConnectivityStatusGraphQLType.bs").implicitOrTwoWayMessaging
    }
    f.toGraphQLValue = a
}), null);
__d("ThreadId.bs", ["bs_belt_Id", "bs_string"], (function(a, b, c, d, e, f) {
    "use strict";
    a = b("bs_string").compare;
    c = b("bs_belt_Id").MakeComparable({
        cmp: a
    });
    d = c.cmp;
    f.cmp = d
}), null);
__d("TypingStates", [], (function(a, b, c, d, e, f) {
    a = Object.freeze({
        INACTIVE: 0,
        TYPING: 1,
        QUITTING: 2
    });
    f["default"] = a
}), 66);
__d("bs_belt_internalAVLtree", ["bs_belt_SortArray", "bs_caml_option", "bs_curry"], (function(a, b, c, d, e, f) {
    "use strict";

    function g(a) {
        if (a !== void 0) return a.h;
        else return 0
    }

    function h(a) {
        if (a !== void 0) return {
            k: a.k,
            v: a.v,
            h: a.h,
            l: h(a.l),
            r: h(a.r)
        };
        else return a
    }

    function i(a, b, c, d) {
        var e = g(a),
            f = g(d);
        return {
            k: b,
            v: c,
            h: e >= f ? e + 1 | 0 : f + 1 | 0,
            l: a,
            r: d
        }
    }

    function j(a, b) {
        return {
            k: a,
            v: b,
            h: 1,
            l: void 0,
            r: void 0
        }
    }

    function k(a, b) {
        if (b !== void 0)
            if (a !== void 0) return a.h >= b.h;
            else return !1;
        else return !0
    }

    function a(a, b) {
        if (a.v === b) return a;
        else return {
            k: a.k,
            v: b,
            h: a.h,
            l: a.l,
            r: a.r
        }
    }

    function l(a, b, c, d) {
        var e = a !== void 0 ? a.h : 0,
            f = d !== void 0 ? d.h : 0;
        if (e > (f + 2 | 0)) {
            var h = a.l,
                j = a.r;
            if (g(h) >= g(j)) return i(h, a.k, a.v, i(j, b, c, d));
            else return i(i(h, a.k, a.v, j.l), j.k, j.v, i(j.r, b, c, d))
        }
        if (f <= (e + 2 | 0)) return {
            k: b,
            v: c,
            h: e >= f ? e + 1 | 0 : f + 1 | 0,
            l: a,
            r: d
        };
        h = d.l;
        j = d.r;
        if (g(j) >= g(h)) return i(i(a, b, c, h), d.k, d.v, j);
        else return i(i(a, b, c, h.l), h.k, h.v, i(h.r, d.k, d.v, j))
    }

    function m(a) {
        while (!0) {
            var b = a,
                c = b.l;
            if (c === void 0) return b.k;
            a = c;
            continue
        }
    }

    function c(a) {
        if (a !== void 0) return b("bs_caml_option").some(m(a))
    }

    function d(a) {
        if (a !== void 0) return m(a)
    }

    function n(a) {
        while (!0) {
            var b = a,
                c = b.r;
            if (c === void 0) return b.k;
            a = c;
            continue
        }
    }

    function e(a) {
        if (a !== void 0) return b("bs_caml_option").some(n(a))
    }

    function o(a) {
        if (a !== void 0) return n(a)
    }

    function p(a) {
        while (!0) {
            var b = a,
                c = b.l;
            if (c === void 0) return [b.k, b.v];
            a = c;
            continue
        }
    }

    function q(a) {
        if (a !== void 0) return p(a)
    }

    function r(a) {
        if (a !== void 0) return p(a)
    }

    function s(a) {
        while (!0) {
            var b = a,
                c = b.r;
            if (c === void 0) return [b.k, b.v];
            a = c;
            continue
        }
    }

    function t(a) {
        if (a !== void 0) return s(a)
    }

    function aa(a) {
        if (a !== void 0) return s(a)
    }

    function u(a, b, c) {
        var d = a.l;
        if (d !== void 0) return l(u(d, b, c), a.k, a.v, a.r);
        else {
            b.contents = a.k;
            c.contents = a.v;
            return a.r
        }
    }

    function ba(a) {
        return a === void 0
    }

    function v(a, b) {
        while (!0) {
            var c = b,
                d = a;
            if (d === void 0) return c;
            b = {
                hd: d,
                tl: c
            };
            a = d.l;
            continue
        }
    }

    function w(a, b) {
        if (a === void 0) return;
        var c = w(a.l, b);
        if (c !== void 0) return c;
        c = a.k;
        var d = a.v,
            e = b(c, d);
        if (e) return [c, d];
        e = w(a.r, b);
        if (e !== void 0) return e
    }

    function ca(a, c) {
        return w(a, b("bs_curry").__2(c))
    }

    function x(a, b) {
        while (!0) {
            var c = a;
            if (c === void 0) return;
            x(c.l, b);
            b(c.k, c.v);
            a = c.r;
            continue
        }
    }

    function da(a, c) {
        return x(a, b("bs_curry").__2(c))
    }

    function y(a, b) {
        if (a === void 0) return;
        var c = y(a.l, b),
            d = b(a.v);
        b = y(a.r, b);
        return {
            k: a.k,
            v: d,
            h: a.h,
            l: c,
            r: b
        }
    }

    function ea(a, c) {
        return y(a, b("bs_curry").__1(c))
    }

    function z(a, b) {
        if (a === void 0) return;
        var c = a.k,
            d = z(a.l, b),
            e = b(c, a.v);
        b = z(a.r, b);
        return {
            k: c,
            v: e,
            h: a.h,
            l: d,
            r: b
        }
    }

    function fa(a, c) {
        return z(a, b("bs_curry").__2(c))
    }

    function A(a, b, c) {
        while (!0) {
            var d = b,
                e = a;
            if (e === void 0) return d;
            var f = e.k,
                g = e.v,
                h = e.l;
            e = e.r;
            b = c(A(h, d, c), f, g);
            a = e;
            continue
        }
    }

    function ga(a, c, d) {
        return A(a, c, b("bs_curry").__3(d))
    }

    function B(a, b) {
        while (!0) {
            var c = a;
            if (c === void 0) return !0;
            if (!b(c.k, c.v)) return !1;
            if (!B(c.l, b)) return !1;
            a = c.r;
            continue
        }
    }

    function ha(a, c) {
        return B(a, b("bs_curry").__2(c))
    }

    function C(a, b) {
        while (!0) {
            var c = a;
            if (c === void 0) return !1;
            if (b(c.k, c.v)) return !0;
            if (C(c.l, b)) return !0;
            a = c.r;
            continue
        }
    }

    function ia(a, c) {
        return C(a, b("bs_curry").__2(c))
    }

    function D(a, b, c) {
        if (a !== void 0) return l(D(a.l, b, c), a.k, a.v, a.r);
        else return j(b, c)
    }

    function E(a, b, c) {
        if (a !== void 0) return l(a.l, a.k, a.v, E(a.r, b, c));
        else return j(b, c)
    }

    function F(a, b, c, d) {
        if (a === void 0) return D(d, b, c);
        if (d === void 0) return E(a, b, c);
        var e = a.k,
            f = a.v,
            g = a.h,
            h = a.l,
            j = a.r,
            k = d.k,
            m = d.v,
            n = d.h,
            o = d.l,
            p = d.r;
        if (g > (n + 2 | 0)) return l(h, e, f, F(j, b, c, d));
        else if (n > (g + 2 | 0)) return l(F(a, b, c, o), k, m, p);
        else return i(a, b, c, d)
    }

    function G(a, b) {
        if (a === void 0) return b;
        if (b === void 0) return a;
        var c = {
                contents: b.k
            },
            d = {
                contents: b.v
            };
        b = u(b, c, d);
        return F(a, c.contents, d.contents, b)
    }

    function ja(a, c, d, e) {
        if (d !== void 0) return F(a, c, b("bs_caml_option").valFromOption(d), e);
        else return G(a, e)
    }

    function H(a, b) {
        if (a === void 0) return;
        var c = a.k,
            d = a.v,
            e = H(a.l, b),
            f = b(c, d);
        a = H(a.r, b);
        if (f) return F(e, c, d, a);
        else return G(e, a)
    }

    function ka(a, c) {
        return H(a, b("bs_curry").__2(c))
    }

    function I(a, c) {
        if (a === void 0) return;
        var d = a.k,
            e = a.v,
            f = I(a.l, c);
        e = c(d, e);
        a = I(a.r, c);
        if (e !== void 0) return F(f, d, b("bs_caml_option").valFromOption(e), a);
        else return G(f, a)
    }

    function la(a, c) {
        return I(a, b("bs_curry").__2(c))
    }

    function J(a, b) {
        if (a === void 0) return [void 0, void 0];
        var c = a.k,
            d = a.v,
            e = J(a.l, b),
            f = e[1];
        e = e[0];
        var g = b(c, d);
        a = J(a.r, b);
        b = a[1];
        a = a[0];
        if (g) return [F(e, c, d, a), G(f, b)];
        else return [G(e, a), F(f, c, d, b)]
    }

    function ma(a, c) {
        return J(a, b("bs_curry").__2(c))
    }

    function K(a) {
        var b = a.l;
        a = a.r;
        b = b !== void 0 ? K(b) : 0;
        a = a !== void 0 ? K(a) : 0;
        return (1 + b | 0) + a | 0
    }

    function L(a) {
        if (a !== void 0) return K(a);
        else return 0
    }

    function M(a, b) {
        while (!0) {
            var c = b,
                d = a;
            if (d === void 0) return c;
            var e = d.k,
                f = d.v,
                g = d.l;
            d = d.r;
            b = {
                hd: [e, f],
                tl: M(d, c)
            };
            a = g;
            continue
        }
    }

    function na(a) {
        return M(a, 0)
    }

    function N(a) {
        while (!0) {
            var b = a;
            if (b === void 0) return;
            var c = b.l;
            b = b.r;
            var d = g(c) - g(b) | 0;
            if (!(d <= 2 && d >= -2)) throw {
                RE_EXN_ID: "Assert_failure",
                _1: ["belt_internalAVLtree.ml", 373, 4],
                Error: new Error()
            };
            N(c);
            a = b;
            continue
        }
    }

    function O(a, b, c) {
        while (!0) {
            var d = b,
                e = a,
                f = e.k,
                g = e.l;
            e = e.r;
            g = g !== void 0 ? O(g, d, c) : d;
            c[g] = f;
            d = g + 1 | 0;
            if (e === void 0) return d;
            b = d;
            a = e;
            continue
        }
    }

    function P(a, b, c) {
        while (!0) {
            var d = b,
                e = a,
                f = e.l,
                g = e.r;
            f = f !== void 0 ? P(f, d, c) : d;
            c[f] = e.v;
            d = f + 1 | 0;
            if (g === void 0) return d;
            b = d;
            a = g;
            continue
        }
    }

    function Q(a, b, c) {
        while (!0) {
            var d = b,
                e = a,
                f = e.l,
                g = e.k,
                h = e.r;
            f = f !== void 0 ? Q(f, d, c) : d;
            c[f] = [g, e.v];
            d = f + 1 | 0;
            if (h === void 0) return d;
            b = d;
            a = h;
            continue
        }
    }

    function oa(b) {
        if (b === void 0) return [];
        var a = K(b);
        a = new Array(a);
        Q(b, 0, a);
        return a
    }

    function pa(b) {
        if (b === void 0) return [];
        var a = K(b);
        a = new Array(a);
        O(b, 0, a);
        return a
    }

    function qa(b) {
        if (b === void 0) return [];
        var a = K(b);
        a = new Array(a);
        P(b, 0, a);
        return a
    }

    function R(a, b, c) {
        switch (c) {
            case 0:
                return;
            case 1:
                var d = a[b];
                return j(d[0], d[1]);
            case 2:
                d = a[b];
                var e = a[b - 1 | 0];
                e = e;
                d = d;
                return {
                    k: e[0],
                    v: e[1],
                    h: 2,
                    l: j(d[0], d[1]),
                    r: void 0
                };
            case 3:
                e = a[b];
                d = a[b - 1 | 0];
                var f = a[b - 2 | 0];
                f = f;
                d = d;
                e = e;
                return {
                    k: d[0],
                    v: d[1],
                    h: 2,
                    l: j(e[0], e[1]),
                    r: j(f[0], f[1])
                };
            default:
                d = c / 2 | 0;
                e = R(a, b, d);
                f = a[b - d | 0];
                a = R(a, (b - d | 0) - 1 | 0, (c - d | 0) - 1 | 0);
                return i(e, f[0], f[1], a)
        }
    }

    function S(a, b, c) {
        switch (c) {
            case 0:
                return;
            case 1:
                var d = a[b];
                return j(d[0], d[1]);
            case 2:
                d = a[b];
                var e = a[b + 1 | 0];
                e = e;
                d = d;
                return {
                    k: e[0],
                    v: e[1],
                    h: 2,
                    l: j(d[0], d[1]),
                    r: void 0
                };
            case 3:
                e = a[b];
                d = a[b + 1 | 0];
                var f = a[b + 2 | 0];
                f = f;
                d = d;
                e = e;
                return {
                    k: d[0],
                    v: d[1],
                    h: 2,
                    l: j(e[0], e[1]),
                    r: j(f[0], f[1])
                };
            default:
                d = c / 2 | 0;
                e = S(a, b, d);
                f = a[b + d | 0];
                a = S(a, (b + d | 0) + 1 | 0, (c - d | 0) - 1 | 0);
                return i(e, f[0], f[1], a)
        }
    }

    function ra(a) {
        return S(a, 0, a.length)
    }

    function T(a, b, c, d) {
        var e = L(a),
            f = L(b);
        if (e === f) {
            a = v(a, 0);
            b = v(b, 0);
            while (!0) {
                var g = b,
                    h = a;
                if (!h) return 0;
                if (!g) return 0;
                var i = g.hd,
                    j = h.hd,
                    k = c(j.k, i.k);
                if (k !== 0) return k;
                k = d(j.v, i.v);
                if (k !== 0) return k;
                b = v(i.r, g.tl);
                a = v(j.r, h.tl);
                continue
            }
        } else if (e < f) return -1;
        else return 1
    }

    function sa(a, c, d, e) {
        return T(a, c, d, b("bs_curry").__2(e))
    }

    function U(a, b, c, d) {
        var e = L(a),
            f = L(b);
        if (e === f) {
            e = v(a, 0);
            f = v(b, 0);
            while (!0) {
                a = f;
                b = e;
                if (!b) return !0;
                if (!a) return !0;
                var g = a.hd,
                    h = b.hd;
                if (!(c(h.k, g.k) === 0 && d(h.v, g.v))) return !1;
                f = v(g.r, a.tl);
                e = v(h.r, b.tl);
                continue
            }
        } else return !1
    }

    function ta(a, c, d, e) {
        return U(a, c, d, b("bs_curry").__2(e))
    }

    function ua(c, d, a) {
        while (!0) {
            var e = c;
            if (e === void 0) return;
            var f = e.k;
            f = a(d, f);
            if (f === 0) return b("bs_caml_option").some(e.v);
            c = f < 0 ? e.l : e.r;
            continue
        }
    }

    function va(b, c, a) {
        while (!0) {
            var d = b;
            if (d === void 0) return;
            var e = d.k;
            e = a(c, e);
            if (e === 0) return d.v;
            b = e < 0 ? d.l : d.r;
            continue
        }
    }

    function wa(b, c, a) {
        while (!0) {
            var d = b;
            if (d !== void 0) {
                var e = d.k;
                e = a(c, e);
                if (e === 0) return d.v;
                b = e < 0 ? d.l : d.r;
                continue
            }
            throw {
                RE_EXN_ID: "Not_found",
                Error: new Error()
            }
        }
    }

    function xa(b, c, d, a) {
        while (!0) {
            var e = b;
            if (e === void 0) return d;
            var f = e.k;
            f = a(c, f);
            if (f === 0) return e.v;
            b = f < 0 ? e.l : e.r;
            continue
        }
    }

    function ya(b, c, a) {
        while (!0) {
            var d = b;
            if (d === void 0) return !1;
            var e = d.k;
            e = a(c, e);
            if (e === 0) return !0;
            b = e < 0 ? d.l : d.r;
            continue
        }
    }

    function V(a) {
        var b = a.l;
        a.l = b.r;
        b.r = a;
        var c = g(a.l),
            d = g(a.r);
        a.h = (c > d ? c : d) + 1 | 0;
        c = g(b.l);
        d = a.h;
        b.h = (c > d ? c : d) + 1 | 0;
        return b
    }

    function W(a) {
        var b = a.r;
        a.r = b.l;
        b.l = a;
        var c = g(a.l),
            d = g(a.r);
        a.h = (c > d ? c : d) + 1 | 0;
        c = g(b.r);
        d = a.h;
        b.h = (c > d ? c : d) + 1 | 0;
        return b
    }

    function za(a) {
        var b = a.l;
        b = W(b);
        a.l = b;
        return V(a)
    }

    function Aa(a) {
        var b = a.r;
        b = V(b);
        a.r = b;
        return W(a)
    }

    function X(a) {
        var b = g(a.l),
            c = g(a.r);
        a.h = (b > c ? b : c) + 1 | 0;
        return a
    }

    function Y(a) {
        var b = a.l,
            c = a.r,
            d = g(b),
            e = g(c);
        if (d > (2 + e | 0)) {
            var f = b.l;
            b = b.r;
            if (k(f, b)) return X(V(a));
            else return X(za(a))
        }
        if (e > (2 + d | 0)) {
            f = c.l;
            b = c.r;
            if (k(b, f)) return X(W(a));
            else return X(Aa(a))
        }
        a.h = (d > e ? d : e) + 1 | 0;
        return a
    }

    function Z(b, c, d, a) {
        if (b === void 0) return j(c, d);
        var e = b.k;
        e = a(c, e);
        if (e === 0) {
            b.v = d;
            return b
        }
        var f = b.l,
            g = b.r;
        if (e < 0) {
            e = Z(f, c, d, a);
            b.l = e
        } else b.r = Z(g, c, d, a);
        return Y(b)
    }

    function Ba(c, a) {
        var d = c.length;
        if (d === 0) return;
        var e = b("bs_belt_SortArray").strictlySortedLengthU(c, function(b, c) {
                return a(b[0], c[0]) < 0
            }),
            f;
        e >= 0 ? f = S(c, 0, e) : (e = -e | 0, f = R(c, e - 1 | 0, e));
        for (var e = e; e < d; ++e) {
            var g = c[e];
            f = Z(f, g[0], g[1], a)
        }
        return f
    }

    function $(a, b) {
        var c = b.r,
            d = b.l;
        if (d !== void 0) {
            b.l = $(a, d);
            return Y(b)
        } else {
            a.k = b.k;
            a.v = b.v;
            return c
        }
    }
    f.copy = h;
    f.create = i;
    f.bal = l;
    f.singleton = j;
    f.updateValue = a;
    f.minKey = c;
    f.minKeyUndefined = d;
    f.maxKey = e;
    f.maxKeyUndefined = o;
    f.minimum = q;
    f.minUndefined = r;
    f.maximum = t;
    f.maxUndefined = aa;
    f.removeMinAuxWithRef = u;
    f.isEmpty = ba;
    f.stackAllLeft = v;
    f.findFirstByU = w;
    f.findFirstBy = ca;
    f.forEachU = x;
    f.forEach = da;
    f.mapU = y;
    f.map = ea;
    f.mapWithKeyU = z;
    f.mapWithKey = fa;
    f.reduceU = A;
    f.reduce = ga;
    f.everyU = B;
    f.every = ha;
    f.someU = C;
    f.some = ia;
    f.join = F;
    f.concat = G;
    f.concatOrJoin = ja;
    f.keepSharedU = H;
    f.keepShared = ka;
    f.keepMapU = I;
    f.keepMap = la;
    f.partitionSharedU = J;
    f.partitionShared = ma;
    f.lengthNode = K;
    f.size = L;
    f.toList = na;
    f.checkInvariantInternal = N;
    f.fillArray = Q;
    f.toArray = oa;
    f.keysToArray = pa;
    f.valuesToArray = qa;
    f.fromSortedArrayAux = S;
    f.fromSortedArrayRevAux = R;
    f.fromSortedArrayUnsafe = ra;
    f.cmpU = T;
    f.cmp = sa;
    f.eqU = U;
    f.eq = ta;
    f.get = ua;
    f.getUndefined = va;
    f.getWithDefault = xa;
    f.getExn = wa;
    f.has = ya;
    f.fromArray = Ba;
    f.updateMutate = Z;
    f.balMutate = Y;
    f.removeMinAuxWithRootMutate = $
}), null);
__d("bs_belt_MapDict", ["bs_belt_internalAVLtree", "bs_caml_option", "bs_curry"], (function(a, b, c, d, e, f) {
    "use strict";
    var g;

    function h(c, d, e, a) {
        if (c === void 0) return b("bs_belt_internalAVLtree").singleton(d, e);
        var f = c.k,
            g = a(d, f);
        if (g === 0) return b("bs_belt_internalAVLtree").updateValue(c, e);
        var i = c.l,
            j = c.r;
        c = c.v;
        if (g < 0) return b("bs_belt_internalAVLtree").bal(h(i, d, e, a), f, c, j);
        else return b("bs_belt_internalAVLtree").bal(i, f, c, h(j, d, e, a))
    }

    function i(c, d, e, a) {
        if (c !== void 0) {
            var f = c.k,
                g = a(d, f);
            if (g === 0) {
                var h = e(b("bs_caml_option").some(c.v));
                if (h !== void 0) return b("bs_belt_internalAVLtree").updateValue(c, b("bs_caml_option").valFromOption(h));
                h = c.l;
                var j = c.r;
                if (h === void 0) return j;
                if (j === void 0) return h;
                var k = {
                        contents: j.k
                    },
                    l = {
                        contents: j.v
                    };
                j = b("bs_belt_internalAVLtree").removeMinAuxWithRef(j, k, l);
                return b("bs_belt_internalAVLtree").bal(h, k.contents, l.contents, j)
            }
            h = c.l;
            k = c.r;
            l = c.v;
            if (g < 0) {
                j = i(h, d, e, a);
                if (h === j) return c;
                else return b("bs_belt_internalAVLtree").bal(j, f, l, k)
            }
            g = i(k, d, e, a);
            if (k === g) return c;
            else return b("bs_belt_internalAVLtree").bal(h, f, l, g)
        }
        j = e(void 0);
        if (j !== void 0) return b("bs_belt_internalAVLtree").singleton(d, b("bs_caml_option").valFromOption(j));
        else return c
    }

    function a(c, d, e, a) {
        return i(c, d, b("bs_curry").__1(e), a)
    }

    function j(c, d, a) {
        var e = c.k,
            f = c.l,
            g = c.r,
            h = a(d, e);
        if (h === 0) {
            if (f === void 0) return g;
            if (g === void 0) return f;
            var i = {
                    contents: g.k
                },
                k = {
                    contents: g.v
                },
                l = b("bs_belt_internalAVLtree").removeMinAuxWithRef(g, i, k);
            return b("bs_belt_internalAVLtree").bal(f, i.contents, k.contents, l)
        }
        if (h < 0) {
            if (f === void 0) return c;
            i = j(f, d, a);
            if (i === f) return c;
            else return b("bs_belt_internalAVLtree").bal(i, e, c.v, g)
        }
        if (g === void 0) return c;
        k = j(g, d, a);
        if (k === g) return c;
        else return b("bs_belt_internalAVLtree").bal(f, e, c.v, k)
    }

    function c(b, c, a) {
        if (b !== void 0) return j(b, c, a)
    }

    function d(b, c, a) {
        var d = c.length;
        b = b;
        for (var e = 0; e < d; ++e) {
            var f = c[e];
            b = h(b, f[0], f[1], a)
        }
        return b
    }

    function k(c, d, e, a) {
        var f = c.k,
            g = c.v,
            h = c.l,
            i = c.r,
            j = a(d, f);
        if (j === 0) {
            e.contents = b("bs_caml_option").some(g);
            return [h, i]
        }
        if (j < 0) {
            if (h === void 0) return [void 0, c];
            j = k(h, d, e, a);
            return [j[0], b("bs_belt_internalAVLtree").join(j[1], f, g, i)]
        }
        if (i === void 0) return [c, void 0];
        j = k(i, d, e, a);
        return [b("bs_belt_internalAVLtree").join(h, f, g, j[0]), j[1]]
    }

    function e(b, c, a) {
        if (b === void 0) return [
            [void 0, void 0], void 0
        ];
        var d = {
            contents: void 0
        };
        b = k(b, c, d, a);
        return [b, d.contents]
    }

    function l(c, d, e, a) {
        if (c === void 0)
            if (d !== void 0) return b("bs_belt_internalAVLtree").keepMapU(d, function(a, c) {
                return e(a, void 0, b("bs_caml_option").some(c))
            });
            else return;
        if (d === void 0) return b("bs_belt_internalAVLtree").keepMapU(c, function(a, c) {
            return e(a, b("bs_caml_option").some(c), void 0)
        });
        if (c.h >= d.h) {
            var f = c.k,
                g = c.v,
                h = c.l,
                i = c.r,
                j = {
                    contents: void 0
                },
                m = k(d, f, j, a);
            j = j.contents;
            h = l(h, m[0], e, a);
            g = e(f, b("bs_caml_option").some(g), j);
            j = l(i, m[1], e, a);
            return b("bs_belt_internalAVLtree").concatOrJoin(h, f, g, j)
        }
        i = d.k;
        m = d.v;
        h = d.l;
        f = d.r;
        g = {
            contents: void 0
        };
        j = k(c, i, g, a);
        d = g.contents;
        c = l(j[0], h, e, a);
        g = e(i, d, b("bs_caml_option").some(m));
        h = l(j[1], f, e, a);
        return b("bs_belt_internalAVLtree").concatOrJoin(c, i, g, h)
    }

    function m(c, d, e, a) {
        return l(c, d, b("bs_curry").__3(e), a)
    }

    function n(b, c, a) {
        var d = c.length;
        if (b !== void 0) {
            b = b;
            var e = 0;
            while (!0) {
                var f = e,
                    g = b;
                if (f >= d) return g;
                var h = c[f];
                g = j(g, h, a);
                if (g === void 0) return g;
                e = f + 1 | 0;
                b = g;
                continue
            }
        }
    }
    var o, p = (g = b("bs_belt_internalAVLtree")).isEmpty,
        q = g.has,
        r = g.cmpU,
        s = g.cmp,
        t = g.eqU,
        u = g.eq,
        v = g.findFirstByU,
        w = g.findFirstBy,
        x = g.forEachU,
        y = g.forEach,
        z = g.reduceU,
        A = g.reduce,
        B = g.everyU,
        C = g.every,
        D = g.someU,
        E = g.some,
        F = g.size,
        G = g.toList,
        H = g.toArray,
        I = g.fromArray,
        J = g.keysToArray,
        K = g.valuesToArray,
        L = g.minKey,
        M = g.minKeyUndefined,
        N = g.maxKey,
        O = g.maxKeyUndefined,
        P = g.minimum,
        Q = g.minUndefined,
        R = g.maximum,
        S = g.maxUndefined,
        T = g.get,
        U = g.getUndefined,
        V = g.getWithDefault,
        W = g.getExn,
        X = g.checkInvariantInternal,
        Y = g.keepSharedU,
        Z = g.keepShared,
        $ = g.partitionSharedU,
        aa = g.partitionShared,
        ba = g.mapU,
        ca = g.map,
        da = g.mapWithKeyU;
    g = g.mapWithKey;
    f.empty = o;
    f.isEmpty = p;
    f.has = q;
    f.cmpU = r;
    f.cmp = s;
    f.eqU = t;
    f.eq = u;
    f.findFirstByU = v;
    f.findFirstBy = w;
    f.forEachU = x;
    f.forEach = y;
    f.reduceU = z;
    f.reduce = A;
    f.everyU = B;
    f.every = C;
    f.someU = D;
    f.some = E;
    f.size = F;
    f.toList = G;
    f.toArray = H;
    f.fromArray = I;
    f.keysToArray = J;
    f.valuesToArray = K;
    f.minKey = L;
    f.minKeyUndefined = M;
    f.maxKey = N;
    f.maxKeyUndefined = O;
    f.minimum = P;
    f.minUndefined = Q;
    f.maximum = R;
    f.maxUndefined = S;
    f.get = T;
    f.getUndefined = U;
    f.getWithDefault = V;
    f.getExn = W;
    f.checkInvariantInternal = X;
    f.remove = c;
    f.removeMany = n;
    f.set = h;
    f.updateU = i;
    f.update = a;
    f.mergeU = l;
    f.merge = m;
    f.mergeMany = d;
    f.keepU = Y;
    f.keep = Z;
    f.partitionU = $;
    f.partition = aa;
    f.split = e;
    f.mapU = ba;
    f.map = ca;
    f.mapWithKeyU = da;
    f.mapWithKey = g
}), null);
__d("bs_belt_Map", ["bs_belt_MapDict", "bs_curry"], (function(a, b, c, d, e, f) {
    "use strict";

    function a(a, c) {
        c = c.cmp;
        return {
            cmp: c,
            data: b("bs_belt_MapDict").fromArray(a, c)
        }
    }

    function c(c, d) {
        var e = c.data,
            a = c.cmp;
        d = b("bs_belt_MapDict").remove(e, d, a);
        if (d === e) return c;
        else return {
            cmp: a,
            data: d
        }
    }

    function d(c, d) {
        var a = c.cmp;
        c = b("bs_belt_MapDict").removeMany(c.data, d, a);
        return {
            cmp: a,
            data: c
        }
    }

    function e(c, d, e) {
        var a = c.cmp;
        return {
            cmp: a,
            data: b("bs_belt_MapDict").set(c.data, d, e, a)
        }
    }

    function g(c, d) {
        var a = c.cmp;
        return {
            cmp: a,
            data: b("bs_belt_MapDict").mergeMany(c.data, d, a)
        }
    }

    function h(c, d, e) {
        var a = c.cmp;
        return {
            cmp: a,
            data: b("bs_belt_MapDict").updateU(c.data, d, e, a)
        }
    }

    function i(a, c, d) {
        return h(a, c, b("bs_curry").__1(d))
    }

    function j(c, d) {
        var a = c.cmp;
        c = b("bs_belt_MapDict").split(c.data, d, a);
        d = c[0];
        return [
            [{
                cmp: a,
                data: d[0]
            }, {
                cmp: a,
                data: d[1]
            }], c[1]
        ]
    }

    function k(c, d, e) {
        var a = c.cmp;
        return {
            cmp: a,
            data: b("bs_belt_MapDict").mergeU(c.data, d.data, e, a)
        }
    }

    function l(a, c, d) {
        return k(a, c, b("bs_curry").__3(d))
    }

    function m(a) {
        return {
            cmp: a.cmp,
            data: void 0
        }
    }

    function n(a) {
        return b("bs_belt_MapDict").isEmpty(a.data)
    }

    function o(a, c) {
        return b("bs_belt_MapDict").findFirstByU(a.data, c)
    }

    function p(a, c) {
        return b("bs_belt_MapDict").findFirstByU(a.data, b("bs_curry").__2(c))
    }

    function q(a, c) {
        return b("bs_belt_MapDict").forEachU(a.data, c)
    }

    function r(a, c) {
        return b("bs_belt_MapDict").forEachU(a.data, b("bs_curry").__2(c))
    }

    function s(a, c, d) {
        return b("bs_belt_MapDict").reduceU(a.data, c, d)
    }

    function t(a, c, d) {
        return s(a, c, b("bs_curry").__3(d))
    }

    function u(a, c) {
        return b("bs_belt_MapDict").everyU(a.data, c)
    }

    function v(a, c) {
        return b("bs_belt_MapDict").everyU(a.data, b("bs_curry").__2(c))
    }

    function w(a, c) {
        return b("bs_belt_MapDict").someU(a.data, c)
    }

    function x(a, c) {
        return b("bs_belt_MapDict").someU(a.data, b("bs_curry").__2(c))
    }

    function y(a, c) {
        return {
            cmp: a.cmp,
            data: b("bs_belt_MapDict").keepU(a.data, c)
        }
    }

    function z(a, c) {
        return y(a, b("bs_curry").__2(c))
    }

    function A(c, d) {
        var a = c.cmp;
        c = b("bs_belt_MapDict").partitionU(c.data, d);
        return [{
            cmp: a,
            data: c[0]
        }, {
            cmp: a,
            data: c[1]
        }]
    }

    function B(a, c) {
        return A(a, b("bs_curry").__2(c))
    }

    function C(a, c) {
        return {
            cmp: a.cmp,
            data: b("bs_belt_MapDict").mapU(a.data, c)
        }
    }

    function D(a, c) {
        return C(a, b("bs_curry").__1(c))
    }

    function E(a, c) {
        return {
            cmp: a.cmp,
            data: b("bs_belt_MapDict").mapWithKeyU(a.data, c)
        }
    }

    function F(a, c) {
        return E(a, b("bs_curry").__2(c))
    }

    function G(a) {
        return b("bs_belt_MapDict").size(a.data)
    }

    function H(a) {
        return b("bs_belt_MapDict").toList(a.data)
    }

    function I(a) {
        return b("bs_belt_MapDict").toArray(a.data)
    }

    function J(a) {
        return b("bs_belt_MapDict").keysToArray(a.data)
    }

    function K(a) {
        return b("bs_belt_MapDict").valuesToArray(a.data)
    }

    function L(a) {
        return b("bs_belt_MapDict").minKey(a.data)
    }

    function M(a) {
        return b("bs_belt_MapDict").minKeyUndefined(a.data)
    }

    function N(a) {
        return b("bs_belt_MapDict").maxKey(a.data)
    }

    function O(a) {
        return b("bs_belt_MapDict").maxKeyUndefined(a.data)
    }

    function P(a) {
        return b("bs_belt_MapDict").minimum(a.data)
    }

    function Q(a) {
        return b("bs_belt_MapDict").minUndefined(a.data)
    }

    function R(a) {
        return b("bs_belt_MapDict").maximum(a.data)
    }

    function S(a) {
        return b("bs_belt_MapDict").maxUndefined(a.data)
    }

    function T(a, c) {
        return b("bs_belt_MapDict").get(a.data, c, a.cmp)
    }

    function U(a, c) {
        return b("bs_belt_MapDict").getUndefined(a.data, c, a.cmp)
    }

    function V(a, c, d) {
        return b("bs_belt_MapDict").getWithDefault(a.data, c, d, a.cmp)
    }

    function W(a, c) {
        return b("bs_belt_MapDict").getExn(a.data, c, a.cmp)
    }

    function X(a, c) {
        return b("bs_belt_MapDict").has(a.data, c, a.cmp)
    }

    function Y(a) {
        return b("bs_belt_MapDict").checkInvariantInternal(a.data)
    }

    function Z(a, c, d) {
        return b("bs_belt_MapDict").eqU(a.data, c.data, a.cmp, d)
    }

    function aa(a, c, d) {
        return Z(a, c, b("bs_curry").__2(d))
    }

    function $(a, c, d) {
        return b("bs_belt_MapDict").cmpU(a.data, c.data, a.cmp, d)
    }

    function ba(a, c, d) {
        return $(a, c, b("bs_curry").__2(d))
    }

    function ca(a) {
        return a.data
    }

    function da(a) {
        a = a.cmp;
        return {
            cmp: a
        }
    }

    function ea(a, b) {
        return {
            cmp: a.cmp,
            data: b
        }
    }
    var fa, ga, ha;
    f.Int = fa;
    f.$$String = ga;
    f.Dict = ha;
    f.make = m;
    f.isEmpty = n;
    f.has = X;
    f.cmpU = $;
    f.cmp = ba;
    f.eqU = Z;
    f.eq = aa;
    f.findFirstByU = o;
    f.findFirstBy = p;
    f.forEachU = q;
    f.forEach = r;
    f.reduceU = s;
    f.reduce = t;
    f.everyU = u;
    f.every = v;
    f.someU = w;
    f.some = x;
    f.size = G;
    f.toArray = I;
    f.toList = H;
    f.fromArray = a;
    f.keysToArray = J;
    f.valuesToArray = K;
    f.minKey = L;
    f.minKeyUndefined = M;
    f.maxKey = N;
    f.maxKeyUndefined = O;
    f.minimum = P;
    f.minUndefined = Q;
    f.maximum = R;
    f.maxUndefined = S;
    f.get = T;
    f.getUndefined = U;
    f.getWithDefault = V;
    f.getExn = W;
    f.remove = c;
    f.removeMany = d;
    f.set = e;
    f.updateU = h;
    f.update = i;
    f.mergeMany = g;
    f.mergeU = k;
    f.merge = l;
    f.keepU = y;
    f.keep = z;
    f.partitionU = A;
    f.partition = B;
    f.split = j;
    f.mapU = C;
    f.map = D;
    f.mapWithKeyU = E;
    f.mapWithKey = F;
    f.getData = ca;
    f.getId = da;
    f.packIdData = ea;
    f.checkInvariantInternal = Y
}), null);
__d("bs_belt_internalMapString", ["bs_belt_SortArray", "bs_belt_internalAVLtree", "bs_caml", "bs_caml_option", "bs_curry"], (function(a, b, c, d, e, f) {
    "use strict";

    function g(a, c, d) {
        if (a === void 0) return b("bs_belt_internalAVLtree").singleton(c, d);
        var e = a.k;
        if (c === e) return b("bs_belt_internalAVLtree").updateValue(a, d);
        var f = a.v;
        if (c < e) return b("bs_belt_internalAVLtree").bal(g(a.l, c, d), e, f, a.r);
        else return b("bs_belt_internalAVLtree").bal(a.l, e, f, g(a.r, c, d))
    }

    function a(a, c) {
        while (!0) {
            var d = a;
            if (d === void 0) return;
            var e = d.k;
            if (c === e) return b("bs_caml_option").some(d.v);
            a = c < e ? d.l : d.r;
            continue
        }
    }

    function c(a, b) {
        while (!0) {
            var c = a;
            if (c === void 0) return;
            var d = c.k;
            if (b === d) return c.v;
            a = b < d ? c.l : c.r;
            continue
        }
    }

    function d(a, b) {
        while (!0) {
            var c = a;
            if (c !== void 0) {
                var d = c.k;
                if (b === d) return c.v;
                a = b < d ? c.l : c.r;
                continue
            }
            throw {
                RE_EXN_ID: "Not_found",
                Error: new Error()
            }
        }
    }

    function e(a, b, c) {
        while (!0) {
            var d = a;
            if (d === void 0) return c;
            var e = d.k;
            if (b === e) return d.v;
            a = b < e ? d.l : d.r;
            continue
        }
    }

    function h(a, b) {
        while (!0) {
            var c = a;
            if (c === void 0) return !1;
            var d = c.k;
            if (b === d) return !0;
            a = b < d ? c.l : c.r;
            continue
        }
    }

    function i(a, c) {
        if (a === void 0) return a;
        var d = a.k,
            e = a.l,
            f = a.r;
        if (c !== d)
            if (c < d) return b("bs_belt_internalAVLtree").bal(i(e, c), d, a.v, f);
            else return b("bs_belt_internalAVLtree").bal(e, d, a.v, i(f, c));
        if (e === void 0) return f;
        if (f === void 0) return e;
        d = {
            contents: f.k
        };
        a = {
            contents: f.v
        };
        c = b("bs_belt_internalAVLtree").removeMinAuxWithRef(f, d, a);
        return b("bs_belt_internalAVLtree").bal(e, d.contents, a.contents, c)
    }

    function j(a, c) {
        var d = c.k,
            e = c.v,
            f = c.l,
            g = c.r;
        if (a === d) return [f, b("bs_caml_option").some(e), g];
        if (a < d) {
            if (f === void 0) return [void 0, void 0, c];
            var h = j(a, f);
            return [h[0], h[1], b("bs_belt_internalAVLtree").join(h[2], d, e, g)]
        }
        if (g === void 0) return [c, void 0, void 0];
        h = j(a, g);
        return [b("bs_belt_internalAVLtree").join(f, d, e, h[0]), h[1], h[2]]
    }

    function k(a, b) {
        if (b !== void 0) return j(a, b);
        else return [void 0, void 0, void 0]
    }

    function l(a, c, d) {
        if (a !== void 0) {
            if (a.h >= (c !== void 0 ? c.h : 0)) {
                var e = a.k,
                    f = a.v,
                    g = a.l,
                    h = a.r,
                    i = k(e, c);
                return b("bs_belt_internalAVLtree").concatOrJoin(l(g, i[0], d), e, d(e, b("bs_caml_option").some(f), i[1]), l(h, i[2], d))
            }
        } else if (c === void 0) return;
        g = c.k;
        e = c.v;
        f = c.l;
        h = c.r;
        i = k(g, a);
        return b("bs_belt_internalAVLtree").concatOrJoin(l(i[0], f, d), g, d(g, i[1], b("bs_caml_option").some(e)), l(i[2], h, d))
    }

    function m(a, c, d) {
        return l(a, c, b("bs_curry").__3(d))
    }

    function n(a, c, d) {
        while (!0) {
            var e = c,
                f = a;
            if (!f) return 0;
            if (!e) return 0;
            var g = e.hd,
                h = f.hd,
                i = b("bs_caml").caml_string_compare(h.k, g.k);
            if (i !== 0) return i;
            i = d(h.v, g.v);
            if (i !== 0) return i;
            c = b("bs_belt_internalAVLtree").stackAllLeft(g.r, e.tl);
            a = b("bs_belt_internalAVLtree").stackAllLeft(h.r, f.tl);
            continue
        }
    }

    function o(c, d, a) {
        var e = b("bs_belt_internalAVLtree").size(c),
            f = b("bs_belt_internalAVLtree").size(d);
        if (e === f) return n(b("bs_belt_internalAVLtree").stackAllLeft(c, 0), b("bs_belt_internalAVLtree").stackAllLeft(d, 0), a);
        else if (e < f) return -1;
        else return 1
    }

    function p(a, c, d) {
        return o(a, c, b("bs_curry").__2(d))
    }

    function q(c, d, a) {
        while (!0) {
            var e = d,
                f = c;
            if (!f) return !0;
            if (!e) return !0;
            var g = e.hd,
                h = f.hd;
            if (!(h.k === g.k && a(h.v, g.v))) return !1;
            d = b("bs_belt_internalAVLtree").stackAllLeft(g.r, e.tl);
            c = b("bs_belt_internalAVLtree").stackAllLeft(h.r, f.tl);
            continue
        }
    }

    function r(c, d, a) {
        var e = b("bs_belt_internalAVLtree").size(c),
            f = b("bs_belt_internalAVLtree").size(d);
        if (e === f) return q(b("bs_belt_internalAVLtree").stackAllLeft(c, 0), b("bs_belt_internalAVLtree").stackAllLeft(d, 0), a);
        else return !1
    }

    function s(a, c, d) {
        return r(a, c, b("bs_curry").__2(d))
    }

    function t(a, c, d) {
        if (a === void 0) return b("bs_belt_internalAVLtree").singleton(c, d);
        var e = a.k;
        if (c === e) {
            a.k = c;
            a.v = d;
            return a
        }
        var f = a.l,
            g = a.r;
        if (c < e) {
            e = t(f, c, d);
            a.l = e
        } else a.r = t(g, c, d);
        return b("bs_belt_internalAVLtree").balMutate(a)
    }

    function u(a) {
        var c = a.length;
        if (c === 0) return;
        var d = b("bs_belt_SortArray").strictlySortedLengthU(a, function(a, b) {
                return a[0] < b[0]
            }),
            e;
        d >= 0 ? e = b("bs_belt_internalAVLtree").fromSortedArrayAux(a, 0, d) : (d = -d | 0, e = b("bs_belt_internalAVLtree").fromSortedArrayRevAux(a, d - 1 | 0, d));
        for (var d = d; d < c; ++d) {
            var f = a[d];
            e = t(e, f[0], f[1])
        }
        return e
    }
    var v, w, x;
    f.N = v;
    f.A = w;
    f.S = x;
    f.add = g;
    f.get = a;
    f.getUndefined = c;
    f.getExn = d;
    f.getWithDefault = e;
    f.has = h;
    f.remove = i;
    f.splitAux = j;
    f.split = k;
    f.mergeU = l;
    f.merge = m;
    f.compareAux = n;
    f.cmpU = o;
    f.cmp = p;
    f.eqAux = q;
    f.eqU = r;
    f.eq = s;
    f.addMutate = t;
    f.fromArray = u
}), null);
__d("bs_belt_MapString", ["bs_belt_internalAVLtree", "bs_belt_internalMapString", "bs_caml_option", "bs_curry"], (function(a, b, c, d, e, f) {
    "use strict";
    var g, h;

    function i(a, c, d) {
        if (a === void 0) return b("bs_belt_internalAVLtree").singleton(c, d);
        var e = a.k;
        if (c === e) return b("bs_belt_internalAVLtree").updateValue(a, d);
        var f = a.v;
        if (c < e) return b("bs_belt_internalAVLtree").bal(i(a.l, c, d), e, f, a.r);
        else return b("bs_belt_internalAVLtree").bal(a.l, e, f, i(a.r, c, d))
    }

    function j(a, c, d) {
        if (a !== void 0) {
            var e = a.k;
            if (c === e) {
                var f = d(b("bs_caml_option").some(a.v));
                if (f !== void 0) return b("bs_belt_internalAVLtree").updateValue(a, b("bs_caml_option").valFromOption(f));
                f = a.l;
                var g = a.r;
                if (f === void 0) return g;
                if (g === void 0) return f;
                var h = {
                        contents: g.k
                    },
                    i = {
                        contents: g.v
                    };
                g = b("bs_belt_internalAVLtree").removeMinAuxWithRef(g, h, i);
                return b("bs_belt_internalAVLtree").bal(f, h.contents, i.contents, g)
            }
            f = a.v;
            h = a.l;
            i = a.r;
            if (c < e) {
                g = j(h, c, d);
                if (h === g) return a;
                else return b("bs_belt_internalAVLtree").bal(g, e, f, i)
            }
            g = j(i, c, d);
            if (i === g) return a;
            else return b("bs_belt_internalAVLtree").bal(h, e, f, g)
        }
        i = d(void 0);
        if (i !== void 0) return b("bs_belt_internalAVLtree").singleton(c, b("bs_caml_option").valFromOption(i));
        else return a
    }

    function a(a, c, d) {
        return j(a, c, b("bs_curry").__1(d))
    }

    function k(a, c) {
        var d = a.k,
            e = a.l,
            f = a.r;
        if (c === d) {
            if (e === void 0) return f;
            if (f === void 0) return e;
            var g = {
                    contents: f.k
                },
                h = {
                    contents: f.v
                },
                i = b("bs_belt_internalAVLtree").removeMinAuxWithRef(f, g, h);
            return b("bs_belt_internalAVLtree").bal(e, g.contents, h.contents, i)
        }
        if (c < d) {
            if (e === void 0) return a;
            g = k(e, c);
            if (g === e) return a;
            else return b("bs_belt_internalAVLtree").bal(g, d, a.v, f)
        }
        if (f === void 0) return a;
        h = k(f, c);
        return b("bs_belt_internalAVLtree").bal(e, d, a.v, h)
    }

    function c(a, b) {
        if (a !== void 0) return k(a, b)
    }

    function d(a, b) {
        var c = b.length;
        if (a !== void 0) {
            a = a;
            var d = 0;
            while (!0) {
                var e = d,
                    f = a;
                if (e >= c) return f;
                var g = b[e];
                f = k(f, g);
                if (f === void 0) return f;
                d = e + 1 | 0;
                a = f;
                continue
            }
        }
    }

    function e(a, b) {
        var c = b.length;
        a = a;
        for (var d = 0; d < c; ++d) {
            var e = b[d];
            a = i(a, e[0], e[1])
        }
        return a
    }
    var l, m = (g = b("bs_belt_internalAVLtree")).isEmpty,
        n = (h = b("bs_belt_internalMapString")).has,
        o = h.cmpU,
        p = h.cmp,
        q = h.eqU,
        r = h.eq,
        s = g.findFirstByU,
        t = g.findFirstBy,
        u = g.forEachU,
        v = g.forEach,
        w = g.reduceU,
        x = g.reduce,
        y = g.everyU,
        z = g.every,
        A = g.someU,
        B = g.some,
        C = g.size,
        D = g.toList,
        E = g.toArray,
        F = h.fromArray,
        G = g.keysToArray,
        H = g.valuesToArray,
        I = g.minKey,
        J = g.minKeyUndefined,
        K = g.maxKey,
        L = g.maxKeyUndefined,
        M = g.minimum,
        N = g.minUndefined,
        O = g.maximum,
        P = g.maxUndefined,
        Q = h.get,
        R = h.getUndefined,
        S = h.getWithDefault,
        T = h.getExn,
        U = g.checkInvariantInternal,
        V = h.mergeU,
        W = h.merge,
        X = g.keepSharedU,
        Y = g.keepShared,
        Z = g.partitionSharedU,
        $ = g.partitionShared;
    h = h.split;
    var aa = g.mapU,
        ba = g.map,
        ca = g.mapWithKeyU;
    g = g.mapWithKey;
    f.empty = l;
    f.isEmpty = m;
    f.has = n;
    f.cmpU = o;
    f.cmp = p;
    f.eqU = q;
    f.eq = r;
    f.findFirstByU = s;
    f.findFirstBy = t;
    f.forEachU = u;
    f.forEach = v;
    f.reduceU = w;
    f.reduce = x;
    f.everyU = y;
    f.every = z;
    f.someU = A;
    f.some = B;
    f.size = C;
    f.toList = D;
    f.toArray = E;
    f.fromArray = F;
    f.keysToArray = G;
    f.valuesToArray = H;
    f.minKey = I;
    f.minKeyUndefined = J;
    f.maxKey = K;
    f.maxKeyUndefined = L;
    f.minimum = M;
    f.minUndefined = N;
    f.maximum = O;
    f.maxUndefined = P;
    f.get = Q;
    f.getUndefined = R;
    f.getWithDefault = S;
    f.getExn = T;
    f.checkInvariantInternal = U;
    f.remove = c;
    f.removeMany = d;
    f.set = i;
    f.updateU = j;
    f.update = a;
    f.mergeU = V;
    f.merge = W;
    f.mergeMany = e;
    f.keepU = X;
    f.keep = Y;
    f.partitionU = Z;
    f.partition = $;
    f.split = h;
    f.mapU = aa;
    f.map = ba;
    f.mapWithKeyU = ca;
    f.mapWithKey = g
}), null);
__d("bs_belt_internalAVLset", ["bs_belt_SortArray", "bs_caml_option", "bs_curry"], (function(a, b, c, d, e, f) {
    "use strict";

    function g(a) {
        if (a !== void 0) return {
            v: a.v,
            h: a.h,
            l: g(a.l),
            r: g(a.r)
        };
        else return a
    }

    function h(a, b, c) {
        var d = a !== void 0 ? a.h : 0,
            e = c !== void 0 ? c.h : 0;
        return {
            v: b,
            h: (d >= e ? d : e) + 1 | 0,
            l: a,
            r: c
        }
    }

    function i(a) {
        return {
            v: a,
            h: 1,
            l: void 0,
            r: void 0
        }
    }

    function j(a, b) {
        if (b !== void 0)
            if (a !== void 0) return a.h >= b.h;
            else return !1;
        else return !0
    }

    function k(a, b, c) {
        var d = a !== void 0 ? a.h : 0,
            e = c !== void 0 ? c.h : 0;
        if (d > (e + 2 | 0)) {
            var f = a.l,
                g = a.r;
            if (j(f, g)) return h(f, a.v, h(g, b, c));
            else return h(h(f, a.v, g.l), g.v, h(g.r, b, c))
        }
        if (e <= (d + 2 | 0)) return {
            v: b,
            h: (d >= e ? d : e) + 1 | 0,
            l: a,
            r: c
        };
        f = c.l;
        g = c.r;
        if (j(g, f)) return h(h(a, b, f), c.v, g);
        else return h(h(a, b, f.l), f.v, h(f.r, c.v, g))
    }

    function l(a) {
        while (!0) {
            var b = a,
                c = b.l;
            if (c === void 0) return b.v;
            a = c;
            continue
        }
    }

    function a(a) {
        if (a !== void 0) return b("bs_caml_option").some(l(a))
    }

    function c(a) {
        if (a !== void 0) return l(a)
    }

    function m(a) {
        while (!0) {
            var b = a,
                c = b.r;
            if (c === void 0) return b.v;
            a = c;
            continue
        }
    }

    function d(a) {
        if (a !== void 0) return b("bs_caml_option").some(m(a))
    }

    function e(a) {
        if (a !== void 0) return m(a)
    }

    function n(a, b) {
        var c = a.l;
        if (c !== void 0) return k(n(c, b), a.v, a.r);
        else {
            b.contents = a.v;
            return a.r
        }
    }

    function o(a) {
        return a === void 0
    }

    function p(a, b) {
        while (!0) {
            var c = b,
                d = a;
            if (d === void 0) return c;
            b = {
                hd: d,
                tl: c
            };
            a = d.l;
            continue
        }
    }

    function q(a, b) {
        while (!0) {
            var c = a;
            if (c === void 0) return;
            q(c.l, b);
            b(c.v);
            a = c.r;
            continue
        }
    }

    function r(a, c) {
        return q(a, b("bs_curry").__1(c))
    }

    function s(a, b, c) {
        while (!0) {
            var d = b,
                e = a;
            if (e === void 0) return d;
            b = c(s(e.l, d, c), e.v);
            a = e.r;
            continue
        }
    }

    function t(a, c, d) {
        return s(a, c, b("bs_curry").__2(d))
    }

    function u(a, b) {
        while (!0) {
            var c = a;
            if (c === void 0) return !0;
            if (!b(c.v)) return !1;
            if (!u(c.l, b)) return !1;
            a = c.r;
            continue
        }
    }

    function v(a, c) {
        return u(a, b("bs_curry").__1(c))
    }

    function w(a, b) {
        while (!0) {
            var c = a;
            if (c === void 0) return !1;
            if (b(c.v)) return !0;
            if (w(c.l, b)) return !0;
            a = c.r;
            continue
        }
    }

    function x(a, c) {
        return w(a, b("bs_curry").__1(c))
    }

    function y(a, b) {
        if (a !== void 0) return k(y(a.l, b), a.v, a.r);
        else return i(b)
    }

    function z(a, b) {
        if (a !== void 0) return k(a.l, a.v, z(a.r, b));
        else return i(b)
    }

    function A(a, b, c) {
        if (a === void 0) return y(c, b);
        if (c === void 0) return z(a, b);
        var d = a.h,
            e = c.h;
        if (d > (e + 2 | 0)) return k(a.l, a.v, A(a.r, b, c));
        else if (e > (d + 2 | 0)) return k(A(a, b, c.l), c.v, c.r);
        else return h(a, b, c)
    }

    function B(a, b) {
        if (a === void 0) return b;
        if (b === void 0) return a;
        var c = {
            contents: b.v
        };
        b = n(b, c);
        return A(a, c.contents, b)
    }

    function C(a, b) {
        if (a === void 0) return [void 0, void 0];
        var c = a.v,
            d = C(a.l, b),
            e = d[1];
        d = d[0];
        var f = b(c);
        a = C(a.r, b);
        b = a[1];
        a = a[0];
        if (f) return [A(d, c, a), B(e, b)];
        else return [B(d, a), A(e, c, b)]
    }

    function D(a, c) {
        return C(a, b("bs_curry").__1(c))
    }

    function E(a) {
        var b = a.l;
        a = a.r;
        b = b !== void 0 ? E(b) : 0;
        a = a !== void 0 ? E(a) : 0;
        return (1 + b | 0) + a | 0
    }

    function F(a) {
        if (a !== void 0) return E(a);
        else return 0
    }

    function G(a, b) {
        while (!0) {
            var c = b,
                d = a;
            if (d === void 0) return c;
            b = {
                hd: d.v,
                tl: G(d.r, c)
            };
            a = d.l;
            continue
        }
    }

    function H(a) {
        return G(a, 0)
    }

    function I(a) {
        while (!0) {
            var b = a;
            if (b === void 0) return;
            var c = b.l;
            b = b.r;
            var d = (c !== void 0 ? c.h : 0) - (b !== void 0 ? b.h : 0) | 0;
            if (!(d <= 2 && d >= -2)) throw {
                RE_EXN_ID: "Assert_failure",
                _1: ["belt_internalAVLset.ml", 290, 4],
                Error: new Error()
            };
            I(c);
            a = b;
            continue
        }
    }

    function J(a, b, c) {
        while (!0) {
            var d = b,
                e = a,
                f = e.v,
                g = e.l;
            e = e.r;
            g = g !== void 0 ? J(g, d, c) : d;
            c[g] = f;
            d = g + 1 | 0;
            if (e === void 0) return d;
            b = d;
            a = e;
            continue
        }
    }

    function K(a, b, c, d) {
        while (!0) {
            var e = a,
                f = e.v,
                g = e.l;
            e = e.r;
            g !== void 0 && K(g, b, c, d);
            if (d(f)) {
                g = b.forward;
                c[g] = f;
                b.forward = g + 1 | 0
            } else {
                g = b.backward;
                c[g] = f;
                b.backward = g - 1 | 0
            }
            if (e === void 0) return;
            a = e;
            continue
        }
    }

    function L(a, b, c, d) {
        while (!0) {
            var e = b,
                f = a,
                g = f.v,
                h = f.l;
            f = f.r;
            h = h !== void 0 ? L(h, e, c, d) : e;
            e = d(g) ? (c[h] = g, h + 1 | 0) : h;
            if (f === void 0) return e;
            b = e;
            a = f;
            continue
        }
    }

    function M(b) {
        if (b === void 0) return [];
        var a = E(b);
        a = new Array(a);
        J(b, 0, a);
        return a
    }

    function N(a, b, c) {
        switch (c) {
            case 0:
                return;
            case 1:
                return i(a[b]);
            case 2:
                var d = a[b],
                    e = a[b - 1 | 0];
                return {
                    v: e,
                    h: 2,
                    l: i(d),
                    r: void 0
                };
            case 3:
                e = a[b];
                d = a[b - 1 | 0];
                var f = a[b - 2 | 0];
                return {
                    v: d,
                    h: 2,
                    l: i(e),
                    r: i(f)
                };
            default:
                d = c / 2 | 0;
                e = N(a, b, d);
                f = a[b - d | 0];
                a = N(a, (b - d | 0) - 1 | 0, (c - d | 0) - 1 | 0);
                return h(e, f, a)
        }
    }

    function O(a, b, c) {
        switch (c) {
            case 0:
                return;
            case 1:
                return i(a[b]);
            case 2:
                var d = a[b],
                    e = a[b + 1 | 0];
                return {
                    v: e,
                    h: 2,
                    l: i(d),
                    r: void 0
                };
            case 3:
                e = a[b];
                d = a[b + 1 | 0];
                var f = a[b + 2 | 0];
                return {
                    v: d,
                    h: 2,
                    l: i(e),
                    r: i(f)
                };
            default:
                d = c / 2 | 0;
                e = O(a, b, d);
                f = a[b + d | 0];
                a = O(a, (b + d | 0) + 1 | 0, (c - d | 0) - 1 | 0);
                return h(e, f, a)
        }
    }

    function P(a) {
        return O(a, 0, a.length)
    }

    function Q(a, b) {
        if (a === void 0) return;
        var c = a.v,
            d = a.l,
            e = a.r,
            f = Q(d, b),
            g = b(c);
        b = Q(e, b);
        if (g)
            if (d === f && e === b) return a;
            else return A(f, c, b);
        else return B(f, b)
    }

    function aa(a, c) {
        return Q(a, b("bs_curry").__1(c))
    }

    function R(b, c) {
        if (b === void 0) return;
        var a = E(b);
        a = new Array(a);
        b = L(b, 0, a, c);
        return O(a, 0, b)
    }

    function ba(a, c) {
        return R(a, b("bs_curry").__1(c))
    }

    function S(b, c) {
        if (b === void 0) return [void 0, void 0];
        var a = E(b),
            d = new Array(a),
            e = a - 1 | 0,
            f = {
                forward: 0,
                backward: e
            };
        K(b, f, d, c);
        b = f.forward;
        return [O(d, 0, b), N(d, e, a - b | 0)]
    }

    function ca(a, c) {
        return S(a, b("bs_curry").__1(c))
    }

    function da(b, c, a) {
        while (!0) {
            var d = b;
            if (d === void 0) return !1;
            var e = d.v;
            e = a(c, e);
            if (e === 0) return !0;
            b = e < 0 ? d.l : d.r;
            continue
        }
    }

    function T(a, b, c) {
        var d = F(a),
            e = F(b);
        if (d === e) {
            a = p(a, 0);
            b = p(b, 0);
            while (!0) {
                var f = b,
                    g = a;
                if (!g) return 0;
                if (!f) return 0;
                var h = f.hd,
                    i = g.hd,
                    j = c(i.v, h.v);
                if (j !== 0) return j;
                b = p(h.r, f.tl);
                a = p(i.r, g.tl);
                continue
            }
        } else if (d < e) return -1;
        else return 1
    }

    function ea(a, b, c) {
        return T(a, b, c) === 0
    }

    function U(b, c, a) {
        while (!0) {
            var d = c,
                e = b;
            if (e === void 0) return !0;
            if (d === void 0) return !1;
            var f = e.v,
                g = e.l;
            e = e.r;
            var i = d.v,
                j = d.l;
            d = d.r;
            i = a(f, i);
            if (i === 0) {
                if (!U(g, j, a)) return !1;
                c = d;
                b = e;
                continue
            }
            if (i < 0) {
                if (!U(h(g, f, void 0), j, a)) return !1;
                b = e;
                continue
            }
            if (!U(h(void 0, f, e), d, a)) return !1;
            b = g;
            continue
        }
    }

    function fa(c, d, a) {
        while (!0) {
            var e = c;
            if (e === void 0) return;
            var f = e.v,
                g = a(d, f);
            if (g === 0) return b("bs_caml_option").some(f);
            c = g < 0 ? e.l : e.r;
            continue
        }
    }

    function ga(b, c, a) {
        while (!0) {
            var d = b;
            if (d === void 0) return;
            var e = d.v,
                f = a(c, e);
            if (f === 0) return e;
            b = f < 0 ? d.l : d.r;
            continue
        }
    }

    function ha(b, c, a) {
        while (!0) {
            var d = b;
            if (d !== void 0) {
                var e = d.v,
                    f = a(c, e);
                if (f === 0) return e;
                b = f < 0 ? d.l : d.r;
                continue
            }
            throw {
                RE_EXN_ID: "Not_found",
                Error: new Error()
            }
        }
    }

    function V(a) {
        var b = a.l;
        a.l = b.r;
        b.r = a;
        var c = a.l;
        c = c !== void 0 ? c.h : 0;
        var d = a.r;
        d = d !== void 0 ? d.h : 0;
        a.h = (c > d ? c : d) + 1 | 0;
        c = b.l;
        d = c !== void 0 ? c.h : 0;
        c = a.h;
        b.h = (d > c ? d : c) + 1 | 0;
        return b
    }

    function W(a) {
        var b = a.r;
        a.r = b.l;
        b.l = a;
        var c = a.l;
        c = c !== void 0 ? c.h : 0;
        var d = a.r;
        d = d !== void 0 ? d.h : 0;
        a.h = (c > d ? c : d) + 1 | 0;
        c = b.r;
        d = c !== void 0 ? c.h : 0;
        c = a.h;
        b.h = (d > c ? d : c) + 1 | 0;
        return b
    }

    function ia(a) {
        var b = a.l;
        b = W(b);
        a.l = b;
        return V(a)
    }

    function ja(a) {
        var b = a.r;
        b = V(b);
        a.r = b;
        return W(a)
    }

    function X(a) {
        var b = a.l;
        b = b !== void 0 ? b.h : 0;
        var c = a.r;
        c = c !== void 0 ? c.h : 0;
        a.h = (b > c ? b : c) + 1 | 0;
        return a
    }

    function Y(a) {
        var b = a.l,
            c = a.r,
            d = b !== void 0 ? b.h : 0,
            e = c !== void 0 ? c.h : 0;
        if (d > (2 + e | 0)) {
            var f = b.l;
            b = b.r;
            if (j(f, b)) return X(V(a));
            else return X(ia(a))
        }
        if (e > (2 + d | 0)) {
            f = c.l;
            b = c.r;
            if (j(b, f)) return X(W(a));
            else return X(ja(a))
        }
        a.h = (d > e ? d : e) + 1 | 0;
        return a
    }

    function Z(a, b, c) {
        if (b === void 0) return i(c);
        var d = b.v;
        d = a(c, d);
        if (d === 0) return b;
        var e = b.l,
            f = b.r;
        if (d < 0) {
            d = Z(a, e, c);
            b.l = d
        } else b.r = Z(a, f, c);
        return Y(b)
    }

    function ka(c, a) {
        var d = c.length;
        if (d === 0) return;
        var e = b("bs_belt_SortArray").strictlySortedLengthU(c, function(b, c) {
                return a(b, c) < 0
            }),
            f;
        e >= 0 ? f = O(c, 0, e) : (e = -e | 0, f = N(c, e - 1 | 0, e));
        for (var e = e; e < d; ++e) f = Z(a, f, c[e]);
        return f
    }

    function $(a, b) {
        var c = b.l,
            d = b.r;
        if (c !== void 0) {
            b.l = $(a, c);
            return Y(b)
        } else {
            a.v = b.v;
            return d
        }
    }
    f.copy = g;
    f.create = h;
    f.bal = k;
    f.singleton = i;
    f.minimum = a;
    f.minUndefined = c;
    f.maximum = d;
    f.maxUndefined = e;
    f.removeMinAuxWithRef = n;
    f.isEmpty = o;
    f.stackAllLeft = p;
    f.forEachU = q;
    f.forEach = r;
    f.reduceU = s;
    f.reduce = t;
    f.everyU = u;
    f.every = v;
    f.someU = w;
    f.some = x;
    f.joinShared = A;
    f.concatShared = B;
    f.keepSharedU = Q;
    f.keepShared = aa;
    f.keepCopyU = R;
    f.keepCopy = ba;
    f.partitionSharedU = C;
    f.partitionShared = D;
    f.partitionCopyU = S;
    f.partitionCopy = ca;
    f.lengthNode = E;
    f.size = F;
    f.toList = H;
    f.checkInvariantInternal = I;
    f.fillArray = J;
    f.toArray = M;
    f.fromSortedArrayAux = O;
    f.fromSortedArrayRevAux = N;
    f.fromSortedArrayUnsafe = P;
    f.has = da;
    f.cmp = T;
    f.eq = ea;
    f.subset = U;
    f.get = fa;
    f.getUndefined = ga;
    f.getExn = ha;
    f.fromArray = ka;
    f.addMutate = Z;
    f.balMutate = Y;
    f.removeMinAuxWithRootMutate = $
}), null);
__d("bs_belt_SetDict", ["bs_belt_internalAVLset"], (function(a, b, c, d, e, f) {
    "use strict";

    function g(c, d, a) {
        if (c === void 0) return b("bs_belt_internalAVLset").singleton(d);
        var e = c.v,
            f = a(d, e);
        if (f === 0) return c;
        var h = c.l,
            i = c.r;
        if (f < 0) {
            f = g(h, d, a);
            if (f === h) return c;
            else return b("bs_belt_internalAVLset").bal(f, e, i)
        }
        f = g(i, d, a);
        if (f === i) return c;
        else return b("bs_belt_internalAVLset").bal(h, e, f)
    }

    function h(c, d, a) {
        if (c === void 0) return c;
        var e = c.v,
            f = c.l,
            g = c.r,
            i = a(d, e);
        if (i === 0) {
            if (f === void 0) return g;
            if (g === void 0) return f;
            var j = {
                    contents: g.v
                },
                k = b("bs_belt_internalAVLset").removeMinAuxWithRef(g, j);
            return b("bs_belt_internalAVLset").bal(f, j.contents, k)
        }
        if (i < 0) {
            j = h(f, d, a);
            if (j === f) return c;
            else return b("bs_belt_internalAVLset").bal(j, e, g)
        }
        k = h(g, d, a);
        if (k === g) return c;
        else return b("bs_belt_internalAVLset").bal(f, e, k)
    }

    function a(b, c, a) {
        var d = c.length;
        b = b;
        for (var e = 0; e < d; ++e) {
            var f = c[e];
            b = g(b, f, a)
        }
        return b
    }

    function c(b, c, a) {
        var d = c.length;
        b = b;
        for (var e = 0; e < d; ++e) {
            var f = c[e];
            b = h(b, f, a)
        }
        return b
    }

    function i(a, c, d) {
        var e = c.v,
            f = c.l,
            g = c.r,
            h = a(d, e);
        if (h === 0) return [f, g];
        if (h < 0) {
            if (f === void 0) return [void 0, c];
            h = i(a, f, d);
            return [h[0], b("bs_belt_internalAVLset").joinShared(h[1], e, g)]
        }
        if (g === void 0) return [c, void 0];
        h = i(a, g, d);
        return [b("bs_belt_internalAVLset").joinShared(f, e, h[0]), h[1]]
    }

    function j(a, c, d, e) {
        var f = c.v,
            g = c.l,
            h = c.r,
            i = a(d, f);
        if (i === 0) {
            e.contents = !0;
            return [g, h]
        }
        if (i < 0) {
            if (g === void 0) return [void 0, c];
            i = j(a, g, d, e);
            return [i[0], b("bs_belt_internalAVLset").joinShared(i[1], f, h)]
        }
        if (h === void 0) return [c, void 0];
        i = j(a, h, d, e);
        return [b("bs_belt_internalAVLset").joinShared(g, f, i[0]), i[1]]
    }

    function d(b, c, a) {
        if (b === void 0) return [
            [void 0, void 0], !1
        ];
        var d = {
            contents: !1
        };
        a = j(a, b, c, d);
        return [a, d.contents]
    }

    function k(c, d, a) {
        if (c === void 0) return d;
        if (d === void 0) return c;
        var e = c.h,
            f = d.h;
        if (e >= f) {
            if (f === 1) return g(c, d.v, a);
            f = c.v;
            var h = c.l,
                j = c.r,
                l = i(a, d, f);
            return b("bs_belt_internalAVLset").joinShared(k(h, l[0], a), f, k(j, l[1], a))
        }
        if (e === 1) return g(d, c.v, a);
        h = d.v;
        f = d.l;
        j = d.r;
        l = i(a, c, h);
        return b("bs_belt_internalAVLset").joinShared(k(l[0], f, a), h, k(l[1], j, a))
    }

    function l(c, d, a) {
        if (c === void 0) return;
        if (d === void 0) return;
        var e = c.v,
            f = c.l;
        c = c.r;
        var g = {
            contents: !1
        };
        d = j(a, d, e, g);
        f = l(f, d[0], a);
        c = l(c, d[1], a);
        if (g.contents) return b("bs_belt_internalAVLset").joinShared(f, e, c);
        else return b("bs_belt_internalAVLset").concatShared(f, c)
    }

    function m(c, d, a) {
        if (c === void 0) return c;
        if (d === void 0) return c;
        var e = c.v,
            f = c.l;
        c = c.r;
        var g = {
            contents: !1
        };
        d = j(a, d, e, g);
        f = m(f, d[0], a);
        c = m(c, d[1], a);
        if (g.contents) return b("bs_belt_internalAVLset").concatShared(f, c);
        else return b("bs_belt_internalAVLset").joinShared(f, e, c)
    }
    var n, o = (e = b("bs_belt_internalAVLset")).fromArray,
        p = e.fromSortedArrayUnsafe,
        q = e.isEmpty,
        r = e.has,
        s = e.subset,
        t = e.cmp,
        u = e.eq,
        v = e.forEachU,
        w = e.forEach,
        x = e.reduceU,
        y = e.reduce,
        z = e.everyU,
        A = e.every,
        B = e.someU,
        C = e.some,
        D = e.keepSharedU,
        E = e.keepShared,
        F = e.partitionSharedU,
        G = e.partitionShared,
        H = e.size,
        I = e.toList,
        J = e.toArray,
        K = e.minimum,
        L = e.minUndefined,
        M = e.maximum,
        N = e.maxUndefined,
        O = e.get,
        P = e.getUndefined,
        Q = e.getExn;
    e = e.checkInvariantInternal;
    f.empty = n;
    f.fromArray = o;
    f.fromSortedArrayUnsafe = p;
    f.isEmpty = q;
    f.has = r;
    f.add = g;
    f.mergeMany = a;
    f.remove = h;
    f.removeMany = c;
    f.union = k;
    f.intersect = l;
    f.diff = m;
    f.subset = s;
    f.cmp = t;
    f.eq = u;
    f.forEachU = v;
    f.forEach = w;
    f.reduceU = x;
    f.reduce = y;
    f.everyU = z;
    f.every = A;
    f.someU = B;
    f.some = C;
    f.keepU = D;
    f.keep = E;
    f.partitionU = F;
    f.partition = G;
    f.size = H;
    f.toList = I;
    f.toArray = J;
    f.minimum = K;
    f.minUndefined = L;
    f.maximum = M;
    f.maxUndefined = N;
    f.get = O;
    f.getUndefined = P;
    f.getExn = Q;
    f.split = d;
    f.checkInvariantInternal = e
}), null);
__d("bs_belt_Set", ["bs_belt_SetDict", "bs_curry"], (function(a, b, c, d, e, f) {
    "use strict";

    function a(a, c) {
        c = c.cmp;
        return {
            cmp: c,
            data: b("bs_belt_SetDict").fromArray(a, c)
        }
    }

    function c(c, d) {
        var e = c.data,
            a = c.cmp;
        d = b("bs_belt_SetDict").remove(e, d, a);
        if (d === e) return c;
        else return {
            cmp: a,
            data: d
        }
    }

    function d(c, d) {
        var e = c.data,
            a = c.cmp;
        d = b("bs_belt_SetDict").add(e, d, a);
        if (d === e) return c;
        else return {
            cmp: a,
            data: d
        }
    }

    function e(c, d) {
        var a = c.cmp;
        return {
            cmp: a,
            data: b("bs_belt_SetDict").mergeMany(c.data, d, a)
        }
    }

    function g(c, d) {
        var a = c.cmp;
        return {
            cmp: a,
            data: b("bs_belt_SetDict").removeMany(c.data, d, a)
        }
    }

    function h(c, d) {
        var a = c.cmp;
        return {
            cmp: a,
            data: b("bs_belt_SetDict").union(c.data, d.data, a)
        }
    }

    function i(c, d) {
        var a = c.cmp;
        return {
            cmp: a,
            data: b("bs_belt_SetDict").intersect(c.data, d.data, a)
        }
    }

    function j(c, d) {
        var a = c.cmp;
        return {
            cmp: a,
            data: b("bs_belt_SetDict").diff(c.data, d.data, a)
        }
    }

    function k(c, d) {
        var a = c.cmp;
        return b("bs_belt_SetDict").subset(c.data, d.data, a)
    }

    function l(c, d) {
        var a = c.cmp;
        c = b("bs_belt_SetDict").split(c.data, d, a);
        d = c[0];
        return [
            [{
                cmp: a,
                data: d[0]
            }, {
                cmp: a,
                data: d[1]
            }], c[1]
        ]
    }

    function m(a) {
        return {
            cmp: a.cmp,
            data: void 0
        }
    }

    function n(a) {
        return b("bs_belt_SetDict").isEmpty(a.data)
    }

    function o(a, c) {
        var d = a.cmp;
        return b("bs_belt_SetDict").cmp(a.data, c.data, d)
    }

    function p(a, c) {
        return b("bs_belt_SetDict").eq(a.data, c.data, a.cmp)
    }

    function q(a, c) {
        return b("bs_belt_SetDict").forEachU(a.data, c)
    }

    function r(a, c) {
        return b("bs_belt_SetDict").forEachU(a.data, b("bs_curry").__1(c))
    }

    function s(a, c, d) {
        return b("bs_belt_SetDict").reduceU(a.data, c, d)
    }

    function t(a, c, d) {
        return s(a, c, b("bs_curry").__2(d))
    }

    function u(a, c) {
        return b("bs_belt_SetDict").everyU(a.data, c)
    }

    function v(a, c) {
        return b("bs_belt_SetDict").everyU(a.data, b("bs_curry").__1(c))
    }

    function w(a, c) {
        return b("bs_belt_SetDict").someU(a.data, c)
    }

    function x(a, c) {
        return b("bs_belt_SetDict").someU(a.data, b("bs_curry").__1(c))
    }

    function y(a, c) {
        return {
            cmp: a.cmp,
            data: b("bs_belt_SetDict").keepU(a.data, c)
        }
    }

    function z(a, c) {
        return y(a, b("bs_curry").__1(c))
    }

    function A(a, c) {
        c = b("bs_belt_SetDict").partitionU(a.data, c);
        a = a.cmp;
        return [{
            cmp: a,
            data: c[0]
        }, {
            cmp: a,
            data: c[1]
        }]
    }

    function B(a, c) {
        return A(a, b("bs_curry").__1(c))
    }

    function C(a) {
        return b("bs_belt_SetDict").size(a.data)
    }

    function D(a) {
        return b("bs_belt_SetDict").toList(a.data)
    }

    function E(a) {
        return b("bs_belt_SetDict").toArray(a.data)
    }

    function F(a) {
        return b("bs_belt_SetDict").minimum(a.data)
    }

    function G(a) {
        return b("bs_belt_SetDict").minUndefined(a.data)
    }

    function H(a) {
        return b("bs_belt_SetDict").maximum(a.data)
    }

    function I(a) {
        return b("bs_belt_SetDict").maxUndefined(a.data)
    }

    function J(a, c) {
        return b("bs_belt_SetDict").get(a.data, c, a.cmp)
    }

    function K(a, c) {
        return b("bs_belt_SetDict").getUndefined(a.data, c, a.cmp)
    }

    function L(a, c) {
        return b("bs_belt_SetDict").getExn(a.data, c, a.cmp)
    }

    function M(a, c) {
        return b("bs_belt_SetDict").has(a.data, c, a.cmp)
    }

    function N(a, c) {
        return {
            cmp: c.cmp,
            data: b("bs_belt_SetDict").fromSortedArrayUnsafe(a)
        }
    }

    function O(a) {
        return a.data
    }

    function P(a) {
        a = a.cmp;
        return {
            cmp: a
        }
    }

    function Q(a, b) {
        return {
            cmp: a.cmp,
            data: b
        }
    }

    function R(a) {
        return b("bs_belt_SetDict").checkInvariantInternal(a.data)
    }
    var S, T, U;
    f.Int = S;
    f.$$String = T;
    f.Dict = U;
    f.make = m;
    f.fromArray = a;
    f.fromSortedArrayUnsafe = N;
    f.isEmpty = n;
    f.has = M;
    f.add = d;
    f.mergeMany = e;
    f.remove = c;
    f.removeMany = g;
    f.union = h;
    f.intersect = i;
    f.diff = j;
    f.subset = k;
    f.cmp = o;
    f.eq = p;
    f.forEachU = q;
    f.forEach = r;
    f.reduceU = s;
    f.reduce = t;
    f.everyU = u;
    f.every = v;
    f.someU = w;
    f.some = x;
    f.keepU = y;
    f.keep = z;
    f.partitionU = A;
    f.partition = B;
    f.size = C;
    f.toArray = E;
    f.toList = D;
    f.minimum = F;
    f.minUndefined = G;
    f.maximum = H;
    f.maxUndefined = I;
    f.get = J;
    f.getUndefined = K;
    f.getExn = L;
    f.split = l;
    f.checkInvariantInternal = R;
    f.getData = O;
    f.getId = P;
    f.packIdData = Q
}), null);
__d("MessengerState.bs", ["invariant", "Arbiter", "BizInboxUnifiedTags", "ChannelConstants", "ChatConfig", "ChatReliabilityInstrumentation", "CurrentUser", "FBID.bs", "FBIDCheck", "FBJSON", "FBLogger", "ImmutableObject", "JSSet.bs", "MWChatDeleteMessageEventEmitter", "MercuryActionStatus", "MercuryActionType", "MercuryAssert", "MercuryAttachment", "MercuryDisplayTimeFilterMessageRenderer", "MercuryFilters.bs", "MercuryGlobalActionType", "MercuryIDs", "MercuryLocalIDs", "MercuryLogMessageType", "MercuryMessageClientState", "MercuryMessageIDs.bs", "MercuryPayloadSource", "MercuryServerRequests", "MercurySyncEventsProxy", "MercuryThreadIDMap", "MercuryThreadInfo", "MercuryThreadInformer", "MercuryThreadlistConstants", "MercuryViewer", "MessageProfileRangeType", "MessageRequestUtils", "MessageUnsendabilityStatus", "MessagingGenericAdminTextType", "MessagingTag", "MessagingThreadType", "MessengerDesktopNotifications", "MessengerEnvironment", "MessengerFolders.bs", "MessengerGroupsSyncStatus", "MessengerMessage.bs", "MessengerPersonas.bs", "MessengerSharedMediaActionsLoader", "MessengerSharedPhotosVideosBaseData.bs", "MessengerThreadCannotReplyReason.bs", "MessengerThreadUtils.bs", "MessengerWebEvent", "PageCommItemStatus", "ParticipantId.bs", "RemoteAction.bs", "RemovedMessageTombstoneContent", "RepliedToMessageStatusForGraphQL", "ThreadConnectivityStatus.bs", "ThreadId.bs", "TypingStates", "URI", "Utils.bs", "XGroupsController", "bs_array", "bs_belt_Array", "bs_belt_Map", "bs_belt_MapString", "bs_belt_Option", "bs_belt_Set", "bs_caml", "bs_caml_array", "bs_caml_obj", "bs_caml_option", "bs_curry", "bs_js_dict", "bs_js_null_undefined", "bs_pervasives", "cr:11271", "gkx", "immutable", "qex", "react", "recoverableViolation", "setTimeoutAcrossTransitions", "unrecoverableViolation"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h, i, j = h || b("react"),
        k = b("MessagingTag").IRIS_MAPPING;

    function l(a) {
        var c = {};
        b("bs_belt_Map").forEach(a, function(b, a) {
            c[b] = a
        });
        return c
    }

    function a(a) {
        return l(a.threads)
    }

    function m(a, c) {
        return b("bs_js_null_undefined").fromOption(b("bs_belt_Map").get(a.threads, c))
    }

    function c(a) {
        return a.fbid
    }

    function d(a) {
        return a.deliveryReceipts
    }

    function e(a) {
        return a.readReceiptsPerThread
    }

    function n(a) {
        return a.ignoredIds
    }

    function o(a) {
        return a.blockedIds
    }

    function p(a) {
        return a.pendingFolderUnseenCount
    }

    function aa(a) {
        return a.typing
    }

    function q(a) {
        return a.pendingReadStatusThreads
    }

    function r(a) {
        return a.messages
    }

    function s(a) {
        return a.localIDsMap
    }

    function ba(a) {
        return a.messagesWithUploadsInFlight
    }

    function ca(a) {
        return a.threadlistOrderMap
    }

    function t(a) {
        return a.pinnedThreads
    }

    function da(a) {
        return a.montage
    }

    function ea(a) {
        return a.orderedMessageLists
    }

    function fa(a) {
        return a.unreadCounts
    }

    function ga(a) {
        return a.initialUnreadCounts
    }

    function ha(a) {
        return a.unseenTimestamp
    }

    function ia(a) {
        b("ChatReliabilityInstrumentation").logMESSAGE_RECEIVED(b("FBJSON").stringify({
            otid: a.offline_threading_id,
            message_id: a.message_id,
            other_user_fbid: a.other_user_fbid
        }))
    }

    function ja(a, c, d) {
        d = d.reduce(b("bs_belt_Set").remove, c.reduce(b("bs_belt_Set").add, a.ignoredIds));
        if (d === a.ignoredIds) return a;
        else return {
            fbid: a.fbid,
            deliveryReceipts: a.deliveryReceipts,
            readReceiptsPerThread: a.readReceiptsPerThread,
            ignoredIds: d,
            blockedIds: a.blockedIds,
            pendingFolderUnseenCount: a.pendingFolderUnseenCount,
            typing: a.typing,
            threads: a.threads,
            pendingReadStatusThreads: a.pendingReadStatusThreads,
            messages: a.messages,
            localIDsMap: a.localIDsMap,
            messagesWithUploadsInFlight: a.messagesWithUploadsInFlight,
            threadlistOrderMap: a.threadlistOrderMap,
            pinnedThreads: a.pinnedThreads,
            montage: a.montage,
            orderedMessageLists: a.orderedMessageLists,
            unreadCounts: a.unreadCounts,
            initialUnreadCounts: a.initialUnreadCounts,
            unseenTimestamp: a.unseenTimestamp
        }
    }
    var ka = function(a, b) {
        delete a[b];
        return 0
    };

    function la(a, c, d) {
        var e = b("bs_belt_MapString").get(a, c);
        if (e === void 0) return a;
        e = b("bs_caml_option").valFromOption(e);
        var f = b("bs_belt_Map").get(e, d);
        if (f !== void 0) return b("bs_belt_MapString").set(a, c, b("bs_belt_Map").remove(e, d));
        else return a
    }

    function ma(a, c) {
        var d = c.thread_fbid;
        if (d == null) {
            if (!(c.type === "typ" || c.type === "page_typing")) return null;
            c = b("FBID.bs").ofString(c.from.toString());
            if (c !== void 0) return b("MercuryIDs").getThreadIDFromUserID(b("bs_caml_option").valFromOption(c));
            else return null
        }
        c = b("MercuryThreadIDMap").getForFBID(a);
        return c.getClientIDFromServerIDNow(d.toString())
    }
    var na = b("gkx")("1275193") ? b("MercuryFilters.bs").getSupportedFilters(void 0).concat([b("MercuryFilters.bs").all, b("MercuryFilters.bs").groups, b("MercuryFilters.bs").named, b("MercuryFilters.bs").unnamed]) : b("gkx")("1660458") ? b("MercuryFilters.bs").getSupportedFilters(void 0).concat([b("MercuryFilters.bs").all, b("MercuryFilters.bs").groups, b("MercuryFilters.bs").unsyncedChat]) : b("MercuryFilters.bs").getSupportedFilters(void 0).concat([b("MercuryFilters.bs").all, b("MercuryFilters.bs").groups]),
        oa = b("MessengerFolders.bs").getSupportedFolders(void 0).concat(["spam", "page_background"]);

    function pa(a) {
        var b = {};
        oa.forEach(function(a) {
            var c = {};
            na.forEach(function(a) {
                c[a] = {
                    threadlist: [],
                    reachedEnd: !1,
                    existingIDs: new Set()
                }
            });
            b[a] = c
        });
        return b
    }

    function qa(a, c) {
        a = b("MercuryThreadInformer").getForFBID(a);
        a.invalidatedThread(c)
    }

    function u(a, c) {
        a = b("MercuryThreadInformer").getForFBID(a);
        a.updatedThread(c)
    }

    function ra(a, c) {
        a = b("MercuryThreadInformer").getForFBID(a);
        a.deletedThread(c)
    }

    function sa(a, c, d, e) {
        a = b("MercuryThreadInformer").getForFBID(a);
        a.changedThreadReadState(c, d, e)
    }

    function v(a, c) {
        var d = new Map();
        c.forEach(function(a, b) {
            d.set(a, b)
        });
        return c.sort(function(c, e) {
            var f = b("bs_belt_Map").get(a.threads, c),
                g = b("bs_belt_Map").get(a.threads, e);
            if (f !== void 0 && g !== void 0) {
                g = b("bs_caml_option").valFromOption(g).timestamp - b("bs_caml_option").valFromOption(f).timestamp;
                if (g > 0) return 1;
                else if (g < 0) return -1;
                else return 0
            }
            f = d.get(c);
            g = d.get(e);
            return b("bs_belt_Option").getExn(f == null ? void 0 : b("bs_caml_option").some(f)) - b("bs_belt_Option").getExn(g == null ? void 0 : b("bs_caml_option").some(g)) | 0
        })
    }

    function ta(a, c, d, e) {
        a = b("bs_js_dict").get(a.threadlistOrderMap, d);
        if (a === void 0) return;
        d = b("bs_js_dict").get(b("bs_caml_option").valFromOption(a), e);
        if (d === void 0) return;
        var f = b("bs_caml_option").valFromOption(d);
        c.forEach(function(a) {
            if (!f.existingIDs.has(a)) return;
            f.existingIDs["delete"](a);
            a = f.threadlist.indexOf(a);
            f.threadlist.splice(a, 1)
        })
    }

    function w(c, d, e, f) {
        c = c !== void 0 ? c : function(a) {
            return !0
        };
        var a = b("bs_belt_Map").get(d.threads, e);
        if (a === void 0) return d;
        a = b("bs_caml_option").valFromOption(a);
        if (!b("bs_curry")._1(c, a)) return d;
        c = b("ImmutableObject").set(a, f);
        a = b("bs_belt_Map").set(d.threads, e, c);
        u(d.fbid, e);
        return {
            fbid: d.fbid,
            deliveryReceipts: d.deliveryReceipts,
            readReceiptsPerThread: d.readReceiptsPerThread,
            ignoredIds: d.ignoredIds,
            blockedIds: d.blockedIds,
            pendingFolderUnseenCount: d.pendingFolderUnseenCount,
            typing: d.typing,
            threads: a,
            pendingReadStatusThreads: d.pendingReadStatusThreads,
            messages: d.messages,
            localIDsMap: d.localIDsMap,
            messagesWithUploadsInFlight: d.messagesWithUploadsInFlight,
            threadlistOrderMap: d.threadlistOrderMap,
            pinnedThreads: d.pinnedThreads,
            montage: d.montage,
            orderedMessageLists: d.orderedMessageLists,
            unreadCounts: d.unreadCounts,
            initialUnreadCounts: d.initialUnreadCounts,
            unseenTimestamp: d.unseenTimestamp
        }
    }

    function ua(c, a, d) {
        var e = new Set(a.participants);
        Object.assign(a, {
            participants: Array.from(a.participants)
        });
        d.forEach(function(d) {
            if (!e.has(d)) {
                a.participants.push(d);
                if (b("bs_caml_obj").caml_equal(d, c)) {
                    Object.assign(a, {
                        is_subscribed: !0,
                        can_reply: !0,
                        cannot_reply_reason: null
                    });
                    return
                } else return
            }
        })
    }
    var va = b("XGroupsController");

    function wa(a) {
        var c = [b("MercuryFilters.bs").all];
        a.unread_count > 0 && c.push(b("MercuryFilters.bs").unread);
        a.is_canonical || c.push(b("MercuryFilters.bs").groups);
        if (b("gkx")("1660458")) {
            var d = a.groups_sync_status;
            !(d == null) && b("bs_caml_obj").caml_equal(d, b("MessengerGroupsSyncStatus").OPT_IN) || c.push(b("MercuryFilters.bs").unsyncedChat)
        }
        if (b("gkx")("1275193"))
            if (a.name.length !== 0) {
                c.push(b("MercuryFilters.bs").named);
                return c
            } else {
                c.push(b("MercuryFilters.bs").unnamed);
                return c
            }
        else return c
    }

    function xa(a, c, d, e) {
        oa.forEach(function(b) {
            if (b !== d) return ta(a, c, b, e)
        });
        var f = b("bs_js_dict").get(a.threadlistOrderMap, d);
        if (f !== void 0) {
            f = b("bs_js_dict").get(b("bs_caml_option").valFromOption(f), e);
            if (f !== void 0) {
                f = b("bs_caml_option").valFromOption(f);
                f = [f.threadlist, f.existingIDs]
            } else f = [
                [], new Set()
            ]
        } else f = [
            [], new Set()
        ];
        var g = f[1],
            h = f[0];
        c.forEach(function(a) {
            if (!g.has(a)) {
                g.add(a);
                h.push(a);
                return
            }
        });
        return [v(a, h), g]
    }

    function ya(a, c, d, e) {
        c = b("gkx")("1275193") || b("gkx")("1660458") ? c.filter(function(c) {
            c = b("bs_belt_Map").get(a.threads, c);
            if (c === void 0) return !1;
            c = wa(b("bs_caml_option").valFromOption(c));
            return c.some(function(a) {
                return a === e
            })
        }) : c;
        return xa(a, c, d, e)
    }

    function za(a, c, d) {
        if (d === void 0) return;
        var e = b("bs_js_dict").get(a.unreadCounts, c);
        if (e !== void 0) {
            b("bs_caml_option").valFromOption(e).add(b("bs_caml_option").valFromOption(d));
            e = b("MercuryThreadInformer").getForFBID(a.fbid);
            e.updatedUnreadState();
            return
        }
        d = b("MercuryServerRequests").getForFBID(a.fbid);
        d.fetchUnreadThreadIDs(c)
    }
    var Aa = b("MessengerFolders.bs").getSupportedFolders(void 0).filter(function(a) {
        return a !== "action:archived"
    });

    function Ba(a, c, d) {
        if (d === void 0) return;
        var e = b("bs_js_dict").get(a.unreadCounts, c);
        if (e !== void 0) {
            b("bs_caml_option").valFromOption(e)["delete"](b("bs_caml_option").valFromOption(d));
            e = b("MercuryThreadInformer").getForFBID(a.fbid);
            e.updatedUnreadState();
            return
        }
        d = b("MercuryServerRequests").getForFBID(a.fbid);
        d.fetchUnreadThreadIDs(c)
    }

    function Ca(c, a, d) {
        var e = b("MessengerFolders.bs").getFromMeta(a);
        if (d !== e) {
            Aa.includes(e) && a.unread_count > 0 && za(c, e, b("bs_caml_option").some(a.thread_id));
            if (Aa.includes(d)) return Ba(c, d, b("bs_caml_option").some(a.thread_id));
            else return
        }
    }

    function Da(a, c, d, e, f) {
        var g = b("gkx")("1275193"),
            h = b("gkx")("1660458"),
            i = a.threadlistOrderMap[c][d],
            j = i.existingIDs.has(e);
        !f && (g || h) ? ya(a, [e], c, d) : xa(a, [e], c, d);
        if (!(!g && !h || i.threadlist.length !== 0)) return;
        f = b("bs_caml_array").get(i.threadlist, i.threadlist.length - 1 | 0) === e;
        if (!i.reachedEnd && !j && f) return ta(a, [e], c, d)
    }

    function Ea(a, c, d) {
        if (oa.includes(c))
            if ((c === "inbox" || c === "action:archived" || c === "pending") && (b("gkx")("1275193") || b("gkx")("1660458"))) return Da(a, c, b("MercuryFilters.bs").unread, d, !0);
            else {
                xa(a, [d], c, b("MercuryFilters.bs").unread);
                return
            }
    }

    function Fa(c, a) {
        var d = b("MessengerFolders.bs").getFromMeta(a);
        if (oa.includes(d)) {
            na.forEach(function(b) {
                return Da(c, d, b, a.thread_id, !1)
            });
            return
        }
    }

    function Ga(d, e, f, g) {
        var a = b("bs_belt_Map").get(d.threads, e);
        if (a === void 0) return d;
        a = b("bs_caml_option").valFromOption(a);
        var h = b("MessengerFolders.bs").getFromMeta(a);
        if (h !== f) {
            if (g) {
                g = a.comm_status;
                g = g == null ? b("ImmutableObject").set(a, {
                    folder: f
                }) : f === "other" ? b("ImmutableObject").set(a, {
                    folder: f,
                    comm_status: b("PageCommItemStatus").SPAM
                }) : f === "inbox" ? b("ImmutableObject").set(a, {
                    folder: f,
                    comm_status: b("PageCommItemStatus").TODO
                }) : b("ImmutableObject").set(a, {
                    folder: f
                })
            } else g = a;
            var c = a.other_user_fbid;
            c = c == null ? [] : f === "other" ? [b("MercuryIDs").getParticipantIDFromUserID(c)] : [];
            var i = a.other_user_fbid;
            f = i == null ? [] : f === "other" ? [] : [b("MercuryIDs").getParticipantIDFromUserID(i)];
            i = ja(d, c, f);
            c = b("bs_belt_Map").set(i.threads, e, g);
            Ca(i, g, h);
            Fa(i, g);
            u(i.fbid, e);
            return {
                fbid: i.fbid,
                deliveryReceipts: i.deliveryReceipts,
                readReceiptsPerThread: i.readReceiptsPerThread,
                ignoredIds: i.ignoredIds,
                blockedIds: i.blockedIds,
                pendingFolderUnseenCount: i.pendingFolderUnseenCount,
                typing: i.typing,
                threads: c,
                pendingReadStatusThreads: i.pendingReadStatusThreads,
                messages: i.messages,
                localIDsMap: i.localIDsMap,
                messagesWithUploadsInFlight: i.messagesWithUploadsInFlight,
                threadlistOrderMap: i.threadlistOrderMap,
                pinnedThreads: i.pinnedThreads,
                montage: i.montage,
                orderedMessageLists: i.orderedMessageLists,
                unreadCounts: i.unreadCounts,
                initialUnreadCounts: i.initialUnreadCounts,
                unseenTimestamp: i.unseenTimestamp
            }
        }
        Fa(d, a);
        return d
    }

    function Ha(a) {
        return a.some(function(a) {
            if (a.startsWith("source:pages:auto_response")) return !0;
            else return a.startsWith("pages_comms_automated_responses")
        })
    }

    function x(a, c, d) {
        if (d == null) {
            var e = c.tags;
            e = e == null ? [] : Ha(e) ? [b("BizInboxUnifiedTags").AUTO_RESPONDED] : []
        } else {
            d = d.filter(function(a) {
                return String(a).toLowerCase() !== String(b("BizInboxUnifiedTags").AUTO_RESPONDED)
            });
            c = c.tags;
            c == null || !Ha(c) ? e = d : (d.push(b("BizInboxUnifiedTags").AUTO_RESPONDED), e = d)
        }
        return Object.assign(a, {
            biz_inbox_tags: e
        })
    }

    function Ia(a, c, d) {
        d = c.is_filtered_content ? b("MercuryDisplayTimeFilterMessageRenderer").renderFilteredContent(c) : d !== void 0 ? d : c.body;
        var e = c.raw_attachments;
        e = !(e == null) && e.length !== 0 ? b("MercuryAttachment").convertRaw(e) : c.attachments;
        var f = c.removed_timestamp;
        if (f == null) {
            f = c.log_message_type;
            d = {
                snippet: d,
                snippet_attachments: e,
                snippet_sender: f == null ? c.author : null
            }
        } else d = {
            snippet: b("RemovedMessageTombstoneContent").getTombstoneContentForSnippet(c.author),
            snippet_attachments: null,
            snippet_sender: null
        };
        return Object.assign(a, d)
    }

    function y(a, c, d) {
        var e = a.event_title,
            f = a.event_time;
        a = a.event_location_name;
        return {
            creator_id: null,
            latitude: null,
            location_address: null,
            longitude: null,
            note: "",
            related_event: {
                id: ""
            },
            repeat_mode: null,
            seconds_to_notify_before: 0,
            status: null,
            track_rsvp: c.track_rsvp,
            title: e == null ? c.title : e,
            event_time: f == null ? c.event_time : parseInt(f, 10),
            location_name: a == null ? c.location_name : a,
            event_members: d !== void 0 ? b("bs_caml_option").valFromOption(d) : c.event_members,
            oid: c.oid,
            event_type: c.event_type
        }
    }

    function z(b, a) {
        var c = {};
        Object.keys(b).forEach(function(a) {
            c[a] = b[a]
        });
        c[a.guest_id] = a.guest_status;
        return c
    }
    var A = function(a, b) {
            delete a[b];
            return 0
        },
        B = function(a, b) {
            delete a[b];
            return 0
        };

    function Ja(a) {
        var c = {
                contents: -1
            },
            d = {
                contents: null
            },
            e = Math.floor(Date.now() / 1e3);
        b("bs_js_dict").entries(a).forEach(function(a) {
            a = a[1];
            var b = a.event_time;
            if (b > e && (c.contents < 0 || c.contents > b)) {
                c.contents = b;
                d.contents = a;
                return
            }
        });
        return d.contents
    }

    function Ka(d, a, c, e) {
        c = c.log_message_data;
        if (c == null) return;
        var f = c.untypedData;
        if (c.message_type === b("MessagingGenericAdminTextType").CHANGE_THREAD_NICKNAME) {
            var g = a.custom_nickname;
            if (!(g == null)) {
                g = b("bs_js_dict").fromArray(b("bs_js_dict").entries(g));
                var h = f.nickname;
                h.trim().length > 0 ? g[f.participant_id] = h : B(g, f.participant_id);
                Object.assign(a, {
                    custom_nickname: g
                })
            }
            u(d, e)
        } else if (c.message_type === b("MessagingGenericAdminTextType").CHANGE_THREAD_THEME) {
            if (!b("ChatConfig").get("chat_tab_has_gradients")) {
                h = f.theme_color;
                if (h == null) Object.assign(a, {
                    solid_color: null,
                    header_color: null,
                    footer_color: null,
                    gradient_colors: []
                });
                else if (h.length > 0) {
                    g = "#" + h.slice(2);
                    Object.assign(a, {
                        solid_color: g,
                        header_color: g,
                        footer_color: g,
                        gradient_colors: [g]
                    })
                } else Object.assign(a, {
                    solid_color: null,
                    header_color: null,
                    footer_color: null,
                    gradient_colors: []
                });
                u(d, e)
            }
        } else if (f !== void 0)
            if (c.message_type === b("MessagingGenericAdminTextType").LIGHTWEIGHT_EVENT_CREATE) {
                var i = {},
                    j = f.event_creator_id;
                a.participants.forEach(function(a) {
                    a = b("MercuryIDs").getUserIDFromParticipantID(a);
                    if (!(a == null)) {
                        i[a] = b("bs_caml_obj").caml_equal(a, j) ? "GOING" : "INVITED";
                        return
                    }
                });
                h = b("bs_js_dict").fromArray(b("bs_js_dict").entries(a.lightweight_events));
                g = f.event_time;
                g = {
                    track_rsvp: f.event_track_rsvp,
                    title: f.event_title,
                    event_time: g == null ? 0 : parseInt(g, 10),
                    location_name: f.event_location_name,
                    event_members: i,
                    oid: f.event_id,
                    event_type: f.event_type
                };
                Object.assign(a, {
                    lightweight_event: g
                });
                h[f.event_id] = Object.assign({}, g);
                Object.assign(a, {
                    lightweight_events: h
                });
                u(d, e)
            } else if (c.message_type === b("MessagingGenericAdminTextType").LIGHTWEIGHT_EVENT_UPDATE || c.message_type === b("MessagingGenericAdminTextType").LIGHTWEIGHT_EVENT_UPDATE_TIME || c.message_type === b("MessagingGenericAdminTextType").LIGHTWEIGHT_EVENT_UPDATE_TITLE || c.message_type === b("MessagingGenericAdminTextType").LIGHTWEIGHT_EVENT_UPDATE_LOCATION) {
            g = a.lightweight_event;
            if (!(g == null)) {
                h = b("bs_js_dict").fromArray(b("bs_js_dict").entries(a.lightweight_events));
                g.oid === f.event_id && Object.assign(a, {
                    lightweight_event: y(f, g, b("bs_caml_option").some(g.event_members))
                });
                g = b("bs_js_dict").get(h, f.event_id);
                g !== void 0 && (h[f.event_id] = y(f, b("bs_caml_option").valFromOption(g), void 0), Object.assign(a, {
                    lightweight_events: h
                }))
            }
            u(d, e)
        } else if (c.message_type === b("MessagingGenericAdminTextType").LIGHTWEIGHT_EVENT_RSVP) {
            g = b("bs_js_dict").fromArray(b("bs_js_dict").entries(a.lightweight_events));
            h = a.lightweight_event;
            if (!(h == null) && h.oid === f.event_id) {
                var k = z(h.event_members, f);
                Object.assign(a, {
                    lightweight_event: y(f, h, b("bs_caml_option").some(k))
                })
            }
            h = b("bs_js_dict").get(g, f.event_id);
            if (h !== void 0) {
                k = b("bs_caml_option").valFromOption(h);
                h = z(k.event_members, f);
                g[f.event_id] = y(f, k, b("bs_caml_option").some(h));
                Object.assign(a, {
                    lightweight_events: g
                })
            }
            u(d, e)
        } else if (c.message_type === b("MessagingGenericAdminTextType").LIGHTWEIGHT_EVENT_DELETE || c.message_type === b("MessagingGenericAdminTextType").LIGHTWEIGHT_EVENT_NOTIFY) {
            k = b("bs_js_dict").fromArray(b("bs_js_dict").entries(a.lightweight_events));
            A(k, f.event_id);
            Object.assign(a, {
                lightweight_event: Ja(k),
                lightweight_events: k
            });
            u(d, e)
        }
    }

    function La(c, d, e, f) {
        if (b("CurrentUser").isWorkUser() && b("gkx")("1179386")) {
            var a = b("bs_belt_Map").get(c.threads, d);
            if (a !== void 0) {
                a = b("bs_caml_option").valFromOption(a);
                var g = a.pinned_messages;
                g = g == null ? void 0 : g.map(function(a) {
                    if (e.findIndex(function(b) {
                            return b === a.message_id
                        }) !== -1) {
                        b("gkx")("1921671") && f && c.messages["delete"](a.message_id);
                        return {
                            message_id: a.message_id,
                            pinning_time: a.pinning_time,
                            message: null
                        }
                    } else return a
                });
                if (g !== void 0) {
                    a = b("ImmutableObject").set(a, {
                        pinned_messages: g
                    });
                    g = b("bs_belt_Map").set(c.threads, d, a);
                    u(c.fbid, d);
                    a = g
                } else a = c.threads
            } else a = c.threads;
            return {
                fbid: c.fbid,
                deliveryReceipts: c.deliveryReceipts,
                readReceiptsPerThread: c.readReceiptsPerThread,
                ignoredIds: c.ignoredIds,
                blockedIds: c.blockedIds,
                pendingFolderUnseenCount: c.pendingFolderUnseenCount,
                typing: c.typing,
                threads: a,
                pendingReadStatusThreads: c.pendingReadStatusThreads,
                messages: c.messages,
                localIDsMap: c.localIDsMap,
                messagesWithUploadsInFlight: c.messagesWithUploadsInFlight,
                threadlistOrderMap: c.threadlistOrderMap,
                pinnedThreads: c.pinnedThreads,
                montage: c.montage,
                orderedMessageLists: c.orderedMessageLists,
                unreadCounts: c.unreadCounts,
                initialUnreadCounts: c.initialUnreadCounts,
                unseenTimestamp: c.unseenTimestamp
            }
        } else return c
    }

    function C(a, c, d, e) {
        a = b("MercuryThreadInformer").getForFBID(a);
        a.updatedMessage(c, d, b("bs_js_null_undefined").fromOption(e))
    }

    function D(c, a) {
        c = b("MercuryThreadInformer").getForFBID(c);
        c.receivedMessage(a)
    }

    function Ma(a, c, d) {
        a = b("MercuryThreadInformer").getForFBID(a);
        a.reorderedMessages(c, d)
    }

    function Na(a, c, d, e, f) {
        a = b("MercuryThreadInformer").getForFBID(a);
        f = b("bs_belt_Option").getWithDefault(b("bs_belt_Option").map(f == null ? void 0 : b("bs_caml_option").some(f), function(a) {
            return b("bs_belt_Array").keepMap(a, function(a) {
                return b("bs_caml_option").nullable_to_opt(a.message_file_fbid)
            })
        }), []);
        b("MWChatDeleteMessageEventEmitter").emit(d);
        a.deletedMessage(c, d, b("bs_js_null_undefined").fromOption(e), f)
    }

    function Oa(a, c, d, e) {
        a = b("MercuryThreadInformer").getForFBID(a);
        a.deletedMessage(c, d, b("bs_js_null_undefined").fromOption(e), null)
    }
    var Pa = function(a, b) {
        delete a[b];
        return 0
    };

    function E(c, a) {
        var d = c.localIDsMap.get(a);
        return b("bs_caml_option").nullable_to_opt(c.messages.get(b("bs_belt_Option").getWithDefault(d == null ? void 0 : b("bs_caml_option").some(d), a)))
    }

    function F(a, c, d) {
        a = a !== void 0 ? a : !1;
        d = b("bs_belt_Array").keepMap(d, function(a) {
            return E(c, a)
        });
        if (a) return d.slice().reverse();
        else return d
    }

    function Qa(a, c) {
        return b("bs_belt_Array").keepMap(c, function(b) {
            return E(a, b)
        }).sort(function(a, c) {
            return b("MessengerMessage.bs").compare(c, a)
        }).map(function(a) {
            return a.message_id
        })
    }

    function G(a, b) {
        return {
            fbid: a.fbid,
            deliveryReceipts: a.deliveryReceipts,
            readReceiptsPerThread: a.readReceiptsPerThread,
            ignoredIds: a.ignoredIds,
            blockedIds: a.blockedIds,
            pendingFolderUnseenCount: a.pendingFolderUnseenCount,
            typing: a.typing,
            threads: a.threads,
            pendingReadStatusThreads: a.pendingReadStatusThreads,
            messages: a.messages.set(b[0], b[1]),
            localIDsMap: a.localIDsMap,
            messagesWithUploadsInFlight: a.messagesWithUploadsInFlight,
            threadlistOrderMap: a.threadlistOrderMap,
            pinnedThreads: a.pinnedThreads,
            montage: a.montage,
            orderedMessageLists: a.orderedMessageLists,
            unreadCounts: a.unreadCounts,
            initialUnreadCounts: a.initialUnreadCounts,
            unseenTimestamp: a.unseenTimestamp
        }
    }

    function H(b, a) {
        b.localIDsMap.set(a.message_id, a.message_id);
        return {
            fbid: b.fbid,
            deliveryReceipts: b.deliveryReceipts,
            readReceiptsPerThread: b.readReceiptsPerThread,
            ignoredIds: b.ignoredIds,
            blockedIds: b.blockedIds,
            pendingFolderUnseenCount: b.pendingFolderUnseenCount,
            typing: b.typing,
            threads: b.threads,
            pendingReadStatusThreads: b.pendingReadStatusThreads,
            messages: b.messages,
            localIDsMap: b.localIDsMap,
            messagesWithUploadsInFlight: b.messagesWithUploadsInFlight,
            threadlistOrderMap: b.threadlistOrderMap,
            pinnedThreads: b.pinnedThreads,
            montage: b.montage,
            orderedMessageLists: b.orderedMessageLists,
            unreadCounts: b.unreadCounts,
            initialUnreadCounts: b.initialUnreadCounts,
            unseenTimestamp: b.unseenTimestamp
        }
    }
    var I = function(a, b) {
        delete a[b];
        return 0
    };

    function J(c, d) {
        var a = c.orderedMessageLists;
        Object.keys(d).forEach(function(e) {
            var f = b("bs_js_dict").get(d, e);
            if (f === void 0) return;
            var g = f[0],
                h = g.limit,
                i = g.offset;
            g = a.get(g.threadID);
            if (g == null) return;
            g = g.messageIDs;
            if (g.length >= (i + h | 0)) {
                I(d, e);
                return b("bs_curry")._1(f[1], F(!0, c, g.slice(i, i + h | 0)))
            }
        })
    }

    function Ra(d, c, e) {
        var a = e[1],
            f = e[0];
        b("MessengerMessage.bs").finalizeRanges(a);
        var g = a.offline_threading_id;
        if (!(g == null) && g !== a.message_id) {
            d.localIDsMap.set(g, a.message_id);
            b("MercuryMessageIDs.bs").addServerID(g, a.message_id);
            g = a.threading_id;
            g == null || b("MercuryMessageIDs.bs").addServerID(g, a.message_id)
        }
        g = d.messages.has(f);
        var h = d.fbid,
            i = d.deliveryReceipts,
            j = d.readReceiptsPerThread,
            k = d.ignoredIds,
            l = d.blockedIds,
            m = d.pendingFolderUnseenCount,
            n = d.typing,
            o = d.threads,
            p = d.pendingReadStatusThreads,
            aa = d.messages.set(f, a),
            q = d.localIDsMap,
            r = d.messagesWithUploadsInFlight,
            s = d.threadlistOrderMap,
            ba = d.pinnedThreads,
            ca = d.montage,
            t = d.orderedMessageLists,
            da = d.unreadCounts,
            ea = d.initialUnreadCounts;
        d = d.unseenTimestamp;
        h = {
            fbid: h,
            deliveryReceipts: i,
            readReceiptsPerThread: j,
            ignoredIds: k,
            blockedIds: l,
            pendingFolderUnseenCount: m,
            typing: n,
            threads: o,
            pendingReadStatusThreads: p,
            messages: aa,
            localIDsMap: q,
            messagesWithUploadsInFlight: r,
            threadlistOrderMap: s,
            pinnedThreads: ba,
            montage: ca,
            orderedMessageLists: t,
            unreadCounts: da,
            initialUnreadCounts: ea,
            unseenTimestamp: d
        };
        if (!g && e[2] === 1) {
            i = b("bs_belt_Option").getWithDefault(b("bs_belt_Option").flatMap(b("bs_caml_option").nullable_to_opt(a.thread_id), function(a) {
                return b("bs_caml_option").nullable_to_opt(t.get(a))
            }), {
                messageLoadingState: b("MercuryIDs").isLocalThread(a.thread_id) ? 1 : 0,
                messageIDs: []
            });
            j = a.thread_id;
            if (!(j == null)) {
                k = Qa(h, [f].concat(i.messageIDs.filter(function(c) {
                    return b("bs_caml_obj").caml_notequal(c, a.offline_threading_id)
                })));
                t.set(j, {
                    messageLoadingState: i.messageLoadingState,
                    messageIDs: k
                })
            }
            J(h, c.messageCallbacks.contents)
        }
        return h
    }

    function K(b, c, a) {
        b.messagesWithUploadsInFlight.set(c, a);
        return {
            fbid: b.fbid,
            deliveryReceipts: b.deliveryReceipts,
            readReceiptsPerThread: b.readReceiptsPerThread,
            ignoredIds: b.ignoredIds,
            blockedIds: b.blockedIds,
            pendingFolderUnseenCount: b.pendingFolderUnseenCount,
            typing: b.typing,
            threads: b.threads,
            pendingReadStatusThreads: b.pendingReadStatusThreads,
            messages: b.messages,
            localIDsMap: b.localIDsMap,
            messagesWithUploadsInFlight: b.messagesWithUploadsInFlight,
            threadlistOrderMap: b.threadlistOrderMap,
            pinnedThreads: b.pinnedThreads,
            montage: b.montage,
            orderedMessageLists: b.orderedMessageLists,
            unreadCounts: b.unreadCounts,
            initialUnreadCounts: b.initialUnreadCounts,
            unseenTimestamp: b.unseenTimestamp
        }
    }

    function Sa(a, c) {
        var d = c[1];
        c = c[0];
        var e = a.messagesWithUploadsInFlight.get(c);
        b("bs_belt_Option").isSome(e == null ? void 0 : b("bs_caml_option").some(e)) || g(0, 1777);
        a.messagesWithUploadsInFlight["delete"](c);
        if (e == null) return b("bs_pervasives").failwith("Message must exist to update");
        else return Object.assign(e, {
            image_ids: d.image_ids,
            file_ids: d.file_ids,
            audio_ids: d.audio_ids,
            gif_ids: d.gif_ids,
            video_ids: d.video_ids,
            client_state: b("MercuryMessageClientState").SEND_TO_SERVER
        })
    }

    function Ta(a, c) {
        var d = c[1],
            e = c[0],
            f = a.orderedMessageLists.get(e);
        if (f == null) return a;
        var g = b("bs_belt_Array").keepMap(d, function(b) {
                return E(a, b)
            }).map(function(a) {
                return a.message_id
            }),
            h = Qa(a, f.messageIDs.filter(function(a) {
                return g.indexOf(a) === -1
            }));
        a.orderedMessageLists.set(e, {
            messageLoadingState: f.messageLoadingState,
            messageIDs: h
        });
        Ma(a.fbid, e, b("bs_js_null_undefined").fromOption(c[2]));
        f = La(a, e, d, !0);
        return {
            fbid: f.fbid,
            deliveryReceipts: f.deliveryReceipts,
            readReceiptsPerThread: f.readReceiptsPerThread,
            ignoredIds: f.ignoredIds,
            blockedIds: f.blockedIds,
            pendingFolderUnseenCount: f.pendingFolderUnseenCount,
            typing: f.typing,
            threads: f.threads,
            pendingReadStatusThreads: f.pendingReadStatusThreads,
            messages: f.messages,
            localIDsMap: f.localIDsMap,
            messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
            threadlistOrderMap: f.threadlistOrderMap,
            pinnedThreads: f.pinnedThreads,
            montage: f.montage,
            orderedMessageLists: f.orderedMessageLists,
            unreadCounts: f.unreadCounts,
            initialUnreadCounts: f.initialUnreadCounts,
            unseenTimestamp: f.unseenTimestamp
        }
    }

    function Ua(c, d) {
        var e = {
            snippet: "...",
            snippet_attachments: null,
            snippet_sender: null
        };
        d = b("bs_belt_Option").flatMap(b("bs_caml_option").nullable_to_opt(c.orderedMessageLists.get(d)), function(a) {
            return b("bs_belt_Array").get(F(void 0, c, a.messageIDs), 0)
        });
        if (d !== void 0) {
            var a = b("bs_caml_option").valFromOption(d);
            a = a.is_filtered_content ? b("MercuryDisplayTimeFilterMessageRenderer").renderFilteredContent(a) : a.body
        } else a = null;
        if (d === void 0) return e;
        d = b("bs_caml_option").valFromOption(d);
        var f = d.removed_timestamp;
        if (!(f == null)) return {
            snippet: b("RemovedMessageTombstoneContent").getTombstoneContentForSnippet(d.author),
            snippet_attachments: null,
            snippet_sender: null
        };
        if (a == null) return e;
        f = d.log_message_type;
        return {
            snippet: a,
            snippet_attachments: d.attachments,
            snippet_sender: f == null ? d.author : null
        }
    }

    function Va(c, a) {
        var d = a.attachments;
        if (d == null) return;
        var e = b("bs_belt_Array").keepMap(d, function(a) {
            if (!(b("MercuryAttachment").isPhotoAttachment(a) || b("MercuryAttachment").isVideoAttachment(a))) return;
            a = a.metadata;
            if (!(a == null)) return b("bs_caml_option").nullable_to_opt(a.fbid)
        });
        b("MessengerSharedMediaActionsLoader").deletePhotos(b("MercuryIDs").getThreadFBIDFromThreadID(a.thread_id), e);
        if (c !== void 0) return b("MessengerSharedPhotosVideosBaseData.bs").localRemove(b("bs_caml_option").valFromOption(c), b("bs_belt_Array").keepMap(d, function(a) {
            if (!(b("MercuryAttachment").isPhotoAttachment(a) || b("MercuryAttachment").isVideoAttachment(a))) return;
            a = a.metadata;
            if (!(a == null)) return b("bs_caml_option").nullable_to_opt(a.fbid)
        }))
    }

    function Wa(a, c, d) {
        d = a.orderedMessageLists.get(d);
        if (d == null) return a;
        d = d.messageIDs;
        var e = {
            contents: !0
        };
        return b("bs_belt_Array").reduce(d, a, function(d, a) {
            if (!e.contents) return d;
            var f = d.localIDsMap.get(a);
            f = b("bs_belt_Option").getWithDefault(f == null ? void 0 : b("bs_caml_option").some(f), a);
            if (f === c) {
                e.contents = !1;
                return d
            }
            a = E(d, f);
            if (a === void 0) return d;
            a = b("bs_caml_option").valFromOption(a);
            var g = a.replied_to_message,
                h;
            if (g == null) h = void 0;
            else {
                g = g.message;
                if (g == null) h = void 0;
                else {
                    var i = d.localIDsMap.get(g.message_id);
                    h = b("bs_belt_Option").getWithDefault(i == null ? void 0 : b("bs_caml_option").some(i), g.message_id)
                }
            }
            if (h === void 0) return d;
            if (h !== c) return d;
            i = {
                status: b("RepliedToMessageStatusForGraphQL").DELETED,
                message: null
            };
            g = Object.assign(Object.assign({}, a), {
                replied_to_message: i
            });
            return G(d, [f, g])
        })
    }

    function Xa(a, c) {
        if (a == null) return 0;
        if (a.length === 0) return 0;
        a = b("bs_array").map(function(a) {
            var d = a.type;
            if (d === b("MessageProfileRangeType").THREAD_ACTIVE || d === b("MessageProfileRangeType").THREAD) return b("gkx")("678578");
            d = a.id;
            if (d == null) return !1;
            else return b("bs_caml_obj").caml_equal(b("FBID.bs").ofStringExn(d), c)
        }, a);
        return b("bs_array").fold_left(function(a, b) {
            if (b) return a + 1 | 0;
            else return a
        }, 0, a)
    }

    function Ya(a, c, d) {
        if (b("cr:11271") == null) return;
        var e = b("MercuryIDs").getThreadFBIDFromThreadID(a);
        return b("bs_curry")._1(b("cr:11271").log, function() {
            return {
                event_name: b("MessengerWebEvent").SENT_MSG,
                mid: c,
                offline_threading_id: d,
                other_user_fbid: b("MercuryIDs").isCanonical(a) ? e : null,
                thread_fbid: b("MercuryIDs").isGroupChat(a) ? e : null
            }
        })
    }

    function Za(d, c, e, f) {
        var g = e.client_message_id,
            h;
        if (g == null) h = d;
        else {
            var i = E(d, g);
            if (i !== void 0) {
                i = b("bs_caml_option").valFromOption(i);
                var j = e.message_id,
                    k = e.status;
                if (b("bs_caml_obj").caml_equal(i.status, b("MercuryActionStatus").SUCCESS)) h = d;
                else if (d.messages.has(j)) {
                    var a = Object.assign(Object.assign({}, i), e);
                    C(d.fbid, a.thread_id, a.message_id, f);
                    h = G(d, [j, a])
                } else {
                    a = b("bs_caml_obj").caml_equal(e.status, b("MercuryActionStatus").SUCCESS) ? e.error_data : null;
                    b("MercuryMessageIDs.bs").addServerID(g, j);
                    d.localIDsMap.set(g, j);
                    i = Object.assign(Object.assign({}, i), {
                        status: k,
                        error_data: a,
                        timestamp: e.timestamp,
                        log_message_data: e.log_message_data,
                        ranges: e.ranges,
                        attachments: e.attachments,
                        has_attachment: e.has_attachment,
                        is_one_way_sent: e.is_one_way_sent,
                        is_forwarded: e.is_forwarded
                    });
                    b("MessengerMessage.bs").finalizeRanges(i);
                    k = G(d, [j, i]);
                    k.messages.set(g, {});
                    k.messages["delete"](g);
                    a = i.thread_id;
                    var l = k.orderedMessageLists.get(a);
                    if (!(l == null)) {
                        var m = Qa(k, l.messageIDs);
                        k.orderedMessageLists.set(a, {
                            messageLoadingState: l.messageLoadingState,
                            messageIDs: m
                        })
                    }
                    C(k.fbid, i.thread_id, i.message_id, f);
                    a = b("MessengerMessage.bs").isTitanMessage(i);
                    l = c.localTitanMessageCount.get(i.thread_id);
                    a && !(l == null) && c.localTitanMessageCount.set(i.thread_id, l - 1 | 0);
                    h = {
                        fbid: k.fbid,
                        deliveryReceipts: k.deliveryReceipts,
                        readReceiptsPerThread: k.readReceiptsPerThread,
                        ignoredIds: k.ignoredIds,
                        blockedIds: k.blockedIds,
                        pendingFolderUnseenCount: k.pendingFolderUnseenCount,
                        typing: k.typing,
                        threads: k.threads,
                        pendingReadStatusThreads: k.pendingReadStatusThreads,
                        messages: k.messages,
                        localIDsMap: k.localIDsMap.set(g, j),
                        messagesWithUploadsInFlight: k.messagesWithUploadsInFlight,
                        threadlistOrderMap: k.threadlistOrderMap,
                        pinnedThreads: k.pinnedThreads,
                        montage: k.montage,
                        orderedMessageLists: k.orderedMessageLists,
                        unreadCounts: k.unreadCounts,
                        initialUnreadCounts: k.initialUnreadCounts,
                        unseenTimestamp: k.unseenTimestamp
                    }
                }
            } else h = d
        }
        m = {};
        f = e.log_message_type;
        if (f == null) Object.assign(m, {
            snippet_attachments: e.attachments
        });
        else {
            if (b("bs_caml_obj").caml_equal(f, b("MercuryLogMessageType").THREAD_IMAGE)) {
                a = e.log_message_data;
                if (a == null) c = null;
                else {
                    i = a.image;
                    c = i == null ? null : i.preview_url
                }
                Object.assign(m, {
                    image_src: c
                });
                u(h.fbid, e.thread_id)
            }
            b("bs_caml_obj").caml_notequal(f, b("MercuryLogMessageType").SUBSCRIBE) && b("bs_caml_obj").caml_notequal(f, b("MercuryLogMessageType").UNSUBSCRIBE) && Object.assign(m, {
                snippet_attachments: e.attachments
            })
        }
        Ya(e.thread_id, e.message_id, e.offline_threading_id);
        return w(void 0, h, e.thread_id, m)
    }

    function $a(c, a, d, e) {
        if (b("bs_caml_obj").caml_equal(d.action_type, b("MercuryActionType").SEND_MESSAGE)) return Za(c, a, d, e);
        var f = d.offline_threading_id;
        f = b("bs_belt_Option").flatMap(f == null ? void 0 : b("bs_caml_option").some(f), function(a) {
            return b("bs_caml_option").nullable_to_opt(c.localIDsMap.get(a))
        });
        var g = E(c, d.message_id);
        if (f !== void 0) {
            if (g === void 0) return c;
            f = b("bs_caml_option").valFromOption(g);
            if (b("bs_caml_option").nullable_to_opt(f.sticker_id) === void 0) return c;
            var h = Object.assign(f, {
                attachments: d.attachments
            });
            return G(c, [f.message_id, h])
        }
        if (g !== void 0) return c;
        f = b("bs_caml_obj").caml_equal(e, b("bs_caml_option").some(b("MercuryPayloadSource").CLIENT_SEND_MESSAGE)) ? H(c, d) : c;
        h = b("bs_caml_obj").caml_equal(d.client_state, b("MercuryMessageClientState").DO_NOT_SEND_TO_SERVER);
        g = d.upload_id;
        e = h && !(g == null) ? K(f, g, d) : f;
        h = b("MessengerMessage.bs").isErrorLogMessage(d);
        g = d.thread_id;
        h && !(g == null) && (a.failedHistoryFetchThreads.contents[g] = !0);
        f = d.manual_retry_cnt;
        h = d.thread_id;
        !(f == null) && !(h == null) && f > 0 && Ma(e.fbid, h, b("MercuryPayloadSource").CLIENT_SEND_MESSAGE);
        g = Ra(e, a, [d.message_id, d, 1]);
        D(g.fbid, d);
        return g
    }

    function ab(a, c, d, e) {
        if (c === void 0) return;
        c = b("bs_caml_obj").caml_equal(b("bs_caml_option").valFromOption(c), b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE);
        var f = d.thread_id;
        if (!c) {
            !(f == null);
            return
        }
        if (f == null) return;
        c = b("MercuryThreadInformer").getForFBID(a);
        return b("bs_curry")._3(e, c, f, d)
    }

    function bb(a, b) {
        var c = a.participants.indexOf(b);
        if (c > 0) {
            Object.assign(a, {
                participants: [b].concat(a.participants.slice(0, c), a.participants.slice(c + 1 | 0))
            });
            return
        }
    }

    function cb(c, d, e, f) {
        var g = d.thread_id;
        if (g == null) return c;
        var a = b("bs_belt_Map").get(c.threads, g);
        if (a === void 0) return c;
        a = b("bs_caml_option").valFromOption(a);
        var h = {};
        if (!d.skip_bump_thread && b("bs_caml_obj").caml_notequal(e, b("bs_caml_option").some(b("MercuryPayloadSource").SERVER_FETCH_THREAD_INFO))) {
            Ia(h, d, b("bs_caml_option").nullable_to_opt(d.log_message_body));
            x(h, d, a.biz_inbox_tags);
            if (d.timestamp > a.timestamp) {
                Object.assign(h, {
                    timestamp: d.timestamp
                });
                if (d.is_unread) {
                    Object.assign(h, {
                        unread_count: a.unread_count + 1 | 0
                    });
                    e = Xa(d.profile_ranges, c.fbid);
                    e > 0 && Object.assign(h, {
                        unread_mentions_count: a.unread_mentions_count + e | 0
                    })
                }
            }
            Object.assign(h, {
                message_count: a.message_count + 1 | 0,
                is_archived: !1
            })
        }
        f !== !0 && d.timestamp > h.server_timestamp && Object.assign(h, {
            server_timestamp: d.timestamp
        });
        if (b("bs_caml_obj").caml_notequal(h, {})) return w(void 0, c, g, h);
        else return c
    }

    function db(b, a, c) {
        var d = new Set(c);
        Object.assign(a, {
            participants: a.participants.filter(function(a) {
                return !d.has(a)
            })
        });
        if (d.has(b)) {
            Object.assign(a, {
                can_reply: !1,
                is_subscribed: !1
            });
            return
        }
    }

    function L(c, a, d) {
        a = a.specific_to_list;
        if (!(a == null)) return a;
        a = b("MercuryIDs").tokenize(d);
        if (a.type !== "user" || a.value.length === 0) return [c];
        else return [b("MercuryIDs").getParticipantIDFromUserID(b("FBID.bs").ofStringExn(a.value)), c]
    }

    function M(c, a, d) {
        var e = b("MercuryIDs").tokenize(d),
            f = e.type === "user",
            g = a.specific_to_list;
        g = f ? !0 : g == null ? !1 : b("MessengerThreadUtils.bs").isCanonicalFromInitialParticipants(c, g);
        if (g || f) c = L(c, a, d);
        else {
            var h = a.specific_to_list;
            c = h == null ? [] : h
        }
        return new(b("ImmutableObject"))({
            admins: {},
            admin_model_status: null,
            approval_mode: 0,
            approval_queue_ids: [],
            associated_object: null,
            can_reply: !0,
            cannot_reply_reason: null,
            can_viewer_report: !1,
            comm_item_owners: null,
            comm_source_id: null,
            comm_status: null,
            comm_icon_type: [],
            composer_input_disabled: null,
            custom_like_icon: null,
            custom_nickname: null,
            customization_enabled: !1,
            description: null,
            ephemeral_ttl_mode: 0,
            footer_color: null,
            game_id: null,
            gradient_colors: [],
            accessibility_label: null,
            reverse_gradients_for_radial: null,
            group_approval_queue: null,
            group_thread_subtype: null,
            work_associated_group: null,
            pinned_messages: null,
            groups_sync_status: null,
            has_email_participant: !1,
            has_montage: !1,
            unread_mentions_count: 0,
            header_color: null,
            is_canonical_neo_user: !1,
            is_from_weak_entry_point: !1,
            is_pin_protected: !1,
            is_pinned: !1,
            is_thread_queue_enabled: !1,
            joinable_mode: {
                link: "",
                mode: 0
            },
            last_message_timestamp: 0,
            last_message_type: null,
            last_message_admin_text_type: null,
            last_message_unsendability_status: null,
            last_message_id: null,
            last_read_timestamp: 0,
            lightweight_event: null,
            lightweight_events: {},
            marketplace_thread_data: null,
            mentions_mute_mode: 0,
            mute_until: null,
            page_comm_item_id: null,
            is_priority: !1,
            biz_inbox_tags: [],
            page_thread_info: null,
            page_unsubscribe_status: !1,
            participant_add_mode: null,
            participants_event_status: null,
            reactions_mute_mode: 0,
            read_only: !1,
            recipients_loadable: !0,
            rtc_call_data: null,
            server_timestamp: 0,
            solid_color: null,
            subtitle: null,
            theme_id: null,
            reactions: void 0,
            thread_associated_job_applications: null,
            thread_associated_page_admin: null,
            thread_connectivity_data: null,
            thread_fbid: null,
            thread_type: null,
            thread_pin_timestamp: null,
            thread_id: d,
            participants: c,
            preloaded_participants: [],
            name: "",
            snippet: a.body,
            snippet_attachments: [],
            snippet_sender: a.author,
            unread_count: 0,
            message_count: 0,
            image_src: null,
            square_image_src: null,
            timestamp: a.timestamp,
            other_user_fbid: f ? b("FBID.bs").ofStringExn(e.value) : null,
            is_canonical_user: f,
            is_other_recipient_page: !1,
            is_canonical: g,
            is_subscribed: !0,
            folder: "inbox",
            is_archived: !1,
            is_page_follow_up: !1,
            is_page_unresponded_thread: !1,
            object_association_type: null,
            joinable_link: null,
            linked_mentorship_programs: null,
            thread_unsendability_status: null,
            is_business_page_active: !1,
            graphql_token: null,
            conversion_detection_data: null,
            suggested_reply_data: null
        })
    }

    function eb(c, d, a, e) {
        e = b("MessengerMessage.bs").hasServerTimestamp(a, e);
        var f = a.thread_id;
        if (f == null) return;
        b("MercuryAssert").isThreadID(f);
        d = b("bs_belt_Map").get(d, f);
        if (d !== void 0) return b("bs_caml_option").some(b("bs_caml_option").valFromOption(d));
        else if (b("bs_caml_obj").caml_equal(a.action_type, b("MercuryActionType").USER_GENERATED_MESSAGE) && !e) return b("bs_caml_option").some(M(b("MercuryIDs").getParticipantIDFromUserID(c), a, f));
        else return
    }

    function fb(c, d) {
        var a = d.other_user_fbid;
        if (a == null) {
            var e = d.thread_fbid;
            e = e == null ? void 0 : b("bs_caml_option").some(b("MercuryIDs").getThreadIDFromThreadFBID(e))
        } else e = b("bs_caml_option").some(b("MercuryIDs").getThreadIDFromUserID(a));
        a = d.thread_id;
        e = a == null ? e : a == null ? void 0 : b("bs_caml_option").some(a);
        a = d.thread_id;
        var f;
        if (a == null) f = "";
        else {
            a = b("bs_belt_Map").get(c.threads, a);
            f = a !== void 0 ? b("MessengerFolders.bs").getFromMeta(b("bs_caml_option").valFromOption(a)) : d.folder
        }
        Aa.includes(f) && (b("bs_caml_obj").caml_equal(d.action_type, b("MercuryActionType").USER_GENERATED_MESSAGE) || b("bs_caml_obj").caml_equal(d.action_type, b("MercuryActionType").LOG_MESSAGE)) && d.is_unread && za(c, f, e);
        return {
            fbid: c.fbid,
            deliveryReceipts: c.deliveryReceipts,
            readReceiptsPerThread: c.readReceiptsPerThread,
            ignoredIds: c.ignoredIds,
            blockedIds: c.blockedIds,
            pendingFolderUnseenCount: c.pendingFolderUnseenCount,
            typing: c.typing,
            threads: c.threads,
            pendingReadStatusThreads: c.pendingReadStatusThreads,
            messages: c.messages,
            localIDsMap: c.localIDsMap,
            messagesWithUploadsInFlight: c.messagesWithUploadsInFlight,
            threadlistOrderMap: c.threadlistOrderMap,
            pinnedThreads: c.pinnedThreads,
            montage: c.montage,
            orderedMessageLists: c.orderedMessageLists,
            unreadCounts: c.unreadCounts,
            initialUnreadCounts: c.initialUnreadCounts,
            unseenTimestamp: c.unseenTimestamp
        }
    }
    var gb = function(a, b) {
        delete a[b];
        return 0
    };

    function hb(a, c) {
        Object.keys(c).forEach(function(d) {
            var e = b("bs_js_dict").get(c, d);
            if (e === void 0) return;
            var f = e[0],
                g = l(f.reduce(function(c, d) {
                    var e = b("bs_belt_Map").get(a, d);
                    if (e !== void 0) return b("bs_belt_Map").set(c, d, b("bs_caml_option").valFromOption(e));
                    else return c
                }, b("bs_belt_Map").make(b("ThreadId.bs"))));
            if (Object.keys(g).length === f.length) {
                gb(c, d);
                return b("bs_curry")._1(e[1], g)
            }
        })
    }

    function ib(c, a, d, e, f) {
        var g = c.fbid;
        d !== 0 && sa(g, a.thread_id, f, d);
        if (a.timestamp === 0) {
            b("ChatReliabilityInstrumentation").logERROR("thread timestamp is 0");
            e.add(a.thread_id);
            return
        }
        d = a.unread_count === 0;
        if (d === f) return;
        u(g, a.thread_id);
        if (f) e = 0;
        else {
            d = b("bs_belt_Option").flatMap(b("bs_caml_option").nullable_to_opt(c.orderedMessageLists.get(a.thread_id)), function(a) {
                return b("bs_belt_Array").get(F(void 0, c, a.messageIDs), 0)
            });
            g = d !== void 0 ? b("bs_caml_option").valFromOption(d).profile_ranges : null;
            e = Xa(g, c.fbid)
        }
        return {
            unread_count: f ? 0 : 1,
            unread_mentions_count: e
        }
    }

    function jb(a, c, d, e, f) {
        f = b("gkx")("1275193") || b("gkx")("1660458") ? ya(a, f, c, d) : xa(a, f, c, d);
        a = a.threadlistOrderMap[c];
        c = b("bs_js_dict").get(a, d);
        c = c !== void 0 ? b("bs_caml_option").valFromOption(c).reachedEnd : !1;
        a[d] = {
            reachedEnd: e.contents ? e.contents : c,
            threadlist: f[0],
            existingIDs: f[1]
        }
    }

    function kb(a, c, d, e) {
        var f = b("bs_belt_Array").make(e.length, []),
            g = {
                contents: !1
            };
        d.forEach(function(d) {
            d.thread_ids.forEach(function(c) {
                var h = b("bs_belt_Map").get(a.threads, c);
                if (h === void 0) return;
                h = wa(b("bs_caml_option").valFromOption(h));
                for (var g = 0, d = e.length; g < d; ++g) {
                    var i = h.find(function(a) {
                        return function(c) {
                            return c === b("bs_caml_array").get(e, a)
                        }
                    }(g));
                    (i === void 0 ? void 0 : b("bs_caml_option").some(i)) !== void 0 && b("bs_caml_array").get(f, g).push(c)
                }
            });
            d = d.limit;
            var h = e.find(function(a) {
                return a === b("MercuryFilters.bs").all
            });
            h = h === void 0 ? void 0 : b("bs_caml_option").some(h);
            for (var i = 0, c = f.length; i < c; ++i)(h === void 0 && b("bs_caml_array").get(f, i).length < d || b("bs_caml_array").get(e, i) === b("MercuryFilters.bs").all && b("bs_caml_array").get(f, i).length < d) && (g.contents = !0)
        });
        for (var d = 0, h = e.length; d < h; ++d) jb(a, c, b("bs_caml_array").get(e, d), g, b("bs_caml_array").get(f, d))
    }

    function N(c, a) {
        var d;
        if (a.is_archived) d = "action:archived";
        else {
            var e = a.thread_type;
            d = e == null || e !== b("MessagingThreadType").MARKETPLACE ? a.folder : "marketplace_folder"
        }
        e = b("bs_js_dict").get(c.threadlistOrderMap, d);
        if (e !== void 0) return d
    }

    function lb(a, c) {
        var d = {};
        oa.forEach(function(a) {
            var b = {};
            na.forEach(function(a) {
                b[a] = []
            });
            d[a] = b
        });
        c.forEach(function(c) {
            var e = b("bs_belt_Map").get(a.threads, c.thread_id);
            if (e === void 0) return;
            var f = b("bs_caml_option").valFromOption(e),
                g = N(a, f);
            if (g !== void 0) {
                wa(f).forEach(function(a) {
                    if (f.timestamp !== 0) {
                        d[g][a].push(c.thread_id);
                        return
                    }
                });
                return
            }
        });
        oa.forEach(function(c) {
            na.forEach(function(e) {
                var f = d[c][e];
                b("gkx")("1275193") || b("gkx")("1660458") ? ya(a, f, c, e) : xa(a, f, c, e)
            })
        });
        return {
            fbid: a.fbid,
            deliveryReceipts: a.deliveryReceipts,
            readReceiptsPerThread: a.readReceiptsPerThread,
            ignoredIds: a.ignoredIds,
            blockedIds: a.blockedIds,
            pendingFolderUnseenCount: a.pendingFolderUnseenCount,
            typing: a.typing,
            threads: a.threads,
            pendingReadStatusThreads: a.pendingReadStatusThreads,
            messages: a.messages,
            localIDsMap: a.localIDsMap,
            messagesWithUploadsInFlight: a.messagesWithUploadsInFlight,
            threadlistOrderMap: a.threadlistOrderMap,
            pinnedThreads: a.pinnedThreads,
            montage: a.montage,
            orderedMessageLists: a.orderedMessageLists,
            unreadCounts: a.unreadCounts,
            initialUnreadCounts: a.initialUnreadCounts,
            unseenTimestamp: a.unseenTimestamp
        }
    }

    function mb(a) {
        b("bs_belt_Map").map(a.threads, function(c) {
            c = b("bs_belt_Map").get(a.threads, c.thread_id);
            if (c === void 0) return;
            c = b("bs_caml_option").valFromOption(c);
            if (b("bs_caml_option").nullable_to_opt(c.thread_type) !== b("MessagingThreadType").MARKETPLACE) return;
            c = b("ImmutableObject").set(c, {
                folder: "marketplace_folder"
            });
            lb(a, [c])
        })
    }

    function nb(c, a, d) {
        var e = function(a) {
                return a.timestamp > (d && c.unseenTimestamp <= a.last_read_timestamp ? a.last_read_timestamp : c.unseenTimestamp)
            },
            f = function(a) {
                var d;
                return (d = b("bs_belt_Option")).mapWithDefault(d.flatMap(d.map(d.map(b("bs_caml_option").nullable_to_opt(c.orderedMessageLists.get(a.thread_id)), function(a) {
                    return b("bs_caml_array").get(a.messageIDs, 0)
                }), function(a) {
                    return b("bs_belt_Option").getWithDefault(b("bs_caml_option").nullable_to_opt(c.localIDsMap.get(a)), a)
                }), function(a) {
                    return b("bs_caml_option").nullable_to_opt(c.messages.get(a))
                }), !1, function(a) {
                    return a.author === b("MercuryIDs").getParticipantIDFromUserID(c.fbid)
                })
            },
            g = function(a, c) {
                if (e(a) && !b("MercuryThreadInfo").isMuted(a) && !f(a)) return c + 1 | 0;
                else return c
            };
        return b("bs_belt_Option").getWithDefault(b("bs_belt_Option").map(b("bs_belt_Option").flatMap(b("bs_js_dict").get(c.threadlistOrderMap, "inbox"), function(a) {
            return b("bs_js_dict").get(a, b("MercuryFilters.bs").all)
        }), function(d) {
            d = d.threadlist;
            if (d.length !== 0) return d.reduce(function(a, d) {
                d = b("bs_belt_Map").get(c.threads, d);
                if (d !== void 0) return g(b("bs_caml_option").valFromOption(d), a);
                else return a
            }, 0);
            else if (b("bs_belt_Map").isEmpty(c.threads)) return a.fallbackUnseenCount.contents;
            else return b("bs_belt_Map").reduce(c.threads, 0, function(b, d, a) {
                d = N(c, a);
                if (d === "inbox") return g(a, b);
                else return b
            })
        }), a.fallbackUnseenCount.contents)
    }

    function O(c, a) {
        return b("bs_belt_Option").getWithDefault(b("bs_belt_Option").map(b("bs_belt_Option").flatMap(b("bs_js_dict").get(c.threadlistOrderMap, "inbox"), function(a) {
            return b("bs_js_dict").get(a, b("MercuryFilters.bs").all)
        }), function(d) {
            if (d.threadlist.length === 0)
                if (b("bs_belt_Map").isEmpty(c.threads)) return a.fallbackUnseenCount.contents;
                else return b("bs_belt_Map").reduce(c.threads, 0, function(d, e, a) {
                    var f = N(c, a);
                    if (f === void 0) return d;
                    if (f !== "inbox") return d;
                    if (!(a.timestamp > c.unseenTimestamp && !b("MercuryThreadInfo").isMuted(a))) return d;
                    f = b("bs_js_dict").get(c.unreadCounts, "inbox");
                    if (f !== void 0 && b("bs_caml_option").valFromOption(f).has(e)) return d + 1 | 0;
                    else return d
                });
            else return d.threadlist.reduce(function(d, e) {
                var a = b("bs_belt_Map").get(c.threads, e);
                if (a === void 0) return d;
                a = b("bs_caml_option").valFromOption(a);
                if (!(a.timestamp > c.unseenTimestamp && !b("MercuryThreadInfo").isMuted(a))) return d;
                a = b("bs_js_dict").get(c.unreadCounts, "inbox");
                if (a !== void 0 && b("bs_caml_option").valFromOption(a).has(e)) return d + 1 | 0;
                else return d
            }, 0)
        }), a.fallbackUnseenCount.contents)
    }

    function ob(c, a, d) {
        if (d === "pending") return {
            fbid: c.fbid,
            deliveryReceipts: c.deliveryReceipts,
            readReceiptsPerThread: c.readReceiptsPerThread,
            ignoredIds: c.ignoredIds,
            blockedIds: c.blockedIds,
            pendingFolderUnseenCount: 0,
            typing: c.typing,
            threads: c.threads,
            pendingReadStatusThreads: c.pendingReadStatusThreads,
            messages: c.messages,
            localIDsMap: c.localIDsMap,
            messagesWithUploadsInFlight: c.messagesWithUploadsInFlight,
            threadlistOrderMap: c.threadlistOrderMap,
            pinnedThreads: c.pinnedThreads,
            montage: c.montage,
            orderedMessageLists: c.orderedMessageLists,
            unreadCounts: c.unreadCounts,
            initialUnreadCounts: c.initialUnreadCounts,
            unseenTimestamp: c.unseenTimestamp
        };
        if (b("gkx")("969964")) {
            d = b("MercuryThreadInformer").getForFBID(c.fbid);
            d.updatedUnseenTimestamp()
        }
        return {
            fbid: c.fbid,
            deliveryReceipts: c.deliveryReceipts,
            readReceiptsPerThread: c.readReceiptsPerThread,
            ignoredIds: c.ignoredIds,
            blockedIds: c.blockedIds,
            pendingFolderUnseenCount: c.pendingFolderUnseenCount,
            typing: c.typing,
            threads: c.threads,
            pendingReadStatusThreads: c.pendingReadStatusThreads,
            messages: c.messages,
            localIDsMap: c.localIDsMap,
            messagesWithUploadsInFlight: c.messagesWithUploadsInFlight,
            threadlistOrderMap: c.threadlistOrderMap,
            pinnedThreads: c.pinnedThreads,
            montage: c.montage,
            orderedMessageLists: c.orderedMessageLists,
            unreadCounts: c.unreadCounts,
            initialUnreadCounts: c.initialUnreadCounts,
            unseenTimestamp: a
        }
    }

    function P(a, c, d) {
        var e = [];
        return b("bs_array").fold_left(function(f, g) {
            switch (g.TAG | 0) {
                case 0:
                    e.push(g._0.TAG | 0);
                    break;
                case 1:
                case 2:
                    break
            }
            switch (g.TAG | 0) {
                case 0:
                    var h = g._0;
                    if (typeof h === "number") {
                        a.threadCallbacks.contents = {};
                        a.threadSubToken.contents = a.threadSubToken.contents;
                        a.failedHistoryFetchThreads.contents = {};
                        a.localTitanMessageCount.clear();
                        b("bs_belt_Map").keysToArray(f.threads).forEach(function(a) {
                            return qa(f.fbid, a)
                        });
                        return {
                            fbid: f.fbid,
                            deliveryReceipts: f.deliveryReceipts,
                            readReceiptsPerThread: void 0,
                            ignoredIds: f.ignoredIds,
                            blockedIds: f.blockedIds,
                            pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                            typing: f.typing,
                            threads: b("bs_belt_Map").make(b("ThreadId.bs")),
                            pendingReadStatusThreads: new Set(),
                            messages: new Map(),
                            localIDsMap: new Map(),
                            messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                            threadlistOrderMap: pa(void 0),
                            pinnedThreads: f.pinnedThreads,
                            montage: f.montage,
                            orderedMessageLists: new Map(),
                            unreadCounts: f.unreadCounts,
                            initialUnreadCounts: f.initialUnreadCounts,
                            unseenTimestamp: f.unseenTimestamp
                        }
                    }
                    switch (h.TAG | 0) {
                        case 0:
                            var j = h._0,
                                n = {
                                    contents: !1
                                },
                                o = {
                                    contents: f.deliveryReceipts
                                };
                            Object.keys(j).forEach(function(a) {
                                var c = j[a],
                                    d = b("bs_belt_Option").getWithDefault(b("bs_belt_MapString").get(o.contents, a), 0);
                                if (c > d) {
                                    n.contents = !0;
                                    o.contents = b("bs_belt_MapString").set(o.contents, a, c);
                                    return
                                }
                            });
                            if (n.contents) return {
                                fbid: f.fbid,
                                deliveryReceipts: o.contents,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                            else return f;
                        case 1:
                            return ja(f, h._0, []);
                        case 2:
                            var p = h._0,
                                q = h._1;
                            q = q.reduce(b("bs_belt_Set").remove, p.reduce(b("bs_belt_Set").add, f.blockedIds));
                            if (q === f.blockedIds) return f;
                            else return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: q,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 3:
                            p = h._0;
                            q = p.reduce(function(a, c) {
                                var d = c.is_messenger_ignored;
                                if (d == null) return a;
                                else if (d) return b("bs_belt_Set").add(a, b("MercuryIDs").getParticipantIDFromUserID(c.fbid));
                                else return b("bs_belt_Set").remove(a, b("MercuryIDs").getParticipantIDFromUserID(c.fbid))
                            }, f.ignoredIds);
                            if (q === f.ignoredIds) return f;
                            else return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: q,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 4:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("SetInitialPendingFolderUnseenCount");
                            p = h._0;
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: p,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 5:
                            q = h._0;
                            p = ma(f.fbid, q);
                            if (p == null) return f;
                            var r = b("FBID.bs").ofString(q.from.toString());
                            if (r === void 0) return f;
                            b("MessengerPersonas.bs").addPersona(q.persona);
                            var s = q.persona;
                            r = s == null ? b("MercuryIDs").getParticipantIDFromUserID(b("bs_caml_option").valFromOption(r)) : b("MercuryIDs").getParticipantIDFromUserID(s.id);
                            if (q.st === b("TypingStates").TYPING) {
                                s = b("bs_belt_MapString").get(f.typing, p);
                                if (s !== void 0) return {
                                    fbid: f.fbid,
                                    deliveryReceipts: f.deliveryReceipts,
                                    readReceiptsPerThread: f.readReceiptsPerThread,
                                    ignoredIds: f.ignoredIds,
                                    blockedIds: f.blockedIds,
                                    pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                    typing: b("bs_belt_MapString").set(f.typing, p, b("bs_belt_Map").set(b("bs_caml_option").valFromOption(s), r, Date.now())),
                                    threads: f.threads,
                                    pendingReadStatusThreads: f.pendingReadStatusThreads,
                                    messages: f.messages,
                                    localIDsMap: f.localIDsMap,
                                    messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                    threadlistOrderMap: f.threadlistOrderMap,
                                    pinnedThreads: f.pinnedThreads,
                                    montage: f.montage,
                                    orderedMessageLists: f.orderedMessageLists,
                                    unreadCounts: f.unreadCounts,
                                    initialUnreadCounts: f.initialUnreadCounts,
                                    unseenTimestamp: f.unseenTimestamp
                                };
                                s = b("bs_belt_Map").set(b("bs_belt_Map").make(b("ParticipantId.bs")), r, Date.now());
                                return {
                                    fbid: f.fbid,
                                    deliveryReceipts: f.deliveryReceipts,
                                    readReceiptsPerThread: f.readReceiptsPerThread,
                                    ignoredIds: f.ignoredIds,
                                    blockedIds: f.blockedIds,
                                    pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                    typing: b("bs_belt_MapString").set(f.typing, p, s),
                                    threads: f.threads,
                                    pendingReadStatusThreads: f.pendingReadStatusThreads,
                                    messages: f.messages,
                                    localIDsMap: f.localIDsMap,
                                    messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                    threadlistOrderMap: f.threadlistOrderMap,
                                    pinnedThreads: f.pinnedThreads,
                                    montage: f.montage,
                                    orderedMessageLists: f.orderedMessageLists,
                                    unreadCounts: f.unreadCounts,
                                    initialUnreadCounts: f.initialUnreadCounts,
                                    unseenTimestamp: f.unseenTimestamp
                                }
                            }
                            if (q.st !== b("TypingStates").INACTIVE) return f;
                            s = la(f.typing, p, r);
                            if (s !== f.typing) return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: s,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                            else return f;
                        case 6:
                            var ba = h._0,
                                ca = {
                                    contents: !1
                                },
                                t = {
                                    contents: f.readReceiptsPerThread
                                };
                            Object.keys(ba).forEach(function(a) {
                                Object.keys(ba[a]).forEach(function(c) {
                                    var d = b("bs_belt_MapString").get(t.contents, a);
                                    d = d !== void 0 ? b("bs_caml_option").valFromOption(d) : b("immutable").OrderedMap();
                                    var e = d.get(c),
                                        f = ba[a][c];
                                    if (!(e == null) && f.watermark <= e.watermark) return;
                                    ca.contents = !0;
                                    t.contents = b("bs_belt_MapString").set(t.contents, a, d.set(c, f))
                                });
                                var c = b("bs_belt_MapString").get(t.contents, a);
                                if (c !== void 0) {
                                    ca.contents = !0;
                                    t.contents = b("bs_belt_MapString").set(t.contents, a, b("bs_caml_option").valFromOption(c).sort(function(a, c) {
                                        return b("bs_caml").caml_float_compare(a.watermark, c.watermark)
                                    }));
                                    return
                                }
                            });
                            if (ca.contents) return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: t.contents,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                            else return f;
                        case 7:
                            q = h._0;
                            if (q.length === 0) return f;
                            p = f.threads;
                            r = q.reduce(function(c, a) {
                                return b("bs_belt_Map").set(c, a.thread_id, new(b("ImmutableObject"))(a))
                            }, p);
                            hb(r, a.threadCallbacks.contents);
                            q.forEach(function(a) {
                                return u(f.fbid, a.thread_id)
                            });
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: r,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 8:
                            s = h._0;
                            if (s.length === 0) return f;
                            var da = f.pendingReadStatusThreads,
                                ea = b("MercuryServerRequests").getForFBID(f.fbid);
                            s.forEach(function(a) {
                                var b = a.thread_id;
                                if (da.has(b)) {
                                    da["delete"](b);
                                    if (a.unread_count > 0) {
                                        ea.changeThreadReadStatus(b, !0, null, null, null, null);
                                        return
                                    } else return
                                }
                            });
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: da,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 9:
                            var fa = h._0;
                            b("qex")._("1997") === !0 && b("MessengerEnvironment").messengerdotcom && mb(f);
                            oa.forEach(function(a) {
                                na.forEach(function(c) {
                                    var d = fa.filter(function(d) {
                                        var e = d.filter;
                                        e = e == null ? b("MercuryFilters.bs").all : e;
                                        d = d.folder;
                                        d = d == null ? a === "inbox" : d === a;
                                        if (d) return e === c;
                                        else return !1
                                    });
                                    if (!b("gkx")("1275193") && !b("gkx")("1660458") || a !== "inbox" && a !== "action:archived" && a !== "pending" || c === b("MercuryFilters.bs").groups) {
                                        var e = [],
                                            g = {
                                                contents: !1
                                            };
                                        d.forEach(function(a) {
                                            a.thread_ids.forEach(function(a) {
                                                e.push(a)
                                            });
                                            var b = a.limit;
                                            if (a.thread_ids.length < b) {
                                                g.contents = !0;
                                                return
                                            }
                                        });
                                        return jb(f, a, c, g, e)
                                    }
                                    if (c !== b("MercuryFilters.bs").all) return kb(f, a, d, [b("MercuryFilters.bs").all, c]);
                                    var h = b("gkx")("1275193") ? [b("MercuryFilters.bs").all, b("MercuryFilters.bs").unread, b("MercuryFilters.bs").named, b("MercuryFilters.bs").unnamed] : [b("MercuryFilters.bs").all, b("MercuryFilters.bs").unread, b("MercuryFilters.bs").unsyncedChat];
                                    return kb(f, a, d, h)
                                })
                            });
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 10:
                            return lb(f, h._0);
                        case 11:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("UpdatePinnedThreads");
                            p = h._0;
                            if (p.length === 0) return f;
                            p.forEach(function(b) {
                                if (!a.existingPinnedThreads.has(b)) {
                                    f.pinnedThreads.push(b);
                                    a.existingPinnedThreads.add(b);
                                    return
                                }
                            });
                            q = b("MercuryThreadInformer").getForFBID(f.fbid);
                            q.updatedThreadlist();
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 12:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("UnSubscribeStatusUpdate");
                            r = h._0;
                            var ga = h._1;
                            return w(function(a) {
                                return a.page_unsubscribe_status !== ga
                            }, f, r, {
                                page_unsubscribe_status: ga
                            });
                        case 13:
                            s = h._0;
                            p = h._1;
                            q = h._2;
                            return w(void 0, f, s, {
                                can_reply: p,
                                cannot_reply_reason: q
                            });
                        case 14:
                            r = h._0;
                            s = h._1;
                            p = b("bs_belt_Map").get(f.threads, r);
                            if (p === void 0) return f;
                            q = Object.assign({}, b("bs_caml_option").valFromOption(p));
                            ua(b("MercuryIDs").getParticipantIDFromUserID(f.fbid), q, s);
                            return w(void 0, f, r, q);
                        case 15:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("ChangeFlag");
                            p = h._0;
                            s = h._1;
                            r = b("bs_belt_Map").get(f.threads, p);
                            if (r === void 0) return f;
                            q = b("bs_caml_option").valFromOption(r);
                            r = q.page_thread_info;
                            q = b("ImmutableObject").set(q, {
                                page_thread_info: Object.assign(r == null ? {} : r, {
                                    flagged: s
                                })
                            });
                            r = b("bs_belt_Map").set(f.threads, p, q);
                            u(f.fbid, p);
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: r,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 16:
                            s = h._0;
                            return w(function(a) {
                                return b("MessageRequestUtils").isMessageRequest(a)
                            }, f, s, {
                                folder: "inbox"
                            });
                        case 17:
                            q = h._0;
                            p = h._1;
                            return w(void 0, f, q, {
                                custom_like_icon: p
                            });
                        case 18:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("PromoteGroupAdmins");
                            r = h._0;
                            s = h._1;
                            q = b("bs_belt_Map").get(f.threads, r);
                            if (q === void 0) return f;
                            p = b("bs_caml_option").valFromOption(q);
                            q = b("bs_js_dict").fromArray(b("bs_js_dict").entries(p.admins));
                            p = b("ImmutableObject").set(p, {
                                admins: b("bs_array").fold_left(function(a, b) {
                                    a[b.admin_fbid] = b.admin_type;
                                    return a
                                }, q, s)
                            });
                            q = b("bs_belt_Map").set(f.threads, r, p);
                            u(f.fbid, r);
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: q,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 19:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("RemoveGroupAdmins");
                            s = h._0;
                            p = h._1;
                            r = b("bs_belt_Map").get(f.threads, s);
                            if (r === void 0) return f;
                            q = b("bs_caml_option").valFromOption(r);
                            r = b("bs_js_dict").fromArray(b("bs_js_dict").entries(q.admins));
                            q = b("ImmutableObject").set(q, {
                                admins: b("bs_array").fold_left(function(c, a) {
                                    var d = b("bs_js_dict").get(c, a);
                                    d !== void 0 && ka(c, a);
                                    return c
                                }, r, p)
                            });
                            r = b("bs_belt_Map").set(f.threads, s, q);
                            u(f.fbid, s);
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: r,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 20:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("JoinableMode");
                            p = h._0;
                            q = h._1;
                            return w(void 0, f, p, {
                                joinable_mode: q
                            });
                        case 21:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("ApprovalMode");
                            s = h._0;
                            r = h._1;
                            return w(void 0, f, s, {
                                approval_mode: r
                            });
                        case 22:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("ApprovalQueue");
                            p = h._0;
                            q = h._1;
                            s = h._2;
                            var ia = h._3,
                                sa = h._4;
                            r = b("bs_belt_Map").get(f.threads, p);
                            if (r === void 0) return f;
                            r = b("bs_caml_option").valFromOption(r);
                            var v = r.group_approval_queue;
                            r = {
                                approval_queue_ids: r.approval_queue_ids.slice(),
                                group_approval_queue: v == null ? null : v.slice()
                            };
                            !(q == null) && r.approval_queue_ids.indexOf(q) === -1 && Object.assign(r, {
                                approval_queue_ids: r.approval_queue_ids.concat([q])
                            });
                            if (!(s == null)) {
                                v = r.group_approval_queue;
                                v == null ? Object.assign(r, {
                                    group_approval_queue: [s]
                                }) : v.map(function(a) {
                                    return a.requester.id
                                }).indexOf(s.requester.id) === -1 && Object.assign(r, {
                                    group_approval_queue: v.concat([s])
                                })
                            }
                            ia == null || Object.assign(r, {
                                approval_queue_ids: r.approval_queue_ids.filter(function(a) {
                                    return b("bs_caml_obj").caml_notequal(a, ia)
                                })
                            });
                            if (!(sa == null)) {
                                q = r.group_approval_queue;
                                Object.assign(r, {
                                    group_approval_queue: (q == null ? [] : q).filter(function(a) {
                                        return a.requester.id !== sa
                                    })
                                })
                            }
                            return w(void 0, f, p, r);
                        case 23:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("IsPinProtected");
                            v = h._0;
                            s = h._1;
                            return w(void 0, f, v, {
                                is_pin_protected: s
                            });
                        case 24:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("UpdateRtcCallData");
                            q = h._0;
                            p = h._1;
                            r = h._2;
                            v = h._3;
                            s = b("bs_belt_Map").get(f.threads, q);
                            if (s === void 0) return f;
                            if (p == null) {
                                s = b("bs_caml_option").valFromOption(s).rtc_call_data;
                                s = s == null ? void 0 : p
                            } else s = p;
                            return w(void 0, f, q, {
                                rtc_call_data: new(b("ImmutableObject"))({
                                    call_state: r,
                                    server_info_data: v,
                                    initiator_fbid: s
                                })
                            });
                        case 25:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("UpdateCommStatus");
                            p = h._0;
                            q = h._1;
                            return w(void 0, f, p, {
                                comm_status: q
                            });
                        case 26:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("UpdateCommItemOwner");
                            r = h._0;
                            v = h._1;
                            s = h._2;
                            p = h._3;
                            q = v == null ? {
                                nodes: []
                            } : {
                                nodes: [{
                                    admin: {
                                        id: v,
                                        name: s,
                                        profile_picture: {
                                            uri: p
                                        }
                                    }
                                }]
                            };
                            w(void 0, f, r, {
                                comm_item_owners: q
                            });
                            if (v == null) return w(void 0, f, r, {
                                thread_associated_page_admin: null
                            });
                            else return w(void 0, f, r, {
                                thread_associated_page_admin: {
                                    id: v,
                                    name: s,
                                    profile_picture: {
                                        uri: p
                                    }
                                }
                            });
                        case 27:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("EventRsvpChanged");
                            q = h._0;
                            var wa = h._1;
                            r = h._2;
                            v = b("bs_belt_Map").get(f.threads, q);
                            if (v === void 0) return f;
                            s = b("bs_caml_option").valFromOption(v).participants_event_status;
                            p = (s == null ? [] : s).filter(function(a) {
                                return b("bs_caml_obj").caml_notequal(a.participant_id, wa)
                            });
                            p.push({
                                participant_id: wa,
                                event_status: r
                            });
                            return w(void 0, f, q, {
                                participants_event_status: p
                            });
                        case 28:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("GroupsSyncStatusChanged");
                            v = h._0;
                            s = h._1;
                            r = h._2;
                            return !(r == null) && b("bs_caml_obj").caml_equal(r, b("MessengerGroupsSyncStatus").OPT_IN) ? w(void 0, f, v, {
                                groups_sync_status: s
                            }) : w(void 0, f, v, {
                                groups_sync_status: s,
                                work_associated_group: null
                            });
                        case 29:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("GroupsSyncMetadataUpdate");
                            q = h._0;
                            p = h._1;
                            r = h._2;
                            v = h._3;
                            if (p == null) return w(void 0, f, q, {
                                work_associated_group: null
                            });
                            if (!b("bs_caml_obj").caml_equal(p, b("MessengerGroupsSyncStatus").OPT_IN))
                                if (b("bs_caml_obj").caml_equal(p, b("MessengerGroupsSyncStatus").UPDATE_EMOJI)) return w(void 0, f, q, {
                                    work_associated_group: {
                                        id: r,
                                        group_icon: {
                                            emoji_codepoints: v
                                        }
                                    }
                                });
                                else return w(void 0, f, q, {
                                    work_associated_group: null
                                });
                            s = new(i || (i = b("URI")))(document.URL);
                            p = s.getDomain();
                            v = va.getURIBuilder().setString("idorvanity", r).getURI().setDomain(p == null ? "" : p.replace("messenger.com", "facebook.com")).setPort(s.getPort()).setProtocol("https");
                            return w(void 0, f, q, {
                                work_associated_group: {
                                    id: r,
                                    url: v.toString(),
                                    group_saves: {
                                        count: 0
                                    },
                                    group_events: {
                                        count: 0
                                    }
                                }
                            });
                        case 30:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("DescriptionChanged");
                            p = h._0;
                            s = h._1;
                            return w(void 0, f, p, {
                                description: s
                            });
                        case 31:
                            q = h._0;
                            r = h._1;
                            return w(void 0, f, q, {
                                solid_color: r.solid_color,
                                header_color: r.header_color,
                                footer_color: r.footer_color,
                                gradient_colors: r.gradient_colors,
                                theme_id: r.theme_id,
                                reactions: r.reactions
                            });
                        case 32:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("UpdateJoinableLink");
                            v = h._0;
                            p = h._1;
                            return w(void 0, f, v, {
                                joinable_link: p
                            });
                        case 33:
                            var ya = h._0;
                            s = b("bs_belt_Map").toArray(f.threads).reduce(function(c, d) {
                                var a = d[1];
                                d = d[0];
                                if (a.folder === ya) {
                                    u(f.fbid, d);
                                    return b("bs_belt_Map").set(c, d, b("ImmutableObject").set(a, {
                                        unread_count: 0,
                                        unread_mentions_count: 0
                                    }))
                                } else return c
                            }, f.threads);
                            f.unreadCounts[ya] = new Set();
                            q = b("MercuryThreadInformer").getForFBID(f.fbid);
                            q.updatedUnreadState();
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: s,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 34:
                            var Da = h._0;
                            b("gkx")("1199097") && b("ChatReliabilityInstrumentation").logDELETE_THREAD(Da);
                            r = b("bs_belt_Map").remove(f.threads, Da);
                            f.orderedMessageLists["delete"](Da);
                            f.messages.forEach(function(a, c, d) {
                                if (!b("bs_caml_obj").caml_equal(a.thread_id, Da)) return;
                                f.messages["delete"](a.message_id);
                                c = a.offline_threading_id;
                                if (!(c == null)) {
                                    d = f.localIDsMap.get(c);
                                    d == null || (f.messages["delete"](d), f.localIDsMap["delete"](c))
                                }
                                f.localIDsMap["delete"](a.message_id)
                            });
                            qa(f.fbid, Da);
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: r,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 35:
                            v = h._0;
                            return Ra(f, a, [v.message_id, v, h._1]);
                        case 36:
                            p = [h._0, h._1, h._2];
                            var Ha = p[2];
                            q = p[1];
                            var x = p[0];
                            if (q.length === 0) return f;
                            s = Ta(f, [x, q, Ha]);
                            r = 0;
                            Ha !== void 0 && b("bs_caml_obj").caml_equal(b("bs_caml_option").valFromOption(Ha), b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE) || (r = 1);
                            r === 1 && b("MercuryServerRequests").getForFBID(s.fbid).deleteMessages(x, q);
                            return b("bs_belt_Array").reduce(q, s, function(d, e) {
                                var c = E(d, e),
                                    a = b("bs_belt_Map").get(d.threads, x);
                                if (a !== void 0) {
                                    a = b("bs_caml_option").valFromOption(a);
                                    a = b("ImmutableObject").set(b("ImmutableObject").set(a, Ua(d, x)), {
                                        message_count: a.message_count - 1 | 0
                                    });
                                    a = b("bs_belt_Map").set(d.threads, x, a);
                                    u(d.fbid, x);
                                    a = {
                                        fbid: d.fbid,
                                        deliveryReceipts: d.deliveryReceipts,
                                        readReceiptsPerThread: d.readReceiptsPerThread,
                                        ignoredIds: d.ignoredIds,
                                        blockedIds: d.blockedIds,
                                        pendingFolderUnseenCount: d.pendingFolderUnseenCount,
                                        typing: d.typing,
                                        threads: a,
                                        pendingReadStatusThreads: d.pendingReadStatusThreads,
                                        messages: d.messages,
                                        localIDsMap: d.localIDsMap,
                                        messagesWithUploadsInFlight: d.messagesWithUploadsInFlight,
                                        threadlistOrderMap: d.threadlistOrderMap,
                                        pinnedThreads: d.pinnedThreads,
                                        montage: d.montage,
                                        orderedMessageLists: d.orderedMessageLists,
                                        unreadCounts: d.unreadCounts,
                                        initialUnreadCounts: d.initialUnreadCounts,
                                        unseenTimestamp: d.unseenTimestamp
                                    }
                                } else a = d;
                                if (c !== void 0) {
                                    d = b("bs_caml_option").valFromOption(c);
                                    Va(b("bs_caml_option").some(x), d);
                                    Na(a.fbid, x, e, Ha, d.attachments)
                                }
                                return a
                            });
                        case 37:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("ChangeFolder");
                            return Ga(f, h._0, h._1, 1);
                        case 38:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("ChangeMuteSettings");
                            v = h._0;
                            p = h._1;
                            r = b("bs_belt_Map").get(f.threads, v);
                            if (r === void 0) return f;
                            q = b("bs_caml_option").valFromOption(r);
                            var Ia;
                            switch (p.TAG | 0) {
                                case 0:
                                    Ia = b("ImmutableObject").set(q, {
                                        reactions_mute_mode: p._0 ? 1 : 0
                                    });
                                    break;
                                case 1:
                                    Ia = b("ImmutableObject").set(q, {
                                        mentions_mute_mode: p._0 ? 1 : 0
                                    });
                                    break;
                                case 2:
                                    s = p._0;
                                    Ia = b("ImmutableObject").set(q, {
                                        mute_until: s === 0 ? void 0 : s
                                    });
                                    break
                            }
                            r = b("bs_belt_Map").set(f.threads, v, Ia);
                            u(f.fbid, v);
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: r,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 39:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("ChangeArchivedStatus");
                            p = h._0;
                            q = h._1;
                            s = b("bs_belt_Map").get(f.threads, p);
                            if (s === void 0) return f;
                            v = b("bs_caml_option").valFromOption(s);
                            if (v.is_archived === q) return f;
                            r = b("MessengerFolders.bs").getFromMeta(v);
                            s = v.comm_status;
                            s = s == null ? b("ImmutableObject").set(v, {
                                is_archived: q
                            }) : b("ImmutableObject").set(v, {
                                is_archived: q,
                                comm_status: q ? b("PageCommItemStatus").DONE : b("PageCommItemStatus").TODO
                            });
                            v = b("bs_belt_Map").set(f.threads, p, s);
                            Ca(f, s, r);
                            Fa(f, s);
                            u(f.fbid, p);
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: v,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 40:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("ChangePageFollowUpStatus");
                            q = h._0;
                            r = h._1;
                            s = b("bs_belt_Map").get(f.threads, q);
                            if (s === void 0) return f;
                            p = b("bs_caml_option").valFromOption(s);
                            if (p.is_page_follow_up === r) return f;
                            v = b("ImmutableObject").set(p, {
                                is_page_follow_up: r
                            });
                            s = b("bs_belt_Map").set(f.threads, q, v);
                            u(f.fbid, q);
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: s,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 41:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("ChangePrioritizationStatus");
                            p = h._0;
                            r = h._1;
                            v = b("bs_belt_Map").get(f.threads, p);
                            if (v === void 0) return f;
                            q = b("bs_caml_option").valFromOption(v);
                            if (q.is_priority === r) return f;
                            s = b("ImmutableObject").set(q, {
                                is_priority: r
                            });
                            v = b("bs_belt_Map").set(f.threads, p, s);
                            u(f.fbid, p);
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: v,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 42:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("ChangeUnrespondedStatus");
                            q = h._0;
                            r = h._1;
                            s = b("bs_belt_Map").get(f.threads, q);
                            if (s === void 0) return f;
                            p = b("bs_caml_option").valFromOption(s);
                            if (p.is_page_unresponded_thread === r) return f;
                            v = b("ImmutableObject").set(p, {
                                is_page_unresponded_thread: r
                            });
                            s = b("bs_belt_Map").set(f.threads, q, v);
                            u(f.fbid, q);
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: s,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 43:
                            p = h._0;
                            r = h._1;
                            v = h._2;
                            q = h._3;
                            s = h._4;
                            var y = b("bs_belt_Map").get(f.threads, p);
                            if (y === void 0) return f;
                            y = b("bs_caml_option").valFromOption(y);
                            v = ib(f, y, v, f.pendingReadStatusThreads, r);
                            v = v !== void 0 && y.last_message_timestamp > y.last_read_timestamp ? b("bs_caml_option").some(Object.assign(b("bs_caml_option").valFromOption(v), {
                                last_read_timestamp: y.last_message_timestamp
                            })) : v;
                            if (v !== void 0) {
                                v = b("ImmutableObject").set(y, b("bs_caml_option").valFromOption(v));
                                var z = b("bs_belt_Map").set(f.threads, p, v);
                                if (q) {
                                    q = !y.read_only && y.folder === "inbox";
                                    var A = b("MercuryServerRequests").getForFBID(f.fbid);
                                    A.changeThreadReadStatus(v.thread_id, r, s, v.last_read_timestamp, q, v.last_message_type)
                                }
                                A = z
                            } else A = f.threads;
                            s = b("MessengerFolders.bs").getFromMeta(y);
                            r ? (ta(f, [p], s, b("MercuryFilters.bs").unread), Ba(f, s, b("bs_caml_option").some(p))) : (b("gkx")("1275193") || b("gkx")("1660458") ? Ea(f, s, p) : xa(f, [p], s, b("MercuryFilters.bs").unread), za(f, s, b("bs_caml_option").some(p)));
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: A,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 44:
                            var B = h._0;
                            q = b("bs_belt_Option").getWithDefault(b("bs_belt_Option").map(b("bs_caml_option").nullable_to_opt(f.orderedMessageLists.get(B)), function(a) {
                                return {
                                    messageLoadingState: a.messageLoadingState,
                                    messageIDs: []
                                }
                            }), {
                                messageLoadingState: 0,
                                messageIDs: []
                            });
                            f.orderedMessageLists.set(B, q);
                            v = b("bs_belt_Option").map(b("bs_belt_Map").get(f.threads, B), function(a) {
                                return b("ImmutableObject").set(a, {
                                    message_count: 0
                                })
                            });
                            if (v !== void 0) {
                                var Ja = b("bs_caml_option").valFromOption(v);
                                z = b("bs_belt_Map").set(f.threads, B, Ja);
                                na.forEach(function(a) {
                                    return ta(f, [B], b("MessengerFolders.bs").getFromMeta(Ja), a)
                                });
                                y = z
                            } else y = f.threads;
                            Aa.forEach(function(a) {
                                a = b("bs_js_dict").get(f.unreadCounts, a);
                                if (a !== void 0) {
                                    b("bs_caml_option").valFromOption(a)["delete"](B);
                                    return
                                }
                            });
                            ra(f.fbid, B);
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: y,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 45:
                            r = [h._0, h._1, h._2];
                            s = Sa(f, [r[0], r[1]]);
                            p = s.thread_id;
                            A = Ta(f, [p, [s.message_id], r[2]]);
                            q = a.localTitanMessageCount.get(p);
                            q == null || a.localTitanMessageCount.set(p, Math.max(0, q - 1 | 0));
                            return A;
                        case 46:
                            v = [h._0, h._1];
                            z = Sa(f, [v[0], v[1]]);
                            b("MercuryServerRequests").getForFBID(f.fbid).sendNewMessage(Object.assign(z, {
                                preview_attachments: void 0
                            }));
                            return f;
                        case 47:
                            y = [h._0, h._1, h._2, h._3];
                            s = y[2];
                            r = y[1];
                            p = y[0];
                            q = E(f, p);
                            if (q === void 0) return f;
                            A = b("bs_caml_option").valFromOption(q);
                            v = b("bs_js_dict").map(function(a) {
                                return a
                            }, b("bs_belt_Option").getWithDefault(b("bs_caml_option").nullable_to_opt(A.reactions), {}));
                            r !== void 0 ? v[s] = r : Pa(v, s);
                            z = Object.assign(Object.assign({}, A), {
                                reactions: v
                            });
                            q = A.thread_id;
                            q == null || C(f.fbid, q, p, y[3]);
                            return G(f, [p, z]);
                        case 48:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("MontageDirectExpire");
                            r = h._0;
                            s = E(f, r);
                            if (s === void 0) return f;
                            v = b("bs_caml_option").valFromOption(s);
                            A = v.attachments;
                            if (A == null) return f;
                            if (A.length === 0) return f;
                            q = b("bs_caml_array").get(A, 0);
                            y = q.share;
                            if (y == null) return f;
                            p = y.target;
                            if (p == null) return f;
                            z = p.message_state;
                            if (z == null) return f;
                            s = Object.assign(Object.assign({}, v), {
                                attachments: b("bs_caml_array").set(b("bs_array").copy(A), 0, Object.assign(Object.assign({}, q), {
                                    share: Object.assign(Object.assign({}, y), {
                                        target: Object.assign(Object.assign({}, p), {
                                            message_state: "EXPIRED"
                                        })
                                    })
                                }))
                            });
                            return G(f, [r, s]);
                        case 49:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("LiveLocationUpdate");
                            z = [h._0, h._1, h._2];
                            v = z[0];
                            A = E(f, v);
                            if (A === void 0) return f;
                            q = b("bs_caml_option").valFromOption(A);
                            y = q.attachments;
                            if (y == null) return f;
                            if (y.length === 0) return f;
                            p = b("bs_caml_array").get(y, 0);
                            r = p.share;
                            if (r == null) return f;
                            s = r.target;
                            if (s == null) return f;
                            A = b("bs_array").copy(y);
                            b("bs_caml_array").set(A, 0, Object.assign(Object.assign({}, p), {
                                share: Object.assign(Object.assign({}, r), {
                                    target: Object.assign(Object.assign({}, z[1]), {
                                        live_location_id: s.live_location_id
                                    })
                                })
                            }));
                            y = Object.assign(Object.assign({}, q), {
                                attachments: A
                            });
                            p = q.thread_id;
                            p == null || C(f.fbid, p, v, z[2]);
                            return G(f, [v, y]);
                        case 50:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("ReplaceMessage");
                            r = h._0;
                            s = h._1;
                            var D = r.replaced_message_id;
                            if (D == null) return f;
                            A = E(f, D);
                            if (A === void 0) return f;
                            q = r.message_id;
                            p = {
                                timestamp: r.timestamp
                            };
                            z = b("bs_caml_option").nullable_to_opt(r.status);
                            z !== void 0 && (p.status = b("bs_caml_option").valFromOption(z));
                            v = b("bs_caml_option").nullable_to_opt(r.log_message_data);
                            v !== void 0 && (p.log_message_data = b("bs_caml_option").valFromOption(v));
                            y = b("bs_caml_option").nullable_to_opt(r.meta_ranges);
                            y !== void 0 && (p.meta_ranges = b("bs_caml_option").valFromOption(y));
                            z = b("bs_caml_option").nullable_to_opt(r.ranges);
                            z !== void 0 && (p.ranges = b("bs_caml_option").valFromOption(z));
                            v = b("bs_caml_option").nullable_to_opt(r.raw_attachments);
                            v !== void 0 && (p.raw_attachments = b("bs_caml_option").valFromOption(v));
                            y = b("bs_caml_option").nullable_to_opt(r.attachments);
                            y !== void 0 && (p.attachments = b("bs_caml_option").valFromOption(y));
                            z = b("bs_caml_option").nullable_to_opt(r.body);
                            z !== void 0 && (p.body = z);
                            v = b("bs_caml_option").nullable_to_opt(r.platform_xmd);
                            v !== void 0 && (p.platform_xmd = v);
                            y = b("bs_caml_option").nullable_to_opt(r.profile_ranges);
                            y !== void 0 && (p.profile_ranges = b("bs_caml_option").valFromOption(y));
                            z = p;
                            v = Object.assign(Object.assign({}, b("bs_caml_option").valFromOption(A)), z);
                            b("MercuryMessageIDs.bs").addServerID(q, q);
                            var F = G(f, [q, v]);
                            if (q !== D) {
                                F.messages["delete"](D);
                                F.localIDsMap.set(D, q);
                                y = b("bs_belt_Option").flatMap(b("bs_caml_option").nullable_to_opt(r.thread_id), function(a) {
                                    return b("bs_caml_option").nullable_to_opt(F.orderedMessageLists.get(a))
                                });
                                p = r.thread_id;
                                if (y !== void 0 && !(p == null)) {
                                    A = Qa(F, [q].concat(y.messageIDs.filter(function(a) {
                                        return a !== D
                                    })));
                                    F.orderedMessageLists.set(p, {
                                        messageLoadingState: y.messageLoadingState,
                                        messageIDs: A
                                    })
                                }
                            }
                            z = r.message_id;
                            v = r.thread_id;
                            v == null || (C(F.fbid, v, D, s), C(F.fbid, v, z, s));
                            return {
                                fbid: F.fbid,
                                deliveryReceipts: F.deliveryReceipts,
                                readReceiptsPerThread: F.readReceiptsPerThread,
                                ignoredIds: F.ignoredIds,
                                blockedIds: F.blockedIds,
                                pendingFolderUnseenCount: F.pendingFolderUnseenCount,
                                typing: F.typing,
                                threads: F.threads,
                                pendingReadStatusThreads: F.pendingReadStatusThreads,
                                messages: F.messages,
                                localIDsMap: F.localIDsMap,
                                messagesWithUploadsInFlight: F.messagesWithUploadsInFlight,
                                threadlistOrderMap: F.threadlistOrderMap,
                                pinnedThreads: F.pinnedThreads,
                                montage: F.montage,
                                orderedMessageLists: F.orderedMessageLists,
                                unreadCounts: F.unreadCounts,
                                initialUnreadCounts: F.initialUnreadCounts,
                                unseenTimestamp: F.unseenTimestamp
                            };
                        case 51:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("UpdateLocalTitanMessagesCount");
                            q = [h._0, h._1];
                            p = q[0];
                            y = E(f, q[1]);
                            if (y !== void 0 && b("MessengerMessage.bs").isTitanMessage(b("bs_caml_option").valFromOption(y))) {
                                A = a.localTitanMessageCount.get(p);
                                A == null ? a.localTitanMessageCount.set(p, 1) : a.localTitanMessageCount.set(p, 1 + A | 0)
                            }
                            return f;
                        case 52:
                            return Za(f, a, h._0, h._1);
                        case 53:
                            r = h._0;
                            v = h._1;
                            z = h._2;
                            s = r.author;
                            if (s == null) q = !1;
                            else {
                                y = b("MercuryIDs").getUserIDFromParticipantID(s);
                                q = y == null ? !1 : y === b("CurrentUser").getID()
                            }
                            p = r.offline_threading_id;
                            A = p == null ? void 0 : b("bs_caml_option").nullable_to_opt(f.localIDsMap.get(p));
                            s = A !== void 0;
                            if (b("gkx")("1491696") && !q && b("bs_caml_obj").caml_equal(v, b("bs_caml_option").some(b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE)) && s) return f;
                            y = cb(f, r, v, z == null ? void 0 : b("bs_caml_option").some(z));
                            ab(y.fbid, v, r, function(a, b, c) {
                                a.informNewMessage(b, c)
                            });
                            p = y.fbid;
                            if (r.folder === "pending" && b("bs_caml_obj").caml_equal(v, b("bs_caml_option").some(b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE))) A = {
                                fbid: y.fbid,
                                deliveryReceipts: y.deliveryReceipts,
                                readReceiptsPerThread: y.readReceiptsPerThread,
                                ignoredIds: y.ignoredIds,
                                blockedIds: y.blockedIds,
                                pendingFolderUnseenCount: y.pendingFolderUnseenCount + 1 | 0,
                                typing: y.typing,
                                threads: y.threads,
                                pendingReadStatusThreads: y.pendingReadStatusThreads,
                                messages: y.messages,
                                localIDsMap: y.localIDsMap,
                                messagesWithUploadsInFlight: y.messagesWithUploadsInFlight,
                                threadlistOrderMap: y.threadlistOrderMap,
                                pinnedThreads: y.pinnedThreads,
                                montage: y.montage,
                                orderedMessageLists: y.orderedMessageLists,
                                unreadCounts: y.unreadCounts,
                                initialUnreadCounts: y.initialUnreadCounts,
                                unseenTimestamp: y.unseenTimestamp
                            };
                            else if (r.folder === "inbox") {
                                q = r.thread_id;
                                A = q == null ? y : Ga(y, q, r.folder, 0)
                            } else {
                                s = r.thread_id;
                                if (s == null) A = y;
                                else {
                                    q = eb(y.fbid, y.threads, r, z);
                                    if (q !== void 0) {
                                        z = b("bs_caml_option").valFromOption(q);
                                        q = y.fbid;
                                        var H = y.deliveryReceipts,
                                            I = y.readReceiptsPerThread,
                                            J = y.ignoredIds,
                                            K = y.blockedIds,
                                            L = y.pendingFolderUnseenCount,
                                            M = y.typing,
                                            N = b("bs_belt_Map").set(y.threads, z.thread_id, z),
                                            O = y.pendingReadStatusThreads,
                                            P = y.messages,
                                            Q = y.localIDsMap,
                                            R = y.messagesWithUploadsInFlight,
                                            S = y.threadlistOrderMap,
                                            T = y.pinnedThreads,
                                            U = y.montage,
                                            V = y.orderedMessageLists,
                                            W = y.unreadCounts,
                                            X = y.initialUnreadCounts,
                                            Y = y.unseenTimestamp;
                                        q = {
                                            fbid: q,
                                            deliveryReceipts: H,
                                            readReceiptsPerThread: I,
                                            ignoredIds: J,
                                            blockedIds: K,
                                            pendingFolderUnseenCount: L,
                                            typing: M,
                                            threads: N,
                                            pendingReadStatusThreads: O,
                                            messages: P,
                                            localIDsMap: Q,
                                            messagesWithUploadsInFlight: R,
                                            threadlistOrderMap: S,
                                            pinnedThreads: T,
                                            montage: U,
                                            orderedMessageLists: V,
                                            unreadCounts: W,
                                            initialUnreadCounts: X,
                                            unseenTimestamp: Y
                                        };
                                        if (b("bs_caml_obj").caml_equal(v, b("bs_caml_option").some(b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE))) {
                                            H = r.offline_threading_id;
                                            H == null ? Object.assign(r, {
                                                folder: z.folder
                                            }) : b("bs_caml_obj").caml_equal(b("bs_caml_option").nullable_to_opt(Q.get(H)), H) ? Object.assign(r, {
                                                client_message_id: r.offline_threading_id,
                                                status: b("MercuryActionStatus").SUCCESS,
                                                action_type: b("MercuryActionType").SEND_MESSAGE
                                            }) : Object.assign(r, {
                                                folder: z.folder
                                            })
                                        }
                                        Fa(q, z);
                                        I = Object.assign({}, z);
                                        J = r.offline_threading_id;
                                        if (!(J == null)) {
                                            if (J !== r.message_id) {
                                                Object.assign(I, {
                                                    last_message_timestamp: r.timestamp
                                                });
                                                K = r.comm_status;
                                                K == null || Object.assign(I, {
                                                    last_message_id: r.message_id
                                                })
                                            }
                                            L = r.author;
                                            if (!(b("cr:11271") == null) && !(L == null)) {
                                                M = b("MercuryIDs").getParticipantIDFromUserID(p);
                                                r.has_attachment && M === L && Ya(s, r.message_id, J)
                                            }
                                        }
                                        N = r.comm_status;
                                        O = I.comm_status;
                                        !(N == null) && !(O == null) && b("bs_caml_obj").caml_notequal(O, b("PageCommItemStatus").FOLLOW_UP) && Object.assign(I, {
                                            comm_status: N
                                        });
                                        P = r.creator_info;
                                        !(P == null) && b("bs_caml_obj").caml_equal(P.pageID, p) && Object.assign(I, {
                                            folder: r.folder
                                        });
                                        R = r.author;
                                        R == null || bb(I, R);
                                        A = w(void 0, q, s, I)
                                    } else A = y
                                }
                            }
                            S = $a(A, a, r, v);
                            T = fb(S, r);
                            U = b("bs_caml_obj").caml_notequal(r.author, b("MercuryViewer").getID());
                            V = r.thread_id;
                            W = r.author;
                            if (!U) return T;
                            if (V == null) return T;
                            if (W == null) return T;
                            X = la(T.typing, V, W);
                            if (X !== T.typing) return {
                                fbid: T.fbid,
                                deliveryReceipts: T.deliveryReceipts,
                                readReceiptsPerThread: T.readReceiptsPerThread,
                                ignoredIds: T.ignoredIds,
                                blockedIds: T.blockedIds,
                                pendingFolderUnseenCount: T.pendingFolderUnseenCount,
                                typing: X,
                                threads: T.threads,
                                pendingReadStatusThreads: T.pendingReadStatusThreads,
                                messages: T.messages,
                                localIDsMap: T.localIDsMap,
                                messagesWithUploadsInFlight: T.messagesWithUploadsInFlight,
                                threadlistOrderMap: T.threadlistOrderMap,
                                pinnedThreads: T.pinnedThreads,
                                montage: T.montage,
                                orderedMessageLists: T.orderedMessageLists,
                                unreadCounts: T.unreadCounts,
                                initialUnreadCounts: T.initialUnreadCounts,
                                unseenTimestamp: T.unseenTimestamp
                            };
                            else return T;
                        case 54:
                            Y = h._0;
                            Q = h._1;
                            H = h._2;
                            z = b("bs_caml_obj").caml_notequal(H == null ? void 0 : b("bs_caml_option").some(H), !1);
                            K = b("bs_caml_obj").caml_equal(H == null ? void 0 : b("bs_caml_option").some(H), !0);
                            M = f.fbid;
                            L = b("MercuryIDs").getParticipantIDFromUserID(M);
                            J = $a(f, a, Y, Q);
                            ab(J.fbid, Q, Y, function(a, b, c) {
                                a.informNewLogMessage(b, c)
                            });
                            O = cb(J, Y, Q, H == null ? void 0 : b("bs_caml_option").some(H));
                            N = Y.thread_id;
                            if (N == null) P = O;
                            else {
                                p = b("bs_belt_Map").get(O.threads, N);
                                if (p !== void 0) {
                                    R = Object.assign({}, b("bs_caml_option").valFromOption(p));
                                    Fa(O, R);
                                    R.last_message_timestamp < Y.timestamp && Object.assign(R, {
                                        last_message_timestamp: Y.timestamp
                                    });
                                    if (Y.timestamp >= R.timestamp || b("gkx")("1183082")) {
                                        q = Y.log_message_type;
                                        if (!(q == null))
                                            if (b("bs_caml_obj").caml_equal(q, b("MercuryLogMessageType").SUBSCRIBE) && !K) {
                                                s = Y.log_message_data;
                                                if (s == null) I = [];
                                                else {
                                                    y = s.added_participants;
                                                    I = y == null ? [] : y
                                                }
                                                ua(L, R, I);
                                                u(M, N)
                                            } else if (b("bs_caml_obj").caml_equal(q, b("MercuryLogMessageType").UNSUBSCRIBE) && !K) {
                                            A = Y.log_message_data;
                                            if (A == null) v = [];
                                            else {
                                                S = A.removed_participants;
                                                v = S == null ? [] : S
                                            }
                                            db(L, R, v);
                                            u(M, N)
                                        } else if (b("bs_caml_obj").caml_equal(q, b("MercuryLogMessageType").THREAD_IMAGE)) {
                                            if (!z) {
                                                r = Y.log_message_data;
                                                if (r == null) U = null;
                                                else {
                                                    V = r.image;
                                                    U = V == null ? null : V.preview_url
                                                }
                                                Object.assign(R, {
                                                    image_src: U
                                                })
                                            }
                                        } else if (b("bs_caml_obj").caml_equal(q, b("MercuryLogMessageType").THREAD_NAME)) {
                                            W = Y.log_message_data;
                                            if (!(W == null)) {
                                                X = W.name;
                                                !(X == null) && R.name === X || u(M, N);
                                                Object.assign(R, {
                                                    name: W.name
                                                })
                                            }
                                        } else b("bs_caml_obj").caml_equal(q, b("MercuryLogMessageType").GENERIC_ADMIN_TEXT) && Ka(M, R, Y, N)
                                    }
                                    P = w(void 0, O, N, R)
                                } else P = O
                            }
                            return fb(P, Y);
                        case 55:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("PinMessage");
                            if (b("gkx")("1179386")) {
                                T = h._0;
                                J = h._1;
                                Q = b("bs_belt_Map").get(f.threads, T);
                                if (Q !== void 0 && !(J == null)) {
                                    H = b("ImmutableObject").set(b("bs_caml_option").valFromOption(Q), {
                                        pinned_messages: [J.message]
                                    });
                                    p = b("bs_belt_Map").set(f.threads, T, H);
                                    s = J.message.message_id;
                                    y = J.message.message;
                                    I = y == null ? f : Ra(f, a, [s, y, 0]);
                                    u(f.fbid, T);
                                    K = [I, p]
                                } else K = [f, f.threads];
                                A = K[0];
                                return {
                                    fbid: A.fbid,
                                    deliveryReceipts: A.deliveryReceipts,
                                    readReceiptsPerThread: A.readReceiptsPerThread,
                                    ignoredIds: A.ignoredIds,
                                    blockedIds: A.blockedIds,
                                    pendingFolderUnseenCount: A.pendingFolderUnseenCount,
                                    typing: A.typing,
                                    threads: K[1],
                                    pendingReadStatusThreads: A.pendingReadStatusThreads,
                                    messages: A.messages,
                                    localIDsMap: A.localIDsMap,
                                    messagesWithUploadsInFlight: A.messagesWithUploadsInFlight,
                                    threadlistOrderMap: A.threadlistOrderMap,
                                    pinnedThreads: A.pinnedThreads,
                                    montage: A.montage,
                                    orderedMessageLists: A.orderedMessageLists,
                                    unreadCounts: A.unreadCounts,
                                    initialUnreadCounts: A.initialUnreadCounts,
                                    unseenTimestamp: A.unseenTimestamp
                                }
                            } else return f;
                        case 56:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("UnpinMessage");
                            if (b("gkx")("1179386")) {
                                S = h._0;
                                var pb = h._1;
                                L = b("bs_belt_Map").get(f.threads, S);
                                if (L !== void 0 && !(pb == null)) {
                                    v = b("bs_caml_option").valFromOption(L);
                                    z = v.pinned_messages;
                                    r = z == null ? void 0 : z.filter(function(a) {
                                        return a.message_id !== pb.message_id
                                    });
                                    if (r !== void 0) {
                                        V = b("ImmutableObject").set(v, {
                                            pinned_messages: b("bs_belt_Option").getExn(r)
                                        });
                                        U = b("bs_belt_Map").set(f.threads, S, V);
                                        u(f.fbid, S);
                                        X = U
                                    } else X = f.threads
                                } else X = f.threads;
                                return {
                                    fbid: f.fbid,
                                    deliveryReceipts: f.deliveryReceipts,
                                    readReceiptsPerThread: f.readReceiptsPerThread,
                                    ignoredIds: f.ignoredIds,
                                    blockedIds: f.blockedIds,
                                    pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                    typing: f.typing,
                                    threads: X,
                                    pendingReadStatusThreads: f.pendingReadStatusThreads,
                                    messages: f.messages,
                                    localIDsMap: f.localIDsMap,
                                    messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                    threadlistOrderMap: f.threadlistOrderMap,
                                    pinnedThreads: f.pinnedThreads,
                                    montage: f.montage,
                                    orderedMessageLists: f.orderedMessageLists,
                                    unreadCounts: f.unreadCounts,
                                    initialUnreadCounts: f.initialUnreadCounts,
                                    unseenTimestamp: f.unseenTimestamp
                                }
                            } else return f;
                        case 57:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("ChangePinnedStatus");
                            W = h._0;
                            q = h._1;
                            M = h._2;
                            N = b("bs_belt_Map").get(f.threads, W);
                            R = !1;
                            if (q && !a.existingPinnedThreads.has(W)) f.pinnedThreads.push(W), a.existingPinnedThreads.add(W), R = !0;
                            else if (!q && a.existingPinnedThreads.has(W)) {
                                O = f.pinnedThreads.indexOf(W);
                                O > -1 && f.pinnedThreads.splice(O, 1);
                                a.existingPinnedThreads["delete"](W);
                                R = !0
                            }
                            if (N !== void 0) {
                                P = b("bs_caml_option").valFromOption(N);
                                Y = b("bs_belt_Option").getWithDefault(b("bs_caml_option").nullable_to_opt(P.thread_pin_timestamp), 0);
                                if (P.is_pinned !== q || Y !== M) {
                                    Q = b("ImmutableObject").set(P, {
                                        is_pinned: q,
                                        thread_pin_timestamp: M
                                    });
                                    H = b("bs_belt_Map").set(f.threads, W, Q);
                                    u(f.fbid, W);
                                    R = !0;
                                    J = H
                                } else J = f.threads
                            } else J = f.threads;
                            if (R) return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: J,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                            else return f;
                        case 58:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("InvalidateMontageState");
                            s = h._0;
                            y = b("bs_js_dict").fromArray(b("bs_js_dict").entries(f.montage));
                            y[s] = [];
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: y,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 59:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("NewMontageMessage");
                            T = h._0;
                            I = b("bs_js_dict").fromArray(b("bs_js_dict").entries(f.montage));
                            p = T.actor.id;
                            K = b("bs_js_dict").get(I, p);
                            K !== void 0 ? (K.push(T), I[p] = K) : I[p] = [T];
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: I,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 60:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("InstantiateMontageThread");
                            A = h._0;
                            L = b("bs_js_dict").fromArray(b("bs_js_dict").entries(f.montage));
                            z = b("bs_js_dict").get(L, A);
                            z !== void 0 || (L[A] = []);
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: L,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 61:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("DeleteMontageMessage");
                            var qb = h._0,
                                Z = b("bs_js_dict").fromArray(b("bs_js_dict").entries(f.montage));
                            v = Object.keys(Z);
                            v.forEach(function(a) {
                                var c = b("bs_js_dict").get(Z, a);
                                if (c === void 0) return;
                                c = c.filter(function(a) {
                                    return a.id !== qb.messageFBID
                                });
                                Z[a] = c
                            });
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: Z,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 62:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("AddFetchedAllHistoryMarkers");
                            r = [h._0, h._1];
                            var sb = r[1];
                            r[0].forEach(function(a) {
                                var b = f.orderedMessageLists.get(a);
                                b == null ? f.orderedMessageLists.set(a, {
                                    messageLoadingState: 1,
                                    messageIDs: []
                                }) : f.orderedMessageLists.set(a, {
                                    messageLoadingState: 1,
                                    messageIDs: b.messageIDs
                                });
                                return Ma(f.fbid, a, sb)
                            });
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 63:
                            V = h._0;
                            V.forEach(function(c) {
                                var a = c.folder;
                                if (!Aa.includes(a)) return;
                                c = c.thread_fbids.map(function(a) {
                                    return b("MercuryIDs").getThreadIDFromThreadFBID(a)
                                }).concat(c.other_user_fbids.map(function(a) {
                                    return b("MercuryIDs").getThreadIDFromUserID(a)
                                }));
                                f.unreadCounts[a] = new Set(c);
                                a = b("MercuryThreadInformer").getForFBID(f.fbid);
                                a.updatedUnreadState()
                            });
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 64:
                            S = h._0;
                            var d = {
                                contents: f.unseenTimestamp
                            };
                            S.forEach(function(c) {
                                f.initialUnreadCounts[c.folder] = c.unread_count;
                                c.unread_count === 0 && (f.unreadCounts[c.folder] = new Set());
                                c.folder === "inbox" && (d.contents = b("bs_belt_Option").getWithDefault(b("bs_caml_option").nullable_to_opt(c.seen_timestamp), d.contents), a.fallbackUnseenCount.contents = c.unseen_count);
                                c = b("MercuryThreadInformer").getForFBID(f.fbid);
                                c.updatedUnreadState();
                                c.updatedUnseenState()
                            });
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: d.contents
                            };
                        case 65:
                            var $ = h._0;
                            Aa.forEach(function(a) {
                                a = b("bs_js_dict").get(f.unreadCounts, a);
                                if (a === void 0) return;
                                var c = b("bs_caml_option").valFromOption(a);
                                b("bs_js_dict").entries($).forEach(function(a) {
                                    var b = a[0];
                                    if (c.has(b)) {
                                        c.add(a[1]);
                                        c["delete"](b);
                                        return
                                    }
                                })
                            });
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 66:
                            U = h._0;
                            X = h._1;
                            O = h._2;
                            N = h._3;
                            Y = h._4;
                            P = La(f, U, [X], !1);
                            q = E(P, X);
                            if (q !== void 0) {
                                M = b("bs_caml_option").valFromOption(q);
                                Va(b("bs_caml_option").some(U), M);
                                Q = b("MessengerMessage.bs").makeFakeMessage(M.message_id, M.thread_id, M.author, M.action_type, M.timestamp, {
                                    removed_timestamp: N,
                                    message_unsendability_status: b("MessageUnsendabilityStatus").DENY_TOMBSTONE_MESSAGE,
                                    unsender: {
                                        id: O
                                    }
                                });
                                W = G(P, [X, Q]);
                                H = M.thread_id;
                                if (H == null) return W;
                                R = Wa(W, X, H);
                                C(R.fbid, H, X, Y);
                                Na(R.fbid, H, X, Y, M.attachments);
                                J = b("bs_belt_Map").get(R.threads, H);
                                if (J === void 0) return R;
                                s = b("bs_caml_option").valFromOption(J);
                                y = Xa(M.profile_ranges, R.fbid);
                                K = b("ImmutableObject").set(b("ImmutableObject").set(s, Ua(R, H)), {
                                    unread_mentions_count: s.unread_mentions_count - y | 0
                                });
                                p = b("bs_belt_Map").set(R.threads, H, K);
                                u(R.fbid, H);
                                return {
                                    fbid: R.fbid,
                                    deliveryReceipts: R.deliveryReceipts,
                                    readReceiptsPerThread: R.readReceiptsPerThread,
                                    ignoredIds: R.ignoredIds,
                                    blockedIds: R.blockedIds,
                                    pendingFolderUnseenCount: R.pendingFolderUnseenCount,
                                    typing: R.typing,
                                    threads: p,
                                    pendingReadStatusThreads: R.pendingReadStatusThreads,
                                    messages: R.messages,
                                    localIDsMap: R.localIDsMap,
                                    messagesWithUploadsInFlight: R.messagesWithUploadsInFlight,
                                    threadlistOrderMap: R.threadlistOrderMap,
                                    pinnedThreads: R.pinnedThreads,
                                    montage: R.montage,
                                    orderedMessageLists: R.orderedMessageLists,
                                    unreadCounts: R.unreadCounts,
                                    initialUnreadCounts: R.initialUnreadCounts,
                                    unseenTimestamp: R.unseenTimestamp
                                }
                            }
                            Oa(P.fbid, U, X, Y);
                            return P;
                        case 67:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("UpdateConnectivityStatus");
                            T = h._0;
                            I = h._1;
                            z = b("ThreadConnectivityStatus.bs").toGraphQLValue(I);
                            A = b("bs_belt_Map").get(f.threads, T);
                            if (A === void 0) return f;
                            L = b("bs_caml_option").valFromOption(A);
                            v = L.thread_connectivity_data;
                            r = v == null ? b("ImmutableObject").set(L, {
                                thread_connectivity_data: {
                                    connectivity_status: z,
                                    first_sender_id: null
                                }
                            }) : b("ImmutableObject").set(L, {
                                thread_connectivity_data: {
                                    connectivity_status: z,
                                    first_sender_id: v.first_sender_id
                                }
                            });
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: b("bs_belt_Map").set(f.threads, T, r),
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 68:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("DeltaMarkFolderSeen");
                            var tb = h._0;
                            return b("bs_belt_Array").reduceU(tb.folders, f, function(c, a) {
                                a = b("bs_js_dict").get(k, a);
                                if (a !== void 0) return ob(c, Number(tb.timestamp), a);
                                else return c
                            });
                        case 69:
                            V = [h._0, h._1, h._2, h._3];
                            var ub = V[2];
                            S = V[0];
                            q = E(f, S);
                            if (q === void 0) return f;
                            N = b("bs_caml_option").valFromOption(q);
                            O = V[1].concat(N.tags).filter(function(a) {
                                return ub.indexOf(a) === -1
                            });
                            Q = Object.assign(Object.assign({}, N), {
                                tags: O
                            });
                            W = N.thread_id;
                            W == null || C(f.fbid, W, S, V[3]);
                            return G(f, [S, Q]);
                        case 70:
                            J = h._0;
                            M = h._1;
                            return w(void 0, f, J, {
                                conversion_detection_data: M
                            });
                        case 71:
                            s = [h._0, h._1, h._2, h._3, h._4];
                            y = s[0];
                            K = E(f, y);
                            if (K === void 0) return f;
                            H = b("bs_caml_option").valFromOption(K);
                            p = H.attachments;
                            if (p == null) return f;
                            if (p.length !== 1) return f;
                            R = p[0];
                            U = s[2] ? [Object.assign(Object.assign({}, R), {
                                blurred_image_uri: void 0
                            })] : [Object.assign(Object.assign({}, R), {
                                blurred_image_uri: s[3]
                            })];
                            X = Object.assign(Object.assign({}, H), {
                                attachments: U
                            });
                            Y = H.thread_id;
                            Y == null || C(f.fbid, Y, y, s[4]);
                            return G(f, [y, X]);
                        case 72:
                            P = h._0;
                            I = h._1;
                            return w(void 0, f, P, {
                                suggested_reply_data: I
                            });
                        case 73:
                            A = [h._0, h._1, h._2];
                            L = A[0];
                            z = E(f, L);
                            if (z === void 0) return f;
                            v = b("bs_caml_option").valFromOption(z);
                            T = v.secondary_language_body;
                            if (!(T == null)) return f;
                            r = Object.assign(Object.assign({}, v), {
                                secondary_language_body: A[1],
                                is_secondary_language_body_decrypted: !1
                            });
                            q = v.thread_id;
                            q == null || C(f.fbid, q, L, A[2]);
                            return G(f, [L, r])
                    }
                case 1:
                    O = g._0;
                    if (typeof O === "number")
                        if (O === 0) {
                            var vb = [];
                            b("bs_belt_MapString").forEach(f.typing, function(a, c) {
                                return b("bs_belt_Map").forEach(c, function(b, c) {
                                    if (c < Date.now() - 3e4) {
                                        vb.push([a, b]);
                                        return
                                    }
                                })
                            });
                            if (vb.length === 0) return f;
                            var c = {
                                contents: f.typing
                            };
                            vb.forEach(function(a) {
                                c.contents = la(c.contents, a[0], a[1])
                            });
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: c.contents,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            }
                        } else {
                            if (nb(f, a, !1) <= 0) return f;
                            N = b("MercuryServerRequests").getForFBID(f.fbid);
                            N.markSeen();
                            return ob(f, N.getLastActionTimestamp(), "inbox")
                        }
                    switch (O.TAG | 0) {
                        case 0:
                            W = O._0;
                            V = O._1;
                            S = O._2;
                            Q = O._3;
                            var wb = f.threads,
                                xb = [];
                            J = l(W.reduce(function(d, c) {
                                var a = b("bs_belt_Map").get(wb, c);
                                if (a !== void 0) return b("bs_belt_Map").set(d, c, b("bs_caml_option").valFromOption(a));
                                else {
                                    xb.push(c);
                                    return d
                                }
                            }, b("bs_belt_Map").make(b("ThreadId.bs"))));
                            if (xb.length !== 0) {
                                M = a.threadSubToken;
                                K = M.contents.toString();
                                a.threadSubToken.contents = M.contents + 1 | 0;
                                a.threadCallbacks.contents[K] = [W, S];
                                p = b("MercuryServerRequests").getForFBID(f.fbid);
                                R = xb.reduce(function(d, c) {
                                    var e = b("MercuryIDs").tokenize(c),
                                        g = e.type;
                                    e = e.value;
                                    if (g !== "user") return d;
                                    g = b("MercuryIDs").getParticipantIDFromUserID(b("FBID.bs").ofStringExn(e));
                                    e = b("MercuryIDs").getParticipantIDFromUserID(f.fbid);
                                    e = b("MessengerThreadUtils.bs").createNewLocalThread(e, c, b("bs_caml_obj").caml_equal(g, e) ? [e] : [e, g], null);
                                    g = b("bs_belt_Map").set(d, c, e);
                                    b("gkx")("1074761") || hb(g, a.threadCallbacks.contents);
                                    return g
                                }, f.threads);
                                p.fetchThreadData(xb, Q);
                                b("bs_curry")._1(V, K);
                                if (R === f.threads) return f;
                                else return {
                                    fbid: f.fbid,
                                    deliveryReceipts: f.deliveryReceipts,
                                    readReceiptsPerThread: f.readReceiptsPerThread,
                                    ignoredIds: f.ignoredIds,
                                    blockedIds: f.blockedIds,
                                    pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                    typing: f.typing,
                                    threads: R,
                                    pendingReadStatusThreads: f.pendingReadStatusThreads,
                                    messages: f.messages,
                                    localIDsMap: f.localIDsMap,
                                    messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                    threadlistOrderMap: f.threadlistOrderMap,
                                    pinnedThreads: f.pinnedThreads,
                                    montage: f.montage,
                                    orderedMessageLists: f.orderedMessageLists,
                                    unreadCounts: f.unreadCounts,
                                    initialUnreadCounts: f.initialUnreadCounts,
                                    unseenTimestamp: f.unseenTimestamp
                                }
                            }
                            b("bs_curry")._1(S, J);
                            return f;
                        case 1:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("UnsubscribeThread");
                            U = a.threadCallbacks.contents;
                            gb(U, O._0);
                            a.threadCallbacks.contents = U;
                            return f;
                        case 2:
                            H = O._0;
                            Y = b("bs_belt_Array").keepMap(H, function(a) {
                                a = E(f, a);
                                if (a !== void 0) return b("bs_caml_option").nullable_to_opt(b("bs_caml_option").valFromOption(a).offline_threading_id)
                            });
                            Y.forEach(function(a) {
                                f.localIDsMap["delete"](a)
                            });
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 3:
                            b("ChatReliabilityInstrumentation").logPROCESS_DELTA("MontagePollStickerVoted");
                            var yb = O._0;
                            s = b("bs_js_dict").fromArray(b("bs_js_dict").entries(f.montage));
                            y = yb.montageActorID;
                            X = b("bs_js_dict").get(s, y);
                            if (X !== void 0) {
                                P = X.map(function(a) {
                                    if (b("bs_caml_obj").caml_equal(yb.montageMessageID, a.id)) {
                                        var c = a.montage_overlays.map(function(a) {
                                            if (!b("bs_caml_obj").caml_equal(a.poll.id, yb.pollID)) return a;
                                            var c = a.poll.poll_options.map(function(a, c) {
                                                if (c === yb.optionVotedIndex) return new(b("ImmutableObject"))({
                                                    text: a.text,
                                                    vote_count: a.vote_count + 1 | 0
                                                });
                                                else return a
                                            });
                                            c = new(b("ImmutableObject"))({
                                                can_viewer_vote: a.poll.can_viewer_vote,
                                                id: a.poll.id,
                                                poll_options: c,
                                                viewer_vote_index: yb.optionVotedIndex
                                            });
                                            return b("ImmutableObject").set(new(b("ImmutableObject"))(a), {
                                                poll: c
                                            })
                                        });
                                        return b("ImmutableObject").set(new(b("ImmutableObject"))(a), {
                                            montage_overlays: c
                                        })
                                    } else return a
                                });
                                s[y] = P
                            }
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: f.threads,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: s,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 4:
                            I = b("bs_belt_Map").set(f.threads, O._0, O._1);
                            return {
                                fbid: f.fbid,
                                deliveryReceipts: f.deliveryReceipts,
                                readReceiptsPerThread: f.readReceiptsPerThread,
                                ignoredIds: f.ignoredIds,
                                blockedIds: f.blockedIds,
                                pendingFolderUnseenCount: f.pendingFolderUnseenCount,
                                typing: f.typing,
                                threads: I,
                                pendingReadStatusThreads: f.pendingReadStatusThreads,
                                messages: f.messages,
                                localIDsMap: f.localIDsMap,
                                messagesWithUploadsInFlight: f.messagesWithUploadsInFlight,
                                threadlistOrderMap: f.threadlistOrderMap,
                                pinnedThreads: f.pinnedThreads,
                                montage: f.montage,
                                orderedMessageLists: f.orderedMessageLists,
                                unreadCounts: f.unreadCounts,
                                initialUnreadCounts: f.initialUnreadCounts,
                                unseenTimestamp: f.unseenTimestamp
                            };
                        case 5:
                            b("MercuryServerRequests").getForFBID(f.fbid).updateLastActionTimestamp(O._0);
                            return f
                    }
                case 2:
                    h = g._0;
                    switch (h.TAG | 0) {
                        case 0:
                            b("bs_curry")._1(h._0, {
                                blocked_ids: f.blockedIds
                            });
                            break;
                        case 1:
                            b("bs_curry")._1(h._1, b("bs_belt_Map").get(f.threads, h._0));
                            break;
                        case 2:
                            b("bs_curry")._1(h._0, f.pinnedThreads.concat([]));
                            break;
                        case 3:
                            b("bs_curry")._2(h._0, f, a);
                            break
                    }
                    return f
            }
        }, d, c)
    }

    function Q(a) {
        var c = [b("MercurySyncEventsProxy").getArbiterTypeForFBID(a, "TYP")];
        b("FBIDCheck").isUser_deprecated(a) || c.push(b("ChannelConstants").getArbiterType("page_typing"));
        return c
    }

    function R(a) {
        return {
            fbid: a,
            deliveryReceipts: void 0,
            readReceiptsPerThread: void 0,
            ignoredIds: b("bs_belt_Set").make(b("ParticipantId.bs")),
            blockedIds: b("bs_belt_Set").make(b("ParticipantId.bs")),
            pendingFolderUnseenCount: 0,
            typing: void 0,
            threads: b("bs_belt_Map").make(b("ThreadId.bs")),
            pendingReadStatusThreads: new Set(),
            messages: new Map(),
            localIDsMap: new Map(),
            messagesWithUploadsInFlight: new Map(),
            threadlistOrderMap: pa(void 0),
            pinnedThreads: [],
            montage: {},
            orderedMessageLists: new Map(),
            unreadCounts: {},
            initialUnreadCounts: {},
            unseenTimestamp: 0
        }
    }
    var S = {
            contents: {}
        },
        T = {
            contents: 0
        },
        U = new Map(),
        V = {
            contents: {}
        },
        W = {
            contents: 0
        },
        X = new Set(),
        Y = {
            contents: {}
        },
        pb = {
            contents: 0
        },
        qb = {
            threadCallbacks: S,
            threadSubToken: T,
            localTitanMessageCount: U,
            messageCallbacks: V,
            messageSubToken: W,
            existingPinnedThreads: X,
            failedHistoryFetchThreads: Y,
            fallbackUnseenCount: pb
        },
        rb = {
            contents: 0
        },
        Z = {};

    function sb(a, c, d) {
        d = c !== void 0 ? b("bs_caml_option").valFromOption(c) : b("RemoteAction.bs").create(void 0);
        c = b("bs_js_dict").get(Z, a);
        if (c !== void 0) return;
        Z[a] = {
            subscriptions: new Set(),
            state: R(a),
            remoteAction: d
        };
        b("RemoteAction.bs").subscribe(function(c) {
            var d = b("bs_js_dict").get(Z, a);
            if (d !== void 0) {
                var e = d.state;
                c = P(qb, c, e);
                Z[a] = {
                    subscriptions: d.subscriptions,
                    state: c,
                    remoteAction: d.remoteAction
                };
                if (c === e) return;
                d = b("bs_js_dict").get(Z, a);
                d !== void 0 ? d.subscriptions.forEach(function(a) {
                    return b("bs_curry")._1(a.fn, void 0)
                }) : b("recoverableViolation")("Subscriptions deleted after createion", "messenger_comet");
                return
            }
            b("recoverableViolation")("State deleted after creation", "messenger_comet")
        }, d);
        var e = b("bs_caml_option").some(a),
            f = function(a) {
                return $(e, a)
            },
            g = function(a) {
                b("bs_curry")._1(f, [{
                    TAG: 0,
                    _0: {
                        TAG: 5,
                        _0: a
                    }
                }]), b("setTimeoutAcrossTransitions")(function(a) {
                    return b("bs_curry")._1(f, [{
                        TAG: 1,
                        _0: 0
                    }])
                }, 3e4)
            };
        b("Arbiter").subscribe(Q(a), function(b, c) {
            b = c.obj;
            c = b.to;
            if (!(c == null) && c.toString() !== a) return;
            else {
                g(b);
                return
            }
        })
    }

    function $(a, c) {
        a = a !== void 0 ? b("bs_caml_option").valFromOption(a) : b("CurrentUser").getID();
        sb(a, void 0, void 0);
        a = b("bs_js_dict").get(Z, a);
        if (a !== void 0) return b("RemoteAction.bs").send(a.remoteAction, c);
        else {
            b("recoverableViolation")("Subscriptions deleted after createion", "messenger_comet");
            return
        }
    }

    function tb(a, c, d, e) {
        var f = a !== void 0 ? b("bs_caml_option").valFromOption(a) : b("CurrentUser").getID();
        e = c !== void 0 ? b("bs_caml_option").valFromOption(c) : b("RemoteAction.bs").create(void 0);
        sb(f, b("bs_caml_option").some(e), void 0);
        a = j.useState(function() {
            var a = b("bs_js_dict").get(Z, f);
            if (a !== void 0) return a.state;
            else return b("unrecoverableViolation")("Rendering without state initialized", "messenger_comet")
        });
        var g = a[1],
            h = a[0];
        c = b("bs_js_dict").get(Z, f);
        var i = j.useCallback(function(a) {
            a = b("bs_js_dict").get(Z, f);
            var c = a !== void 0 ? a.state : b("unrecoverableViolation")("Rendering without state initialized", "messenger_comet");
            if (d !== void 0)
                if (b("bs_curry")._2(d, h, c)) return b("bs_curry")._1(g, function(a) {
                    return c
                });
                else return;
            else return b("bs_curry")._1(g, function(a) {
                return c
            })
        }, [d, h, g, c, f]);
        j.useEffect(function() {
            rb.contents = rb.contents + 1 | 0;
            var a = rb.contents,
                c = {
                    id: a,
                    fn: i
                };
            a = b("bs_js_dict").get(Z, f);
            a !== void 0 ? a.subscriptions.add(c) : b("recoverableViolation")("Subscriptions deleted after createion, can't add subscription", "messenger_comet");
            b("bs_curry")._1(i, void 0);
            return function(a) {
                a = b("bs_js_dict").get(Z, f);
                a !== void 0 ? a.subscriptions["delete"](c) : b("recoverableViolation")("Subscriptions deleted after createion, can't remove subscription", "messenger_comet")
            }
        }, [i, f]);
        return h
    }

    function ub(a) {
        var c = a.shouldUpdate,
            d = a.remoteAction,
            e = a.fbid;
        a = a.children;
        e = e !== void 0 ? b("bs_caml_option").valFromOption(e) : b("CurrentUser").getID();
        return b("bs_curry")._1(a, tb(b("bs_caml_option").some(e), d, c, void 0))
    }

    function vb(a) {
        if (b("gkx")("1463539")) {
            var c = b("FBLogger")("messenger_web_product");
            c.warn("[gemini_chat] messenger state is not allowed when lightspeed is enabled")
        }
        return tb(b("bs_caml_option").some(a), void 0, void 0, void 0)
    }

    function wb(a, c) {
        return $(b("bs_caml_option").some(a), [{
            TAG: 2,
            _0: {
                TAG: 0,
                _0: c
            }
        }])
    }

    function xb(a, c) {
        b("MercuryAssert").isThreadID(c);
        var d = {
                contents: void 0
            },
            e = function(a) {
                d.contents = a
            };
        $(b("bs_caml_option").some(a), [{
            TAG: 2,
            _0: {
                TAG: 1,
                _0: c,
                _1: e
            }
        }]);
        return b("bs_js_null_undefined").fromOption(d.contents)
    }

    function yb(a, c, d, e) {
        if (c.length !== 0) {
            b("MercuryAssert").allThreadID(c);
            var f = {
                    contents: null
                },
                g = function(a) {
                    f.contents = a
                };
            $(b("bs_caml_option").some(a), [{
                TAG: 1,
                _0: {
                    TAG: 0,
                    _0: c,
                    _1: g,
                    _2: d,
                    _3: e
                }
            }]);
            return f.contents
        }
        b("bs_curry")._1(d, {});
        return null
    }

    function zb(a, c, d, e) {
        return yb(a, [c], function(a) {
            return b("bs_curry")._1(d, a[c])
        }, e)
    }

    function Ab(a, c, d, e) {
        var f = {
                contents: void 0
            },
            g = function(a) {
                f.contents = a
            };
        $(b("bs_caml_option").some(a), [{
            TAG: 2,
            _0: {
                TAG: 1,
                _0: c,
                _1: g
            }
        }]);
        g = f.contents;
        if (g !== void 0) return b("bs_caml_option").valFromOption(g);
        g = b("MessengerThreadUtils.bs").createNewLocalThread(b("MercuryIDs").getParticipantIDFromUserID(a), c, d, e);
        $(b("bs_caml_option").some(a), [{
            TAG: 1,
            _0: {
                TAG: 4,
                _0: c,
                _1: g
            }
        }]);
        return g
    }

    function Bb(a) {
        var c = b("MercuryLocalIDs").generateThreadID(null);
        Ab(a, c, [], null);
        return c
    }

    function Cb(a, c, d, e) {
        var f = {
                contents: void 0
            },
            g = function(a) {
                f.contents = a
            };
        $(b("bs_caml_option").some(a), [{
            TAG: 2,
            _0: {
                TAG: 1,
                _0: c,
                _1: g
            }
        }]);
        g = f.contents;
        if (g !== void 0) return b("bs_caml_option").valFromOption(g);
        g = b("MessengerThreadUtils.bs").createNewLocalGroupGeneralThread(b("MercuryIDs").getParticipantIDFromUserID(a), c, d, e);
        $(b("bs_caml_option").some(a), [{
            TAG: 1,
            _0: {
                TAG: 4,
                _0: c,
                _1: g
            }
        }]);
        return g
    }

    function Db(a, c, d) {
        var e = b("MercuryLocalIDs").generateThreadID(null);
        Cb(a, e, c, d);
        return e
    }

    function Eb(a, c) {
        var d = {
                contents: void 0
            },
            e = function(a) {
                d.contents = a
            };
        $(b("bs_caml_option").some(a), [{
            TAG: 2,
            _0: {
                TAG: 1,
                _0: c,
                _1: e
            }
        }]);
        a = d.contents;
        if (a !== void 0) return b("MercuryThreadInfo").isEmptyLocalThread(b("bs_caml_option").valFromOption(a));
        else return !1
    }

    function Fb(a, c) {
        var d = {
                contents: void 0
            },
            e = function(a) {
                d.contents = a
            };
        $(b("bs_caml_option").some(a), [{
            TAG: 2,
            _0: {
                TAG: 1,
                _0: c,
                _1: e
            }
        }]);
        a = d.contents;
        if (a !== void 0) return b("MercuryThreadInfo").isNewEmptyLocalThread(b("bs_caml_option").valFromOption(a));
        else return !1
    }

    function Gb(c) {
        var a = {
                contents: []
            },
            d = function(b) {
                a.contents = b
            };
        $(b("bs_caml_option").some(c), [{
            TAG: 2,
            _0: {
                TAG: 2,
                _0: d
            }
        }]);
        return a.contents
    }

    function Hb(a, c) {
        return $(b("bs_caml_option").some(a), [{
            TAG: 1,
            _0: {
                TAG: 1,
                _0: c
            }
        }])
    }

    function Ib(a) {
        var c = a.payload_source;
        if (c == null) return !1;
        if (b("bs_caml_obj").caml_equal(c, b("MercuryPayloadSource").CLIENT_CHANGE_ARCHIVED_STATUS) || b("bs_caml_obj").caml_equal(c, b("MercuryPayloadSource").CLIENT_CHANNEL_MESSAGE) || b("bs_caml_obj").caml_equal(c, b("MercuryPayloadSource").CLIENT_SEND_MESSAGE) || b("bs_caml_obj").caml_equal(c, b("MercuryPayloadSource").SERVER_SEND_MESSAGE) || b("bs_caml_obj").caml_equal(c, b("MercuryPayloadSource").SERVER_FETCH_THREADLIST_INFO) || b("bs_caml_obj").caml_equal(c, b("MercuryPayloadSource").SERVER_THREAD_SYNC) || b("bs_caml_obj").caml_equal(c, b("MercuryPayloadSource").SERVER_CHANGE_PINNED_STATUS) || b("bs_caml_obj").caml_equal(c, b("MercuryPayloadSource").SERVER_CHANGE_PINNED_MESSAGES) || b("bs_caml_obj").caml_equal(c, b("MercuryPayloadSource").SERVER_INVALIDATE_GLOBAL_STATE) || b("bs_caml_obj").caml_equal(c, b("MercuryPayloadSource").CLIENT_UPDATE_COMM_STATUS)) return !0;
        if (!b("bs_caml_obj").caml_equal(c, b("MercuryPayloadSource").SERVER_INITIAL_DATA)) return !1;
        c = a.ordered_threadlists;
        return !(c == null)
    }

    function Jb(a, c) {
        c = {
            TAG: 1,
            _0: {
                TAG: 3,
                _0: c
            }
        };
        return $(b("bs_caml_option").some(a), [c])
    }

    function Kb(a, c) {
        return $(a == null ? void 0 : b("bs_caml_option").some(a), c)
    }

    function Lb(a) {
        var c = [],
            d = !1;
        if (!(a == null)) {
            var e = a.payload_source;
            !(e == null) && b("bs_caml_obj").caml_equal(e, b("MercuryPayloadSource").SERVER_INVALIDATE_GLOBAL_STATE) && (d = !0);
            e = a.newlyAddedClientIDs;
            !(e == null) && Object.keys(e).length > 0 && c.push({
                TAG: 0,
                _0: {
                    TAG: 65,
                    _0: e
                }
            });
            e = a.delivery_receipts;
            e == null || c.push({
                TAG: 0,
                _0: {
                    TAG: 0,
                    _0: e
                }
            });
            e = a.message_ignored_ids;
            e == null || c.push({
                TAG: 0,
                _0: {
                    TAG: 1,
                    _0: e
                }
            });
            e = a.threads;
            if (!(e == null)) {
                var f = a.payload_source;
                f == null || (b("bs_caml_obj").caml_equal(f, b("MercuryPayloadSource").SERVER_FETCH_THREAD_INFO) && c.push({
                    TAG: 0,
                    _0: {
                        TAG: 8,
                        _0: e
                    }
                }), b("bs_caml_obj").caml_equal(f, b("MercuryPayloadSource").SERVER_INVALIDATE_THREAD_STATE) && e.length > 0 && c.unshift({
                    TAG: 0,
                    _0: {
                        TAG: 34,
                        _0: b("bs_caml_array").get(e, 0).thread_id
                    }
                }));
                c.push({
                    TAG: 0,
                    _0: {
                        TAG: 7,
                        _0: e
                    }
                })
            }
            f = a.participants;
            if (!(f == null)) {
                c.push({
                    TAG: 0,
                    _0: {
                        TAG: 3,
                        _0: f
                    }
                });
                var g = [],
                    h = [];
                f.forEach(function(a) {
                    a.is_messenger_blocked || a.is_facebook_blocked ? g.push(b("MercuryIDs").getParticipantIDFromUserID(a.fbid)) : h.push(b("MercuryIDs").getParticipantIDFromUserID(a.fbid))
                });
                e = 0;
                (g.length !== 0 || h.length !== 0) && (e = 1);
                e === 1 && c.push({
                    TAG: 0,
                    _0: {
                        TAG: 2,
                        _0: g,
                        _1: h
                    }
                })
            }
            f = a.message_blocked_ids;
            !(f == null) && f.length > 0 && c.push({
                TAG: 0,
                _0: {
                    TAG: 2,
                    _0: f,
                    _1: []
                }
            });
            e = a.message_unblocked_ids;
            !(e == null) && e.length > 0 && c.push({
                TAG: 0,
                _0: {
                    TAG: 2,
                    _0: [],
                    _1: e
                }
            });
            f = a.pending_folder_unseen_count;
            f == null || c.push({
                TAG: 0,
                _0: {
                    TAG: 4,
                    _0: f
                }
            });
            e = a.global_actions;
            e == null || e.forEach(function(a) {
                if (b("bs_caml_obj").caml_equal(a.action_type, b("MercuryGlobalActionType").MARK_ALL_READ)) {
                    c.push({
                        TAG: 0,
                        _0: {
                            TAG: 33,
                            _0: a.folder
                        }
                    });
                    return
                }
            });
            if (Ib(a)) {
                f = a.ordered_threadlists;
                e = 0;
                f == null || f.length === 0 ? e = 1 : c.push({
                    TAG: 0,
                    _0: {
                        TAG: 9,
                        _0: f
                    }
                });
                if (e === 1) {
                    f = a.threads;
                    e = a.payload_source;
                    !(f == null) && !(e == null) && f.length > 0 && e !== b("MercuryPayloadSource").SERVER_CHANGE_PINNED_STATUS && c.push({
                        TAG: 0,
                        _0: {
                            TAG: 10,
                            _0: f
                        }
                    })
                }
            }
            e = a.pinned_thread_ids;
            !(e == null) && e.length > 0 && Ib(a) && c.push({
                TAG: 0,
                _0: {
                    TAG: 11,
                    _0: e
                }
            });
            f = a.roger;
            f == null || c.push({
                TAG: 0,
                _0: {
                    TAG: 6,
                    _0: f
                }
            });
            e = a.montage_delete_message_delta;
            e == null || c.push({
                TAG: 0,
                _0: {
                    TAG: 61,
                    _0: e
                }
            });
            f = a.montage_new_message_delta;
            f == null || c.push({
                TAG: 0,
                _0: {
                    TAG: 59,
                    _0: f
                }
            });
            e = a.montage_poll_sticker_vote;
            e == null || e.forEach(function(a) {
                c.push({
                    TAG: 1,
                    _0: {
                        TAG: 3,
                        _0: a
                    }
                })
            });
            f = a.current_montage_thread;
            if (!(f == null)) {
                e = f.user;
                if (!(e == null)) {
                    f = e.messenger_montage_thread;
                    f == null || (c.push({
                        TAG: 0,
                        _0: {
                            TAG: 60,
                            _0: e.id
                        }
                    }), f.montage_messages.edges.forEach(function(a) {
                        c.push({
                            TAG: 0,
                            _0: {
                                TAG: 59,
                                _0: a.node
                            }
                        })
                    }))
                }
            }
            e = a.unread_thread_fbids;
            e == null || c.push({
                TAG: 0,
                _0: {
                    TAG: 63,
                    _0: e
                }
            });
            f = a.message_counts;
            f == null || c.push({
                TAG: 0,
                _0: {
                    TAG: 64,
                    _0: f
                }
            });
            e = a.actions;
            if (!(e == null)) {
                var i = a.payload_source,
                    j = i == null ? void 0 : b("bs_caml_option").some(i);
                e.forEach(function(d) {
                    var e = d.action_type,
                        f = 0;
                    (i == null || !i.startsWith("server")) && (f = 1);
                    f === 1 && c.push({
                        TAG: 1,
                        _0: {
                            TAG: 5,
                            _0: d.timestamp
                        }
                    });
                    if (b("bs_caml_obj").caml_equal(j, b("bs_caml_option").some(b("MercuryPayloadSource").SERVER_SEARCH))) {
                        c.push({
                            TAG: 0,
                            _0: {
                                TAG: 35,
                                _0: d,
                                _1: 0
                            }
                        });
                        return
                    }
                    if (b("bs_caml_obj").caml_equal(b("bs_caml_option").nullable_to_opt(d.client_state), b("bs_caml_option").some(b("MercuryMessageClientState").SEND_TO_SERVER))) {
                        c.push({
                            TAG: 0,
                            _0: {
                                TAG: 35,
                                _0: d,
                                _1: 0
                            }
                        });
                        return
                    }
                    f = d.thread_id;
                    var g = d.upload_id,
                        h = d.upload_data,
                        k = d.message_ids;
                    ia(d);
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").DELETE_MESSAGES))
                        if (!(f == null) && !(k == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 36,
                                    _0: f,
                                    _1: k,
                                    _2: j
                                }
                            });
                            return
                        } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").CHANGE_FOLDER)) {
                        k = d.new_folder;
                        if (!(f == null) && !(k == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 37,
                                    _0: f,
                                    _1: k
                                }
                            });
                            return
                        } else return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").CHANGE_ARCHIVED_STATUS))
                        if (!(f == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 39,
                                    _0: f,
                                    _1: d.archived
                                }
                            });
                            return
                        } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").CHANGE_MUTE_SETTINGS)) {
                        k = d.reactions_mute_mode;
                        var l = d.mentions_mute_mode,
                            m = d.mute_until;
                        l = k == null ? l == null ? m == null ? void 0 : {
                            TAG: 2,
                            _0: m
                        } : m == null ? {
                            TAG: 1,
                            _0: l === 1
                        } : void 0 : !(l == null) || !(m == null) ? void 0 : {
                            TAG: 0,
                            _0: k === 1
                        };
                        if (!(f == null) && l !== void 0) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 38,
                                    _0: f,
                                    _1: l
                                }
                            });
                            return
                        } else return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").CHANGE_READ_STATUS)) {
                        if (f == null) return;
                        m = a.from_client;
                        c.push({
                            TAG: 0,
                            _0: {
                                TAG: 43,
                                _0: f,
                                _1: d.mark_as_read,
                                _2: d.timestamp,
                                _3: m == null ? !1 : m,
                                _4: d.source
                            }
                        });
                        return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").CHANGE_PAGE_FOLLOW_UP_STATUS))
                        if (!(f == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 40,
                                    _0: f,
                                    _1: d.is_page_follow_up
                                }
                            });
                            return
                        } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").CHANGE_PRIORITIZATION_STATUS))
                        if (!(f == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 41,
                                    _0: f,
                                    _1: d.is_priority
                                }
                            });
                            return
                        } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").CHANGE_UNRESPONDED_STATUS))
                        if (!(f == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 42,
                                    _0: f,
                                    _1: d.is_page_unresponded_thread
                                }
                            });
                            return
                        } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").BLOCK_STATUS_CHANGED)) {
                        if (f == null) return;
                        k = d.canViewerReply ? null : b("MessengerThreadCannotReplyReason.bs").fromMessageThreadCannotReplyReason(d.reason);
                        c.push({
                            TAG: 0,
                            _0: {
                                TAG: 13,
                                _0: f,
                                _1: d.canViewerReply,
                                _2: k
                            }
                        });
                        return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").DELETE_THREAD))
                        if (!(f == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 44,
                                    _0: f
                                }
                            });
                            return
                        } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").REACTION_UPDATE)) {
                        l = d.messageId;
                        m = d.userId;
                        if (!(l == null) && !(m == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 47,
                                    _0: l,
                                    _1: b("bs_caml_option").nullable_to_opt(d.reaction),
                                    _2: m,
                                    _3: j
                                }
                            });
                            return
                        } else return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").MONTAGE_DIRECT_EXPIRE)) {
                        k = d.messageId;
                        if (!(k == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 48,
                                    _0: k,
                                    _1: j
                                }
                            });
                            return
                        } else return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").LIVE_LOCATION_UPDATE)) {
                        l = d.messageId;
                        m = d.liveLocation;
                        if (!(l == null) && !(m == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 49,
                                    _0: l,
                                    _1: m,
                                    _2: j
                                }
                            });
                            return
                        } else return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").REPLACE_MESSAGE)) {
                        c.push({
                            TAG: 0,
                            _0: {
                                TAG: 50,
                                _0: d,
                                _1: j
                            }
                        });
                        return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").CONFIRM_ATTACHMENT_PLACEHOLDER))
                        if (!(g == null) && !(h == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 46,
                                    _0: g,
                                    _1: h
                                }
                            });
                            return
                        } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").CANCEL_ATTACHMENT_PLACEHOLDER))
                        if (!(g == null) && !(h == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 45,
                                    _0: g,
                                    _1: h,
                                    _2: j
                                }
                            });
                            return
                        } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").SEND_MESSAGE)) {
                        c.push({
                            TAG: 0,
                            _0: {
                                TAG: 52,
                                _0: d,
                                _1: j
                            }
                        });
                        return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").USER_GENERATED_MESSAGE)) {
                        c.push({
                            TAG: 0,
                            _0: {
                                TAG: 53,
                                _0: d,
                                _1: j,
                                _2: a.from_client
                            }
                        });
                        return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").LOG_MESSAGE))
                        if (!b("MessengerMessage.bs").isLocalMessage(d)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 54,
                                    _0: d,
                                    _1: j,
                                    _2: a.from_client
                                }
                            });
                            return
                        } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").CHANGE_PINNED_STATUS))
                        if (!(f == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 57,
                                    _0: f,
                                    _1: d.is_pinned,
                                    _2: d.thread_pin_timestamp
                                }
                            });
                            return
                        } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").PIN_MESSAGE))
                        if (!(f == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 55,
                                    _0: f,
                                    _1: d.pin_message_action
                                }
                            });
                            return
                        } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").UNPIN_MESSAGE))
                        if (!(f == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 56,
                                    _0: f,
                                    _1: d.unpin_message_action
                                }
                            });
                            return
                        } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").REMOVE_MESSAGE)) {
                        k = d.thread_id;
                        l = d.messageId;
                        m = d.removed_timestamp;
                        g = d.author;
                        if (!(k == null) && !(l == null) && !(m == null) && !(g == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 66,
                                    _0: k,
                                    _1: l,
                                    _2: g,
                                    _3: m,
                                    _4: j
                                }
                            });
                            b("MessengerDesktopNotifications").removeNotification(l);
                            return
                        } else return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").UNSUBSCRIBE_STATUS_UPDATE))
                        if (!(f == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 12,
                                    _0: f,
                                    _1: d.page_unsubscribe_status
                                }
                            });
                            return
                        } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").BLURRED_IMAGE_STATUS)) {
                        h = d.image_message_id;
                        k = d.image_id;
                        g = d.should_show;
                        m = d.blurred_image_uri;
                        if (!(h == null) && !(k == null) && !(g == null) && !(m == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 71,
                                    _0: h,
                                    _1: k,
                                    _2: g,
                                    _3: m,
                                    _4: j
                                }
                            });
                            return
                        } else return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").ADD_PARTICIPANTS))
                        if (!(f == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 14,
                                    _0: f,
                                    _1: d.participants
                                }
                            });
                            return
                        } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").CHANGE_FLAG))
                        if (!(f == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 15,
                                    _0: f,
                                    _1: d.mark_as_flag
                                }
                            });
                            return
                        } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").MOVE_PENDING_TO_INBOX))
                        if (!(f == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 16,
                                    _0: f
                                }
                            });
                            return
                        } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").PROMOTE_GROUP_ADMINS)) {
                        l = d.promoted_admins;
                        if (!(f == null) && !(l == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 18,
                                    _0: f,
                                    _1: l
                                }
                            });
                            return
                        } else return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").REMOVE_GROUP_ADMINS)) {
                        h = d.removed_admin_ids;
                        if (!(f == null) && !(h == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 19,
                                    _0: f,
                                    _1: h
                                }
                            });
                            return
                        } else return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").JOINABLE_MODE))
                        if (!(f == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 20,
                                    _0: f,
                                    _1: d.joinable_mode
                                }
                            });
                            return
                        } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").APPROVAL_MODE))
                        if (!(f == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 21,
                                    _0: f,
                                    _1: d.approval_mode
                                }
                            });
                            return
                        } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").APPROVAL_QUEUE))
                        if (!(f == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 22,
                                    _0: f,
                                    _1: d.added_id,
                                    _2: d.added_group_id,
                                    _3: d.removed_id,
                                    _4: d.removed_group_id
                                }
                            });
                            return
                        } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").IS_PIN_PROTECTED))
                        if (!(f == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 23,
                                    _0: f,
                                    _1: d.is_pin_protected
                                }
                            });
                            return
                        } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").UPDATE_RTC_CALL_DATA))
                        if (!(f == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 24,
                                    _0: f,
                                    _1: d.initiator_fbid,
                                    _2: d.call_state,
                                    _3: d.server_info_data
                                }
                            });
                            return
                        } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").UPDATE_COMM_STATUS))
                        if (!(f == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 25,
                                    _0: f,
                                    _1: d.comm_status
                                }
                            });
                            return
                        } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").UPDATE_COMM_ITEM_OWNER))
                        if (!(f == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 26,
                                    _0: f,
                                    _1: d.id,
                                    _2: d.name,
                                    _3: d.profile_pic_uri
                                }
                            });
                            return
                        } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").EVENT_RSVP_CHANGED))
                        if (!(f == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 27,
                                    _0: f,
                                    _1: d.actor_fbid,
                                    _2: d.rsvp_status
                                }
                            });
                            return
                        } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").UPDATE_CONNECTIVITY_STATUS)) {
                        k = d.thread_connectivity_status;
                        if (!(f == null) && !(k == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 67,
                                    _0: f,
                                    _1: k
                                }
                            });
                            return
                        } else return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").GROUPS_SYNC_STATUS_CHANGED))
                        if (!(f == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 28,
                                    _0: f,
                                    _1: d.groups_sync_action,
                                    _2: d.groups_sync_status_string
                                }
                            });
                            return
                        } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").GROUPS_SYNC_METADATA_UPDATE))
                        if (!(f == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 29,
                                    _0: f,
                                    _1: d.groups_sync_action,
                                    _2: d.fb_group_id,
                                    _3: d.emoji_codepoints
                                }
                            });
                            return
                        } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").DESCRIPTION_CHANGED))
                        if (!(f == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 30,
                                    _0: f,
                                    _1: d.group_thread_description_string
                                }
                            });
                            return
                        } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").UPDATE_THREAD_THEME))
                        if (!(f == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 31,
                                    _0: f,
                                    _1: {
                                        solid_color: d.solid_color,
                                        header_color: d.header_color,
                                        footer_color: d.footer_color,
                                        gradient_colors: d.gradient_colors,
                                        theme_id: d.theme_id,
                                        reactions: d.reactions
                                    }
                                }
                            });
                            return
                        } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").UPDATE_JOINABLE_LINK))
                        if (!(f == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 32,
                                    _0: f,
                                    _1: d.joinable_link
                                }
                            });
                            return
                        } else return;
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").MUTATE_TAGS)) {
                        g = d.tags_to_add;
                        m = g == null ? [] : g;
                        l = d.tags_to_delete;
                        h = l == null ? [] : l;
                        k = d.messageId;
                        if (!(k == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 69,
                                    _0: k,
                                    _1: m,
                                    _2: h,
                                    _3: j
                                }
                            });
                            return
                        } else return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").ADS_CONVERSION_UPDATE)) {
                        g = d.conversion_detection_data;
                        if (!(f == null) && !(g == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 70,
                                    _0: f,
                                    _1: g
                                }
                            });
                            return
                        } else return
                    }
                    if (b("bs_caml_obj").caml_equal(e, b("MercuryActionType").SUGGESTED_REPLY_UPDATE)) {
                        l = d.suggested_reply_data;
                        if (!(f == null) && !(l == null)) {
                            c.push({
                                TAG: 0,
                                _0: {
                                    TAG: 72,
                                    _0: f,
                                    _1: l
                                }
                            });
                            return
                        } else return
                    }
                    if (!b("bs_caml_obj").caml_equal(e, b("MercuryActionType").UPDATE_SECONDARY_LANGUAGE_BODY)) return;
                    k = d.secondary_language_body;
                    m = d.messageId;
                    if (!(k == null) && !(m == null)) {
                        c.push({
                            TAG: 0,
                            _0: {
                                TAG: 73,
                                _0: m,
                                _1: k,
                                _2: j
                            }
                        });
                        return
                    }
                });
                b("Utils.bs").isTruthy(a.from_client) && e.forEach(function(a) {
                    var b = a.thread_id;
                    if (!(b == null)) {
                        c.push({
                            TAG: 0,
                            _0: {
                                TAG: 51,
                                _0: b,
                                _1: a.message_id
                            }
                        });
                        return
                    }
                })
            }
            f = a.end_of_history;
            f == null || c.push({
                TAG: 0,
                _0: {
                    TAG: 62,
                    _0: f,
                    _1: a.payload_source
                }
            })
        }
        d && c.unshift({
            TAG: 0,
            _0: 0
        });
        return c
    }

    function Mb(c, d) {
        var a = {
                contents: []
            },
            e = function(b, c) {
                c = b.orderedMessageLists.get(d);
                if (!(c == null)) {
                    a.contents = F(!0, b, c.messageIDs);
                    return
                }
            };
        $(b("bs_caml_option").some(c), [{
            TAG: 2,
            _0: {
                TAG: 3,
                _0: e
            }
        }]);
        return a.contents
    }

    function Nb(c, d) {
        var a = {
                contents: d
            },
            e = function(b, c) {
                c = b.localIDsMap.get(d);
                if (!(c == null)) {
                    a.contents = c;
                    return
                }
            };
        $(b("bs_caml_option").some(c), [{
            TAG: 2,
            _0: {
                TAG: 3,
                _0: e
            }
        }]);
        return a.contents
    }

    function Ob(a, c) {
        var d = {
                contents: void 0
            },
            e = function(a, b) {
                d.contents = a
            };
        $(b("bs_caml_option").some(a), [{
            TAG: 2,
            _0: {
                TAG: 3,
                _0: e
            }
        }]);
        a = d.contents;
        if (a !== void 0) return F(!1, a, c);
        else return []
    }

    function Pb(a, c) {
        var d = {
                contents: void 0
            },
            e = function(a, b) {
                d.contents = a
            };
        $(b("bs_caml_option").some(a), [{
            TAG: 2,
            _0: {
                TAG: 3,
                _0: e
            }
        }]);
        a = d.contents;
        if (a !== void 0) return b("bs_caml_option").nullable_to_opt(a.messages.get(c))
    }

    function Qb(a, c, d) {
        var e = {
                contents: !1
            },
            f = function(a, b) {
                b = a.orderedMessageLists.get(c);
                if (b == null) return;
                a = b.messageLoadingState;
                b = b.messageIDs.length;
                a ? e.contents = !0 : e.contents = b >= d
            };
        $(b("bs_caml_option").some(a), [{
            TAG: 2,
            _0: {
                TAG: 3,
                _0: f
            }
        }]);
        return e.contents
    }

    function Rb(a, c) {
        var d = {
                contents: !1
            },
            e = function(a, b) {
                b = a.orderedMessageLists.get(c);
                if (b == null) return;
                a = b.messageLoadingState;
                a ? d.contents = !0 : d.contents = !1
            };
        $(b("bs_caml_option").some(a), [{
            TAG: 2,
            _0: {
                TAG: 3,
                _0: e
            }
        }]);
        return d.contents
    }

    function Sb(a, c) {
        return $(b("bs_caml_option").some(a), [{
            TAG: 1,
            _0: {
                TAG: 2,
                _0: c
            }
        }])
    }

    function Tb(a, c, d, e) {
        var f = [],
            g = function(g, h) {
                h = g.orderedMessageLists.get(c);
                if (h == null) return;
                h = h.messageIDs;
                for (var i = d, j = d + e | 0; i <= j; ++i) {
                    var a = b("bs_belt_Option").flatMap(b("bs_belt_Array").get(h, i), function(a) {
                        return E(g, a)
                    });
                    a !== void 0 && f.push(b("bs_caml_option").valFromOption(a))
                }
            };
        $(b("bs_caml_option").some(a), [{
            TAG: 2,
            _0: {
                TAG: 3,
                _0: g
            }
        }]);
        return f
    }
    var Ub = {
        contents: void 0
    };

    function Vb(a, c, d, e, f, g, h) {
        var i = function(j, i) {
            Ub.contents = [c, d, e];
            var k = j.orderedMessageLists.get(c);
            k = k == null ? [
                [], void 0
            ] : [k.messageIDs, k.messageLoadingState];
            var l = k[0];
            if (b("bs_js_dict").get(i.failedHistoryFetchThreads.contents, c) !== !0) {
                var m = l.length - b("bs_belt_Option").getWithDefault(b("bs_caml_option").nullable_to_opt(i.localTitanMessageCount.get(c)), 0) | 0;
                m > 0 && b("ChatReliabilityInstrumentation").logERROR("fetch made with message in flight");
                var n = m - d | 0;
                n = e - n | 0;
                if (!(n > 0 && b("bs_caml_obj").caml_notequal(k[1], 1))) return b("bs_curry")._1(f, b("bs_belt_Array").keepMap(l, function(a) {
                    return E(j, a)
                }).slice(d, e));
                k = b("MercuryServerRequests").getForFBID(a);
                l = b("bs_js_null_undefined").fromOption(b("bs_belt_Option").map(b("bs_belt_Option").flatMap(b("bs_belt_Array").get(l, m - 1 | 0), function(a) {
                    return E(j, a)
                }), function(a) {
                    return a.timestamp
                }));
                var o = i.messageSubToken.contents;
                i.messageSubToken.contents = o + 1 | 0;
                i.messageCallbacks.contents[String(o)] = [{
                    threadID: c,
                    offset: d,
                    limit: e
                }, f];
                if (b("bs_caml_obj").caml_equal([c, d, e], Ub.contents)) {
                    k.fetchThreadMessages(c, m, n, l, g, h);
                    return
                } else return
            }
            Ub.contents = void 0;
            i.failedHistoryFetchThreads.contents[c] = !1
        };
        return $(b("bs_caml_option").some(a), [{
            TAG: 2,
            _0: {
                TAG: 3,
                _0: i
            }
        }])
    }

    function Wb(a, b, c, d, e, f, g) {
        if (!Rb(a, b)) return Vb(a, b, c, d, e, f, g)
    }

    function Xb(a) {
        var c = {
                contents: 0
            },
            d = function(d, a) {
                c.contents = b("bs_caml").caml_int_min(O(d, a), b("MercuryThreadlistConstants").MAX_UNSEEN_COUNT)
            };
        $(b("bs_caml_option").some(a), [{
            TAG: 2,
            _0: {
                TAG: 3,
                _0: d
            }
        }]);
        return c.contents
    }

    function Yb(a) {
        var c = {
                contents: 0
            },
            d = function(b, a) {
                c.contents = O(b, a)
            };
        $(b("bs_caml_option").some(a), [{
            TAG: 2,
            _0: {
                TAG: 3,
                _0: d
            }
        }]);
        return c.contents
    }

    function Zb(a) {
        var c = {
                contents: 0
            },
            d = function(d, a) {
                c.contents = b("bs_caml").caml_int_min(nb(d, a, !0), b("MercuryThreadlistConstants").MAX_UNSEEN_COUNT)
            };
        $(b("bs_caml_option").some(a), [{
            TAG: 2,
            _0: {
                TAG: 3,
                _0: d
            }
        }]);
        return c.contents
    }

    function $b(a) {
        return $(b("bs_caml_option").some(a), [{
            TAG: 1,
            _0: 1
        }])
    }

    function ac(a, c) {
        var d = {
                contents: null
            },
            e = function(a, e) {
                e = b("bs_js_dict").get(a.unreadCounts, c);
                d.contents = e !== void 0 ? b("bs_belt_Array").keepMap(b("JSSet.bs").values(b("bs_caml_option").valFromOption(e)), function(c) {
                    return b("bs_caml_option").nullable_to_opt(m(a, c))
                }).filter(function(a) {
                    var c = !b("MercuryThreadInfo").isMuted(a);
                    if (b("gkx")("1696")) return c;
                    else if (c) return a.unread_count > 0;
                    else return !1
                }).length : null
            };
        $(b("bs_caml_option").some(a), [{
            TAG: 2,
            _0: {
                TAG: 3,
                _0: e
            }
        }]);
        return d.contents
    }

    function bc(a) {
        var c = {
                contents: []
            },
            d = function(a, d) {
                c.contents = b("bs_belt_Map").keysToArray(a.threads)
            };
        $(b("bs_caml_option").some(a), [{
            TAG: 2,
            _0: {
                TAG: 3,
                _0: d
            }
        }]);
        return c.contents
    }
    S = {
        make: ub
    };
    T = ub;
    f.irisMapping = k;
    f.fbid = c;
    f.deliveryReceipts = d;
    f.readReceiptsPerThread = e;
    f.ignoredIds = n;
    f.blockedIds = o;
    f.pendingFolderUnseenCount = p;
    f.typing = aa;
    f.pendingReadStatusThreads = q;
    f.messages = r;
    f.localIDsMap = s;
    f.messagesWithUploadsInFlight = ba;
    f.threadlistOrderMap = ca;
    f.pinnedThreads = t;
    f.montage = da;
    f.orderedMessageLists = ea;
    f.unreadCounts = fa;
    f.initialUnreadCounts = ga;
    f.unseenTimestamp = ha;
    f.threads = a;
    f.thread = m;
    f.send = $;
    f.compute = wb;
    f.getThreadMetaNow = xb;
    f.getMultiThreadMeta = yb;
    f.getThreadMeta = zb;
    f.createNewLocalThread = Ab;
    f.createNewLocalThreadGenerateID = Bb;
    f.createNewLocalGroupGeneralThreadGenerateID = Db;
    f.isEmptyLocalThread = Eb;
    f.isNewEmptyLocalThread = Fb;
    f.getPinnedThreadlist = Gb;
    f.unsubscribeThread = Hb;
    f.sendJS = Kb;
    f.invalidateSearchedMessages = Sb;
    f.hasLoadedNMessages = Qb;
    f.hasLoadedAllMessages = Rb;
    f.getCurrentlyLoadedMessages = Mb;
    f.getServerMessageID = Nb;
    f.getMessagesFromIDs = Ob;
    f.getMessageFromID = Pb;
    f.getThreadMessagesRange = Vb;
    f.getThreadMessagesRangeNow = Tb;
    f.fetchMoreMessages = Wb;
    f.processPollStickerVoted = Jb;
    f.getUnseenUnreadCount = Xb;
    f.getUnseenUnreadCountRaw = Yb;
    f.getUnseenCount = Zb;
    f.getThreadIDs_debug = bc;
    f.getUnreadThreadCount = ac;
    f.markAsSeen = $b;
    f.processJSActions = Lb;
    f.Provider = S;
    f.jsComponent = T;
    f.useHook = vb
}), null);
__d("MessengerState.re", ["MessengerState.bs", "bs_curry"], (function(a, b, c, d, e, f) {
    c = (a = b("MessengerState.bs")).fbid;
    f.fbid = c;
    d = a.deliveryReceipts;
    f.deliveryReceipts = d;
    e = a.readReceiptsPerThread;
    f.readReceiptsPerThread = e;
    c = a.ignoredIds;
    f.ignoredIds = c;
    d = a.blockedIds;
    f.blockedIds = d;
    e = a.pendingFolderUnseenCount;
    f.pendingFolderUnseenCount = e;
    c = a.typing;
    f.typing = c;
    d = a.pendingReadStatusThreads;
    f.pendingReadStatusThreads = d;
    e = a.messages;
    f.messages = e;
    c = a.localIDsMap;
    f.localIDsMap = c;
    d = a.threadlistOrderMap;
    f.threadlistOrderMap = d;
    e = a.pinnedThreads;
    f.pinnedThreads = e;
    c = a.montage;
    f.montage = c;
    d = a.orderedMessageLists;
    f.orderedMessageLists = d;
    e = a.unreadCounts;
    f.unreadCounts = e;
    c = a.initialUnreadCounts;
    f.initialUnreadCounts = c;
    d = a.unseenTimestamp;
    f.unseenTimestamp = d;
    e = a.threads;
    f.threads = e;
    c = function(a, c) {
        a = b("bs_curry")._2(b("MessengerState.bs").thread, a, c);
        return a
    };
    f.thread = c;
    d = function(a, c) {
        a = b("bs_curry")._2(b("MessengerState.bs").compute, a, c);
        return a
    };
    f.compute = d;
    e = function(a, c) {
        a = b("bs_curry")._2(b("MessengerState.bs").getThreadMetaNow, a, c);
        return a
    };
    f.getThreadMetaNow = e;
    c = function(a, c, d, e) {
        a = b("bs_curry")._4(b("MessengerState.bs").getMultiThreadMeta, a, c, d, e);
        return a
    };
    f.getMultiThreadMeta = c;
    d = function(a, c, d, e) {
        a = b("bs_curry")._4(b("MessengerState.bs").getThreadMeta, a, c, d, e);
        return a
    };
    f.getThreadMeta = d;
    e = function(a, c) {
        a = b("bs_curry")._2(b("MessengerState.bs").isEmptyLocalThread, a, c);
        return a
    };
    f.isEmptyLocalThread = e;
    c = a.getPinnedThreadlist;
    f.getPinnedThreadlist = c;
    d = function(a, c) {
        a = b("bs_curry")._2(b("MessengerState.bs").unsubscribeThread, a, c);
        return a
    };
    f.unsubscribeThread = d;
    e = function(a, c, d) {
        a = b("bs_curry")._3(b("MessengerState.bs").hasLoadedNMessages, a, c, d);
        return a
    };
    f.hasLoadedNMessages = e;
    c = function(a, c) {
        a = b("bs_curry")._2(b("MessengerState.bs").getCurrentlyLoadedMessages, a, c);
        return a
    };
    f.getCurrentlyLoadedMessages = c;
    d = function(a, c) {
        a = b("bs_curry")._2(b("MessengerState.bs").getServerMessageID, a, c);
        return a
    };
    f.getServerMessageID = d;
    e = function(a, c) {
        a = b("bs_curry")._2(b("MessengerState.bs").getMessagesFromIDs, a, c);
        return a
    };
    f.getMessagesFromIDs = e;
    c = function(a, c) {
        a = b("bs_curry")._2(b("MessengerState.bs").getMessageFromID, a, c);
        return a
    };
    f.getMessageFromID = c;
    d = function(a, c, d, e, f, g, h) {
        a = b("bs_curry")._7(b("MessengerState.bs").getThreadMessagesRange, a, c, d, e, f, g, h);
        return a
    };
    f.getThreadMessagesRange = d;
    e = function(a, c, d, e) {
        a = b("bs_curry")._4(b("MessengerState.bs").getThreadMessagesRangeNow, a, c, d, e);
        return a
    };
    f.getThreadMessagesRangeNow = e;
    c = function(a, c, d, e, f, g, h) {
        a = b("bs_curry")._7(b("MessengerState.bs").fetchMoreMessages, a, c, d, e, f, g, h);
        return a
    };
    f.fetchMoreMessages = c;
    d = a.getUnseenUnreadCount;
    f.getUnseenUnreadCount = d;
    e = a.getUnseenCount;
    f.getUnseenCount = e;
    c = a.getThreadIDs_debug;
    f.getThreadIDs_debug = c;
    d = function(a, c) {
        a = b("bs_curry")._2(b("MessengerState.bs").getUnreadThreadCount, a, c);
        return a
    };
    f.getUnreadThreadCount = d;
    e = a.jsComponent;
    f.jsComponent = e;
    c = a.useHook;
    f.useHook = c
}), null);
__d("MercuryDelayedDispatcher", ["MercuryDispatcher", "MercuryServerPayloadPreprocessor", "MercuryServerRequests", "MercurySingletonProvider", "MercuryThreadIDMap"], (function(a, b, c, d, e, f, g) {
    "use strict";
    a = function() {
        function a(a) {
            var b = this;
            this.$1 = a;
            this.$2 = [];
            this.$3 = c("MercuryThreadIDMap").getForFBID(this.$1);
            this.$4 = c("MercuryDispatcher").getForFBID(this.$1);
            this.$5 = c("MercuryServerRequests").getForFBID(this.$1);
            this.$6 = c("MercuryServerPayloadPreprocessor").getForFBID(this.$1);
            this.$4.subscribe("model-update-completed", function(a, c) {
                return b.$7()
            })
        }
        a.getForFBID = function(a) {
            return h.getForFBID(a)
        };
        a.get = function() {
            return h.get()
        };
        var b = a.prototype;
        b.handleUpdateWaitForThread = function(a, b) {
            var c = this,
                d = this.$3.getClientIDFromServerIDNow(b);
            if (d) {
                this.$8(a);
                return
            }
            this.$3.getClientIDFromServerID(b, function() {
                return c.$2.push({
                    thread_fbid: b,
                    payload: a
                })
            });
            this.$5.ensureThreadIsFetched(b)
        };
        b.$7 = function() {
            if (this.$2 && this.$2.length) {
                var a = this.$2.shift(),
                    b = a.thread_fbid;
                a = a.payload;
                this.handleUpdateWaitForThread(a, b)
            }
        };
        b.$8 = function(a) {
            a.from_client ? this.$4.handleUpdate(a) : this.$6.handleUpdate(a)
        };
        return a
    }();
    var h = new(c("MercurySingletonProvider"))(a);
    g["default"] = a
}), 98);
__d("MercuryDispatcher", ["invariant", "ArbiterMixin", "LogHistory", "MercuryMessagingLightswitch", "MercurySingletonProvider", "MercuryThreadInformer", "MessengerParticipants.bs", "MessengerState.bs", "gkx", "isEmpty", "mixin"], (function(a, b, c, d, e, f, g, h) {
    "use strict";
    var i = d("LogHistory").getInstance("mercury_dispatcher");
    a = function(a) {
        babelHelpers.inheritsLoose(b, a);
        b.getForFBID = function(a) {
            return j.getForFBID(a)
        };
        b.get = function() {
            return j.get()
        };

        function b(b) {
            var c;
            c = a.call(this) || this;
            c.$MercuryDispatcher1 = b;
            return c
        }
        var e = b.prototype;
        e.handlePreprocessedUpdate = function(a) {
            a.preprocessed = !0, this.handleUpdate(a)
        };
        e.handleUpdate = function(a) {
            var b = this;
            this.$MercuryDispatcher2(a);
            !!a.from_client !== !!a.preprocessed || h(0, 5757);
            delete a.preprocessed;
            c("isEmpty")(a) || c("MercuryThreadInformer").getForFBID(this.$MercuryDispatcher1).synchronizeInforms(function() {
                a.payload_source === "server_invalidate_global_state" && (b.inform("invalidate-global-state", {}), d("MessengerParticipants.bs").reset());
                if (a.payload_source === "server_fetch_thread_info" && a.error_actions && a.error_actions.length) {
                    b.inform("thread-error", a);
                    return
                }
                if (a.payload_source === "server_invalidate_thread_state") {
                    var e = a.threads && a.threads.length > 0 && a.threads[0] && a.threads[0].thread_id;
                    e && b.inform("invalidate-thread-state", e)
                }
                a.threads && Array.isArray(a.threads) && a.threads.length > 0 && c("gkx")("1443200") && d("MessengerParticipants.bs").addPreloadedParticipants(a.threads[0]);
                d("MessengerParticipants.bs").addParticipants(a);
                d("MessengerState.bs").sendJS(b.$MercuryDispatcher1, d("MessengerState.bs").processJSActions(a));
                b.inform("update-threadlist", a);
                b.inform("update-messages", a);
                b.inform("model-update-completed", null)
            })
        };
        e.$MercuryDispatcher2 = function(a) {
            var b = a.payload_source;
            if (b === "client_change_read_status" || b === "client_mark_thread_seen") return;
            var d = {
                from_client: a.from_client,
                messages: null
            };
            if (a.actions) {
                a = a.actions.filter(function(a) {
                    return a.action_type === "ma-type:user-generated-message" || a.action_type === "ma-type:log-message"
                }).map(function(a) {
                    return {
                        action_type: a.action_type,
                        other_user_fbid: a.other_user_fbid,
                        thread_fbid: a.thread_fbid,
                        message_id: a.message_id
                    }
                });
                a.length && (d.messages = a)
            }
            c("MercuryMessagingLightswitch").guard(function() {
                i.debug("update:" + b, JSON.stringify(d))
            })
        };
        return b
    }(c("mixin")(c("ArbiterMixin")));
    var j = new(c("MercurySingletonProvider"))(a);
    g["default"] = a
}), 98);
__d("MercurySendErrorLogger", ["Banzai", "BanzaiLogger", "MercuryMessagingLightswitch"], (function(a, b, c, d, e, f, g) {
    var h = c("BanzaiLogger").create({
            retry: !0
        }),
        i = c("Banzai").isEnabled("mercury_send_error_logging");
    a = {
        log: function(a) {
            if (!i) return;
            c("MercuryMessagingLightswitch").guard(function() {
                var b = {
                    message_id: a.message_id,
                    timestamp_client: Date.now(),
                    error_type: a.error_data.type,
                    error_code: a.error_data.code,
                    error_description: a.error_data.description,
                    is_transient: a.error_data.is_transient
                };
                h.log("MercurySendErrorLoggerConfig", b)
            })
        }
    };
    b = a;
    g["default"] = b
}), 98);
__d("MercuryServerPayloadPreprocessor", ["invariant", "ChatReliabilityInstrumentation", "LogHistory", "MercuryAttachment", "MercuryDispatcher", "MercuryIDs", "MercuryMessagingLightswitch", "MercurySendErrorLogger", "MercurySingletonProvider", "MercuryThreadIDMap", "MessengerEnvironment", "MessengerState.re", "URI", "gkx"], (function(a, b, c, d, e, f, g, h) {
    "use strict";
    a = function() {
        function a(a) {
            this.$4 = d("LogHistory").getInstance("MercuryServerPayloadPreprocessor"), this.$1 = a, this.$2 = c("MercuryThreadIDMap").getForFBID(this.$1), this.$3 = c("MercuryDispatcher").getForFBID(this.$1)
        }
        a.getForFBID = function(a) {
            return i.getForFBID(a)
        };
        a.get = function() {
            return i.get()
        };
        var b = a.prototype;
        b.handleUpdate = function(a) {
            var b = this,
                f = {};
            a.from_client && h(0, 2150);
            (a.threads || []).forEach(function(a) {
                b.$5(a, f);
                var c = b.$2.getServerIDFromClientIDNow(a.thread_id);
                e(["MercuryServerRequests"], function(d) {
                    d = d.getForFBID(b.$1);
                    d.markThreadFetched(a.thread_id);
                    c && d.markThreadFetched(c);
                    d.updateLastActionTimestamp(a.timestamp)
                })
            });
            a.pinned_thread_ids = (a.pinned_thread_ids || []).map(function(a) {
                return b.$2.getClientIDFromServerIDNow(a)
            });
            (a.ordered_threadlists || []).forEach(function(a) {
                var c = a.thread_fbids || [];
                c = c.concat(a.other_user_fbids || []);
                a.thread_ids = c.map(function(a) {
                    return b.$2.getClientIDFromServerIDNow(a.toString())
                })
            });
            if (a.delivery_receipts) {
                var g = {};
                for (var i = a.delivery_receipts, j = Array.isArray(i), k = 0, i = j ? i : i[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]();;) {
                    var l;
                    if (j) {
                        if (k >= i.length) break;
                        l = i[k++]
                    } else {
                        k = i.next();
                        if (k.done) break;
                        l = k.value
                    }
                    l = l;
                    var m = l.other_user_fbid ? d("MercuryIDs").getThreadIDFromUserID(l.other_user_fbid) : this.$2.getClientIDFromServerIDNow(l.thread_fbid);
                    m && (g[m] = l.time)
                }
                a.delivery_receipts = g
            }
            a.actions = a.actions || [];
            a.actions.forEach(function(g) {
                g.action_type === "ma-type:send-message" && g.status === 10 && c("MercuryMessagingLightswitch").guard(function() {
                    c("MercurySendErrorLogger").log(g)
                });
                var i = null,
                    j = null;
                g.other_user_fbid ? (j = d("MercuryIDs").getThreadIDFromUserID(g.other_user_fbid), i = g.other_user_fbid) : g.thread_fbid ? (j = d("MercuryIDs").getThreadIDFromThreadFBID(g.thread_fbid), i = g.thread_fbid) : g.thread_id ? (j = d("MercuryIDs").getThreadIDFromThreadFBID(g.thread_id), i = g.thread_id) : g.status && g.status != 1 && g.client_thread_id ? j = g.client_thread_id : h(0, 2151, g.action_type, g.status);
                i = i && i.toString();
                g.thread_id = b.$2.hasClientIDForServerID(i) ? b.$2.getClientIDFromServerIDNow(i) : j;
                g.action_type == "ma-type:send-message" && g.client_thread_id && i && (g.thread_id = g.client_thread_id, b.$6("forceSetServerIDToClientID", i, g.client_thread_id) && d("ChatReliabilityInstrumentation").logSET_THREAD_ID_MAP(i + ":" + g.client_thread_id), b.$2.forceSetServerIDToClientID(i, g.client_thread_id), f[i] = g.client_thread_id);
                g.thread_id || h(0, 2152, g.action_type);
                (!a.payload_source || !a.payload_source.startsWith("server")) && e(["MercuryServerRequests"], function(a) {
                    a.getForFBID(b.$1).updateLastActionTimestamp(g.timestamp)
                })
            });
            this.$7(a);
            this.$8(a);
            if (a.end_of_history) {
                m = [];
                for (var l = 0; l < a.end_of_history.length; l++) {
                    k = a.end_of_history[l];
                    k.type == "user" ? m.push("user:" + k.fbid) : k.type == "thread" && this.$2.hasClientIDForServerID(k.fbid) && m.push(this.$2.getClientIDFromServerIDNow(k.fbid))
                }
                a.end_of_history = m
            }
            if (a.roger) {
                var n = {};
                Object.keys(a.roger).forEach(function(c) {
                    var e = Object.keys(a.roger[c]),
                        f;
                    c ? f = b.$2.getClientIDFromServerIDNow(c) : e.length === 1 && (f = d("MercuryIDs").getThreadIDFromUserID(e[0]));
                    if (f) {
                        e = a.roger[c];
                        n[f] = {};
                        for (var c in e)
                            if (Object.prototype.hasOwnProperty.call(e, c)) {
                                var g = d("MercuryIDs").getParticipantIDFromUserID(c);
                                n[f][g] = e[c]
                            }
                    }
                });
                a.roger = n
            }
            a.newlyAddedClientIDs = f;
            a.preprocessed = !0;
            this.$3.handleUpdate(a)
        };
        b.$6 = function(a, b, e) {
            var f = this;
            if (!c("gkx")("1199097")) return;
            var g = d("MessengerState.re").getThreadMetaNow(this.$1, e);
            if (g == null) {
                c("MercuryMessagingLightswitch").guard(function() {
                    f.$4.debug(a, b + ":" + e)
                });
                return !0
            }
            return !1
        };
        b.$5 = function(a, b) {
            var c = a.other_user_fbid ? a.other_user_fbid : a.thread_fbid;
            c || h(0, 2153);
            var e = this.$2.getClientIDFromServerIDNow(c);
            e || (e = a.other_user_fbid ? d("MercuryIDs").getThreadIDFromUserID(a.other_user_fbid) : d("MercuryIDs").getThreadIDFromThreadFBID(a.thread_fbid), this.$6("setServerIDToClientID", c, e), this.$2.setServerIDToClientID(c, e), this.$2.setDeprecatedServerIDToClientID(a.thread_id, e), b[c] = e);
            a.thread_id = e
        };
        b.$7 = function(a) {
            a.actions.forEach(function(a) {
                a.action_type === "ma-type:user-generated-message" && (a.attachments = a.attachments || [], a.attachments.forEach(function(a) {
                    if (d("MercuryAttachment").isShareAttachment(a) && a.share && c("MessengerEnvironment").messengerui) {
                        var b = new(c("URI"))(a.share.uri);
                        b.getDomain() || (a.share.uri = b.setDomain("facebook.com").setSubdomain(c("URI").getRequestURI().getSubdomain()).setProtocol("https").toString())
                    }
                }))
            })
        };
        b.$8 = function(a) {
            a.actions.forEach(function(a) {
                if (a.action_type !== "ma-type:user-generated-message") return;
                a = a;
                if (!a.has_attachment || !a.attachments) return;
                for (var b = a.attachments.length - 1; b >= 0; b -= 1) {
                    var c = a.attachments[b];
                    if (!c.share || !c.share.style_list || c.share.style_list[0] != "genie_message") continue;
                    c.share.target.genie_id && (a.author = d("MercuryIDs").getParticipantIDFromUserID(c.share.target.genie_id));
                    c.share.target && !c.share.target.attachment && (a.attachments.splice(b, 1), a.has_attachment = a.attachments.length > 0)
                }
            })
        };
        return a
    }();
    var i = new(c("MercurySingletonProvider"))(a);
    g["default"] = a
}), 98);
__d("MercuryClientSourceType", ["MercuryAPIArgsSource", "MercurySingletonProvider"], (function(a, b, c, d, e, f, g) {
    "use strict";
    a = function() {
        function a(a) {
            this.$1 = a, this.$2 = !1, this.$3 = c("MercuryAPIArgsSource").MERCURY
        }
        a.getForFBID = function(a) {
            return h.getForFBID(a)
        };
        var b = a.prototype;
        b.setSource = function(a) {
            a != null && this.$3 == null && (this.$3 = a)
        };
        b.getSource = function() {
            return this.$3
        };
        return a
    }();
    var h = new(c("MercurySingletonProvider"))(a);
    g["default"] = a
}), 98);
__d("MercuryServerSendMessageQueueOptions", [], (function(a, b, c, d, e, f) {
    a = function(a, b, c, d, e, f) {
        this.success_handler = a, this.error_handler = b, this.transport_error_handler = c, this.timeout_handler = d, this.timeout = e, this.connection_retries = f
    };
    f["default"] = a
}), 66);
__d("MercurySyncDeltaHolder", ["MercurySingletonProvider"], (function(a, b, c, d, e, f, g) {
    "use strict";
    a = function() {
        function a() {
            this.$2 = new Map(), this.$3 = [], this.$1 = 0
        }
        a.getForFBID = function(a) {
            return h.getForFBID(a)
        };
        a.get = function() {
            return h.get()
        };
        var b = a.prototype;
        b.peek = function() {
            this.$3 = this.$3.sort(function(a, b) {
                return a - b
            });
            return this.$3[0]
        };
        b.getTop = function() {
            this.$3 = this.$3.sort(function(a, b) {
                return a - b
            });
            return this.$3.reverse()[0]
        };
        b.pop = function() {
            this.$3 = this.$3.sort(function(a, b) {
                return a - b
            });
            if (this.$3.length === 0) return void 0;
            var a = this.$3.shift(),
                b = this.$2.get(a);
            this.$2["delete"](a);
            return {
                seqID: a,
                delta: b
            }
        };
        b.push = function(a, b) {
            if (this.$2.has(a)) return;
            this.$2.set(a, b);
            this.$3.push(a)
        };
        b.getLastSeqID = function() {
            return this.$1
        };
        b.updateLastSeqID = function(a) {
            this.$1 = a
        };
        b.updateLastSeqIDAndClearHistory = function(a) {
            this.$2 = new Map(), this.$3 = [], this.$1 = a
        };
        return a
    }();
    var h = new(c("MercurySingletonProvider"))(a);
    g["default"] = a
}), 98);
__d("XMercuryUnseenThreadIDsController", ["XController"], (function(a, b, c, d, e, f) {
    e.exports = b("XController").create("/mercury/unseen_thread_ids/", {})
}), null);
__d("MercuryServerRequests", ["errorCode", "invariant", "Arbiter", "AsyncResponse", "AvailableListConstants", "Bootloader", "ChannelConstants", "ChatReliabilityInstrumentation", "CurrentUser", "Env", "LogHistory", "MercuryAPIArgsSource", "MercuryAssert", "MercuryClientSourceType", "MercuryDispatcher", "MercuryIDs", "MercuryMessageClientState", "MercuryMessageIDs.bs", "MercuryMessagingLightswitch", "MercurySendErrorLogger", "MercuryServerDispatcher", "MercuryServerPayloadPreprocessor", "MercuryServerRequestsConfig", "MercuryServerSendMessageQueueOptions", "MercuryServerSendMessageQueueRouter", "MercuryServerURIs", "MercurySingletonProvider", "MercurySyncDeltaHolder", "MercuryTagHelper", "MercuryThreadIDMap", "MessagingConfig", "MessagingTag", "MessengerEnvironment", "MessengerWebEventsFalcoEvent", "ODS", "PresenceStatus", "Promise", "ScriptPath", "XMercuryUnseenThreadIDsController", "createObjectFrom", "promiseDone", "qpl", "setTimeoutAcrossTransitions"], (function(a, b, c, d, e, f, g, h, i) {
    "use strict";
    var j = d("LogHistory").getInstance("mercury_server"),
        k = 30 * 1e3;

    function l(a) {
        return a.getError() ? "_" + a.getError() : ""
    }

    function m(a, b) {
        var d = babelHelpers["extends"]({}, a),
            e;
        if (b.threads) {
            d.threads || (d.threads = {});
            for (e in b.threads) d.threads[e] = Object.keys(c("createObjectFrom")((d.threads[e] || []).concat(b.threads[e] || [])))
        }
        if (b.messages) {
            d.messages || (d.messages = {});
            for (e in b.messages) {
                d.messages[e] || (d.messages[e] = {});
                for (var f in b.messages[e]) d.messages[e][f] ? d.messages[e][f] = q(d.messages[e][f], b.messages[e][f]) : d.messages[e][f] = b.messages[e][f]
            }
        }
        d.client = a.client || b.client;
        return d
    }

    function n(a, b) {
        var d = Object.assign(c("createObjectFrom")(a.folders, !0), c("createObjectFrom")(b.folders, !0));
        a = a.client || b.client;
        return {
            folders: Object.keys(d),
            client: a
        }
    }

    function o(a, b) {
        for (var c in b)
            if (a[c] && typeof a[c] === "object") a[c] = q(a[c], b[c]);
            else if (b[c] && typeof b[c] === "object") {
            var d = {};
            Object.assign(d, b[c]);
            a[c] = d
        }
        return a
    }

    function p(a, b) {
        return b
    }

    function q(a, b) {
        var c = Math.max(a.limit, b.limit),
            d;
        !a.timestamp ? d = b.timestamp : !b.timestamp ? d = a.timestamp : d = Math.min(a.timestamp, b.timestamp);
        return {
            limit: c,
            timestamp: d
        }
    }

    function r(a, b) {
        var c = a.client || b.client;
        c = {
            ids: {},
            client: c
        };
        Object.assign(c.ids, a.ids, b.ids);
        return c
    }

    function s(a, b) {
        var d = {},
            e, f = a.client || b.client;
        delete a.client;
        delete b.client;
        for (e in a) Object.assign(d, c("createObjectFrom")(a[e], e));
        for (e in b) Object.assign(d, c("createObjectFrom")(b[e], e));
        a = {
            client: f
        };
        for (var b in d) e = d[b], a[e] || (a[e] = []), a[e].push(b);
        return a
    }

    function t(a, b) {
        var d = a.client || b.client;
        a = c("createObjectFrom")(a.ids, !0);
        b = c("createObjectFrom")(b.ids, !0);
        a = Object.assign(a, b);
        return {
            ids: Object.keys(a),
            client: d
        }
    }
    a = function() {
        function a(a) {
            var b = this;
            this.$1 = a;
            this.$2 = 0;
            this.$3 = {};
            this.$4 = {};
            this.__threadIDMap = c("MercuryThreadIDMap").getForFBID(this.$1);
            this.$5 = c("MercuryDispatcher").getForFBID(this.$1);
            this.$6 = c("MercuryServerPayloadPreprocessor").getForFBID(this.$1);
            this.$7 = new(c("MercuryServerSendMessageQueueOptions"))(function(a, c) {
                b.__handleUpdate(a, c)
            }, function(a) {
                return b.$9(a)
            }, function(a) {
                b.$10(a)
            }, function(a) {
                return b.$11(a)
            }, d("MercuryServerRequestsConfig").sendMessageTimeout, d("MessagingConfig").SEND_CONNECTION_RETRIES);
            this.$8 = c("MercurySyncDeltaHolder").getForFBID(this.$1);
            this.$12()
        }
        a.getForFBID = function(a) {
            return u.getForFBID(a)
        };
        a.get = function() {
            return u.get()
        };
        var e = a.prototype;
        e.fetchThreadlistInfo = function(a, b, e, f, g, h) {
            e === void 0 && (e = c("MessagingTag").INBOX);
            g === void 0 && (g = c("MercuryAPIArgsSource").MERCURY);
            var i = f ? d("MercuryServerDispatcher").IMMEDIATE : null;
            g = {
                client: g
            };
            g[e] = {
                offset: a,
                limit: b,
                filter: f,
                before: h
            };
            this.__sendRequest(d("MercuryServerURIs").THREADLIST_INFO, g, i)
        };
        e.fetchUnseenThreadIDs = function(a, b) {
            a === void 0 && c("MessagingTag").INBOX, b === void 0 && (b = c("MercuryAPIArgsSource").MERCURY), this.__sendRequest(c("XMercuryUnseenThreadIDsController").getURIBuilder().getURI().toString(), {})
        };
        e.fetchUnreadThreadIDs = function(a, b) {
            b === void 0 && (b = c("MercuryAPIArgsSource").MERCURY);
            var e = c("MercuryClientSourceType").getForFBID(this.$1);
            e = e.getSource();
            e != c("MercuryAPIArgsSource").MERCURY && (b = e);
            this.__sendRequest(d("MercuryServerURIs").UNREAD_THREADS, {
                folders: [a],
                client: b
            })
        };
        e.fetchThreadData = function(a, b) {
            var e = this;
            b === void 0 && (b = c("MercuryAPIArgsSource").MERCURY);
            d("MercuryAssert").allThreadID(a);
            var f = {
                    threads: {},
                    client: b
                },
                g = [],
                h = [];
            a.forEach(function(a) {
                if (e.$3[a]) return;
                e.$3[a] = !0;
                var b = e.__threadIDMap.getServerIDFromClientIDNow(a);
                a = d("MercuryIDs").tokenize(a);
                if (a.type == "user") g.push(a.value), f.threads.user_ids = g;
                else if (a.type == "thread") b ? h.push(b) : h.push(a.value), f.threads.thread_fbids = h;
                else if (a.type == "root") b && (h.push(b), f.threads.thread_fbids = h);
                else if (a.type != "pending") throw new Error("Unknown thread type", a)
            });
            f.threads.user_ids && f.threads.user_ids.forEach(function(a) {
                a || (c("MercuryMessagingLightswitch").guard(function() {
                    j.error("empty user id", JSON.stringify(g))
                }), d("ChatReliabilityInstrumentation").logERROR("Invalid user ID sent to thread_info.php: " + JSON.stringify(g)))
            });
            f.threads.thread_fbids && f.threads.thread_fbids.forEach(function(b) {
                b || d("ChatReliabilityInstrumentation").logERROR("Invalid FBID sent to thread_info.php: " + JSON.stringify(a))
            });
            for (var b in f.threads) {
                this.__sendRequest(d("MercuryServerURIs").THREAD_INFO, f);
                break
            }
        };
        e.ensureThreadIsFetched = function(a, b) {
            b === void 0 && (b = c("MercuryAPIArgsSource").MERCURY);
            if (!this.__threadIDMap.getClientIDFromServerIDNow(a) && !this.$3[a]) {
                if (!a) {
                    d("ChatReliabilityInstrumentation").logERROR("Ensure invalid FBID sent to thread_info.php");
                    j.error("attempting to fetch empty thread_fbid. Bad idea!");
                    return
                }
                this.$3[a] = !0;
                this.__sendRequest(d("MercuryServerURIs").THREAD_INFO, {
                    threads: {
                        thread_fbids: [a]
                    },
                    client: b
                })
            }
        };
        e.fetchThreadMessages = function(a, b, e, f, g, h) {
            var i = this;
            h === void 0 && (h = c("MercuryAPIArgsSource").MERCURY);
            d("MercuryAssert").isThreadID(a);
            var j;
            b = d("MercuryIDs").tokenize(a);
            var k = this.__threadIDMap.getServerIDFromClientIDNow(a),
                l = !1;
            if (k) k = k, j = b.type == "user" ? "user_ids" : "thread_fbids";
            else {
                k = b.value;
                switch (b.type) {
                    case "user":
                        j = "user_ids";
                        l = !0;
                        break;
                    case "thread":
                        j = "thread_fbids";
                        break
                }
            }
            var m = {
                messages: {},
                threads: {},
                client: h
            };
            j ? (m.messages[j] = {}, m.messages[j][k] = {
                timestamp: f,
                limit: e
            }, l && (m.threads[j] = [k]), this.__sendRequest(d("MercuryServerURIs").THREAD_INFO, m, g)) : this.__threadIDMap.getServerIDFromClientID(a, function(a) {
                m.messages.thread_fbids = {}, m.messages.thread_fbids[a] = {
                    timestamp: f,
                    limit: e
                }, i.__sendRequest(d("MercuryServerURIs").THREAD_INFO, m, g)
            })
        };
        e.handleThreadInfoError = function(a, b, e) {
            var f = this,
                g = a.getData();

            function h(a) {
                var c = [],
                    d = "",
                    e = "";
                if (!b) c.push({
                    errorCode: "0",
                    exception: "",
                    errorMessage: "Request timed out"
                });
                else {
                    var f = b.getPayload();
                    if (f.errors != null && f.errors.length > 0) {
                        var h;
                        d = (h = f.errors[0].exception) == null ? void 0 : h["class"];
                        e = f.errors[0].message
                    }
                    c.push({
                        errorCode: (h = b == null ? void 0 : b.error) != null ? h : "0",
                        exception: d,
                        errorMessage: e
                    })
                }
                a.handleUpdate({
                    error_actions: c,
                    from_client: !0,
                    payload_source: "server_fetch_thread_info",
                    request_data: g
                })
            }
            if (g != null && g.threads && (g.threads.user_ids || g.threads.thread_fbids || g.threads.group_ids || g.threads.thread_ids || g.messages.user_ids)) {
                a = 3;
                g.retry_count || (g.retry_count = 0);
                e = g.retry_count < a && !e;
                if (e) {
                    e = Math.pow(2, Math.min(g.retry_count, a)) * 1e3;
                    c("setTimeoutAcrossTransitions")(function() {
                        j.log("retry_thread", "{}"), f.__sendRequest(d("MercuryServerURIs").THREAD_INFO, g)
                    }, e);
                    g.retry_count++
                } else h(this.$5)
            } else h(this.$5)
        };
        e.handleThreadlistInfoError = function(a) {
            var b = a.getPayload(),
                c = "",
                d = "";
            if (b.errors != null && b.errors.length > 0) {
                var e;
                c = (e = b.errors[0].exception) == null ? void 0 : e["class"];
                d = b.errors[0].message
            }
            b = [{
                errorCode: (e = a.error) != null ? e : "0",
                exception: c,
                errorMessage: d
            }];
            this.$5.handleUpdate({
                error_actions: b,
                from_client: !0,
                payload_source: "server_fetch_threadlist_info"
            })
        };
        e.markFolderAsRead = function(a) {
            this.__sendRequest(d("MercuryServerURIs").MARK_FOLDER_READ, {
                folder: a
            });
            a = [{
                action_type: "mga-type:mark-all-read",
                folder: a
            }];
            this.$5.handleUpdate({
                global_actions: a,
                from_client: !0,
                payload_source: "client_change_read_status"
            })
        };
        e.changeThreadReadStatus = function(a, b, e, f, g, h) {
            var i = this;
            d("MercuryAssert").isThreadID(a);
            this.__threadIDMap.getServerIDFromClientID(a, function(k) {
                var l;
                l = {
                    ids: (l = {}, l[k] = b, l),
                    source: e,
                    watermarkTimestamp: f,
                    shouldSendReadReceipt: g,
                    commerce_last_message_type: h
                };
                c("MercuryMessagingLightswitch").guard(function() {
                    j.log("initiate_change_read_status", JSON.stringify({
                        thread_id: a,
                        thread_fbid: k,
                        mark_as_read: b,
                        watermarkTimestamp: f
                    }))
                });
                i.__sendRequest(d("MercuryServerURIs").CHANGE_READ_STATUS, l)
            })
        };
        e.changeThreadArchivedStatus = function(a, b, c) {
            var e = this;
            d("MercuryAssert").isThreadID(a);
            this.__threadIDMap.getServerIDFromClientID(a, function(a) {
                var f = {
                    ids: {},
                    source: c
                };
                f.ids[a] = b;
                e.__sendRequest(d("MercuryServerURIs").CHANGE_ARCHIVED_STATUS, f)
            })
        };
        e.changeThreadPinnedStatus = function(a, b, c) {
            var e = this;
            d("MercuryAssert").isThreadID(a);
            this.__threadIDMap.getServerIDFromClientID(a, function(a) {
                var f = {
                    ids: {},
                    source: c
                };
                f.ids[a] = b;
                e.__sendRequest(d("MercuryServerURIs").CHANGE_PINNED_STATUS, f)
            })
        };
        e.changeThreadPageFollowUpStatus = function(a, b, c) {
            var e = this;
            d("MercuryAssert").isThreadID(a);
            this.__threadIDMap.getServerIDFromClientID(a, function(a) {
                var f = {
                    ids: {},
                    source: c
                };
                f.ids[a] = b;
                e.__sendRequest(d("MercuryServerURIs").CHANGE_PAGE_FOLLOW_UP_STATUS, f)
            })
        };
        e.changeThreadFolder = function(a, b) {
            var c = this;
            d("MercuryAssert").isThreadID(a);
            this.__threadIDMap.getServerIDFromClientID(a, function(a) {
                var e = {};
                e[b] = [a];
                c.__sendRequest(d("MercuryServerURIs").MOVE_THREAD, e)
            })
        };
        e.changeMutingOnThread = function(a, b) {
            var e = this;
            d("MercuryAssert").isThreadID(a);
            this.__threadIDMap.getServerIDFromClientID(a, function(a) {
                e.__sendRequest(d("MercuryServerURIs").CHANGE_MUTE_THREAD, {
                    thread_fbid: a,
                    mute_settings: b,
                    payload_source: c("MercuryAPIArgsSource").MERCURY
                })
            })
        };
        e.markThreadSpam = function(a, b) {
            var c = this;
            d("MercuryAssert").isThreadID(a);
            this.__threadIDMap.getServerIDFromClientID(a, function(a) {
                c.__sendRequest(d("MercuryServerURIs").MARK_SPAM, {
                    id: a,
                    source: b
                })
            })
        };
        e.unmarkThreadSpam = function(a, b) {
            var c = this;
            d("MercuryAssert").isThreadID(a);
            this.__threadIDMap.getServerIDFromClientID(a, function(a) {
                c.__sendRequest(d("MercuryServerURIs").UNMARK_SPAM, {
                    id: a,
                    source: b
                })
            })
        };
        e.deleteThread = function(a, b) {
            this.deleteThreads([a], b)
        };
        e.deleteThreads = function(a, e) {
            var f = this;
            c("promiseDone")(b("Promise").all(a.map(function(a) {
                d("MercuryAssert").isThreadID(a);
                return new(b("Promise"))(function(b) {
                    return f.__threadIDMap.getServerIDFromClientID(a, b)
                })
            })).then(function(a) {
                f.__sendRequest(d("MercuryServerURIs").DELETE_THREAD, {
                    ids: a,
                    source: e
                })
            }))
        };
        e.deleteMessages = function(a, b) {
            var c = this;
            d("MercuryMessageIDs.bs").getServerIDs(b || [], function(a) {
                c.__sendRequest(d("MercuryServerURIs").DELETE_MESSAGES, {
                    message_ids: a
                })
            })
        };
        e.sendDeliveryReceipts = function(a, b) {
            var c = this;
            d("MercuryMessageIDs.bs").getServerIDs(a || [], function(a) {
                c.__sendRequest(d("MercuryServerURIs").DELIVERY_RECEIPTS, {
                    message_ids: a,
                    thread_ids: b
                })
            })
        };
        e.sendNewMessage = function(a, b) {
            var e = this;
            b === void 0 && (b = c("MercuryAPIArgsSource").MERCURY);
            a.offline_threading_id || d("ODS").bumpEntityKey(3303, "chat.web", "missing_otid_on_send");
            if (a.client_state && a.client_state !== c("MercuryMessageClientState").SEND_TO_SERVER) return;
            var f = d("MercuryIDs").tokenize(a.thread_id),
                g = f.type,
                h = babelHelpers["extends"]({}, a);
            h.thread_id = null;
            g == "user" ? (h.other_user_fbid = f.value, this.$13(h, b)) : g == "thread" ? (h.thread_fbid = f.value, this.$13(h, b)) : g == "root" && f.value == h.offline_threading_id ? (h.client_thread_id = a.thread_id, this.$13(h, b)) : (d("MercuryIDs").isLocalThread(a.thread_id) || i(0, 5587, a.thread_id), this.__threadIDMap.getServerIDFromClientID(a.thread_id, function(a) {
                h.thread_fbid = a, e.$13(h, b)
            }));
            this.$14("send_msg", a);
            c("MercuryMessagingLightswitch").guard(function() {
                c("Bootloader").loadModules(["QuickPerformanceLogger"], function(b) {
                    b.markerStart(c("qpl")._(25296903, "1856"), a.offline_threading_id)
                }, "MercuryServerRequests")
            })
        };
        e.$14 = function(a, b) {
            try {
                var e, f = c("Env").isCQuick ? "Comet Inbox" : c("MessengerEnvironment").messengerdotcom ? "messenger_dot_com" : c("MessengerEnvironment").facebookdotcom ? "Facebook Messenger (other)" : "Other",
                    g = d("MercuryTagHelper").get(b.tags || [], "entrypoint"),
                    h = d("MercuryIDs").getThreadFBIDFromThreadID(b.thread_id),
                    i = (c("PresenceStatus").get(h) === c("AvailableListConstants").ACTIVE).toString(),
                    j = (e = (e = d("ScriptPath").getScriptPath()) == null ? void 0 : e.toString()) != null ? e : "";
                c("MessengerWebEventsFalcoEvent").log(function() {
                    return {
                        attachment_infos: void 0,
                        client_timestamp: Date.now().toString(),
                        entry_point: g,
                        event_name: a,
                        first_attachment_type: void 0,
                        "interface": f,
                        mid: b.message_id,
                        offline_threading_id: b.offline_threading_id,
                        other_user_fbid: d("MercuryIDs").isGroupChat(b.thread_id) ? void 0 : h,
                        thread_fbid: d("MercuryIDs").isGroupChat(b.thread_id) ? h : void 0,
                        extra_data: {
                            pathName: j,
                            isActiveNow: i
                        }
                    }
                })
            } catch (a) {
                d("ODS").bumpEntityKey(3303, "chat.web", "logging_error")
            }
        };
        e.$13 = function(a, b) {
            c("Arbiter").inform(d("ChannelConstants").ATTEMPT_RECONNECT), this.$4[a.message_id] = Date.now(), c("MercuryServerSendMessageQueueRouter").getForFBID(this.$1).enqueue(a.other_user_fbid || a.thread_fbid || a.client_thread_id, this.$7, b, a)
        };
        e.__getSendMessageQueueOptions = function() {
            return this.$7
        };
        e.markSeen = function() {
            var a = this.$2;
            this.__sendRequest(d("MercuryServerURIs").MARK_SEEN, {
                seen_timestamp: a
            })
        };
        e.$15 = function(a, b, e, f) {
            var g = this;
            a = a.getData();
            var h = a.message_batch || [a];
            c("MercuryMessagingLightswitch").guard(function() {
                j.debug("handle_send_message_error_common", JSON.stringify({
                    reliability_error_status: e,
                    request_error_status: b,
                    error_data: f,
                    message_list: h
                }))
            });
            d("ChatReliabilityInstrumentation").logERROR("send_message_fail");
            var i = h.map(function(a) {
                a = {
                    action_type: "ma-type:send-message",
                    other_user_fbid: a.other_user_fbid,
                    thread_fbid: a.thread_fbid,
                    client_message_id: a.message_id,
                    message_id: a.message_id,
                    client_thread_id: a.client_thread_id,
                    status: b,
                    error_data: f
                };
                return a
            });
            i.forEach(function(a) {
                a.action_type === "ma-type:send-message" && a.status === 10 && g.__logMercurySendError(a)
            });
            a = {
                actions: i,
                payload_source: "client_handle_error"
            };
            c("MercuryMessagingLightswitch").guard(function() {
                c("Bootloader").loadModules(["QuickPerformanceLogger"], function(a) {
                    i.map(function(b) {
                        a.markerEnd(c("qpl")._(25296903, "1856"), "FAIL", b.client_message_id)
                    })
                }, "MercuryServerRequests")
            });
            this.$6.handleUpdate(a)
        };
        e.handleSendMessageError = function(a) {
            var b = a.getPayload(),
                d = null,
                e = null;
            b && b.error_payload ? (d = 3, e = "send_error") : (d = 10, e = "request_error" + l(a));
            b = a.error;
            b === 1404102 ? c("AsyncResponse").verboseErrorHandler(a) : (b === 1545052 || b === 1409009 || b === 1409008 || b === 1409007 || b === 1409006 || b === 1545083 || b === 1545084) && c("AsyncResponse").defaultErrorHandler(a);
            b = /<.*>/.test(a.getErrorDescription()) ? a.getErrorSummary() : a.getErrorDescription();
            this.$15(a.getRequest(), d, e, {
                type: 1,
                code: a.getError(),
                description: b,
                is_transient: a.isTransient()
            })
        };
        e.handleSendMessageTransportError = function(a) {
            this.$15(a.getRequest(), 10, "transport_error" + l(a), {
                type: 2,
                code: a.getError(),
                is_transient: !0
            })
        };
        e.handleSendMessageTimeout = function(a) {
            this.$15(a, 10, "transport_timeout", {
                type: 3,
                is_transient: !0
            })
        };
        e.getLastActionTimestamp = function() {
            return this.$2
        };
        e.__logMercurySendError = function(a) {
            c("MercurySendErrorLogger").log(a)
        };
        e.updateLastActionTimestamp = function(a) {
            var b = Date.now() - 1e3 * 60 * 60 * 24;
            a && a > b && (this.$2 = Math.max(this.$2, a))
        };
        e.markThreadFetched = function(a) {
            delete this.$3[a]
        };
        e.__getForAsyncRequest = function(b) {
            b = b.getData();
            b = b.request_user_id ? b.request_user_id : c("CurrentUser").getID();
            return a.getForFBID(b)
        };
        e.__handleUpdate = function(a, b) {
            a.payload_source === "server_send_message" && c("MercuryMessagingLightswitch").guard(function() {
                c("Bootloader").loadModules(["QuickPerformanceLogger"], function(b) {
                    var d = a.actions && a.actions[0] && a.actions[0].client_message_id;
                    d && b.markerEnd(c("qpl")._(25296903, "1856"), "SUCCESS", d)
                }, "MercuryServerRequests")
            }), this.__getForAsyncRequest(b).$6.handleUpdate(a)
        };
        e.$16 = function(a) {
            var b = this.__getForAsyncRequest(a.getRequest());
            b.handleThreadInfoError(a.getRequest(), a)
        };
        e.$17 = function(a) {
            var b = this.__getForAsyncRequest(a);
            b.handleThreadInfoError(a, null, !0)
        };
        e.$18 = function(a) {
            var b = this.__getForAsyncRequest(a.getRequest());
            b.handleThreadlistInfoError(a)
        };
        e.$9 = function(a) {
            var b = this.__getForAsyncRequest(a.getRequest());
            b.handleSendMessageError(a)
        };
        e.$10 = function(a) {
            var b = this.__getForAsyncRequest(a.getRequest());
            b.handleSendMessageTransportError(a)
        };
        e.$11 = function(a) {
            var b = this.__getForAsyncRequest(a);
            b.handleSendMessageTimeout(a)
        };
        e.$12 = function() {
            var a = this,
                b, e = null;
            d("MercuryServerRequestsConfig").msgrRegion && (e = {
                name: "X-MSGR-Region",
                value: d("MercuryServerRequestsConfig").msgrRegion
            });
            b = (b = {}, b[d("MercuryServerURIs").THREAD_INFO] = {
                request_user_id: this.$1,
                mode: d("MercuryServerDispatcher").BATCH_DEFERRED_MULTI,
                customHeader: e,
                batch_function: m,
                handler: function(b, c) {
                    return a.__handleUpdate(b, c)
                },
                error_handler: function(b) {
                    return a.$16(b)
                },
                timeout_handler: function(b) {
                    return a.$17(b)
                },
                timeout: k
            }, b[d("MercuryServerURIs").MARK_FOLDER_READ] = {
                request_user_id: this.$1,
                mode: d("MercuryServerDispatcher").IMMEDIATE,
                customHeader: e,
                handler: function(b, c) {
                    return a.__handleUpdate(b, c)
                }
            }, b[d("MercuryServerURIs").CHANGE_READ_STATUS] = {
                request_user_id: this.$1,
                mode: d("MercuryServerDispatcher").IMMEDIATE,
                customHeader: e,
                handler: function(b, d) {
                    a.__handleUpdate(b, d);
                    var e = (b.threads || []).map(function(a) {
                        return a && a.thread_id
                    });
                    c("MercuryMessagingLightswitch").guard(function() {
                        j.log("response_change_read_status", JSON.stringify({
                            threads: e
                        }))
                    })
                }
            }, b[d("MercuryServerURIs").MARK_SEEN] = {
                request_user_id: this.$1,
                mode: d("MercuryServerDispatcher").BATCH_SUCCESSIVE,
                customHeader: e,
                batch_function: p,
                handler: function(b, c) {
                    return a.__handleUpdate(b, c)
                }
            }, b[d("MercuryServerURIs").THREADLIST_INFO] = {
                request_user_id: this.$1,
                mode: d("MercuryServerDispatcher").BATCH_SUCCESSIVE_UNIQUE,
                customHeader: e,
                batch_function: o,
                handler: function(b, c) {
                    return a.__handleUpdate(b, c)
                },
                error_handler: function(b) {
                    return a.$18(b)
                }
            }, b[d("MercuryServerURIs").MARK_SPAM] = {
                request_user_id: this.$1,
                mode: d("MercuryServerDispatcher").IMMEDIATE,
                customHeader: e,
                handler: function(b, c) {
                    return a.__handleUpdate(b, c)
                }
            }, b[d("MercuryServerURIs").UNMARK_SPAM] = {
                request_user_id: this.$1,
                mode: d("MercuryServerDispatcher").IMMEDIATE,
                customHeader: e,
                handler: function(b, c) {
                    return a.__handleUpdate(b, c)
                }
            }, b[d("MercuryServerURIs").UNREAD_THREADS] = {
                request_user_id: this.$1,
                mode: d("MercuryServerDispatcher").BATCH_SUCCESSIVE_UNIQUE,
                customHeader: e,
                batch_function: n,
                handler: function(b, c) {
                    return a.__handleUpdate(b, c)
                }
            }, b[d("MercuryServerURIs").CHANGE_ARCHIVED_STATUS] = {
                request_user_id: this.$1,
                mode: d("MercuryServerDispatcher").BATCH_SUCCESSIVE,
                customHeader: e,
                batch_function: r,
                handler: function(b, c) {
                    return a.__handleUpdate(b, c)
                }
            }, b[d("MercuryServerURIs").CHANGE_PINNED_STATUS] = {
                request_user_id: this.$1,
                mode: d("MercuryServerDispatcher").BATCH_SUCCESSIVE,
                customHeader: e,
                batch_function: r,
                handler: function(b, c) {
                    return a.__handleUpdate(b, c)
                }
            }, b[d("MercuryServerURIs").CHANGE_PAGE_FOLLOW_UP_STATUS] = {
                request_user_id: this.$1,
                mode: d("MercuryServerDispatcher").BATCH_SUCCESSIVE,
                customHeader: e,
                batch_function: r,
                handler: function(b, c) {
                    return a.__handleUpdate(b, c)
                }
            }, b[d("MercuryServerURIs").DELETE_THREAD] = {
                request_user_id: this.$1,
                mode: d("MercuryServerDispatcher").BATCH_SUCCESSIVE,
                customHeader: e,
                batch_function: t,
                handler: function(b, c) {
                    return a.__handleUpdate(b, c)
                }
            }, b[d("MercuryServerURIs").DELETE_MESSAGES] = {
                request_user_id: this.$1,
                mode: d("MercuryServerDispatcher").IMMEDIATE,
                customHeader: e,
                handler: function(b, c) {
                    return a.__handleUpdate(b, c)
                }
            }, b[d("MercuryServerURIs").DELIVERY_RECEIPTS] = {
                request_user_id: this.$1,
                mode: d("MercuryServerDispatcher").IMMEDIATE,
                customHeader: e,
                handler: function(b, c) {
                    return a.__handleUpdate(b, c)
                }
            }, b[d("MercuryServerURIs").MOVE_THREAD] = {
                request_user_id: this.$1,
                mode: d("MercuryServerDispatcher").BATCH_SUCCESSIVE,
                customHeader: e,
                batch_function: s,
                handler: function(b, c) {
                    return a.__handleUpdate(b, c)
                }
            }, b[d("MercuryServerURIs").CHANGE_MUTE_THREAD] = {
                request_user_id: this.$1,
                mode: d("MercuryServerDispatcher").IMMEDIATE,
                customHeader: e,
                handler: function(b, c) {
                    return a.__handleUpdate(b, c)
                }
            }, b);
            var f = c("XMercuryUnseenThreadIDsController").getURIBuilder().getURI().toString();
            b[f] = {
                request_user_id: this.$1,
                mode: d("MercuryServerDispatcher").IMMEDIATE,
                customHeader: e,
                handler: function(b, c) {
                    return a.__handleUpdate(b, c)
                }
            };
            d("MercuryServerDispatcher").registerEndpoints(b)
        };
        e.__sendRequest = function(a, b, c) {
            if (this.$8) switch (a) {
                case d("MercuryServerURIs").THREADLIST_INFO:
                case d("MercuryServerURIs").THREAD_INFO:
                    b.cachius_min_seq_id = this.$8.getLastSeqID();
                    break;
                default:
                    break
            }
            d("MercuryServerDispatcher").trySend(a, b, c, this.$1)
        };
        e.__getFBID = function() {
            return this.$1
        };
        return a
    }();
    var u = new(c("MercurySingletonProvider"))(a);
    g["default"] = a
}), 98);
__d("MercuryThreadIDMap", ["KeyedCallbackManager", "MercuryAssert", "MercuryIDs", "MercurySingletonProvider"], (function(a, b, c, d, e, f, g) {
    "use strict";
    a = function() {
        function a(a) {
            var b = this;
            this.canLinkExternally = function(a) {
                d("MercuryAssert").isThreadID(a);
                var c = d("MercuryIDs").tokenize(a);
                return c.type == "user" || !!b.getServerIDFromClientIDNow(a)
            };
            this.$1 = a;
            this.$2 = new(c("KeyedCallbackManager"))();
            this.$3 = new(c("KeyedCallbackManager"))()
        }
        a.getForFBID = function(a) {
            return h.getForFBID(a)
        };
        a.get = function() {
            return h.get()
        };
        var b = a.prototype;
        b.setServerIDToClientID = function(a, b) {
            var c = this.getClientIDFromServerIDNow(a);
            if (c) return;
            this.forceSetServerIDToClientID(a, b)
        };
        b.forceSetServerIDToClientID = function(a, b) {
            this.$2.setResource(a, b), this.$3.setResource(b, a)
        };
        b.setDeprecatedServerIDToClientID = function(a, b) {
            a && this.$2.setResource(a, b)
        };
        b.getClientIDFromServerIDNow = function(a) {
            return this.$2.getResource(a)
        };
        b.getClientIDFromServerID = function(a, b) {
            var c = this;
            this.$2.executeOrEnqueue(a, b);
            e(["MercuryServerRequests"], function(b) {
                b.getForFBID(c.$1).ensureThreadIsFetched(a)
            })
        };
        b.getServerIDFromClientIDNow = function(a) {
            return this.$3.getResource(a)
        };
        b.getServerIDFromClientID = function(a, b) {
            var c = this;
            d("MercuryAssert").isThreadID(a);
            var f = this.$3.executeOrEnqueue(a, b);
            e(["MercuryServerRequests"], function(b) {
                var e = c.$3.getUnavailableResources(f),
                    g = d("MercuryIDs").tokenize(a);
                e.length && g.type != "root" && b.getForFBID(c.$1).fetchThreadData(e)
            })
        };
        b.hasClientIDForServerID = function(a) {
            return !!this.getClientIDFromServerIDNow(a)
        };
        b.convertThreadIDIfAvailable = function(a) {
            var b = this.getClientIDFromServerIDNow(a);
            return b || a
        };
        b.reset = function() {
            this.$3.reset(), this.$2.reset()
        };
        return a
    }();
    var h = new(c("MercurySingletonProvider"))(a);
    g["default"] = a
}), 98);
__d("MercuryLoggingHelper", [], (function(a, b, c, d, e, f) {
    a = {
        obfuscateThread: function(a) {
            var b = babelHelpers["extends"]({}, a);
            a && a.snippet && a.snippet.length > 0 && (b.snippet = "*** [redacted] ***");
            return b
        },
        obfuscateMessage: function(a) {
            var b = babelHelpers["extends"]({}, a);
            a && a.body && a.body.length > 0 && (b.body = "*** [redacted] ***");
            return b
        }
    };
    e.exports = a
}), null);
__d("MercuryServerSendMessageQueueSimulatedError", ["AsyncRequest", "AsyncResponse"], (function(a, b, c, d, e, f) {
    var g = 9999;
    a = {
        create: function(a) {
            a = new(b("AsyncRequest"))(this.endpoint_uri).setData({
                message_batch: [a],
                client: this.client
            });
            var c = new(b("AsyncResponse"))(a, {});
            Object.assign(c, {
                error: g,
                silentError: !1,
                transientError: !0,
                request: a
            });
            return c
        }
    };
    e.exports = a
}), null);
__d("XMessagingSendController", ["XController"], (function(a, b, c, d, e, f) {
    e.exports = b("XController").create("/messaging/send/", {
        privacy_mutation_token: {
            type: "String"
        }
    })
}), null);
__d("MercuryServerSendMessageQueue", ["fbt", "ChatReliabilityInstrumentation", "CurrentUser", "LogHistory", "MercuryIDs", "MercuryLoggingHelper", "MercuryMessagingLightswitch", "MercuryServerDispatcher", "MercuryServerRequestsConfig", "MercuryServerSendMessageQueueSimulatedError", "MercurySyncDeltaHandler", "MessengerAttachmentTransformerForSend.bs", "MessengerObjectAssociationType", "MessengerState.bs", "ODS", "Run", "XMessagingSendController"], (function(a, b, c, d, e, f, g, h) {
    "use strict";
    var i = d("LogHistory").getInstance("mercury_server_send_message_queue");
    a = function() {
        function a(a, b, e, f) {
            var g = this;
            this.pending_message = null;
            this.queue = [];
            this.$6 = function() {
                return g.queue.length || g.pending_message ? h._( /*FBT_CALL*/ "\u05dc\u05d0 \u05e9\u05dc\u05d7\u05ea \u05e2\u05d3\u05d9\u05d9\u05df \u05d0\u05ea \u05d4\u05d4\u05d5\u05d3\u05e2\u05d4 \u05e9\u05dc\u05da. \u05d4\u05d0\u05dd \u05d1\u05e8\u05e6\u05d5\u05e0\u05da \u05dc\u05e6\u05d0\u05ea \u05d1\u05dc\u05d9 \u05dc\u05e9\u05dc\u05d5\u05d7 \u05d0\u05d5\u05ea\u05d4?" /*FBT_CALL*/ ) : void 0
            };
            this.sender_id = a;
            this.queue_id = b;
            this.$2 = e.success_handler;
            this.$1 = e.error_handler;
            this.$4 = e.transport_error_handler;
            this.$3 = e.timeout_handler;
            this.$5 = c("MercurySyncDeltaHandler").getForFBID(this.sender_id);
            this.client = f;
            d("Run").onBeforeUnload(this.$6, !1);
            a = null;
            d("MercuryServerRequestsConfig").msgrRegion && (a = {
                name: "X-MSGR-Region",
                value: d("MercuryServerRequestsConfig").msgrRegion
            });
            b = this.__getSendURI();
            b = (f = {}, f[b] = {
                request_user_id: this.sender_id,
                endpoint_id: this.queue_id,
                mode: d("MercuryServerDispatcher").IMMEDIATE,
                customHeader: a,
                handler: this.handleSuccess.bind(this),
                error_handler: this.handleError.bind(this),
                transport_error_handler: this.handleTransportError.bind(this),
                timeout: e.timeout,
                timeout_handler: this.handleTimeout.bind(this),
                connection_retries: e.connection_retries
            }, f);
            d("MercuryServerDispatcher").registerEndpoints(b)
        }
        var b = a.prototype;
        b.__getSendURI = function() {
            return c("XMessagingSendController").getURIBuilder().getURI().toString()
        };
        b.__preparePayload = function(a) {
            var b;
            b = (b = a) != null ? (b = b.replied_to_message) != null ? (b = b.message) != null ? b.message_id : b : b : b;
            var e = null,
                f = a.client_thread_id;
            if (d("MercuryIDs").isLocalThread(f)) {
                f = d("MessengerState.bs").getThreadMetaNow(c("CurrentUser").getID(), f);
                if (f && f.message_count === 1 && f.object_association_type === c("MessengerObjectAssociationType").GENERAL_CHAT) {
                    e = (f = f) != null ? (f = f.associated_object) != null ? f.id : f : f
                }
            }
            f = b ? d("MessengerState.bs").getServerMessageID(c("CurrentUser").getID(), b) : null;
            return {
                client: this.client,
                action_type: a.action_type,
                app_id: a.app_id,
                audio_ids: a.audio_ids,
                body: a.body,
                client_thread_id: a.client_thread_id,
                ephemeral_ttl_mode: a.ephemeral_ttl_mode,
                file_ids: a.file_ids,
                gif_ids: a.gif_ids,
                has_attachment: a.has_attachment,
                image_ids: a.image_ids,
                location_attachment: a.location_attachment,
                lightweight_action_attachment: a.lightweight_action_attachment,
                log_message_data: a.log_message_data,
                log_message_type: a.log_message_type,
                message_id: a.message_id,
                message_source_data: a.message_source_data,
                montage_reply_data: a.montage_reply_data,
                offline_threading_id: a.offline_threading_id,
                other_user_fbid: a.other_user_fbid,
                photo_fbids: a.photo_fbids,
                shareable_attachment: a.shareable_attachment,
                signature_id: a.signatureID,
                source: a.source,
                specific_to_list: a.specific_to_list,
                sticker_id: a.sticker_id,
                tags: a.tags,
                thread_fbid: a.thread_fbid,
                timestamp: a.timestamp,
                ui_push_phase: a.ui_push_phase,
                video_ids: a.video_ids,
                platform_xmd: a.platform_xmd,
                profile_xmd: a.profile_xmd,
                replied_to_message_id: f,
                work_synced_group_id: e,
                to_list_md5: a.to_list_md5,
                mib_direct_message_data: a.mib_direct_message_data,
                secondary_language_body: a.secondary_language_body
            }
        };
        b.enqueue = function(a) {
            this.queue.push(a), this.$7()
        };
        b.$7 = function() {
            if (this.pending_message || !this.queue.length) {
                this.pending_message && this.$8();
                return
            }
            this.pending_message = this.queue.shift();
            var a = this.__preparePayload(this.pending_message);
            for (var b in a) a[b] == null && delete a[b];
            if (!a.action_type) {
                var e = d("MercuryLoggingHelper").obfuscateMessage(a);
                d("ChatReliabilityInstrumentation").logERROR("missing action type before sending to send controller");
                c("MercuryMessagingLightswitch").guard(function() {
                    i.debug("missing_action_type", JSON.stringify(e))
                })
            }
            if (!a.message_id) {
                var f = d("MercuryLoggingHelper").obfuscateMessage(a);
                d("ChatReliabilityInstrumentation").logERROR("missing action type before sending to send controller" + JSON.stringify(f));
                c("MercuryMessagingLightswitch").guard(function() {
                    i.debug("missing_message_id", JSON.stringify(f))
                })
            }
            this.$9();
            d("MercuryServerDispatcher").trySend(this.__getSendURI(), a, null, this.sender_id, this.queue_id)
        };
        b.$10 = function() {
            while (this.queue.length) this.$11(this.queue.shift())
        };
        b.$11 = function(a) {
            var b = this;
            this.$1(d("MercuryServerSendMessageQueueSimulatedError").create(a));
            c("MercuryMessagingLightswitch").guard(function() {
                i.error("mark_as_failed", JSON.stringify({
                    fbid: b.sender_id,
                    queue_id: b.queue_id,
                    message: d("MercuryLoggingHelper").obfuscateMessage(a)
                }))
            })
        };
        b.handleSuccess = function(a, b) {
            var c = this;
            this.pending_message = null;
            var e = (a.actions || []).map(function(a) {
                var b = babelHelpers["extends"]({}, a);
                if (a.graphql_payload && a.graphql_payload.length > 0) {
                    var e = d("MessengerAttachmentTransformerForSend.bs").transform(c.sender_id, a.graphql_payload, a.message_id, a.for_page);
                    b = Object.assign(b, {
                        attachments: e
                    })
                }
                e = (e = a) != null ? (e = e.log_message_data) != null ? e.graphql_image : e : e;
                if (e) {
                    e = d("MessengerAttachmentTransformerForSend.bs").transform(c.sender_id, [e], a.message_id, a.for_page);
                    b = Object.assign(b, {
                        log_message_data: {
                            image: e[0]
                        }
                    })
                }
                return b
            });
            a.actions = e;
            this.resumeAfterSuccess(a, b)
        };
        b.resumeAfterSuccess = function(a, b) {
            this.$2(a, b), this.$12(), this.$7()
        };
        b.handleError = function(a) {
            this.pending_message = null, this.$12(), this.$1(a), this.$10()
        };
        b.handleTransportError = function(a) {
            this.pending_message = null, this.$12(), this.$4(a), this.$10()
        };
        b.handleTimeout = function(a) {
            this.pending_message = null, this.$12(), this.$3(a), this.$10()
        };
        b.$9 = function() {
            this.$5.pause()
        };
        b.$12 = function() {
            this.$5.resume()
        };
        b.$8 = function() {
            var a = this;
            c("MercuryMessagingLightswitch").guard(function() {
                i.debug("maybe_send_next_pending_message", JSON.stringify({
                    fbid: a.sender_id,
                    queue_id: a.queue_id,
                    pending_message: d("MercuryLoggingHelper").obfuscateMessage(a.pending_message),
                    queue: a.queue.map(function(a) {
                        return d("MercuryLoggingHelper").obfuscateMessage(a)
                    })
                }))
            });
            var b = "send_queue.delayed.queue_length." + this.queue.length.toString();
            d("ODS").bumpEntityKey(3303, "chat.web", b)
        };
        return a
    }();
    g["default"] = a
}), 98);
__d("MercurySingletonMixin", ["CurrentUser"], (function(a, b, c, d, e, f) {
    a = {
        _getInstances: function() {
            this._instances || (this._instances = {});
            return this._instances
        },
        get: function() {
            return this.getForFBID(b("CurrentUser").getID())
        },
        getForFBID: function(a) {
            var b = this._getInstances();
            b[a] || (b[a] = new this(a));
            return b[a]
        }
    };
    e.exports = a
}), null);
__d("MercuryServerSendMessageQueueRouter", ["LogHistory", "MercuryServerSendMessageQueue", "MercurySingletonMixin", "ODS"], (function(a, b, c, d, e, f, g) {
    var h = d("LogHistory").getInstance("mercury_server_send_message_queue_router"),
        i = "chat.web.send_queue_router";
    d("ODS").setEntitySample(i, .1);
    a = function() {
        function a(a) {
            this.queues = new Map(), this.fbid = a
        }
        var b = a.prototype;
        b.enqueue = function(a, b, e, f) {
            var g = this.queues.get(a);
            g === void 0 && (g = new(c("MercuryServerSendMessageQueue"))(this.fbid, a, b, e), this.queues.set(a, g), h.debug("added queue", JSON.stringify({
                fbid: this.fbid,
                queue_id: a
            })), d("ODS").bumpEntityKey(3303, i, "new_queue"));
            g.enqueue(f)
        };
        return a
    }();
    Object.assign(a, d("MercurySingletonMixin"));
    g["default"] = a
}), 98);
__d("MercurySyncDataFetcherImpl", ["invariant", "AsyncResponse", "Bootloader", "CurrentUser", "FBIDCheck", "MercuryConfig", "MercuryThreadlistConstants", "MessagingConfig", "Promise", "UserActivity", "clearTimeout", "setTimeoutAcrossTransitions"], (function(a, b, c, d, e, f, g, h) {
    "use strict";
    var i = null,
        j = null,
        k = null,
        l = {
            limit: d("MercuryThreadlistConstants").WEBMESSENGER_THREAD_COUNT + 1,
            folder: "inbox",
            tags: ["INBOX"],
            timestamp: null,
            filter: null,
            includeDeliveryReceipts: !1,
            includeSeqID: !0
        },
        m = {};

    function a(a) {
        return new(b("Promise"))(function(b, c) {
            n(a, b, c, 0)
        })
    }

    function n(a, b, e, f) {
        if (!c("CurrentUser").isLoggedInNow() || f > d("MessagingConfig").syncFetchRetries) {
            c("clearTimeout")(m[a]);
            e();
            return
        }
        var g = f === 0 ? 0 : d("MessagingConfig").syncFetchInitialTimeoutMs * Math.pow(d("MessagingConfig").syncFetchTimeoutMultiplier, f);
        c("UserActivity").isOnTab() || (g += c("MercuryConfig").DFFD * Math.random());
        c("clearTimeout")(m[a]);
        m[a] = c("setTimeoutAcrossTransitions")(function() {
            var g = !1,
                o = function(d) {
                    if (g) return;
                    if (d.errors && d.errors.length > 0) {
                        var i = d.errors[0].message;
                        if (i) {
                            var l = function() {
                                k && j || h(0, 3650), new k().setErrorMessage(i).setEvent(j.DFF_FAILURE).setQueryParams(a).log()
                            };
                            k && j ? l() : c("Bootloader").loadModules(["MessengerWebGraphQLTypedLogger", "MessengerWebGraphQLEvent"], function(a, b) {
                                k = a, j = b, l()
                            }, "MercurySyncDataFetcherImpl")
                        }
                    }
                    g = !0;
                    n(a, b, e, f + 1)
                },
                p = function() {
                    if (!c("CurrentUser").isLoggedInNow()) return;
                    i || h(0, 3651);
                    i.fetchAll(a, [l], !d("FBIDCheck").isUser_deprecated(a), "dff").then(function(d) {
                        g = !0, b(new(c("AsyncResponse"))(null, babelHelpers["extends"]({}, d, {
                            payload_source: "server_invalidate_global_state"
                        }))), c("clearTimeout")(m[a])
                    }, o)
                };
            i ? p() : c("Bootloader").loadModules(["MessengerGraphQLThreadlistFetcher.bs"], function(a) {
                i = a, p()
            }, "MercurySyncDataFetcherImpl")
        }, g)
    }

    function e(a, c, d, e) {
        return new(b("Promise"))(function(b, f) {
            o(a, c, d, b, f, 0, e)
        })
    }

    function o(a, b, e, f, g, h, i) {
        if (h > d("MessagingConfig").syncFetchRetries) {
            g();
            return
        }
        var j = h === 0 ? 0 : d("MessagingConfig").syncFetchInitialTimeoutMs * Math.pow(d("MessagingConfig").syncFetchTimeoutMultiplier, h);
        c("setTimeoutAcrossTransitions")(function() {
            var j = !1,
                k = function(c) {
                    if (j) return;
                    j = !0;
                    o(a, b, e, f, g, h + 1, i)
                };
            c("Bootloader").loadModules(["MessengerThreadDFFFetcher.bs"], function(g) {
                return g.fetch_(a, {
                    id: b,
                    limit: e,
                    source: i
                }, !d("FBIDCheck").isUser_deprecated(a)).then(function(a) {
                    j = !0, f(new(c("AsyncResponse"))(null, babelHelpers["extends"]({}, a, {
                        payload_source: "server_invalidate_thread_state"
                    })))
                }, k)
            }, "MercurySyncDataFetcherImpl")
        }, j)
    }

    function f(a, c, d, e) {
        return new(b("Promise"))(function(b, f) {
            p(a, c, d, b, f, 0, e)
        })
    }

    function p(a, b, e, f, g, h, i) {
        if (h > d("MessagingConfig").syncFetchRetries) {
            g();
            return
        }
        var j = h === 0 ? 0 : d("MessagingConfig").syncFetchInitialTimeoutMs * Math.pow(d("MessagingConfig").syncFetchTimeoutMultiplier, h);
        c("setTimeoutAcrossTransitions")(function() {
            var j = !1,
                k = function(c) {
                    if (j) return;
                    j = !0;
                    p(a, b, e, f, g, h + 1)
                };
            c("Bootloader").loadModules(["MessengerMessageDFFFetcher.bs"], function(g) {
                return g.fetch_(a, {
                    thread_id: b,
                    message_id: e,
                    source: i
                }, !d("FBIDCheck").isUser_deprecated(a)).then(function(a) {
                    j = !0, f(new(c("AsyncResponse"))(null, babelHelpers["extends"]({}, a)))
                }, k)
            }, "MercurySyncDataFetcherImpl")
        }, j)
    }
    g.fetchThreadlistFromGraphQL = a;
    g.fetchThreadFromGraphQL = e;
    g.fetchMessageFromGraphQL = f
}), 98);
__d("MercurySyncDataFetcher", ["LogHistory", "MercurySyncDataFetcherImpl", "MessagingConfig", "Promise", "WebGraphQLConfig", "clearTimeout", "promiseDone", "setTimeoutAcrossTransitions"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h = d("LogHistory").getInstance("mercury_sync_data_fetcher");

    function a() {
        var a = 0;
        for (var b = 0; b < c("MessagingConfig").syncFetchRetries; b++) {
            var d = b === 0 ? 0 : c("MessagingConfig").syncFetchInitialTimeoutMs * Math.pow(c("MessagingConfig").syncFetchTimeoutMultiplier, b);
            a += d + c("MessagingConfig").syncFetchRequestTimeoutMs
        }
        return a
    }
    var i = a();

    function e(a) {
        var e = null;
        return new(b("Promise"))(function(b, f) {
            var g = function(a) {
                h.error("fetch_threadlist_graphql_timeout", JSON.stringify({
                    timeout: i
                })), c("clearTimeout")(e), f(a)
            };
            e = c("setTimeoutAcrossTransitions")(g, Math.max(i, c("WebGraphQLConfig").timeout * c("MessagingConfig").syncFetchRetries));
            c("promiseDone")(d("MercurySyncDataFetcherImpl").fetchThreadlistFromGraphQL(a), function(a) {
                c("clearTimeout")(e), b(a)
            }, g)
        })
    }

    function f(a, e, f, g) {
        return new(b("Promise"))(function(b, j) {
            var k = function(a) {
                    h.error("fetch_thread_graphql_timeout", JSON.stringify({
                        timeout: i
                    })), j(a)
                },
                l = c("setTimeoutAcrossTransitions")(k, i);
            c("promiseDone")(d("MercurySyncDataFetcherImpl").fetchThreadFromGraphQL(a, e, f, g), function(a) {
                c("clearTimeout")(l), b(a)
            }, k)
        })
    }

    function j(a, e, f, g) {
        return new(b("Promise"))(function(b, j) {
            var k = function(a) {
                    h.error("fetch_message_graphql_timeout", JSON.stringify({
                        timeout: i
                    })), j(a)
                },
                l = c("setTimeoutAcrossTransitions")(k, i);
            c("promiseDone")(d("MercurySyncDataFetcherImpl").fetchMessageFromGraphQL(a, e, f, g), function(a) {
                c("clearTimeout")(l), b(a)
            }, k)
        })
    }
    g.getMaxTimeoutMs = a;
    g.fetchThreadlistFromGraphQL = e;
    g.fetchThreadFromGraphQL = f;
    g.fetchMessageFromGraphQL = j
}), 98);
__d("MercurySyncDFFDataFetcher", ["CurrentUser", "MercurySingletonProvider", "MercurySyncDataFetcher", "MercuryThreadIDMap", "MessengerState.bs", "Promise"], (function(a, b, c, d, e, f, g) {
    "use strict";
    a = function() {
        function a(a) {
            this.$1 = a, this.__threadIDMap = c("MercuryThreadIDMap").getForFBID(this.$1)
        }
        a.getForFBID = function(a) {
            return h.getForFBID(a)
        };
        a.get = function() {
            return h.get()
        };
        var e = a.prototype;
        e.fetchInvalidateGlobalStateForGraphQL = function() {
            return this.$1 && this.$1 !== "0" && c("CurrentUser").isLoggedIn() ? d("MercurySyncDataFetcher").fetchThreadlistFromGraphQL(this.$1) : new(b("Promise"))(function(a, b) {
                return b(!0)
            })
        };
        e.fetchInvalidateThreadState = function(a, c, e) {
            var f = 11,
                g = 3;
            a = a || c;
            c = this.__threadIDMap.getClientIDFromServerIDNow(a);
            if (!c) return b("Promise").resolve({
                getPayload: function() {
                    return {}
                }
            });
            g = g + d("MessengerState.bs").getCurrentlyLoadedMessages(this.$1, c).length;
            return !a ? b("Promise").resolve({
                getPayload: function() {
                    return {}
                }
            }) : d("MercurySyncDataFetcher").fetchThreadFromGraphQL(this.$1, a, Math.max(g, f), e)
        };
        e.fetchInvalidateMessage = function(a, c, e, f) {
            a = a || c;
            return !a ? b("Promise").resolve({
                getPayload: function() {
                    return {}
                }
            }) : d("MercurySyncDataFetcher").fetchMessageFromGraphQL(this.$1, a, e, f)
        };
        return a
    }();
    var h = new(c("MercurySingletonProvider"))(a);
    g["default"] = a
}), 98);
__d("MercurySyncConstants", [], (function(a, b, c, d, e, f) {
    "use strict";
    a = Object.freeze({
        ARBITER_EVENT_INVALID_STATE: "SYNC:INVALID_STATE",
        ARBITER_EVENT_INVALID_STATE_RETRY: "SYNC:INVALID_STATE_RETRY",
        ARBITER_EVENT_INVALID_STATE_RECOVER: "SYNC:INVALID_STATE_RECOVER",
        ARBITER_EVENT_INVALID_STATE_STALE: "SYNC:INVALID_STATE_STALE"
    });
    f["default"] = a
}), 66);
__d("MercurySyncTopicType", [], (function(a, b, c, d, e, f) {
    a = Object.freeze({
        DELTA: "delta",
        DELTAFLOW: "deltaflow",
        DELTAFLOWREJECT: "deltaflowreject"
    });
    f["default"] = a
}), 66);
__d("onAfterLoadSafe", ["Run", "TimeSlice", "requestIdleCallback"], (function(a, b, c, d, e, f, g) {
    "use strict";

    function a(a) {
        return c("TimeSlice").guard(function() {
            return d("Run").onAfterLoad(function() {
                c("requestIdleCallback")(a)
            })
        }, "delayed after load", {
            propagationType: c("TimeSlice").PropagationType.ORPHAN
        })()
    }
    g["default"] = a
}), 98);
__d("MercurySyncDeltaHandler", ["invariant", "Arbiter", "Bootloader", "ChatReliabilityInstrumentation", "CurrentUser", "LogHistory", "MercuryDelayedDispatcher", "MercuryMessagingLightswitch", "MercuryServerPayloadPreprocessor", "MercurySingletonProvider", "MercurySyncConstants", "MercurySyncDeltaHolder", "MercurySyncDeltaTypes", "MercurySyncEventsProxy", "MercurySyncForcedFetchHandler", "MercurySyncHolesTypedLogger", "MercurySyncTopicType", "MercuryThreadIDMap", "MessengerDeltaTransformer.bs", "gkx", "onAfterLoadSafe", "performanceAbsoluteNow", "promiseDone", "qpl"], (function(a, b, c, d, e, f, g, h) {
    "use strict";
    var i = d("LogHistory").getInstance("mercury_sync_delta_handler"),
        j = "app_id:219994525426954";
    a = function() {
        a.getForFBID = function(a) {
            return k.getForFBID(a)
        };
        a.get = function() {
            return k.get()
        };

        function a(a) {
            var b = this;
            this.$1 = a;
            this.$2 = c("MercurySyncForcedFetchHandler").getForFBID(this.$1);
            this.__payloadPreprocessor = c("MercuryServerPayloadPreprocessor").getForFBID(this.$1);
            this.__delayedDispatcher = c("MercuryDelayedDispatcher").getForFBID(this.$1);
            this.$3 = c("MercurySyncDeltaHolder").getForFBID(this.$1);
            this.$4 = 0;
            this.$11 = c("MercuryThreadIDMap").getForFBID(this.$1);
            this.$5 = [];
            this.$10 = c("MercurySyncEventsProxy").getForFBID(this.$1);
            c("MercuryMessagingLightswitch").guard(function() {
                i.debug("constructor", JSON.stringify({
                    fbid: b.$1
                }))
            });
            c("Arbiter").subscribe(c("MercurySyncEventsProxy").Events.INIT, function(d, e) {
                c("MercuryMessagingLightswitch").guard(function() {
                    i.debug("initSeqID", JSON.stringify(e))
                });
                d = e && e.seqID;
                var a = e && e.fbid;
                if (!a) return;
                if (a !== b.$1) return;
                d ? b.$3.updateLastSeqID(d) : b.$3.updateLastSeqID(0);
                b.$13();
                c("gkx")("678667") && c("onAfterLoadSafe")(function() {
                    c("Bootloader").loadModules(["MessengerSyncSeqIDSanityCheck"], function(a) {
                        a.getForFBID(b.$1).init()
                    }, "MercurySyncDeltaHandler")
                })
            })
        }
        var b = a.prototype;
        b.setSource = function(a) {
            this.$12 = a
        };
        b.$13 = function() {
            var a = this;
            c("MercuryMessagingLightswitch").guard(function() {
                i.debug("setUpSubscriptionsToRealTimeUpdates", JSON.stringify({
                    fbid: a.$1
                }))
            });
            this.$6 = c("Arbiter").subscribe(this.$10.getArbiterType(c("MercurySyncEventsProxy").Events.DELTA), function(b, d) {
                b = d && d.obj && d.obj.queue;
                if (b && b.toString() !== a.$1) return;
                b = d && d.obj && d.obj.delta;
                d = d && d.obj && d.obj.iseq;
                if (!b || !d) return;
                a.$14(d, c("MercurySyncTopicType").DELTA);
                a.$15(d, b);
                a.$3.push(d, b);
                a.$16()
            });
            this.$8 = c("Arbiter").subscribe(this.$10.getArbiterType(c("MercurySyncEventsProxy").Events.FLOW_REJECT), function(b, c) {
                b = c && c.obj && c.obj.queue;
                if (b && b.toString() !== a.$1) return;
                a.$9 && a.$17()
            });
            this.$7 = c("Arbiter").subscribe(this.$10.getArbiterType(c("MercurySyncEventsProxy").Events.FAKE_DFF), function(b, c) {
                b = c && c.obj && c.obj.queue;
                if (b && b.toString() !== a.$1) return;
                b = c && c.obj && c.obj.delta;
                if (!b) return;
                if (a.$18(b))
                    if (a.$5.some(function(b) {
                            return a.$18(b)
                        })) return;
                    else a.$5.push(b);
                else a.$5.push(b);
                a.$16()
            });
            this.$9 = !0
        };
        b.$18 = function(a) {
            return a["class"] === c("MercurySyncDeltaTypes").ForcedFetch && !a.threadKey && !a.messageId
        };
        b.$16 = function() {
            if (this.$4 > 0) return;
            if (this.$5.length > 0) {
                var a = this.$5.shift();
                this.$19(this.$3.getLastSeqID(), a);
                this.$16()
            }
            a = this.$3.peek();
            if (!a) return;
            a = a - this.$3.getLastSeqID();
            if (a === 1) {
                var b = this.$3.pop();
                if (!b) return;
                var c = b.seqID;
                b = b.delta;
                this.$19(c, b);
                this.$16()
            } else a > 1 ? this.$20() : (this.$3.pop(), this.$16())
        };
        b.$19 = function(a, b) {
            b.numNoOps && b.numNoOps > 1 ? this.$3.updateLastSeqID(a + b.numNoOps - 1) : this.$3.updateLastSeqID(a), b["class"] === c("MercurySyncDeltaTypes").ForcedFetch ? (c("MercuryMessagingLightswitch").guard(function() {
                i.debug("DFF", JSON.stringify(b))
            }), b.threadKey !== void 0 && b.messageId === void 0 ? this.$21(a, b) : b.threadKey !== void 0 && b.messageId !== void 0 ? this.$22(a, b) : (d("ChatReliabilityInstrumentation").logDFF_DELTA_INIT(JSON.stringify(b)), this.$23(a))) : d("MessengerDeltaTransformer.bs").transform(this.$1, b)
        };
        b.$20 = function() {
            var a = JSON.stringify({
                $24: this.$3.getLastSeqID(),
                nextSeqID: this.$3.peek()
            });
            c("MercuryMessagingLightswitch").guard(function() {
                i.warn("hole", a)
            });
            var b = this.$3.peek();
            !b && h(0, 5132);
            b = b - 1;
            d("ChatReliabilityInstrumentation").logDFF_HOLE_INIT(a);
            this.$23(b)
        };
        b.$25 = function(a, b, d, e) {
            var f = this;
            this.$4 && h(0, 5134);
            this.$4++;
            c("MercuryMessagingLightswitch").guard(function() {
                i.debug("_scheduleDataFetch:start", JSON.stringify({
                    seqID: a
                }))
            });
            c("promiseDone")(b(), function(b) {
                c("MercuryMessagingLightswitch").guard(function() {
                    i.debug("_scheduleDataFetch:success", JSON.stringify({
                        seqID: a
                    }))
                }), f.$4--, d(a, b), f.$16()
            }, function(b) {
                c("MercuryMessagingLightswitch").guard(function() {
                    i.error("_scheduleDataFetch:failure", JSON.stringify({
                        seqID: a
                    }))
                }), f.$4--, e(a, b), f.$16()
            })
        };
        b.emergencyDFF = function(a, b) {
            this.$23(0, a, b)
        };
        b.$23 = function(a, b, d) {
            var e = this;
            if (!c("CurrentUser").isLoggedInNow()) return;
            this.$25(void 0, function() {
                return e.$2.processGlobalDFFForGraphQL()
            }, function(a, d) {
                c("gkx")("1199098") && e.$11.reset();
                var f = d.getPayload();
                e.__payloadPreprocessor.handleUpdate(f);
                f.sequence_id && (c("MercuryMessagingLightswitch").guard(function() {
                    i.debug("_initiateGlobalDFF:success", JSON.stringify({
                        seqID: f.sequence_id
                    }))
                }), c("gkx")("678668") ? e.$3.updateLastSeqIDAndClearHistory(f.sequence_id) : e.$3.updateLastSeqID(f.sequence_id));
                c("Arbiter").inform(c("MercurySyncConstants").ARBITER_EVENT_INVALID_STATE_RECOVER);
                b && b(f.sequence_id)
            }, function(f, g) {
                c("MercuryMessagingLightswitch").guard(function() {
                    i.error("_initiateGlobalDFF:failure", "")
                }), g ? (e.$9 && e.$17(), d && d()) : (c("Arbiter").inform(c("MercurySyncConstants").ARBITER_EVENT_INVALID_STATE_RETRY), c("MercuryMessagingLightswitch").guard(function() {
                    i.debug("_initiateGlobalDFF:retry", "")
                }), e.$23(a, b, d))
            })
        };
        b.$21 = function(a, b) {
            var d = this;
            this.$25(a, function() {
                return d.$2.processThreadDFF(a, b.threadKey, b.isLazy, d.$12)
            }, function(a, b) {
                d.__payloadPreprocessor.handleUpdate(b.getPayload()), d.$3.updateLastSeqID(a)
            }, function() {
                c("MercuryMessagingLightswitch").guard(function() {
                    i.error("_initiateThreadDFF:failure", JSON.stringify(b))
                });
                var e = babelHelpers["extends"]({}, b);
                delete e.threadKey;
                d.$3.updateLastSeqID(a - 1);
                d.$3.push(a, e)
            })
        };
        b.$22 = function(a, b) {
            var d = this;
            this.$25(a, function() {
                return d.$2.processMessageDFF(a, b.threadKey, b.messageId, b.isLazy, d.$12)
            }, function(a, b) {
                b = b.getPayload();
                var c = b.other_user_fbid ? b.other_user_fbid : b.thread_fbid;
                b = [babelHelpers["extends"]({}, b)];
                var e = "client_channel_message";
                d.__delayedDispatcher.handleUpdateWaitForThread({
                    actions: b,
                    payload_source: e
                }, c);
                d.$3.updateLastSeqID(a)
            }, function() {
                c("MercuryMessagingLightswitch").guard(function() {
                    i.error("_initiateMessageDFF:failure", JSON.stringify(b))
                });
                var e = babelHelpers["extends"]({}, b);
                delete e.messageId;
                d.$3.updateLastSeqID(a - 1);
                d.$3.push(a, e)
            })
        };
        b.$14 = function(a, b) {
            var d = a - this.$3.getLastSeqID();
            if (d !== 1 && d !== 0) {
                if (!c("CurrentUser").isEmployee()) return;
                new(c("MercurySyncHolesTypedLogger"))().setSeqID(a).setDifference(d).setTopicType(b).log()
            }
        };
        b.$15 = function(a, b) {
            switch (b["class"]) {
                case c("MercurySyncDeltaTypes").NewMessage:
                    var d = c("performanceAbsoluteNow")();
                    c("Bootloader").loadModules(["QuickPerformanceLogger"], function(a) {
                        var e = b.messageMetadata.tags;
                        Array.isArray(e) && e.includes(j) && c("MercuryMessagingLightswitch").guard(function() {
                            a.markerEnd(c("qpl")._(25296903, "1856"), "SUCCESS", b.messageMetadata.offlineThreadingId, d)
                        })
                    }, "MercurySyncDeltaHandler");
                    c("MercuryMessagingLightswitch").guard(function() {
                        i.debug("message_delta", JSON.stringify({
                            seqID: a,
                            threadKey: b.messageMetadata.threadKey,
                            messageId: b.messageMetadata.messageId
                        }))
                    });
                    break;
                case c("MercurySyncDeltaTypes").ReadReceipt:
                    c("MercuryMessagingLightswitch").guard(function() {
                        i.debug("read_receipt_delta", JSON.stringify({
                            seqID: a,
                            threadKey: b.threadKey,
                            actionTimestampMs: b.actionTimestampMs,
                            watermarkTimestampMs: b.watermarkTimestampMs
                        }))
                    });
                    break;
                case c("MercurySyncDeltaTypes").DeliveryReceipt:
                    c("MercuryMessagingLightswitch").guard(function() {
                        i.debug("delivery_receipt_delta", JSON.stringify({
                            seqID: a,
                            deliveredWatermarkTimestampMs: b.deliveredWatermarkTimestampMs,
                            messageIds: b.messageIds
                        }))
                    });
                    break
            }
        };
        b.pause = function() {
            this.$4++
        };
        b.resume = function() {
            this.$4--, this.$16()
        };
        b.$17 = function(a) {
            a === void 0 && (a = !1), this.$9 = !1, c("Arbiter").unsubscribe(this.$6), c("Arbiter").unsubscribe(this.$7), c("Arbiter").unsubscribe(this.$8), a || c("Arbiter").inform(c("MercurySyncConstants").ARBITER_EVENT_INVALID_STATE)
        };
        return a
    }();
    var k = new(c("MercurySingletonProvider"))(a);
    g["default"] = a
}), 98);
__d("MercurySyncForcedFetchHandler", ["MercurySingletonProvider", "MercurySyncDFFDataFetcher", "MercuryThreadIDMap", "MessengerState.bs", "Promise"], (function(a, b, c, d, e, f, g) {
    "use strict";

    function h(a) {
        return {
            getPayload: function() {
                return {
                    sequence_id: a
                }
            }
        }
    }
    a = function() {
        a.getForFBID = function(a) {
            return i.getForFBID(a)
        };
        a.get = function() {
            return i.get()
        };

        function a(a) {
            this.$1 = a, this.$2 = c("MercuryThreadIDMap").getForFBID(this.$1), this.$3 = c("MercurySyncDFFDataFetcher").getForFBID(this.$1)
        }
        var e = a.prototype;
        e.processMessageDFF = function(a, c, e, f, g) {
            if (f) {
                f = c.otherUserFbId !== void 0 ? c.otherUserFbId.toString() : c.threadFbId.toString();
                f = this.$2.getClientIDFromServerIDNow(f);
                if (f === void 0) return b("Promise").resolve(h(a));
                f = d("MessengerState.bs").getMessagesFromIDs(this.$1, [e]);
                if (f.length === 0) return b("Promise").resolve(h(a))
            }
            return this.$3.fetchInvalidateMessage(c.otherUserFbId, c.threadFbId, e, g)
        };
        e.processThreadDFF = function(a, c, d, e) {
            if (d) {
                d = c.otherUserFbId !== void 0 ? c.otherUserFbId.toString() : c.threadFbId.toString();
                d = this.$2.getClientIDFromServerIDNow(d);
                if (d === void 0) return b("Promise").resolve(h(a))
            }
            return this.$3.fetchInvalidateThreadState(c.otherUserFbId, c.threadFbId, e)
        };
        e.processGlobalDFFForGraphQL = function() {
            return this.$3.fetchInvalidateGlobalStateForGraphQL()
        };
        return a
    }();
    var i = new(c("MercurySingletonProvider"))(a);
    g["default"] = a
}), 98);
__d("MontageDispatcher", ["ExplicitRegistrationDispatcher"], (function(a, b, c, d, e, f, g) {
    "use strict";
    a = function(a) {
        babelHelpers.inheritsLoose(b, a);

        function b() {
            return a.apply(this, arguments) || this
        }
        return b
    }(c("ExplicitRegistrationDispatcher"));
    b = new a({
        strict: !1
    });
    g["default"] = b
}), 98);
__d("MontageActions", ["invariant", "Bootloader", "CurrentUser", "MercuryServerPayloadPreprocessor", "MontageDispatcher", "RelayFBEnvironment", "RelayModern", "keyMirror", "promiseDone"], (function(a, b, c, d, e, f, g, h) {
    "use strict";
    var i = c("keyMirror")({
            REQUEST_UPDATE: null,
            HAS_UPDATED: null,
            HANDLE_ACTION: null
        }),
        j = new Set();

    function a(a) {
        c("MontageDispatcher").dispatch({
            type: i.REQUEST_UPDATE,
            threadFBID: a
        })
    }

    function b(a, b) {
        c("MontageDispatcher").dispatch({
            type: i.REQUEST_UPDATE,
            threadFBID: a
        })
    }

    function e(a) {
        c("MontageDispatcher").dispatch({
            type: i.HAS_UPDATED,
            threadFBID: a
        })
    }

    function f(a) {
        if (j.has(a)) return;
        j.add(a);
        c("Bootloader").loadModules(["MessengerMontageThreadQuery"], function(b) {
            b = d("RelayModern").fetchQuery(c("RelayFBEnvironment"), b, {
                id: a
            });
            c("promiseDone")(b, function(b) {
                c("MercuryServerPayloadPreprocessor").getForFBID(c("CurrentUser").getID()).handleUpdate({
                    current_montage_thread: b
                }), j["delete"](a)
            })
        }, "MontageActions")
    }

    function k(a, b) {
        c("MercuryServerPayloadPreprocessor").getForFBID(c("CurrentUser").getID()).handleUpdate({
            montage_delete_message_delta: b
        })
    }

    function l(a, b) {
        c("Bootloader").loadModules(["MessengerNewMontageMessage"], function(a) {
            a = d("RelayModern").fetchQuery(c("RelayFBEnvironment"), a, {
                id: b.message_fbid
            });
            c("promiseDone")(a, function(a) {
                c("MercuryServerPayloadPreprocessor").getForFBID(c("CurrentUser").getID()).handleUpdate({
                    montage_new_message_delta: a.montage_message
                })
            })
        }, "MontageActions")
    }

    function m(a) {
        h(0, 54483)
    }
    g.Types = i;
    g.requestUpdate = a;
    g.montageThreadChanged = b;
    g.hasUpdated = e;
    g.loadMontageThreadForActor = f;
    g.deleteMontage = k;
    g.handleNewMontageDelta = l;
    g.updatePollStickerChoice = m
}), 98);
__d("RemovedMessageTombstoneContent", ["fbt", "CurrentUser", "GenderConst", "IntlVariations", "MercuryIDs", "MessengerParticipants.bs", "MessengerState.bs", "gkx"], (function(a, b, c, d, e, f, g, h) {
    "use strict";

    function a(a, b) {
        var e;
        e = ((e = a.unsender) == null ? void 0 : e.id) || a.author;
        var f = d("MercuryIDs").getUserIDFromParticipantID(e),
            g = c("CurrentUser").getID();
        if (f === g) return i();
        g = d("MessengerState.bs").getThreadMetaNow(g, a.thread_id);
        g = g == null ? void 0 : (g = g.custom_nickname) == null ? void 0 : g[f];
        g = g || ((f = b.get(e)) == null ? void 0 : f.short_name) || ((g = a.unsender) == null ? void 0 : g.short_name) || ((f = a.unsender) == null ? void 0 : f.name);
        f = (a = b.get(e)) == null ? void 0 : a.gender;
        if (g) return j(g, f);
        else return k()
    }

    function b(a) {
        if (a == null) return k().toString();
        var b = d("MercuryIDs").getUserIDFromParticipantID(a);
        if (b === c("CurrentUser").getID()) return i().toString();
        b = d("MessengerParticipants.bs").getNow(a);
        a = b && b.short_name;
        b = b && b.gender;
        if (a) return j(a, b).toString();
        else return k().toString()
    }

    function i() {
        return c("gkx")("1531920") ? h._( /*FBT_CALL*/ "\u05d1\u05d9\u05d8\u05dc\u05ea \u05e9\u05dc\u05d9\u05d7\u05ea \u05d4\u05d5\u05d3\u05e2\u05d4" /*FBT_CALL*/ ) : h._( /*FBT_CALL*/ "\u05d4\u05e1\u05e8\u05ea \u05d4\u05d5\u05d3\u05e2\u05d4" /*FBT_CALL*/ )
    }

    function j(a, b) {
        return c("gkx")("1531920") ? h._( /*FBT_CALL*/ {
            "*": "\u05e9\u05dc\u05d9\u05d7\u05ea \u05d4\u05d4\u05d5\u05d3\u05e2\u05d4 \u05d1\u05d5\u05d8\u05dc\u05d4 \u05e2\u05dc \u05d9\u05d3\u05d9 {name}"
        } /*FBT_CALL*/ , [h._param("name", a, [1, b === c("GenderConst").FEMALE_SINGULAR ? c("IntlVariations").GENDER_FEMALE : c("IntlVariations").GENDER_MALE])]) : h._( /*FBT_CALL*/ {
            "*": "{name} \u05d4\u05e1\u05d9\u05e8\/\u05d4 \u05d4\u05d5\u05d3\u05e2\u05d4",
            "1": "{name} \u05d4\u05e1\u05d9\u05e8 \u05d4\u05d5\u05d3\u05e2\u05d4",
            "2": "{name} \u05d4\u05e1\u05d9\u05e8\u05d4 \u05d4\u05d5\u05d3\u05e2\u05d4"
        } /*FBT_CALL*/ , [h._param("name", a, [1, b === c("GenderConst").FEMALE_SINGULAR ? c("IntlVariations").GENDER_FEMALE : c("IntlVariations").GENDER_MALE])])
    }

    function k() {
        return c("gkx")("1531920") ? h._( /*FBT_CALL*/ "\u05d0\u05d9\u05e9 \u05e7\u05e9\u05e8 \u05d1\u05d9\u05d8\u05dc \u05d0\u05ea \u05d4\u05e9\u05dc\u05d9\u05d7\u05d4 \u05e9\u05dc \u05d4\u05d5\u05d3\u05e2\u05d4" /*FBT_CALL*/ ) : h._( /*FBT_CALL*/ "\u05d0\u05d9\u05e9 \u05e7\u05e9\u05e8 \u05d4\u05e1\u05d9\u05e8 \u05d4\u05d5\u05d3\u05e2\u05d4" /*FBT_CALL*/ )
    }
    g.getRemovedMessageTombstoneContent = a;
    g.getTombstoneContentForSnippet = b;
    g._getFbtForCurrentViewerAuthor = i;
    g._getFbtForOtherAuthor = j;
    g._getFbtForUnknownAuthor = k
}), 98);
__d("MercurySendMessageFields", [], (function(a, b, c, d, e, f) {
    a = Object.freeze({
        AUTO_RETRY_CNT: "auto_retry_cnt",
        MANUAL_RETRY_CNT: "manual_retry_cnt"
    });
    f["default"] = a
}), 66);
__d("MercuryMessageObject", ["MercuryIDs", "MercuryLocalIDs", "MercuryMessageClientState", "MercurySendMessageFields", "MercurySingletonProvider", "MessengerObjectAssociationType", "MessengerState.bs", "ODS", "RepliedToMessageStatusForGraphQL", "SiteData", "md5"], (function(a, b, c, d, e, f, g) {
    a = function() {
        a.getForFBID = function(a) {
            return j.getForFBID(a)
        };
        a.get = function() {
            return j.get()
        };

        function a(a) {
            this.$1 = a
        }
        var b = a.prototype;
        b.constructHotLikeObject = function(a, b, d, e, f) {
            b = h(this.$1, "ma-type:user-generated-message", b, d);
            d = {
                body: a,
                has_attachment: !1,
                html_body: !1,
                attachments: [],
                specific_to_list: [],
                participants_to_hash: [],
                creator_info: void 0,
                tags: e || [],
                signatureID: f,
                ui_push_phase: c("SiteData").push_phase
            };
            return babelHelpers["extends"]({}, b, d)
        };
        b.constructPhotoMessageObject = function(a, b, d, e, f) {
            b = h(this.$1, "ma-type:user-generated-message", b, d, a);
            d = {
                has_attachment: !1,
                html_body: !1,
                attachments: [],
                specific_to_list: [],
                participants_to_hash: [],
                creator_info: void 0,
                tags: e || [],
                signatureID: f,
                ui_push_phase: c("SiteData").push_phase
            };
            return babelHelpers["extends"]({}, b, d)
        };
        b.constructTextMessageObject = function(a, b, d, e, f, g, i, j, k, l) {
            g = h(this.$1, "ma-type:user-generated-message", g, i, d);
            i = f.params && f.type;
            d = b.length > 0;
            a = {
                body: typeof a === "string" ? a.replace(/^\s+/, "").replace(/\s+$/, "") : "",
                has_attachment: i || d,
                raw_attachments: d ? b : void 0,
                shareable_attachment: i ? {
                    share_params: f.params.get("data"),
                    share_type: f.type
                } : void 0,
                profile_ranges: e,
                profile_xmd: e,
                verse_group_role_xmd: l,
                mib_direct_message_data: null,
                html_body: !1,
                attachments: [],
                specific_to_list: [],
                participants_to_hash: [],
                creator_info: void 0,
                tags: j || [],
                signatureID: k,
                ui_push_phase: c("SiteData").push_phase
            };
            return babelHelpers["extends"]({}, g, a)
        };
        b.constructUserGeneratedMessageObject = function(a, b, c, d, e, f, g) {
            b = h(this.$1, "ma-type:user-generated-message", b, c, g);
            c = {
                body: typeof a === "string" ? a.replace(/^\s+/, "").replace(/\s+$/, "") : "",
                has_attachment: !1,
                html_body: !1,
                attachments: [],
                specific_to_list: d || [],
                participants_to_hash: [],
                creator_info: e,
                tags: f || []
            };
            return babelHelpers["extends"]({}, b, c)
        };
        b.constructStickerMessageObject = function(a, b, d, e, f, g) {
            b = h(this.$1, "ma-type:user-generated-message", b, d, g);
            d = {
                has_attachment: !0,
                html_body: !1,
                attachments: [],
                sticker_id: a,
                specific_to_list: [],
                participants_to_hash: [],
                tags: e || [],
                signatureID: f,
                ui_push_phase: c("SiteData").push_phase
            };
            return babelHelpers["extends"]({}, b, d)
        };
        b.constructAttachmentMessageObject = function(a, b, c) {
            a = h(this.$1, "ma-type:user-generated-message", a, b, c);
            b = {
                attachments: [],
                specific_to_list: [],
                participants_to_hash: []
            };
            return babelHelpers["extends"]({}, a, b, {
                tags: []
            })
        };
        b.constructLogMessageObject = function(a, b, c, d) {
            a = h(this.$1, "ma-type:log-message", a, b);
            b = {
                log_message_type: c,
                log_message_data: d,
                ephemeral_ttl_mode: d && d.untypedData && d.untypedData.ttl
            };
            return babelHelpers["extends"]({}, a, b)
        };
        b.constructCTAConfirmationMessageObject = function(a, b, c, d, e, f) {
            a = this.constructUserGeneratedMessageObject(a, b, c, null, null, e, null);
            b = d ? {
                quick_replies: d,
                ignore_for_webhook: !1
            } : {
                ignore_for_webhook: !0
            };
            f && (b.postback_data = JSON.stringify(f));
            return babelHelpers["extends"]({}, a, {
                platform_xmd: JSON.stringify(b)
            })
        };
        b.normalizeNewMessage = function(a) {
            a.status === void 0 && (a.status = 0);
            a.offline_threading_id = a.offline_threading_id || d("MercuryLocalIDs").generateOfflineThreadingID(a.timestamp);
            a.offline_threading_id || d("ODS").bumpEntityKey(3303, "chat.web", "invalid_otid_generated");
            a.message_id = a.message_id || a.offline_threading_id;
            var b = d("MercuryIDs").getParticipantIDFromUserID(this.$1);
            a.specific_to_list = a.specific_to_list || [];
            a.participants_to_hash = a.participants_to_hash || [];
            a.specific_to_list.length && a.specific_to_list.indexOf(b) === -1 && a.specific_to_list.push(b);
            a.participants_to_hash.length && a.participants_to_hash.indexOf(b) === -1 && a.participants_to_hash.push(b);
            var e = !1;
            if (!a.thread_id) a.thread_id = "root:" + a.offline_threading_id;
            else {
                var f, g = d("MessengerState.bs").getThreadMetaNow(this.$1, a.thread_id);
                g && g.ephemeral_ttl_mode !== null && a.ephemeral_ttl_mode === void 0 && (a.ephemeral_ttl_mode = g.ephemeral_ttl_mode);
                ((f = g) != null ? (f = f.associated_object) != null ? f.name : f : f) && ((f = g) != null ? f.object_association_type : f) === c("MessengerObjectAssociationType").GENERAL_CHAT && (e = !0)
            }
            if (!e)
                if (a.specific_to_list.length == 1) a.thread_id = "user:" + this.$1;
                else if (a.specific_to_list.length == 2) {
                g = a.specific_to_list[0] == b ? a.specific_to_list[1] : a.specific_to_list[0];
                a.thread_id = d("MercuryIDs").getThreadIDFromParticipantID(g)
            }
            if (!a.specific_to_list.length) {
                f = d("MercuryIDs").tokenize(a.thread_id);
                e = f.type;
                g = f.value;
                e == "user" && (a.specific_to_list = ["fbid:" + g, b])
            }
            a.to_list_md5 = this.sortAndHash(a.participants_to_hash);
            a[c("MercurySendMessageFields").MANUAL_RETRY_CNT] || (a[c("MercurySendMessageFields").MANUAL_RETRY_CNT] = 0)
        };
        b.sortAndHash = function(a) {
            if (!a || a.length === 0) return null;
            a = a.map(function(a) {
                return d("MercuryIDs").getUserIDFromParticipantID(a)
            });
            return a.some(function(a) {
                return a == null
            }) ? null : c("md5")(a.sort(function(a, b) {
                if (a == null || b == null) throw new Error("invalid participant id in to_list_md5 creation");
                if (a.length < b.length) return -1;
                return a.length > b.length ? 1 : a.localeCompare(b)
            }).join(":"))
        };
        b.normalizeResendMessage = function(a) {
            a.status = 7, a.timestamp = Date.now(), a[c("MercurySendMessageFields").MANUAL_RETRY_CNT] += 1
        };
        b.normalizeAddAttachmentPlaceholder = function(a, b, d) {
            d.preview_attachments.length > 0 && (a.has_attachment = !0, a.preview_attachments = d.preview_attachments), a.client_state = c("MercuryMessageClientState").DO_NOT_SEND_TO_SERVER, a.status = 7, a.upload_id = b
        };
        return a
    }();

    function h(a, b, e, f, g) {
        var h = i(e) ? ["source:chat"] : [],
            j = Date.now();
        b = {
            action_type: b,
            thread_id: f,
            author: d("MercuryIDs").getParticipantIDFromUserID(a),
            author_email: null,
            timestamp: j,
            is_unread: !1,
            is_filtered_content: !1,
            is_filtered_content_bh: !1,
            is_filtered_content_account: !1,
            is_filtered_content_quasar: !1,
            is_filtered_content_invalid_app: !1,
            is_spoof_warning: !1,
            source: e,
            source_tags: h,
            replied_to_message: g ? {
                message: g,
                status: c("RepliedToMessageStatusForGraphQL").VALID
            } : void 0
        };
        return b
    }

    function i(a) {
        switch (a) {
            case "source:chat:web":
            case "source:chat:jabber":
            case "source:chat:iphone":
            case "source:chat:meebo":
            case "source:chat:orca":
            case "source:chat:test":
            case "source:chat":
                return !0;
            default:
                return !1
        }
    }
    var j = new(c("MercurySingletonProvider"))(a);
    g["default"] = a
}), 98);
__d("MercuryMessageActions", ["AsyncRequest", "Bootloader", "CurrentUser", "MercuryDispatcher", "MercuryMessageObject", "MercuryMessagingLightswitch", "MercuryServerRequests", "MercurySingletonMixin", "MessengerState.bs", "WorkChatSavedMessagesOnHeaderMenuNux"], (function(a, b, c, d, e, f, g) {
    "use strict";
    a = function() {
        function a(a) {
            this.$1 = a, this.$2 = c("MercuryMessageObject").getForFBID(this.$1), this.__serverRequests = c("MercuryServerRequests").getForFBID(this.$1), this.__dispatcher = c("MercuryDispatcher").getForFBID(this.$1)
        }
        var b = a.prototype;
        b.send = function(a, b, c) {
            this.$2.normalizeNewMessage(a), this.__dispatcher.handleUpdate(this.__constructClientSingleMessagePayload(babelHelpers["extends"]({}, a), "client_send_message")), this.__serverRequests.sendNewMessage(a, c), b != null && b(a.thread_id)
        };
        b.resend = function(a, b) {
            a = babelHelpers["extends"]({}, a);
            this.$2.normalizeResendMessage(a);
            this.send(a, void 0, b)
        };
        b.addAttachmentPlaceholder = function(a, b, c) {
            this.$2.normalizeAddAttachmentPlaceholder(a, b, c), this.$2.normalizeNewMessage(a), this.__dispatcher.handleUpdate(this.__constructClientSingleMessagePayload(babelHelpers["extends"]({}, a), "client_send_message"))
        };
        b.cancelAttachmentPlaceholder = function(a, b) {
            this.__dispatcher.handleUpdate(this.__constructClientSingleMessagePayload({
                upload_id: a,
                upload_data: b,
                action_type: "ma-type:cancel-attachment-placeholder"
            }, "client_send_message"))
        };
        b.confirmAttachmentPlaceholder = function(a, b) {
            this.__dispatcher.handleUpdate(this.__constructClientSingleMessagePayload({
                upload_id: a,
                upload_data: b,
                action_type: "ma-type:confirm-attachment-placeholder"
            }, "client_send_message"))
        };
        b["delete"] = function(a, b, c) {
            this.__dispatcher.handleUpdate(this.$3(a, b, "ma-type:delete-messages", c || "client_delete_messages"))
        };
        b.changeSaveStatus = function(a, b, e) {
            var f = d("MessengerState.bs").getServerMessageID(c("CurrentUser").getID(), a.message_id);
            this.__dispatcher.handleUpdate(this.__constructClientSingleMessagePayload({
                thread_id: a.thread_id,
                messageId: f,
                tags_to_add: b ? ["message:save"] : [],
                tags_to_delete: b ? [] : ["message:save"],
                action_type: "ma-type:mutate_tags"
            }, e || "client_update_saved_message_status"));
            c("Bootloader").loadModules(["XMessengerDotComSaveController", "SavedStateActions", "CollectionsDisplaySurface", "CollectionCurationMechanisms", "WorkChatSavedMessagesTypedLogger", "SavedMessagesEvent", "useWorkGalahadEventEmitter"], function(d, e, g, h, i, j, k) {
                c("MercuryMessagingLightswitch").guard(function() {
                    new(c("AsyncRequest"))().setURI(d.getURIBuilder().getURI()).setData({
                        action: b ? e.SAVE : e.UNSAVE,
                        surface: g.MESSENGER_DOT_COM_MESSAGE,
                        mechanism: h.RIGHT_CLICK,
                        message_id: f
                    }).setHandler(function() {
                        if (b && c("WorkChatSavedMessagesOnHeaderMenuNux").shouldShowNux) {
                            var d = k(["toggleNavHeaderMenu", "showSavedMessageNux"]);
                            d[0];
                            d = d[1];
                            d()
                        }
                        new i().setEvent(b ? j.SAVE : j.UNSAVE).setThreadID(a.thread_id).setMessageID(f).log()
                    }).send()
                })
            }, "MercuryMessageActions")
        };
        b.__constructClientSingleMessagePayload = function(a, b) {
            return {
                actions: [a],
                from_client: !0,
                payload_source: b
            }
        };
        b.$3 = function(a, b, c, d) {
            return {
                actions: [{
                    action_type: c,
                    thread_id: a,
                    message_ids: b
                }],
                from_client: !0,
                payload_source: d
            }
        };
        return a
    }();
    b = Object.assign(a, d("MercurySingletonMixin"), {
        _instances: {}
    });
    e = b;
    g["default"] = e
}), 98);
__d("MNPlatformAttributionTags", [], (function(a, b, c, d, e, f) {
    a = "bnp:trigger:";
    b = "customer_chat_plugin";
    c = "messengerdotcom";
    d = "messenger_web";
    e = "messenger_web_search";
    var g = "m_dot_me";
    f.ATTRIBUTION_TAGS_PREFIX = a;
    f.CUSTOMER_CHAT_PLUGIN = b;
    f.MESSENGERDOTCOM = c;
    f.MESSENGER_WEB = d;
    f.MESSENGER_WEB_SEARCH = e;
    f.M_DOT_ME = g
}), 66);
__d("ChatPluginTestId", [], (function(a, b, c, d, e, f) {
    "use strict";
    a = "chat_plugin_url_update_admin_text";
    b = "chat_plugin_logged_in_intro_admin_text";
    c = "chat_plugin_guest_intro_admin_text";
    d = "persistent-menu-button-";
    e = "chat_plugin_guest_upgrade_not_now_button";
    f.CHAT_PLUGIN_URL_UPDATE_ADMIN_TEXT = a;
    f.CHAT_PLUGIN_LOGGED_IN_INTRO_ADMIN_TEXT = b;
    f.CHAT_PLUGIN_GUEST_INTRO_ADMIN_TEXT = c;
    f.PERSISTENT_MENU_BUTTON_PREFIX = d;
    f.CHAT_PLUGIN_GUEST_UPGRADE_NOT_NOW_BUTTON = e
}), 66);
__d("ChatPluginEntryPointSizeEnum", [], (function(a, b, c, d, e, f) {
    a = Object.freeze({
        STANDARD: "standard",
        COMPACT: "compact"
    });
    f["default"] = a
}), 66);
__d("ChatPluginMobileChatOption", [], (function(a, b, c, d, e, f) {
    a = Object.freeze({
        APP_SWITCH: "app_switch",
        CHAT_TAB: "chat_tab"
    });
    f["default"] = a
}), 66);
__d("ChatPluginWindowSizeEnum", [], (function(a, b, c, d, e, f) {
    a = Object.freeze({
        STANDARD: "standard",
        COMPACT: "compact"
    });
    f["default"] = a
}), 66);
__d("LiveChatAlignment", [], (function(a, b, c, d, e, f) {
    a = Object.freeze({
        LEFT: "left",
        RIGHT: "right"
    });
    f["default"] = a
}), 66);
__d("LiveChatGreetingDialogDisplayMode", [], (function(a, b, c, d, e, f) {
    a = Object.freeze({
        UNSET: "unset",
        SHOW: "show",
        ICON: "icon",
        FADE: "fade",
        HIDE: "hide",
        WELCOME_MESSAGE: "welcome_message"
    });
    f["default"] = a
}), 66);
__d("ChatPluginSetupFlowCustomizationMutation", ["ChatPluginEntryPointSizeEnum", "ChatPluginMobileChatOption", "ChatPluginSetupFlowCustomizationMutation.graphql", "ChatPluginWindowSizeEnum", "LiveChatAlignment", "LiveChatGreetingDialogDisplayMode", "Promise", "RelayModern", "getGraphQLEnumSafe"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h, i = h !== void 0 ? h : h = b("ChatPluginSetupFlowCustomizationMutation.graphql");

    function j(a, b, e) {
        var f = b.customization,
            g = f.alignment,
            h = f.awayGreeting,
            j = f.awayHoursEnabled,
            k = f.desktopBottomSpacing,
            l = f.desktopEntryPointSize,
            m = f.desktopWindowSize,
            n = f.desktopSideSpacing,
            o = f.entryPointIcon,
            p = f.entryPointLabel,
            q = f.externalBusinessConnectionProxy,
            r = f.greetingDialogDisplay,
            s = f.guestModeEnabled,
            t = f.locale,
            u = f.loggedInGreeting,
            v = f.loggedOutGreeting,
            w = f.mobileBottomSpacing,
            x = f.mobileEntryPointSize,
            y = f.mobileOptin,
            z = f.mobileSideSpacing,
            A = f.themeColor;
        f = f.websiteDomains;
        A = A != null ? A.substr(1) : null;
        return d("RelayModern").commitMutation(a, {
            mutation: i,
            variables: {
                input: {
                    page_id: b.pageID,
                    alignment: c("getGraphQLEnumSafe")(c("LiveChatAlignment"), g),
                    away_greeting: h,
                    away_hours_enabled: j,
                    default_locale: t,
                    desktop_bottom_spacing: k.toString(),
                    desktop_entry_point_size: c("getGraphQLEnumSafe")(c("ChatPluginEntryPointSizeEnum"), l),
                    desktop_side_spacing: n.toString(),
                    desktop_window_size: c("getGraphQLEnumSafe")(c("ChatPluginWindowSizeEnum"), m),
                    entry_point_icon: o,
                    entry_point_label: p,
                    external_business_connection_proxy: q,
                    greeting_dialog_display: c("getGraphQLEnumSafe")(c("LiveChatGreetingDialogDisplayMode"), r),
                    guest_mode_enabled: s,
                    logged_in_greeting: u,
                    logged_out_greeting: v,
                    mobile_bottom_spacing: w.toString(),
                    mobile_entry_point_size: c("getGraphQLEnumSafe")(c("ChatPluginEntryPointSizeEnum"), x),
                    mobile_optin: c("getGraphQLEnumSafe")(c("ChatPluginMobileChatOption"), y),
                    mobile_side_spacing: z.toString(),
                    theme_color: A,
                    whitelisted_domains: f
                }
            },
            onCompleted: e.onCompleted,
            onError: e.onError
        })
    }

    function a(a, c) {
        return new(b("Promise"))(function(b, d) {
            j(a, c, {
                onCompleted: b,
                onError: d
            })
        })
    }
    g.commit = j;
    g.commitAsync = a
}), 98);
__d("XCustomerChatInjectionDialogControllerRouteBuilder", ["jsRouteBuilder"], (function(a, b, c, d, e, f, g) {
    a = c("jsRouteBuilder")("/customer_chat/dialog/", Object.freeze({}), void 0);
    b = a;
    g["default"] = b
}), 98);
__d("XPagesManagerSettingsControllerRouteBuilder", ["jsRouteBuilder"], (function(a, b, c, d, e, f, g) {
    a = c("jsRouteBuilder")("/{page_token}/settings/", Object.freeze({
        shimmed_in_item: !1,
        show_cc_dialog: !1,
        chat_plugin_step: 0,
        show_sync_dialog: !1
    }), void 0);
    b = a;
    g["default"] = b
}), 98);
__d("ChatPluginSetupFlowE2ETestUtils", ["XBizSuiteControllerRouteBuilder", "XCustomerChatInjectionDialogControllerRouteBuilder", "XPagesManagerSettingsControllerRouteBuilder", "regeneratorRuntime"], (function(a, b, c, d, e, f, g) {
    "use strict";
    a = 8959;
    d = 9233;
    e = 9339;
    var h = "chat-plugin-setup-flow-container",
        i = "create-code-button";
    f = "setup-modal";
    var aa = "setup-3p-menu-modal",
        j = "setup-3p-menu-manual-button",
        ba = "setup-choice-modal",
        k = "locale-selector",
        ca = "setup-method-button-",
        l = "setup-modal-next-button",
        m = "setup-modal-add-domain-button",
        n = "setup-modal-new-domain-input",
        o = "setup-modal-copy-code-button",
        p = "setup-modal-email-instructions-link",
        q = "setup-modal-email-instructions-modal",
        r = "setup-modal-email-recipients-input",
        s = "setup-modal-send-email-next-button",
        da = "no-domains-main-panel-error",
        ea = "domains-list-text",
        fa = "edit-domains-modal",
        t = "edit-domains-button",
        u = "edit-domains-save-button",
        ga = "setup-google-tag-manager-locale",
        v = "automation-section",
        w = "automation-section-container",
        x = "automation-welcome-message-toggle",
        ha = "automation-welcome-message-input",
        ia = "automation-welcome-message-edit-button",
        ja = "automation-welcome-message-collapse-button",
        y = "automation-faq-toggle",
        z = "automation-faq-entry-question-input-",
        A = "automation-faq-entry-response-input-",
        ka = "automation-faq-entry-edit-button-",
        la = "automation-faq-entry-collapse-button-",
        ma = "automation-faq-entry-delete-button-",
        B = "automation-faq-add-button",
        C = "automation-away-hours-button",
        D = "automation-current-status-title",
        E = "automation-schedule-title",
        F = "automation-available-tab-greeting",
        G = "automation-away-tab-greeting",
        H = "automation-available-tab-welcome-message",
        I = "automation-away-tab-welcome-message",
        J = "automation-schedule-link",
        na = "automation-away-message-link",
        K = "customization-section",
        L = "customization-section-container",
        oa = "customization-greeting-edit-button",
        pa = "customization-greeting-collapse-button",
        qa = "customization-greeting-input",
        ra = "customization-guest-mode-toggle",
        sa = "customization-theme-color-toggle",
        ta = "customization-entry-point-icon-only-test-id",
        ua = "customization-entry-point-icon-with-label-test-id",
        va = "customization-entry-point-label-only-test-id",
        wa = "customization-entry-point-round-icon-test-id",
        M = "customization-entry-point-icon-section-test-id",
        N = "customization-entry-point-label-section-test-id",
        xa = "customization-entry-point-label-selector-test-id",
        ya = "customization-entry-point-label-help-test-id",
        za = "customization-theme-color-list-item",
        O = "customization-theme-color-input",
        Aa = "customization-theme-color-warning-notice",
        Ba = "customization-alignment-selector",
        P = "customization-desktop-bottom-spacing-input",
        Q = "customization-mobile-bottom-spacing-input",
        R = "customization-desktop-side-spacing-input",
        S = "customization-mobile-side-spacing-input",
        Ca = "customization-auto-expand-toggle",
        Da = "customization-prominence-selector",
        Ea = "customization-prominence-icon",
        Fa = "customization-prominence-welcome-message",
        Ga = "customization-prominence-window",
        Ha = "desktop_welcome_message_preview",
        Ia = "customization-mobile-optin",
        Ja = "customization-chat-button-size-desktop-tab",
        Ka = "customization-chat-button-size-mobile-tab",
        T = "customization-compact-chat-button-size-option",
        U = "customization-standard-chat-button-size-option",
        La = "customization-compact-chat-window-size-option",
        Ma = "customization-standard-chat-window-size-option",
        V = "publish-button",
        Na = "publish-toast",
        Oa = "preview-tab-desktop-button",
        Pa = "preview-tab-mobile-button",
        Qa = "preview-desktop-frame",
        Ra = "preview-mobile-frame",
        Sa = "preview-messenger-icon-button",
        Ta = "preview-desktop-thread-page-container",
        Ua = "preview-thread-page-close-button",
        Va = "preview-mobile-thread-page-container",
        Wa = "preview-mobile-welcome-message-page-container",
        Xa = "preview-mobile-welcome-message-test-id",
        Ya = "preview-desktop-welcome-page-modal-container",
        Za = "preview-desktop-welcome-page-modal-close-button",
        $a = "preview-mobile-welcome-page-modal-container",
        ab = "preview-mobile-welcome-page-modal-close-button",
        W = "nux-welcome-modal-container",
        X = "nux-step-setup-container",
        Y = "nux-step-automation-container",
        Z = "nux-step-customization-container",
        $ = "nux-step-publish-container",
        bb = "wordpress-setup-page-selector",
        cb = "wordpress-setup-continue-button",
        db = "chat-plugin-re-engagement-collapsed-dialog",
        eb = "chat-plugin-re-engagement-see-details-button",
        fb = "chat-plugin-re-engagement-minus-button",
        gb = "chat-plugin-re-engagement-expanded-dialog",
        hb = function(a) {
            return "wordpress-setup-page-selector-option-" + a
        },
        ib = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam eu felis eget nulla scelerisque sodales. Sed orci dolor, laoreet dictum neque vel, scelerisque ullamcorper nibh. Curabitur interdum mauris sit amet mauris tempor fringilla. Vestibulum semper lorem vitae libero sagittis pulvinar. Donec at arcu at sem euismod convallis. Aenean vitae dui vitae eros laoreet interdum. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Sed porttitor dignissim nibh vitae condimentum.",
        jb = function(a) {
            return b("regeneratorRuntime").async(function(c) {
                while (1) switch (c.prev = c.next) {
                    case 0:
                        c.next = 2;
                        return b("regeneratorRuntime").awrap(mb(a));
                    case 2:
                    case "end":
                        return c.stop()
                }
            }, null, this)
        },
        kb = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam eu felis eget nulla scelerisque sodales. Sed orci dolor, laoreet dictum neque vel, scelerisque ullamcorper nibh. Curabitur interdum mauris sit amet mauris tempor fringilla. Vestibulum semper lorem vitae libero sagittis pulvinar. Donec at arcu at sem euismod convallis. Aenean vitae dui vitae eros laoreet interdum. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Sed porttitor dignissim nibh vit",
        lb = "Lorem ipsum dolor sit amet, consectetur adipi",
        mb = function(a) {
            return b("regeneratorRuntime").async(function(d) {
                while (1) switch (d.prev = d.next) {
                    case 0:
                        d.next = 2;
                        return b("regeneratorRuntime").awrap(e2e.navigate(c("XBizSuiteControllerRouteBuilder").buildUri({
                            asset_id: a,
                            rest: "inbox/settings/chat_plugin"
                        }), {
                            subdomain: "business"
                        }));
                    case 2:
                    case "end":
                        return d.stop()
                }
            }, null, this)
        },
        nb = function(a) {
            return b("regeneratorRuntime").async(function(d) {
                while (1) switch (d.prev = d.next) {
                    case 0:
                        d.next = 2;
                        return b("regeneratorRuntime").awrap(e2e.navigate(c("XPagesManagerSettingsControllerRouteBuilder").buildUri({
                            page_token: a,
                            show_cc_dialog: !0,
                            section: "messages",
                            tab: "messaging"
                        })));
                    case 2:
                        d.next = 4;
                        return b("regeneratorRuntime").awrap(e2e.switchContext({
                            selector: "iframe",
                            target: "iframe"
                        }));
                    case 4:
                    case "end":
                        return d.stop()
                }
            }, null, this)
        },
        ob = function(a) {
            return b("regeneratorRuntime").async(function(d) {
                while (1) switch (d.prev = d.next) {
                    case 0:
                        d.next = 2;
                        return b("regeneratorRuntime").awrap(e2e.navigate(c("XCustomerChatInjectionDialogControllerRouteBuilder").buildUri({
                            domain: "https://facebook.com"
                        })));
                    case 2:
                        d.next = 4;
                        return b("regeneratorRuntime").awrap(e2e.click(bb));
                    case 4:
                        d.next = 6;
                        return b("regeneratorRuntime").awrap(e2e.click(hb(a)));
                    case 6:
                        d.next = 8;
                        return b("regeneratorRuntime").awrap(e2e.click(cb));
                    case 8:
                    case "end":
                        return d.stop()
                }
            }, null, this)
        },
        pb = function() {
            return b("regeneratorRuntime").async(function(a) {
                while (1) switch (a.prev = a.next) {
                    case 0:
                        a.next = 2;
                        return b("regeneratorRuntime").awrap(e2e.click(K));
                    case 2:
                        a.next = 4;
                        return b("regeneratorRuntime").awrap(expect(L).not.toBePresent());
                    case 4:
                        a.next = 6;
                        return b("regeneratorRuntime").awrap(expect(w).toBePresent());
                    case 6:
                        a.next = 8;
                        return b("regeneratorRuntime").awrap(e2e.click(v));
                    case 8:
                        a.next = 10;
                        return b("regeneratorRuntime").awrap(expect(L).not.toBePresent());
                    case 10:
                        a.next = 12;
                        return b("regeneratorRuntime").awrap(expect(w).toBePresent());
                    case 12:
                    case "end":
                        return a.stop()
                }
            }, null, this)
        },
        qb = function() {
            return b("regeneratorRuntime").async(function(a) {
                while (1) switch (a.prev = a.next) {
                    case 0:
                        a.next = 2;
                        return b("regeneratorRuntime").awrap(e2e.click(K));
                    case 2:
                        a.next = 4;
                        return b("regeneratorRuntime").awrap(expect(L).toBePresent());
                    case 4:
                        a.next = 6;
                        return b("regeneratorRuntime").awrap(expect(w).not.toBePresent());
                    case 6:
                        a.next = 8;
                        return b("regeneratorRuntime").awrap(e2e.click(v));
                    case 8:
                        a.next = 10;
                        return b("regeneratorRuntime").awrap(expect(L).toBePresent());
                    case 10:
                        a.next = 12;
                        return b("regeneratorRuntime").awrap(expect(w).not.toBePresent());
                    case 12:
                    case "end":
                        return a.stop()
                }
            }, null, this)
        },
        rb = function() {
            return b("regeneratorRuntime").async(function(a) {
                while (1) switch (a.prev = a.next) {
                    case 0:
                        a.next = 2;
                        return b("regeneratorRuntime").awrap(e2e.click(K));
                    case 2:
                        a.next = 4;
                        return b("regeneratorRuntime").awrap(expect(L).toBePresent());
                    case 4:
                        a.next = 6;
                        return b("regeneratorRuntime").awrap(expect(w).not.toBePresent());
                    case 6:
                        a.next = 8;
                        return b("regeneratorRuntime").awrap(e2e.click(v));
                    case 8:
                        a.next = 10;
                        return b("regeneratorRuntime").awrap(expect(L).not.toBePresent());
                    case 10:
                        a.next = 12;
                        return b("regeneratorRuntime").awrap(expect(w).toBePresent());
                    case 12:
                    case "end":
                        return a.stop()
                }
            }, null, this)
        },
        sb = function() {
            var a;
            return b("regeneratorRuntime").async(function(c) {
                while (1) switch (c.prev = c.next) {
                    case 0:
                        c.next = 2;
                        return b("regeneratorRuntime").awrap(expect(h).toBePresent());
                    case 2:
                        c.next = 4;
                        return b("regeneratorRuntime").awrap(e2e.click(i));
                    case 4:
                        c.next = 6;
                        return b("regeneratorRuntime").awrap(e2e.click(j));
                    case 6:
                        c.next = 8;
                        return b("regeneratorRuntime").awrap(e2e.click(k));
                    case 8:
                        c.next = 10;
                        return b("regeneratorRuntime").awrap(e2e.click('div:text("Dansk")'));
                    case 10:
                        c.next = 12;
                        return b("regeneratorRuntime").awrap(e2e.click(l));
                    case 12:
                        c.next = 14;
                        return b("regeneratorRuntime").awrap(e2e.type(n, "https://facebook.com"));
                    case 14:
                        c.next = 16;
                        return b("regeneratorRuntime").awrap(e2e.keyboard.press("Enter", n));
                    case 16:
                        c.next = 18;
                        return b("regeneratorRuntime").awrap(e2e.click(m));
                    case 18:
                        c.next = 20;
                        return b("regeneratorRuntime").awrap(e2e.type(n, "https://messenger.com"));
                    case 20:
                        c.next = 22;
                        return b("regeneratorRuntime").awrap(e2e.keyboard.press("Enter", n));
                    case 22:
                        c.next = 24;
                        return b("regeneratorRuntime").awrap(e2e.click(l));
                    case 24:
                        c.next = 26;
                        return b("regeneratorRuntime").awrap(e2e.click(p));
                    case 26:
                        c.next = 28;
                        return b("regeneratorRuntime").awrap(expect(q).toBeVisible());
                    case 28:
                        a = '[data-testid="' + r + '"] input[role="combobox"]';
                        c.next = 31;
                        return b("regeneratorRuntime").awrap(e2e.click(a));
                    case 31:
                        c.next = 33;
                        return b("regeneratorRuntime").awrap(e2e.type(a, "doesntexist@facebook.com"));
                    case 33:
                        c.next = 35;
                        return b("regeneratorRuntime").awrap(e2e.keyboard.press("Enter", a));
                    case 35:
                        c.next = 37;
                        return b("regeneratorRuntime").awrap(e2e.click(s));
                    case 37:
                        c.next = 39;
                        return b("regeneratorRuntime").awrap(e2e.click(s));
                    case 39:
                        c.next = 41;
                        return b("regeneratorRuntime").awrap(e2e.click(o));
                    case 41:
                        c.next = 43;
                        return b("regeneratorRuntime").awrap(e2e.click(l));
                    case 43:
                        c.next = 45;
                        return b("regeneratorRuntime").awrap(e2e.click(l));
                    case 45:
                        c.next = 47;
                        return b("regeneratorRuntime").awrap(e2e.click(l));
                    case 47:
                        c.next = 49;
                        return b("regeneratorRuntime").awrap(e2e.click(t));
                    case 49:
                        c.next = 51;
                        return b("regeneratorRuntime").awrap(e2e.click(m));
                    case 51:
                        c.next = 53;
                        return b("regeneratorRuntime").awrap(e2e.type(n, "https://instagram.com"));
                    case 53:
                        c.next = 55;
                        return b("regeneratorRuntime").awrap(e2e.keyboard.press("Enter", n));
                    case 55:
                        c.next = 57;
                        return b("regeneratorRuntime").awrap(e2e.click(u));
                    case 57:
                    case "end":
                        return c.stop()
                }
            }, null, this)
        },
        tb = function() {
            return b("regeneratorRuntime").async(function(a) {
                while (1) switch (a.prev = a.next) {
                    case 0:
                        a.next = 2;
                        return b("regeneratorRuntime").awrap(expect(h).toBePresent());
                    case 2:
                        a.next = 4;
                        return b("regeneratorRuntime").awrap(e2e.click(x));
                    case 4:
                        a.next = 6;
                        return b("regeneratorRuntime").awrap(e2e.click(x));
                    case 6:
                        a.next = 8;
                        return b("regeneratorRuntime").awrap(e2e.type(ha, "test"));
                    case 8:
                        a.next = 10;
                        return b("regeneratorRuntime").awrap(e2e.click(C));
                    case 10:
                        a.next = 12;
                        return b("regeneratorRuntime").awrap(expect(D).toBePresent());
                    case 12:
                        a.next = 14;
                        return b("regeneratorRuntime").awrap(expect(E).toBePresent());
                    case 14:
                        a.next = 16;
                        return b("regeneratorRuntime").awrap(expect(J).toBePresent());
                    case 16:
                        a.next = 18;
                        return b("regeneratorRuntime").awrap(expect(F).toBePresent());
                    case 18:
                        a.next = 20;
                        return b("regeneratorRuntime").awrap(expect(H).toBePresent());
                    case 20:
                        a.next = 22;
                        return b("regeneratorRuntime").awrap(expect(G).toBePresent());
                    case 22:
                        a.next = 24;
                        return b("regeneratorRuntime").awrap(expect(I).toBePresent());
                    case 24:
                        a.next = 26;
                        return b("regeneratorRuntime").awrap(e2e.click(I));
                    case 26:
                        a.next = 28;
                        return b("regeneratorRuntime").awrap(expect(na).toBePresent());
                    case 28:
                        a.next = 30;
                        return b("regeneratorRuntime").awrap(e2e.click(C));
                    case 30:
                        a.next = 32;
                        return b("regeneratorRuntime").awrap(expect(D).not.toBePresent());
                    case 32:
                        a.next = 34;
                        return b("regeneratorRuntime").awrap(expect(E).not.toBePresent());
                    case 34:
                        a.next = 36;
                        return b("regeneratorRuntime").awrap(expect(J).not.toBePresent());
                    case 36:
                        a.next = 38;
                        return b("regeneratorRuntime").awrap(expect(F).not.toBePresent());
                    case 38:
                        a.next = 40;
                        return b("regeneratorRuntime").awrap(expect(H).not.toBePresent());
                    case 40:
                        a.next = 42;
                        return b("regeneratorRuntime").awrap(expect(G).not.toBePresent());
                    case 42:
                        a.next = 44;
                        return b("regeneratorRuntime").awrap(expect(I).not.toBePresent());
                    case 44:
                        a.next = 46;
                        return b("regeneratorRuntime").awrap(e2e.click(B));
                    case 46:
                        a.next = 48;
                        return b("regeneratorRuntime").awrap(e2e.type(z + "0", "Question 0"));
                    case 48:
                        a.next = 50;
                        return b("regeneratorRuntime").awrap(e2e.type(A + "0", "Response 0"));
                    case 50:
                        a.next = 52;
                        return b("regeneratorRuntime").awrap(e2e.click(la + "0"));
                    case 52:
                        a.next = 54;
                        return b("regeneratorRuntime").awrap(e2e.click(ka + "0"));
                    case 54:
                        a.next = 56;
                        return b("regeneratorRuntime").awrap(e2e.click(ma + "0"));
                    case 56:
                        a.next = 58;
                        return b("regeneratorRuntime").awrap(e2e.click(B));
                    case 58:
                        a.next = 60;
                        return b("regeneratorRuntime").awrap(e2e.type(z + "0", "Question 0"));
                    case 60:
                        a.next = 62;
                        return b("regeneratorRuntime").awrap(e2e.type(A + "0", "Response 0"));
                    case 62:
                        a.next = 64;
                        return b("regeneratorRuntime").awrap(e2e.click(B));
                    case 64:
                        a.next = 66;
                        return b("regeneratorRuntime").awrap(e2e.type(z + "1", "Question 1"));
                    case 66:
                        a.next = 68;
                        return b("regeneratorRuntime").awrap(e2e.type(A + "1", "Response 1"));
                    case 68:
                        a.next = 70;
                        return b("regeneratorRuntime").awrap(e2e.click(y));
                    case 70:
                        a.next = 72;
                        return b("regeneratorRuntime").awrap(e2e.click(y));
                    case 72:
                        a.next = 74;
                        return b("regeneratorRuntime").awrap(e2e.click(V));
                    case 74:
                    case "end":
                        return a.stop()
                }
            }, null, this)
        },
        ub = function() {
            return b("regeneratorRuntime").async(function(a) {
                while (1) switch (a.prev = a.next) {
                    case 0:
                        a.next = 2;
                        return b("regeneratorRuntime").awrap(expect(h).toBePresent());
                    case 2:
                        a.next = 4;
                        return b("regeneratorRuntime").awrap(e2e.click(K));
                    case 4:
                        a.next = 6;
                        return b("regeneratorRuntime").awrap(e2e.click(oa));
                    case 6:
                        a.next = 8;
                        return b("regeneratorRuntime").awrap(e2e.type(qa, "test"));
                    case 8:
                        a.next = 10;
                        return b("regeneratorRuntime").awrap(e2e.click(pa));
                    case 10:
                        a.next = 12;
                        return b("regeneratorRuntime").awrap(e2e.click(ra));
                    case 12:
                        a.next = 14;
                        return b("regeneratorRuntime").awrap(e2e.click(sa));
                    case 14:
                        a.next = 16;
                        return b("regeneratorRuntime").awrap(e2e.click(za));
                    case 16:
                        a.next = 18;
                        return b("regeneratorRuntime").awrap(e2e.clear(O));
                    case 18:
                        a.next = 20;
                        return b("regeneratorRuntime").awrap(e2e.type(O, "#000000"));
                    case 20:
                        a.next = 22;
                        return b("regeneratorRuntime").awrap(e2e.click(ta));
                    case 22:
                        a.next = 24;
                        return b("regeneratorRuntime").awrap(expect(M).toBePresent());
                    case 24:
                        a.next = 26;
                        return b("regeneratorRuntime").awrap(expect(N).not.toBePresent());
                    case 26:
                        a.next = 28;
                        return b("regeneratorRuntime").awrap(e2e.click(ua));
                    case 28:
                        a.next = 30;
                        return b("regeneratorRuntime").awrap(expect(M).toBePresent());
                    case 30:
                        a.next = 32;
                        return b("regeneratorRuntime").awrap(expect(N).toBePresent());
                    case 32:
                        a.next = 34;
                        return b("regeneratorRuntime").awrap(e2e.click(wa));
                    case 34:
                        a.next = 36;
                        return b("regeneratorRuntime").awrap(e2e.click(xa));
                    case 36:
                        a.next = 38;
                        return b("regeneratorRuntime").awrap(e2e.click(ya));
                    case 38:
                        a.next = 40;
                        return b("regeneratorRuntime").awrap(e2e.click(va));
                    case 40:
                        a.next = 42;
                        return b("regeneratorRuntime").awrap(expect(M).not.toBePresent());
                    case 42:
                        a.next = 44;
                        return b("regeneratorRuntime").awrap(expect(N).toBePresent());
                    case 44:
                        a.next = 46;
                        return b("regeneratorRuntime").awrap(e2e.click(Ba));
                    case 46:
                        a.next = 48;
                        return b("regeneratorRuntime").awrap(e2e.click('div:text("Left")'));
                    case 48:
                        a.next = 50;
                        return b("regeneratorRuntime").awrap(e2e.clear(P));
                    case 50:
                        a.next = 52;
                        return b("regeneratorRuntime").awrap(e2e.type(P, "0"));
                    case 52:
                        a.next = 54;
                        return b("regeneratorRuntime").awrap(e2e.clear(Q));
                    case 54:
                        a.next = 56;
                        return b("regeneratorRuntime").awrap(e2e.type(Q, "0"));
                    case 56:
                        a.next = 58;
                        return b("regeneratorRuntime").awrap(e2e.clear(R));
                    case 58:
                        a.next = 60;
                        return b("regeneratorRuntime").awrap(e2e.type(R, "0"));
                    case 60:
                        a.next = 62;
                        return b("regeneratorRuntime").awrap(e2e.clear(S));
                    case 62:
                        a.next = 64;
                        return b("regeneratorRuntime").awrap(e2e.type(S, "0"));
                    case 64:
                        a.next = 66;
                        return b("regeneratorRuntime").awrap(e2e.click(Ia));
                    case 66:
                        a.next = 68;
                        return b("regeneratorRuntime").awrap(e2e.click('div:text("Use Chat Plugin")'));
                    case 68:
                        a.next = 70;
                        return b("regeneratorRuntime").awrap(e2e.click(Ja));
                    case 70:
                        a.next = 72;
                        return b("regeneratorRuntime").awrap(e2e.click(T));
                    case 72:
                        a.next = 74;
                        return b("regeneratorRuntime").awrap(e2e.click(U));
                    case 74:
                        a.next = 76;
                        return b("regeneratorRuntime").awrap(e2e.click(Ka));
                    case 76:
                        a.next = 78;
                        return b("regeneratorRuntime").awrap(e2e.click(T));
                    case 78:
                        a.next = 80;
                        return b("regeneratorRuntime").awrap(e2e.click(U));
                    case 80:
                        a.next = 82;
                        return b("regeneratorRuntime").awrap(e2e.click(La));
                    case 82:
                        a.next = 84;
                        return b("regeneratorRuntime").awrap(e2e.click(Ma));
                    case 84:
                        a.next = 86;
                        return b("regeneratorRuntime").awrap(e2e.click(Da));
                    case 86:
                        a.next = 88;
                        return b("regeneratorRuntime").awrap(e2e.click(Fa));
                    case 88:
                        a.next = 90;
                        return b("regeneratorRuntime").awrap(e2e.click(V));
                    case 90:
                    case "end":
                        return a.stop()
                }
            }, null, this)
        },
        vb = function() {
            return b("regeneratorRuntime").async(function(a) {
                while (1) switch (a.prev = a.next) {
                    case 0:
                        a.next = 2;
                        return b("regeneratorRuntime").awrap(expect(W).toBePresent());
                    case 2:
                        a.next = 4;
                        return b("regeneratorRuntime").awrap(e2e.click('em:text("Next")'));
                    case 4:
                        a.next = 6;
                        return b("regeneratorRuntime").awrap(expect(X).toBePresent());
                    case 6:
                        a.next = 8;
                        return b("regeneratorRuntime").awrap(e2e.click(X + ' div:text("Next")'));
                    case 8:
                        a.next = 10;
                        return b("regeneratorRuntime").awrap(expect(Y).toBePresent());
                    case 10:
                        a.next = 12;
                        return b("regeneratorRuntime").awrap(e2e.click(Y + ' div:text("Next")'));
                    case 12:
                        a.next = 14;
                        return b("regeneratorRuntime").awrap(expect(Z).toBePresent());
                    case 14:
                        a.next = 16;
                        return b("regeneratorRuntime").awrap(e2e.click(Z + ' div:text("Next")'));
                    case 16:
                        a.next = 18;
                        return b("regeneratorRuntime").awrap(expect($).toBePresent());
                    case 18:
                        a.next = 20;
                        return b("regeneratorRuntime").awrap(e2e.click($ + ' div:text("Done")'));
                    case 20:
                        a.next = 22;
                        return b("regeneratorRuntime").awrap(expect(W).not.toBePresent());
                    case 22:
                        a.next = 24;
                        return b("regeneratorRuntime").awrap(expect(X).not.toBePresent());
                    case 24:
                        a.next = 26;
                        return b("regeneratorRuntime").awrap(expect(Y).not.toBePresent());
                    case 26:
                        a.next = 28;
                        return b("regeneratorRuntime").awrap(expect(Z).not.toBePresent());
                    case 28:
                        a.next = 30;
                        return b("regeneratorRuntime").awrap(expect($).not.toBePresent());
                    case 30:
                    case "end":
                        return a.stop()
                }
            }, null, this)
        };
    g.FBNUX_ID_PAGE_INBOX = a;
    g.FBNUX_ID_WORDPRESS = d;
    g.FBNUX_ID_FBE_FBS_MV = e;
    g.SETUP_FLOW_CONTAINER_TEST_ID = h;
    g.CREATE_CODE_BUTTON_TEST_ID = i;
    g.SETUP_MODAL_TEST_ID = f;
    g.SETUP_3P_MENU_MODAL_TEST_ID = aa;
    g.SETUP_3P_MENU_MANUAL_BUTTON_TEST_ID = j;
    g.SETUP_CHOICE_MODAL_TEST_ID = ba;
    g.LOCALE_SELECTOR_TEST_ID = k;
    g.SETUP_METHOD_BUTTON_TEST_ID_PREFIX = ca;
    g.SETUP_MODAL_NEXT_BUTTON_TEST_ID = l;
    g.SETUP_MODAL_ADD_DOMAIN_BUTTON_TEST_ID = m;
    g.SETUP_MODAL_NEW_DOMAIN_INPUT_TEST_ID = n;
    g.SETUP_MODAL_COPY_CODE_BUTTON_TEST_ID = o;
    g.SETUP_MODAL_EMAIL_INSTRUCTIONS_LINK_TEST_ID = p;
    g.SETUP_MODAL_EMAIL_INSTRUCTIONS_MODAL_TEST_ID = q;
    g.SETUP_MODAL_EMAIL_RECIPIENTS_INPUT_TEST_ID = r;
    g.SETUP_MODAL_SEND_EMAIL_NEXT_BUTTON_TEST_ID = s;
    g.NO_DOMAINS_MAIN_PANEL_ERROR_TEST_ID = da;
    g.DOMAINS_LIST_TEXT_TEST_ID = ea;
    g.EDIT_DOMAINS_MODAL_TEST_ID = fa;
    g.EDIT_DOMAINS_BUTTON_TEST_ID = t;
    g.EDIT_DOMAINS_SAVE_BUTTON_TEST_ID = u;
    g.SETUP_GTM_LOCALE_TEST_ID = ga;
    g.AUTOMATION_SECTION_TEST_ID = v;
    g.AUTOMATION_SECTION_CONTAINER_TEST_ID = w;
    g.AUTOMATION_WELCOME_MESSAGE_TOGGLE_TEST_ID = x;
    g.AUTOMATION_WELCOME_MESSAGE_INPUT_TEST_ID = ha;
    g.AUTOMATION_WELCOME_MESSAGE_EDIT_BUTTON_TEST_ID = ia;
    g.AUTOMATION_WELCOME_MESSAGE_COLLAPSE_BUTTON_TEST_ID = ja;
    g.AUTOMATION_FAQ_TOGGLE_TEST_ID = y;
    g.AUTOMATION_FAQ_ENTRY_QUESTION_INPUT_TEST_ID_PREFIX = z;
    g.AUTOMATION_FAQ_ENTRY_RESPONSE_INPUT_TEST_ID_PREFIX = A;
    g.AUTOMATION_FAQ_ENTRY_EDIT_BUTTON_TEST_ID_PREFIX = ka;
    g.AUTOMATION_FAQ_ENTRY_COLLAPSE_BUTTON_TEST_ID_PREFIX = la;
    g.AUTOMATION_FAQ_ENTRY_DELETE_BUTTON_TEST_ID_PREFIX = ma;
    g.AUTOMATION_FAQ_ADD_BUTTON_TEST_ID = B;
    g.AUTOMATION_AWAY_HOURS_BUTTON_TEST_ID = C;
    g.AUTOMATION_CURRENT_STATUS_TITLE = D;
    g.AUTOMATION_SCHEDULE_TITLE = E;
    g.AUTOMATION_AVAILABLE_TAB_GERRTING = F;
    g.AUTOMATION_AWAY_TAB_GREETING = G;
    g.AUTOMATION_AVAILABLE_TAB_WELCOME_MESSAGE = H;
    g.AUTOMATION_AWAY_TAB_WELCOME_MESSAGE = I;
    g.AUTOMATION_SCHEDULE_LINK = J;
    g.AUTOMATION_AWAY_MESSAGE_LINK = na;
    g.CUSTOMIZATION_SECTION_TEST_ID = K;
    g.CUSTOMIZATION_SECTION_CONTAINER_TEST_ID = L;
    g.CUSTOMIZATION_GREETING_EDIT_BUTTON_TEST_ID = oa;
    g.CUSTOMIZATION_GREETING_COLLAPSE_BUTTON_TEST_ID = pa;
    g.CUSTOMIZATION_GREETING_INPUT_TEST_ID = qa;
    g.CUSTOMIZATION_GUEST_MODE_TOGGLE_TEST_ID = ra;
    g.CUSTOMIZATION_THEME_COLOR_TOGGLE_TEST_ID = sa;
    g.CUSTOMIZATION_ENTRY_POINT_ICON_ONLY_TEST_ID = ta;
    g.CUSTOMIZATION_ENTRY_POINT_ICON_WITH_LABEL_TEST_ID = ua;
    g.CUSTOMIZATION_ENTRY_POINT_LABEL_ONLY_TEST_ID = va;
    g.CUSTOMIZATION_ENTRY_POINT_ROUND_ICON_TEST_ID = wa;
    g.CUSTOMIZATION_ENTRY_POINT_ICON_SECTION_TEST_ID = M;
    g.CUSTOMIZATION_ENTRY_POINT_LABEL_SECTION_TEST_ID = N;
    g.CUSTOMIZATION_ENTRY_POINT_LABEL_SELECTOR_TEST_ID = xa;
    g.CUSTOMIZATION_ENTRY_POINT_LABEL_HELP_TEST_ID = ya;
    g.CUSTOMIZATION_THEME_COLOR_LIST_ITEM_TEST_ID = za;
    g.CUSTOMIZATION_THEME_COLOR_INPUT_TEST_ID = O;
    g.CUSTOMIZATION_THEME_COLOR_WARNING_NOTICE_TEST_ID = Aa;
    g.CUSTOMIZATION_ALIGNMENT_SELECTOR_TEST_ID = Ba;
    g.CUSTOMIZATION_DESKTOP_BOTTOM_SPACING_INPUT_TEST_ID = P;
    g.CUSTOMIZATION_MOBILE_BOTTOM_SPACING_INPUT_TEST_ID = Q;
    g.CUSTOMIZATION_DESKTOP_SIDE_SPACING_INPUT_TEST_ID = R;
    g.CUSTOMIZATION_MOBILE_SIDE_SPACING_INPUT_TEST_ID = S;
    g.CUSTOMIZATION_AUTO_EXPAND_TOGGLE_TEST_ID = Ca;
    g.CUSTOMIZATION_PROMINENCE_SELECTOR = Da;
    g.CUSTOMIZATION_PROMINENCE_ICON = Ea;
    g.CUSTOMIZATION_PROMINENCE_WELCOME_MESSAGE = Fa;
    g.CUSTOMIZATION_PROMINENCE_WINDOW = Ga;
    g.DESKTOP_WELCOME_MESSAGE_PREVIEW = Ha;
    g.CUSTOMIZATION_MOBILE_OPTIN_TEST_ID = Ia;
    g.CUSTOMIZATION_CHAT_BUTTON_SIZE_DESKTOP_TAB = Ja;
    g.CUSTOMIZATION_CHAT_BUTTON_SIZE_MOBILE_TAB = Ka;
    g.CUSTOMIZATION_COMPACT_CHAT_BUTTON_SIZE_OPTION = T;
    g.CUSTOMIZATION_STANDARD_CHAT_BUTTON_SIZE_OPTION = U;
    g.CUSTOMIZATION_COMPACT_CHAT_WINDOW_SIZE_OPTION = La;
    g.CUSTOMIZATION_STANDARD_CHAT_WINDOW_SIZE_OPTION = Ma;
    g.PUBLISH_BUTTON_TEST_ID = V;
    g.PUBLISH_TOAST_TEST_ID = Na;
    g.PREVIEW_TAB_DESKTOP_BUTTON_TEST_ID = Oa;
    g.PREVIEW_TAB_MOBILE_BUTTON_TEST_ID = Pa;
    g.PREVIEW_DESKTOP_FRAME_TEST_ID = Qa;
    g.PREVIEW_MOBILE_FRAME_TEST_ID = Ra;
    g.PREVIEW_MESSENGER_ICON_BUTTON_TEST_ID = Sa;
    g.PREVIEW_DESKTOP_THREAD_PAGE_CONTAINER_TEST_ID = Ta;
    g.PREVIEW_THREAD_PAGE_CLOSE_BUTTON_TEST_ID = Ua;
    g.PREVIEW_MOBILE_THREAD_PAGE_CONTAINER_TEST_ID = Va;
    g.PREVIEW_MOBILE_WELCOME_MESSAGE_PAGE_CONTAINER_TEST_ID = Wa;
    g.PREVIEW_MOBILE_WELCOME_MESSAGE_TEST_ID = Xa;
    g.PREVIEW_DESKTOP_WELCOME_PAGE_MODAL_CONTAINER_TEST_ID = Ya;
    g.PREVIEW_DESKTOP_WELCOME_PAGE_MODAL_CLOSE_BUTTON_TEST_ID = Za;
    g.PREVIEW_MOBILE_WELCOME_PAGE_MODAL_CONTAINER_TEST_ID = $a;
    g.PREVIEW_MOBILE_WELCOME_PAGE_MODAL_CLOSE_BUTTON_TEST_ID = ab;
    g.NUX_WELCOME_MODAL_CONTAINER_TEST_ID = W;
    g.NUX_STEP_SETUP_CONTAINER_TEST_ID = X;
    g.NUX_STEP_AUTOMATION_CONTAINER_TEST_ID = Y;
    g.NUX_STEP_CUSTOMIZATION_CONTAINER_TEST_ID = Z;
    g.NUX_STEP_PUBLISH_CONTAINER_TEST_ID = $;
    g.WORDPRESS_SETUP_PAGE_SELECTOR_TEST_ID = bb;
    g.WORDPRESS_SETUP_CONTINUE_BUTTON_TEST_ID = cb;
    g.CHAT_PLUGIN_RE_ENGAGEMENT_COLLAPSED_DIALOG = db;
    g.CHAT_PLUGIN_RE_ENGAGEMENT_SEE_DETAILS_BUTTON = eb;
    g.CHAT_PLUGIN_RE_ENGAGEMENT_MINUS_BUTTON = fb;
    g.CHAT_PLUGIN_RE_ENGAGEMENT_EXPANDED_DIALOG = gb;
    g.getWordpressSetupPageSelectorOptionTestID = hb;
    g.LONG_TEXT = ib;
    g.navigateToTestSite = jb;
    g.LONG_TEXT_500_CHAR = kb;
    g.LONG_TEXT_45_CHAR = lb;
    g.navigateToChatPluginSetupBusinessInbox = mb;
    g.navigateToChatPluginSetupPageSettings = nb;
    g.navigateToChatPluginSetupWordpress = ob;
    g.verifyAutomationSectionToggleIsDisabled = pb;
    g.verifyCustomizationSectionToggleIsDisabled = qb;
    g.verifySectionsCanBeToggled = rb;
    g.performDomainSetupFlow = sb;
    g.performAutomationSetupFlow = tb;
    g.performCustomizationSetupFlow = ub;
    g.performNUXFlow = vb
}), 98);
__d("ChatPluginSetupFlowLoggerUtil", ["MessengerWebPluginAnonymousTypedLogger"], (function(a, b, c, d, e, f, g) {
    "use strict";

    function a(a, b, d, e) {
        new(c("MessengerWebPluginAnonymousTypedLogger"))().setPluginName("messaging_plugin").setPageID(a.page.pageID).setRequestID(a.requestID).setEvent(b).setEventTimestamp(Date.now()).setDebugData(d).setOtherFields({
            is_redesign: "true",
            entry_point: a.entryPoint,
            expanded_section: (b = a.expandedMainSection) != null ? b : "none",
            install_method: a.installMethod
        }).setWhitelistedDomains(e == null ? void 0 : e.toString()).logVital()
    }

    function b(a, b, d) {
        new(c("MessengerWebPluginAnonymousTypedLogger"))().setPluginName("messaging_plugin").setPageID(a).setEvent("entry_point_impression").setEventTimestamp(Date.now()).setDebugData(d).setOtherFields({
            is_redesign: "true",
            entry_point: b
        }).logVital()
    }

    function d(a, b, d) {
        new(c("MessengerWebPluginAnonymousTypedLogger"))().setPluginName("messaging_plugin").setPageID(a).setEvent("set_up_clicked").setEventTimestamp(Date.now()).setDebugData(d).setOtherFields({
            is_redesign: "true",
            entry_point: b
        }).logVital()
    }

    function e(a) {
        return {
            error_name: a.name,
            error_message: a.message,
            error_stack: a.stack
        }
    }
    g.log = a;
    g.logEntryPointImpression = b;
    g.logEntryPointClick = d;
    g.getErrorData = e
}), 98);
__d("ChatPluginSetupFlowUtil", ["$InternalEnum", "ChatPluginSetupFlowCustomizationMutation", "ChatPluginSetupFlowLoggerUtil"], (function(a, b, c, d, e, f, g) {
    "use strict";
    f = "#0A7CFF";
    var h = 3,
        i = 500,
        j = 80,
        k = 34,
        l = 54,
        m = 74,
        n = 44,
        o = 11,
        p = -24,
        q = 40,
        r = 16,
        s = (b = b("$InternalEnum")).Mirrored(["DESKTOP", "MOBILE"]),
        t = b.Mirrored(["WELCOME_MESSAGE", "WELCOME_PAGE", "AUTOMATION", "RE_ENGAGEMENT_COLLAPSED_DIALOG", "RE_ENGAGEMENT_EXPANDED_DIALOG"]),
        u = b.Mirrored(["INSTALLATION", "AUTOMATION", "CUSTOMIZATION", "REENGAGEMENT"]),
        v = b.Mirrored(["GREETING", "WELCOME_MESSAGE"]),
        w = b.Mirrored(["AVAILABLE", "AWAY"]);
    b = b.Mirrored(["COLLAPSED", "EXPANDED"]);

    function a(a, b) {
        var c = a.page.pageListedWebsite;
        b = (b = b) != null ? b : a.customizationConfig.websiteDomains;
        return c !== null ? c.concat(b) : b
    }
    var x = {
            MIN: 0,
            MAX: 500
        },
        y = {
            MIN: 0,
            MAX: 1e3
        },
        z = {
            MIN: 0,
            MAX: 300
        },
        A = {
            optInMessageEnabled: !1,
            collapsedOptInMessageTitle: "Can we stay in touch?",
            expandedOptInMessageTitle: "Opt-in to updates.",
            collapsedOptInMessageText: "We\u2019d like to send you updates on deals and promos.",
            expandedOptInMessageText: "If you\u2019d like, we can update you weekly on promos and deals. You can opt-out any time.",
            cadence: "monthly"
        },
        B = {
            alignment: "right",
            awayGreeting: "Message us, and we\u2019ll respond when we\u2019re back online.",
            awayHoursEnabled: !1,
            loggedInGreeting: "Hi! How can we help you?",
            loggedOutGreeting: "Hi! How can we help you?",
            themeColor: null,
            entryPointIcon: "messenger_icon",
            entryPointLabel: "none",
            greetingDialogDisplay: "show",
            guestModeEnabled: !0,
            locale: "en_US",
            desktopBottomSpacing: 24,
            mobileBottomSpacing: 24,
            desktopSideSpacing: 24,
            mobileSideSpacing: 24,
            websiteDomains: [],
            externalBusinessConnectionProxy: null,
            mobileOptin: "app_switch",
            desktopEntryPointSize: "standard",
            mobileEntryPointSize: "standard",
            desktopWindowSize: "standard"
        },
        C = {
            isAutopopulated: !0,
            isEnabled: !0,
            greetingMessage: "",
            isFaqEnabled: !0,
            faqList: []
        };
    B = {
        customizationConfig: B,
        customizationConfigOriginal: B,
        automationConfig: C,
        automationConfigOriginal: C,
        previewConfig: {
            previewDialogVisible: !0,
            previewDialogType: t.WELCOME_PAGE,
            previewTabType: s.DESKTOP
        },
        page: {
            pageID: "0",
            pageListedWebsite: [],
            pageName: "Unknown Page",
            pageVerifiedStatus: "not_verified",
            pageResponsiveness: "",
            pageProfilePictureUri: ""
        },
        viewerProfilePictureUri: "",
        isCurrentConfigValid: !0,
        isCurrentDomainListValid: !0,
        expandedMainSection: null,
        entryPoint: "biz_inbox",
        installMethod: null,
        requestID: "",
        availabilityStatus: w.AVAILABLE,
        awayMessage: "",
        nextAvailableTimestamp: null,
        awayRanges: "",
        reengagementConfig: A,
        reengagementConfigOriginal: A
    };

    function c(a) {
        var b = a.state,
            c = a.env,
            e = a.dispatchAction;
        a = a.pageID;
        d("ChatPluginSetupFlowCustomizationMutation").commit(c, {
            pageID: a,
            customization: b.customizationConfig
        }, {
            onCompleted: function() {
                e({
                    type: "SET_CUSTOMIZATION_CONFIG_ORIGINAL",
                    customizationConfigOriginal: b.customizationConfig
                }), d("ChatPluginSetupFlowLoggerUtil").log(b, "mutation_on_completed_locale_update", JSON.stringify({
                    locale: b.customizationConfig.locale
                }))
            },
            onError: function(a) {
                d("ChatPluginSetupFlowLoggerUtil").log(b, "mutation_on_error_locale_update", JSON.stringify(babelHelpers["extends"]({}, d("ChatPluginSetupFlowLoggerUtil").getErrorData(a), {
                    customization_config: b.customizationConfig
                })))
            }
        })
    }

    function e(a) {
        var b = a.state,
            c = a.env,
            e = a.dispatchAction,
            f = a.pageID,
            g = a.domains;
        e({
            type: "SET_WEBSITE_DOMAINS",
            websiteDomains: [].concat(g)
        });
        var h = babelHelpers["extends"]({}, b.customizationConfigOriginal, {
            websiteDomains: [].concat(g)
        });
        d("ChatPluginSetupFlowCustomizationMutation").commit(c, {
            pageID: f,
            customization: h
        }, {
            onCompleted: function() {
                e({
                    type: "SET_CUSTOMIZATION_CONFIG_ORIGINAL",
                    customizationConfigOriginal: h
                }), d("ChatPluginSetupFlowLoggerUtil").log(b, "mutation_on_completed_domain_update", JSON.stringify({
                    location: "code_install_modal"
                }), [].concat(g))
            },
            onError: function(a) {
                d("ChatPluginSetupFlowLoggerUtil").log(b, "mutation_on_error_domain_update", JSON.stringify(babelHelpers["extends"]({}, d("ChatPluginSetupFlowLoggerUtil").getErrorData(a), {
                    location: "code_install_modal",
                    customization_config: h
                })), [].concat(g))
            }
        })
    }
    g.MESSENGER_BLUE = f;
    g.TEXT_INPUT_MAX_ROWS = h;
    g.TEXT_INPUT_MAX_LENGTH = i;
    g.GREETING_MESSAGE_MAX_LENGTH = j;
    g.OPT_IN_MESSAGE_TITLE_MAX_HEIGHT = k;
    g.COLLAPSED_OPT_IN_MESSAGE_TEXT_MAX_HEIGHT = l;
    g.EXPANDED_OPT_IN_MESSAGE_TEXT_MAX_HEIGHT = m;
    g.ENTRY_POINT_HEIGHT = n;
    g.MOBILE_WELCOME_MESSAGE_BOTTOM_SPACING = o;
    g.MOBILE_WELCOME_MESSAGE_MINUS_BUTTON_BOTTOM_OFFSET = p;
    g.SHORT_WELCOME_MESSAGE_HEIGHT = q;
    g.SPACING_WITH_LABEL = r;
    g.PreviewTabType = s;
    g.PreviewDialogType = t;
    g.MainSection = u;
    g.AutomationTextInputType = v;
    g.AwayStatus = w;
    g.ReEngagementMessageTabType = b;
    g.getAllowlistedDomains = a;
    g.BOTTOM_SPACING_RANGE = x;
    g.DESKTOP_SIDE_SPACING_RANGE = y;
    g.MOBILE_SIDE_SPACING_RANGE = z;
    g.DEFAULT_STATE = B;
    g.setLocale = c;
    g.setWebsiteDomains = e
}), 98);
__d("formatFileSize", ["fbt"], (function(a, b, c, d, e, f, g, h) {
    var i = [function(a) {
            return h._( /*FBT_CALL*/ {
                "*": "{value} \u05d1\u05ea\u05d9\u05dd"
            } /*FBT_CALL*/ , [h._param("value", a, [0])])
        }, function(a) {
            return h._( /*FBT_CALL*/ {
                "*": "{value} KB"
            } /*FBT_CALL*/ , [h._param("value", a, [0])])
        }, function(a) {
            return h._( /*FBT_CALL*/ {
                "*": "{value} MB"
            } /*FBT_CALL*/ , [h._param("value", a, [0])])
        }, function(a) {
            return h._( /*FBT_CALL*/ {
                "*": "{value} GB"
            } /*FBT_CALL*/ , [h._param("value", a, [0])])
        }, function(a) {
            return h._( /*FBT_CALL*/ {
                "*": "{value} TB"
            } /*FBT_CALL*/ , [h._param("value", a, [0])])
        }, function(a) {
            return h._( /*FBT_CALL*/ {
                "*": "{value} PB"
            } /*FBT_CALL*/ , [h._param("value", a, [0])])
        }, function(a) {
            return h._( /*FBT_CALL*/ {
                "*": "{value} EB"
            } /*FBT_CALL*/ , [h._param("value", a, [0])])
        }],
        j = 0;

    function a(a) {
        if (a == null) return null;
        if (a === 0) return i[j](0);
        var b = Math.floor(Math.log(Math.abs(a)) / Math.log(1024));
        a = a / Math.pow(1024, b);
        a = Math.round(a * 100) / 100;
        return i[b](a)
    }
    g["default"] = a
}), 98);
__d("MPNCrossButtonSVG.react", ["react"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h = d("react");

    function a(a) {
        a = a.isWhite;
        a = a === void 0 ? !1 : a;
        var b = a ? "white" : "black";
        a = a ? "1" : "0.04";
        return h.jsxs("svg", {
            width: "24",
            height: "24",
            viewBox: "0 0 24 24",
            fill: "none",
            xmlns: "http://www.w3.org/2000/svg",
            children: [h.jsx("path", {
                d: "M0 12C0 5.37258 5.37258 0 12 0C18.6274 0 24 5.37258 24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12Z",
                fill: b,
                fillOpacity: a
            }), h.jsx("path", {
                d: "M16.5455 9.0455C16.9848 8.60616 16.9848 7.89384 16.5455 7.4545C16.1062 7.01517 15.3938 7.01517 14.9545 7.4545L12.1768 10.2322C12.0791 10.3299 11.9209 10.3299 11.8232 10.2322L9.0455 7.4545C8.60616 7.01517 7.89384 7.01517 7.4545 7.4545C7.01517 7.89384 7.01517 8.60616 7.4545 9.0455L10.2322 11.8232C10.3299 11.9209 10.3299 12.0791 10.2322 12.1768L7.4545 14.9545C7.01517 15.3938 7.01517 16.1062 7.4545 16.5455C7.89384 16.9848 8.60616 16.9848 9.04549 16.5455L11.8232 13.7678C11.9209 13.6701 12.0791 13.6701 12.1768 13.7678L14.9545 16.5455C15.3938 16.9848 16.1062 16.9848 16.5455 16.5455C16.9848 16.1062 16.9848 15.3938 16.5455 14.9545L13.7678 12.1768C13.6701 12.0791 13.6701 11.9209 13.7678 11.8232L16.5455 9.0455Z",
                fill: "black"
            })]
        })
    }
    a.displayName = a.name + " [from " + f.id + "]";
    g["default"] = a
}), 98);
__d("ChatPluginMessengerCrossButton.react", ["cx", "MPNCrossButtonSVG.react", "ShimButton.react", "react"], (function(a, b, c, d, e, f, g, h) {
    "use strict";
    var i = d("react");

    function a(a) {
        var b = a.onClose;
        a = a.isWhite;
        a = a === void 0 ? !1 : a;
        return i.jsx("div", {
            className: "_9u1y",
            children: i.jsx(c("ShimButton.react"), {
                className: "_9jru _9u1x",
                onClick: b,
                children: i.jsx(c("MPNCrossButtonSVG.react"), {
                    isWhite: a
                })
            })
        })
    }
    a.displayName = a.name + " [from " + f.id + "]";
    g["default"] = a
}), 98);
__d("ChatPluginDeltaReceivedFalcoEvent", ["FalcoLoggerInternal", "getFalcoLogPolicy_DO_NOT_USE"], (function(a, b, c, d, e, f) {
    "use strict";
    a = b("getFalcoLogPolicy_DO_NOT_USE")("1871687");
    c = b("FalcoLoggerInternal").create("chat_plugin_delta_received", a);
    e.exports = c
}), null);
__d("ChatPluginInThreadActionFalcoEvent", ["FalcoLoggerInternal", "getFalcoLogPolicy_DO_NOT_USE"], (function(a, b, c, d, e, f) {
    "use strict";
    a = b("getFalcoLogPolicy_DO_NOT_USE")("1871688");
    c = b("FalcoLoggerInternal").create("chat_plugin_in_thread_action", a);
    e.exports = c
}), null);
__d("ChatPluginUiTabImpressionFalcoEvent", ["FalcoLoggerInternal", "getFalcoLogPolicy_DO_NOT_USE"], (function(a, b, c, d, e, f) {
    "use strict";
    a = b("getFalcoLogPolicy_DO_NOT_USE")("1902935");
    c = b("FalcoLoggerInternal").create("chat_plugin_ui_tab_impression", a);
    e.exports = c
}), null);
__d("LiveChatPluginConstants", ["$InternalEnum"], (function(a, b, c, d, e, f) {
    "use strict";
    a = "LiveChatEvent/";
    c = "mqtt";
    d = b("$InternalEnum")({
        CONNECTED: "Connected",
        CONNECTING: "Connecting",
        DISCONNECTED: "Disconnected"
    });
    e = 250;
    b = a + "close_timestamps";
    var g = a + "reset_badging",
        h = a + "state",
        i = a + "switch_account",
        j = a + "typing",
        k = a + "unread_count",
        l = a + "update_message_list",
        m = "platform/plugins/connect/guest",
        n = a + "guest_upgrade_success",
        o = a + "guest_upgrade_success_incognito";
    a = a + "navigate_to_welcome_page";
    var p = 124,
        q = 187,
        r = 24,
        s = 424,
        t = 288,
        u = 313,
        v = 219,
        w = 40,
        x = 36,
        y = 24,
        z = 18,
        A = 708,
        B = 540,
        C = 244,
        D = 202,
        E = 449,
        F = 390,
        G = 6,
        H = 0,
        I = 1,
        J = -1,
        K = "messaging_plugin",
        L = 8634e4,
        M = "#8A8D91",
        N = "entrypoint:customer_chat_plugin",
        O = 0,
        P = 1,
        Q = 2,
        R = 3,
        S = "new_message_update",
        T = "initial_fetch",
        U = 5e3,
        V = "https://www.facebook.com/business/help/1661027437357021";
    f.MQTT = c;
    f.MQTTGatewayConnectionState = d;
    f.LOGIN_CHECK_INTERVAL = e;
    f.CLOSE_TIMESTAMPS = b;
    f.RESET_BADGING = g;
    f.STATE_UPDATE = h;
    f.SWITCH_ACCOUNT = i;
    f.TYPING_UPDATE = j;
    f.UNREAD_COUNT_UPDATE = k;
    f.UPDATE_MESSAGE_LIST = l;
    f.GUEST_MODE_CONNECT = m;
    f.GUEST_UPGRADE_SUCCESS = n;
    f.GUEST_UPGRADE_SUCCESS_INCOGNITO = o;
    f.NAVIGATE_TO_WELCOME_PAGE = a;
    f.PROMPT_FALLBACK_HEIGHT = p;
    f.PROMPT_REDESIGN_FALLBACK_HEIGHT = q;
    f.PROMPT_CONTAINER_PADDING_HEIGHT = r;
    f.WELCOME_PAGE_GUEST_FALLBACK_HEIGHT = s;
    f.WELCOME_PAGE_NO_GUEST_FALLBACK_HEIGHT = t;
    f.WELCOME_PAGE_GUEST_FALLBACK_HEIGHT_WITH_COMPACT = u;
    f.WELCOME_PAGE_NO_GUEST_FALLBACK_HEIGHT_WITH_COMPACT = v;
    f.WELCOME_PAGE_ATTRIBUTION_OFFEST_HEIGHT = w;
    f.WELCOME_PAGE_ATTRIBUTION_OFFSET_HEIGHT_WITH_COMPACT = x;
    f.MAIN_IFRAME_PADDING_HEIGHT = y;
    f.MAIN_IFRAME_PADDING_HEIGHT_WITH_COMPACT = z;
    f.THREAD_PAGE_HEIGHT = A;
    f.THREAD_PAGE_HEIGHT_COMPACT = B;
    f.RE_ENGAGEMENT_COLLAPSED_DIALOG_HEIGHT = C;
    f.RE_ENGAGEMENT_COLLAPSED_DIALOG_HEIGHT_COMPACT = D;
    f.RE_ENGAGEMENT_EXPANDED_DIALOG_HEIGHT = E;
    f.RE_ENGAGEMENT_EXPANDED_DIALOG_HEIGHT_COMPACT = F;
    f.GREETING_TEXT_BOTTOM_SPACING_OFFEST = G;
    f.LOGGED_IN_CHAT_MODE = H;
    f.GUEST_CHAT_MODE = I;
    f.INVALID_CHAT_MODE = J;
    f.MESSENGING_PLUGIN = K;
    f.GUEST_SESSION_STORAGE_VALIDITY_MS = L;
    f.GUEST_SEND_BUTTON_COLOR_EMPTY_INPUT = M;
    f.LIVE_CHAT_ENTRYPOINT_ATTRIBUTION_TAG = N;
    f.ITP_CONSISTENCY_UNKNOWN_LOGGED_OUT = O;
    f.ITP_CONSISTENCY_CONSISTENT_LOGGED_IN = P;
    f.ITP_CONSISTENCY_INCONSISTENT = Q;
    f.ITP_CONSISTENCY_CONSISTENT_NO_ITP = R;
    f.NEW_MESSAGE_UPDATE = S;
    f.INITIAL_FETCH = T;
    f.PLUGIN_FADE_DELAY = U;
    f.HELP_DEX_LINK = V
}), 66);
__d("MPNConstants", ["$InternalEnum"], (function(a, b, c, d, e, f) {
    "use strict";
    c = (a = b("$InternalEnum"))({
        NEW_GUEST_SESSION: "new_guest_sess",
        ITP_CONTINUE_SESSION: "ipt_continue_sess",
        FB_LOG_IN: "fb_log_in",
        GUEST_UPGRADE: "guest_upgrade",
        GUEST_UPGRADE_SWITCH_ACCOUNT: "guest_upgrade_switch_account",
        SHOW_LOGIN_PAGE: "show_login_page",
        RE_ENGAGEMENT_LOG_IN: "re_engagement_log_in",
        RE_ENGAGEMENT_SWITCH_ACCOUNT: "re_engagement_switch_account"
    });
    d = a({
        NOT_SHOWN: "not_shown",
        ATTACHMENT_UPSELL: "attachment_upsell",
        DONT_WAIT_FOR_REPLY_UPSELL: "dont_wait_for_reply_upsell",
        CONTINUE_IN_MESSENGER: "continue_in_messenger",
        OPEN_THREAD: "open_thread",
        BACK_AND_FORTH: "back_and_forth",
        END_CHAT: "end_chat"
    });
    e = a({
        HIDDEN: "hidden",
        NOT_HIDDEN: "not-hidden"
    });
    b = a.Mirrored(["LARGE", "MEDIUM"]);
    var g = a.Mirrored(["HORIZONTAL", "VERTICAL"]),
        h = a({
            TEXT: "text",
            USER_EMAIL: "user_email",
            USER_PHONE_NUMBER: "user_phone_number",
            USER_STATE: "user_state",
            USER_ZIP_CODE: "user_zip_code"
        }),
        i = a.Mirrored(["CSAT", "CES", "NPS", "FREE_FORM"]);
    a = a.Mirrored(["FIVE_STARS", "FIVE_EMOJIS", "ONE_TO_FIVE", "ONE_TO_SEVEN", "ZERO_TO_TEN", "NONE"]);
    var j = 400;
    f.MPNRedirect = c;
    f.MPNUpgradePrompt = d;
    f.MPNVisibility = e;
    f.MPNAvailablityIconSize = b;
    f.MPNQuickReplyLayout = g;
    f.MPNQuickReplyContentType = h;
    f.MPNCufeeScoreType = i;
    f.MPNCufeeScoreOption = a;
    f.MPNCufeeWordLimit = j
}), 66);
__d("MPNLocalState", [], (function(a, b, c, d, e, f) {
    "use strict";
    a = {
        LANDING_BANNER: 1,
        WELCOME_PAGE: 2,
        ITP_CONTINUE: 3,
        THREAD_VIEW: 4,
        BUBBLE: 5,
        REENGAGEMENT_COLLAPSED_VIEW: 6,
        REENGAGEMENT_EXPANDED_VIEW: 7
    };
    b = {
        CHAT_NOT_STARTED: 1,
        LOGGED_IN_CHAT_STARTED: 2,
        GUEST_CHAT_STARTED: 3
    };
    c = "__fb_chat_plugin";
    f.MPNLocalStatePath = a;
    f.MPNChatState = b;
    f.LOCAL_STATE_KEY = c
}), 66);
__d("MessagingPluginPathUtils", ["MPNConstants", "MPNIdentity", "MPNLocalState", "MPNStorage", "MPNXDMessageManager"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h = {
            LANDING: "/",
            WELCOME: "/welcome",
            BUBBLE: "/bubble",
            ITPCONTINUE: "/itpcontinue",
            THREAD: "/thread",
            ICON: "/icon",
            REENGAGEMENT_COLLAPSED: "/reengagement/collapsed",
            REENGAGEMENT_EXPANDED: "/reengagement/expanded"
        },
        i = {
            getMobilePathFromLocalStatePathEnum: function(a) {
                switch (a) {
                    case d("MPNLocalState").MPNLocalStatePath.LANDING_BANNER:
                        return h.LANDING;
                    case d("MPNLocalState").MPNLocalStatePath.WELCOME_PAGE:
                        return h.WELCOME;
                    case d("MPNLocalState").MPNLocalStatePath.ITP_CONTINUE:
                        return h.ITPCONTINUE;
                    case d("MPNLocalState").MPNLocalStatePath.THREAD_VIEW:
                        return h.THREAD;
                    case d("MPNLocalState").MPNLocalStatePath.BUBBLE:
                        return h.BUBBLE;
                    case d("MPNLocalState").MPNLocalStatePath.REENGAGEMENT_COLLAPSED_VIEW:
                        return h.REENGAGEMENT_COLLAPSED;
                    case d("MPNLocalState").MPNLocalStatePath.REENGAGEMENT_EXPANDED_VIEW:
                        return h.REENGAGEMENT_EXPANDED
                }
                return h.WELCOME
            },
            getTabNameFromLocalStatePathEnum: function(a, b) {
                switch (a) {
                    case d("MPNLocalState").MPNLocalStatePath.LANDING_BANNER:
                        return "landing_page";
                    case d("MPNLocalState").MPNLocalStatePath.WELCOME_PAGE:
                        return b ? "welcome_page_with_guest_option" : "welcome_page";
                    case d("MPNLocalState").MPNLocalStatePath.ITP_CONTINUE:
                        return "itp_page";
                    case d("MPNLocalState").MPNLocalStatePath.THREAD_VIEW:
                        return "guest_chat_tab";
                    case d("MPNLocalState").MPNLocalStatePath.BUBBLE:
                        return "bubble"
                }
                return "landing_page"
            },
            toEnumPath: function(a) {
                switch (a) {
                    case h.LANDING:
                        return d("MPNLocalState").MPNLocalStatePath.LANDING_BANNER;
                    case h.WELCOME:
                        return d("MPNLocalState").MPNLocalStatePath.WELCOME_PAGE;
                    case h.ITPCONTINUE:
                        return d("MPNLocalState").MPNLocalStatePath.ITP_CONTINUE;
                    case h.THREAD:
                        return d("MPNLocalState").MPNLocalStatePath.THREAD_VIEW;
                    case h.BUBBLE:
                        return d("MPNLocalState").MPNLocalStatePath.BUBBLE;
                    case h.REENGAGEMENT_COLLAPSED:
                        return d("MPNLocalState").MPNLocalStatePath.REENGAGEMENT_COLLAPSED_VIEW;
                    case h.REENGAGEMENT_EXPANDED:
                        return d("MPNLocalState").MPNLocalStatePath.REENGAGEMENT_EXPANDED_VIEW
                }
                return d("MPNLocalState").MPNLocalStatePath.LANDING_BANNER
            },
            toMobilePath: function(a) {
                switch (a) {
                    case d("MPNLocalState").MPNLocalStatePath.LANDING_BANNER:
                        return h.LANDING;
                    case d("MPNLocalState").MPNLocalStatePath.WELCOME_PAGE:
                        return h.WELCOME;
                    case d("MPNLocalState").MPNLocalStatePath.ITP_CONTINUE:
                        return h.ITPCONTINUE;
                    case d("MPNLocalState").MPNLocalStatePath.THREAD_VIEW:
                        return h.THREAD;
                    case d("MPNLocalState").MPNLocalStatePath.BUBBLE:
                        return h.BUBBLE;
                    case d("MPNLocalState").MPNLocalStatePath.REENGAGEMENT_COLLAPSED_VIEW:
                        return h.REENGAGEMENT_COLLAPSED;
                    case d("MPNLocalState").MPNLocalStatePath.REENGAGEMENT_EXPANDED_VIEW:
                        return h.REENGAGEMENT_EXPANDED
                }
                return h.WELCOME
            },
            getNextMobilePathForIcon: function() {
                var a = c("MPNStorage").getFBStorageState();
                if (a == null) return h.LANDING;
                return a.chatState == d("MPNLocalState").MPNChatState.CHAT_NOT_STARTED ? h.WELCOME : h.THREAD
            }
        };

    function a(a, b, d, e) {
        var f = h.LANDING;
        a ? e != null && e.currentPath != null ? (f = i.toMobilePath(e.currentPath), d && f == h.THREAD ? f = h.ITPCONTINUE : c("MPNXDMessageManager").storeThirdPartyState({
            path: e.currentPath,
            chatState: e.chatState
        })) : b != null && e == null && c("MPNXDMessageManager").removeThirdPartyState() : (b != null && b.path != null && (f = i.toMobilePath(b.path)), f == h.THREAD && (f = h.ITPCONTINUE));
        return f
    }

    function b(a, b, e, f, g) {
        var j = g ? h.REENGAGEMENT_COLLAPSED : h.WELCOME;
        a ? f != null && f.currentPath != null ? d("MPNIdentity").MPNIdentity.isITPUserAgent() && f.currentPath === d("MPNLocalState").MPNLocalStatePath.BUBBLE ? (j = h.WELCOME, c("MPNXDMessageManager").storeThirdPartyState({
            path: d("MPNLocalState").MPNLocalStatePath.WELCOME_PAGE,
            chatState: f.chatState
        })) : e && f.currentPath == d("MPNLocalState").MPNLocalStatePath.THREAD_VIEW ? j = h.ITPCONTINUE : (j = i.toMobilePath(f.currentPath), c("MPNXDMessageManager").storeThirdPartyState({
            path: f.currentPath,
            chatState: f.chatState
        })) : b != null && f == null && c("MPNXDMessageManager").removeThirdPartyState() : (b != null && b.path != null && (g ? (j = h.REENGAGEMENT_COLLAPSED, c("MPNXDMessageManager").storeThirdPartyState({
            path: d("MPNLocalState").MPNLocalStatePath.REENGAGEMENT_COLLAPSED_VIEW,
            chatState: d("MPNLocalState").MPNChatState.CHAT_NOT_STARTED,
            visibility: d("MPNConstants").MPNVisibility.NOT_HIDDEN
        })) : j = i.toMobilePath(b.path)), j == h.THREAD && (j = h.ITPCONTINUE));
        return j
    }
    g.MPN_PATH = h;
    g.MessagingPluginPathUtils = i;
    g.getMobileDisplayPathFromStoredState = a;
    g.getDesktopDisplayPathFromStoredState = b
}), 98);
__d("MPNSingletonProvider", [], (function(a, b, c, d, e, f) {
    "use strict";
    a = function() {
        function a(a) {
            this.$1 = null, this.$2 = a
        }
        var b = a.prototype;
        b.get = function() {
            this.$1 == null && (this.$1 = this.$2());
            return this.$1
        };
        b.clear = function() {
            this.$1 = null
        };
        return a
    }();
    f["default"] = a
}), 66);
__d("MPNIdentity", ["CurrentUser", "MPNSingletonProvider", "MPNStorage", "MPNXDMessageManager", "UserAgent", "promiseDone"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h = 5e3,
        i = {
            UNKNOWN: 0,
            FB_USER: 1,
            GUEST_USER: 2
        },
        j = {
            LOGGED_OUT: 0,
            ITP: 1,
            FB: 2,
            GUEST: 3
        },
        k = function() {
            function a() {
                this.$1 = j.LOGGED_OUT, this.$2 = !1, this.$3 = "0", this.$4 = !1, this.$6 = !1
            }
            var b = a.prototype;
            b.init = function(a, b) {
                this.$2 = a, this.$6 = b, this.$4 = this.isProfilePlusUserUncached(), this.$3 = this.$4 ? "0" : b ? this.cookieUserUncached() : c("CurrentUser").getID(), this.resetManagement()
            };
            b.resetManagement = function() {
                c("MPNStorage").assertInitialized();
                if (this.$2) {
                    var a = c("MPNStorage").getFBStorageState(),
                        b = a == null ? void 0 : a.accessToken;
                    a = a == null ? void 0 : a.expirationTimestamp;
                    b = b != null && a != null && Date.now() < a;
                    b ? this.$1 = j.GUEST : c("CurrentUser").isLoggedIn() && !this.$4 ? this.$1 = j.FB : this.$1 = j.LOGGED_OUT
                } else this.$1 = j.ITP
            };
            b.currentUserState = function() {
                return this.$1
            };
            b.changeIdentityToGuest = function(a, b) {
                this.$5 = {
                    id: a,
                    type: i.GUEST_USER,
                    accessToken: b
                }, this.$1 = j.GUEST
            };
            b.changeIdentityToFB = function() {
                this.$1 = j.FB
            };
            b.currentUser = function() {
                if (this.$1 == j.FB) return {
                    id: c("CurrentUser").getID(),
                    type: i.FB_USER,
                    shortName: c("CurrentUser").getShortName()
                };
                else if (this.$5 != null) return this.$5;
                else if (this.$1 == j.GUEST) {
                    var a, b = c("MPNStorage").getFBStorageState();
                    return {
                        id: (a = b == null ? void 0 : b.userID) != null ? a : "-1",
                        type: i.GUEST_USER,
                        accessToken: b == null ? void 0 : b.accessToken
                    }
                }
                return null
            };
            b.currentUserID = function() {
                var a;
                return (a = this.currentUser()) == null ? void 0 : a.id
            };
            b.subscribeLoggedInUserChanges = function(a, b) {
                var c = this;
                b === void 0 && (b = h);
                this.$7 != null && window.clearInterval(this.$7);
                this.$7 = window.setInterval(function() {
                    var b = c.cookieUserUncached();
                    c.$3 != b && (a(c.$3, b), c.$7 && window.clearInterval(c.$7))
                }, b)
            };
            b.clearUserChangesSubscription = function() {
                this.$7 && window.clearInterval(this.$7)
            };
            b.isITPUserAgent = function(a) {
                return ((a === !0 ? c("UserAgent").isBrowser("Chrome for iOS >= 80") : !1) || c("UserAgent").isBrowser("Safari >= 12") || c("UserAgent").isBrowser("Mobile Safari >= 12") || c("UserAgent").isBrowser("Firefox >= 62")) && typeof document.hasStorageAccess === "function"
            };
            b.hasStorageAccess = function(a, b) {
                var d = this;
                !this.isITPUserAgent(b) ? (this.$2 = !this.isThirdPartyCookieDisabled(), a(this.$2)) : c("promiseDone")(document.hasStorageAccess(), function(b) {
                    d.$2 = b, a(b)
                })
            };
            b.isThirdPartyCookieDisabled = function() {
                var a = !1;
                try {
                    var b = window.localStorage;
                    if (b) {
                        var c = "__test__" + Date.now(),
                            d = "__" + Date.now();
                        b.setItem(c, d);
                        var e = b.getItem(c);
                        e == d && (a = !0);
                        b.removeItem(c)
                    }
                } catch (a) {}
                return !a
            };
            b.performUIAction = function(a, b, d, e) {
                var f = this;
                c("MPNXDMessageManager").markInteraction();
                if (!this.isITPUserAgent(e)) {
                    this.isThirdPartyCookieDisabled() ? d() : a();
                    return
                }
                c("promiseDone")(document.requestStorageAccess(), function(a) {
                    f.$2 = !0, b()
                }, function(a) {
                    f.$2 = !1, d()
                })
            };
            b.cookieUserUncached = function() {
                var a = "c_user=",
                    b = "i_user=",
                    c = decodeURIComponent(document.cookie);
                c = c.split(";");
                var d = "0",
                    e = "";
                c.forEach(function(c, f) {
                    f = c;
                    while (f.charAt(0) == " ") f = f.substring(1);
                    f.indexOf(a) == 0 && (d = f.substring(a.length, f.length));
                    f.indexOf(b) == 0 && (e = f.substring(b.length, f.length))
                });
                if (e != "") return "0";
                else return d
            };
            b.cookieUserCached = function() {
                return c("CurrentUser").getID()
            };
            b.isProfilePlusUserUncached = function() {
                var a = "i_user=",
                    b = decodeURIComponent(document.cookie);
                b = b.split(";");
                var c = "";
                b.forEach(function(b, d) {
                    d = b;
                    while (d.charAt(0) == " ") d = d.substring(1);
                    d.indexOf(a) == 0 && (c = d.substring(a.length, d.length))
                });
                return c != ""
            };
            b.getHasStorageAccess = function() {
                return this.$2
            };
            return a
        }();
    a = new(c("MPNSingletonProvider"))(function() {
        return new k()
    });
    b = a.get();
    g.MPNUserType = i;
    g.MPNIdentityState = j;
    g.MPNIdentity = b
}), 98);
__d("ChatPluginReEngagementDialogRenderingCheck", [], (function(a, b, c, d, e, f) {
    "use strict";
    var g = 2 * 24 * 60 * 60 * 1e3;

    function a(a) {
        return a == null ? !0 : Date.now() > a + g
    }
    f.shouldRenderReEngagementDialog = a
}), 66);
__d("MPNCacheVersioning", [], (function(a, b, c, d, e, f) {
    "use strict";
    var g = 1;

    function a(a) {
        a = (a = a) != null ? a : 0;
        return a >= g
    }
    f.VERSION = g;
    f.isLatestVersion = a
}), 66);
__d("MessagingPluginLocalStorage", ["WebStorage"], (function(a, b, c, d, e, f, g) {
    "use strict";

    function a() {
        var a = c("WebStorage").getLocalStorage();
        if (a) return a;
        try {
            a = window.localStorage
        } catch (b) {
            a = null
        }
        return a
    }
    g.get = a
}), 98);
__d("MPNStorage", ["ChatPluginReEngagementDialogRenderingCheck", "MPNCacheVersioning", "MPNConstants", "MPNLocalState", "MPNSingletonProvider", "MPNXDMessageManager", "MessagingPluginLocalStorage", "WebStorage"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h = "messaging_plugin",
        i = function() {
            function a() {
                this.domain = "", this.pageID = "0", this.requestID = ""
            }
            var b = a.prototype;
            b.initialize = function(a, b, c) {
                this.domain = a, this.pageID = b, this.requestID = c
            };
            b.assertInitialized = function() {
                if (this.pageID == "0" || this.requestID == "") throw new Error("MPNStorage is not initialized.")
            };
            b.setInitialStateIfNecessary = function(a, b, c, e, f, g, h, i) {
                var j = this.getFBStorageState();
                if (j != null) {
                    this.setFBStorageState(babelHelpers["extends"]({}, j, {
                        requestID: this.requestID
                    }));
                    if (g) {
                        if (a && j.currentPath === d("MPNLocalState").MPNLocalStatePath.BUBBLE) return !1;
                        this.setFBStorageState(babelHelpers["extends"]({}, j, {
                            currentPath: d("MPNLocalState").MPNLocalStatePath.REENGAGEMENT_COLLAPSED_VIEW,
                            chatState: d("MPNLocalState").MPNChatState.CHAT_NOT_STARTED,
                            visibility: d("MPNConstants").MPNVisibility.NOT_HIDDEN
                        }))
                    }
                    return !1
                }
                j = this.getDefaultPath(a, b, c, g);
                a = null;
                e === !0 && (a = d("MPNConstants").MPNRedirect.SHOW_LOGIN_PAGE);
                f === !0 && (a = d("MPNConstants").MPNRedirect.RE_ENGAGEMENT_LOG_IN);
                this.setFBStorageState({
                    requestID: this.requestID,
                    currentPath: j,
                    userID: "0",
                    chatState: d("MPNLocalState").MPNChatState.CHAT_NOT_STARTED,
                    visibility: b,
                    accessToken: null,
                    expirationTimestamp: null,
                    v: d("MPNCacheVersioning").VERSION,
                    rdr: a,
                    greetingVisibility: i === !0 ? d("MPNConstants").MPNVisibility.HIDDEN : h
                });
                return !0
            };
            b.getStorageKey = function() {
                return h + "_" + this.domain + "_" + this.pageID
            };
            b.getRedirectCommand = function() {
                var a = this.getFBStorageState();
                return a == null ? void 0 : a.rdr
            };
            b.getShouldRenderReEngagementDialog = function(a, b, c) {
                return a && b && d("ChatPluginReEngagementDialogRenderingCheck").shouldRenderReEngagementDialog(c)
            };
            b.getShouldDisplayGreetingDialog = function(a, b, c) {
                var d = !1;
                !c && b && a && (d = !0);
                return d
            };
            b.getDefaultPath = function(a, b, c, e) {
                if (!a && e) return d("MPNLocalState").MPNLocalStatePath.REENGAGEMENT_COLLAPSED_VIEW;
                else if (c === "hide" || c === "welcome_message") return d("MPNLocalState").MPNLocalStatePath.BUBBLE;
                else if (e) return d("MPNLocalState").MPNLocalStatePath.REENGAGEMENT_COLLAPSED_VIEW;
                else return a && b !== d("MPNConstants").MPNVisibility.HIDDEN ? d("MPNLocalState").MPNLocalStatePath.LANDING_BANNER : d("MPNLocalState").MPNLocalStatePath.WELCOME_PAGE
            };
            b.getDefaultOptimisticStorageState = function(a, b, c, e, f, g) {
                c = b === "hide" || b === "icon" || c > 0;
                c = c ? d("MPNConstants").MPNVisibility.HIDDEN : d("MPNConstants").MPNVisibility.NOT_HIDDEN;
                e = this.getDefaultPath(a, c, b, e);
                var h = {
                    chatState: d("MPNLocalState").MPNChatState.CHAT_NOT_STARTED,
                    showUpgradePrompt: d("MPNConstants").MPNUpgradePrompt.NOT_SHOWN,
                    path: e
                };
                c = this.getDefaultVisibility({
                    visibility: c,
                    greetingVisibility: d("MPNConstants").MPNVisibility.HIDDEN
                }, e, f, b, g, a);
                return babelHelpers["extends"]({}, h, {
                    visibility: c.visibility,
                    greetingVisibility: c.greetingVisibility
                })
            };
            b.getDefaultVisibility = function(a, b, c, e, f, g) {
                var h = a.visibility;
                a = a.greetingVisibility;
                var i = b === d("MPNLocalState").MPNLocalStatePath.REENGAGEMENT_COLLAPSED_VIEW;
                b = b === d("MPNLocalState").MPNLocalStatePath.BUBBLE;
                e = (e === "welcome_message" || e === "hide") && (b || i);
                c = this.getShouldDisplayGreetingDialog(e, c, g);
                c ? (b && (h = d("MPNConstants").MPNVisibility.HIDDEN), f || (a = d("MPNConstants").MPNVisibility.NOT_HIDDEN)) : e && b && !f && (h = d("MPNConstants").MPNVisibility.NOT_HIDDEN);
                i && (h = d("MPNConstants").MPNVisibility.NOT_HIDDEN);
                g = {
                    visibility: h,
                    greetingVisibility: a
                };
                return g
            };
            b.clearRedirectCommand = function() {
                var a = this.getFBStorageState();
                if (a == null) return;
                this.setFBStorageState(babelHelpers["extends"]({}, a, {
                    rdr: null
                }))
            };
            b.setPath = function(a) {
                c("MPNXDMessageManager").updatePath(a);
                var b = this.getFBStorageState();
                if (b == null) return;
                this.setFBStorageState(babelHelpers["extends"]({}, b, {
                    currentPath: a
                }))
            };
            b.setVisibility = function(a) {
                c("MPNXDMessageManager").updateMainIframeVisibility(a);
                var b = this.getFBStorageState();
                if (b == null) return;
                this.setFBStorageState(babelHelpers["extends"]({}, b, {
                    visibility: a
                }))
            };
            b.setGreetingVisibility = function(a) {
                c("MPNXDMessageManager").updateGreetingVisibility(a);
                var b = this.getFBStorageState();
                if (b == null) return;
                this.setFBStorageState(babelHelpers["extends"]({}, b, {
                    greetingVisibility: a
                }))
            };
            b.setShowUpgradePrompt = function(a) {
                c("MPNXDMessageManager").updateShowUpgradePrompt(a);
                var b = this.getFBStorageState();
                if (b == null) return;
                this.setFBStorageState(babelHelpers["extends"]({}, b, {
                    showUpgradePrompt: a
                }))
            };
            b.setWindowSizeMode = function(a) {
                var b = this.getFBStorageState();
                if (b == null) return;
                this.setFBStorageState(babelHelpers["extends"]({}, b, {
                    isCompact: a
                }))
            };
            b.getFBStorageState = function() {
                var a = d("MessagingPluginLocalStorage").get();
                if (a == null) return null;
                try {
                    a = a.getItem(this.getStorageKey());
                    return a == null ? null : JSON.parse(a)
                } catch (a) {}
                return null
            };
            b.setFBStorageState = function(a) {
                var b = {
                    path: a.currentPath,
                    chatState: a.chatState
                };
                c("MPNXDMessageManager").storeThirdPartyState(b);
                b = d("MessagingPluginLocalStorage").get();
                if (b == null) return;
                try {
                    c("WebStorage").setItemGuarded(b, this.getStorageKey(), JSON.stringify(a))
                } catch (a) {}
            };
            b.clearFBStorageState = function() {
                var a = d("MessagingPluginLocalStorage").get();
                if (a == null) return;
                try {
                    a.removeItem(this.getStorageKey())
                } catch (a) {}
            };
            b.setThirdPartyStorageState = function(a, b, d) {
                b = {
                    path: a.path,
                    chatState: a.chatState,
                    visibility: a.visibility,
                    showUpgradePrompt: a.showUpgradePrompt,
                    hasUserInteraction: b,
                    shouldShowLoginPage: a.shouldShowLoginPage,
                    isReEngagementOptIn: a.isReEngagementOptIn,
                    hasDismissReEngagementDialog: d
                };
                c("MPNXDMessageManager").storeThirdPartyState(b)
            };
            b.clearThirdPartyStorageState = function() {
                c("MPNXDMessageManager").removeThirdPartyState()
            };
            b.isAccessTokenExpired = function() {
                var a, b = this.getFBStorageState();
                a = (a = (a = this.getFBStorageState()) == null ? void 0 : a.expirationTimestamp) != null ? a : 0;
                return (b == null ? void 0 : b.accessToken) != null && Date.now() > a
            };
            b.getRequestID = function() {
                return this.requestID != "" ? this.requestID : null
            };
            b.getIsChatStarted = function() {
                var a;
                a = (a = this.getFBStorageState()) == null ? void 0 : a.chatState;
                return a === d("MPNLocalState").MPNChatState.GUEST_CHAT_STARTED || a === d("MPNLocalState").MPNChatState.LOGGED_IN_CHAT_STARTED
            };
            b.getAccessToken = function() {
                var a;
                return (a = this.getFBStorageState()) == null ? void 0 : a.accessToken
            };
            b.getIsDialogHidden = function() {
                var a;
                a = (a = this.getFBStorageState()) == null ? void 0 : a.visibility;
                return a === d("MPNConstants").MPNVisibility.HIDDEN
            };
            return a
        }();
    a = new(c("MPNSingletonProvider"))(function() {
        return new i()
    });
    b = a.get();
    g["default"] = b
}), 98);
__d("ChatPluginStyleUtils", ["LiveChatPluginConstants"], (function(a, b, c, d, e, f, g) {
    var h = 44,
        i = 36,
        j = 17,
        k = 15,
        l = 22,
        m = 20,
        n = 6,
        o = 4,
        p = 16,
        q = 14,
        r = 60,
        s = 44,
        t = 70,
        u = 86,
        v = 63,
        w = 76,
        x = 99,
        y = 114,
        z = 85,
        A = 98,
        B = 12;

    function a() {
        var a = screen.width;
        a = "width: " + a + "px;";
        a = "padding: 0; position: fixed; z-index: 2147483646;box-shadow: 0 4px 12px 0 rgba(0, 0, 0, 0.15);border-radius: 16px;bottom: 24px; top: auto; right:0;" + a;
        return a
    }

    function b(a) {
        a instanceof HTMLElement && (a.style.marginTop = window.innerHeight - a.clientHeight + "px")
    }

    function C(a, b, c, d, e, f, g, h) {
        b = S(b, d, e);
        d = T(g, f, h);
        e = U(a, c);
        g = babelHelpers["extends"]({}, b, d, e);
        f = Object.fromEntries(Object.entries(g).sort());
        return f
    }

    function c(a, b, c, d, e, f, g, h) {
        a = C(a, b, c, d, e, f, g, h);
        return JSON.stringify(a)
    }

    function e(a, b, c, d, e, f) {
        c = c + (a == "right" ? -2 : 43);
        var g = b + r - 16;
        e ? (g = b - 16, d === "none" ? f === "compact" ? g += s : g += r : f === "compact" ? g += i : g += h) : f === "compact" && (g = b + s - 16);
        e = {
            bottom: g.toString() + "px",
            position: "fixed",
            width: "20px",
            height: "24px",
            zIndex: 2147483645,
            borderRadius: "4pt",
            background: "none"
        };
        d = {};
        switch (a) {
            case "right":
                d = babelHelpers["extends"]({}, e, {
                    right: c + "px"
                });
                break;
            case "left":
                d = babelHelpers["extends"]({}, e, {
                    left: c + "px"
                });
                break
        }
        f = Object.fromEntries(Object.entries(d).sort());
        return JSON.stringify(f)
    }

    function f(a, b, c, d, e, f, g, h) {
        var i = c;
        b = b - 2.5;
        a === "left" && (i = c - 15, d === "none" ? f === "compact" ? i += s : i += r : e === "none" ? d === "ask_us" ? f === "compact" ? i += w : i += u : f === "compact" ? i += v : i += t : d === "ask_us" ? f === "compact" ? i += A : i += y : f === "compact" ? i += z : i += x);
        c = {
            bottom: b.toString() + "px",
            position: "fixed",
            zIndex: 2147483646,
            height: "15px",
            width: "15px",
            borderRadius: "50%"
        };
        e = {};
        switch (a) {
            case "right":
                e = babelHelpers["extends"]({}, c, {
                    right: i + "px"
                });
                break;
            case "left":
                e = babelHelpers["extends"]({}, c, {
                    left: i + "px"
                });
                break
        }
        g === !1 && (e = babelHelpers["extends"]({}, e, {
            animation: h === !0 ? "slideInFromBottomDelay 3.5s ease-out" : null,
            backgroundColor: "#31CC46",
            border: "2.5px solid white",
            height: "10px",
            width: "10px"
        }));
        d = Object.fromEntries(Object.entries(e).sort());
        return d
    }

    function D(a) {
        var b = "padding: 0; position: fixed; z-index: 2147483646;box-shadow: 0 4px 12px 0 rgba(0, 0, 0, 0.15);border-radius: 16px;bottom: 24px; top: auto; right:0; margin: 0 12px; width: calc(100% - 24px);";
        a = a === !0 ? " height: 60px;" : " height: 0px;";
        b += a;
        return b
    }

    function E(a, b, c, d, e, f, g, j) {
        c = c - B;
        var k = r;
        f ? e === "none" ? g === "compact" ? k = s : k = r : g === "compact" ? k = i : k = h : g === "compact" && (k = s);
        f = k + b;
        e = " bottom: " + f.toString() + "px;";
        g = "padding: 0; position: fixed; z-index: 2147483646; border-radius: 16px; top: auto; background: none; minHeight: 300px;";
        k = " width: 399px;";
        b = " width: 324px;";
        g = g + (j === "compact" ? b : k) + e;
        d ? g += " max-height: calc(100% - " + f.toString() + "px);" : g += " max-height: 0;";
        switch (a) {
            case "right":
                g += " right: " + (c + 4) + "px;";
                break;
            case "left":
                g += " left: " + (c - 4) + "px;";
                break
        }
        return g
    }

    function F(a) {
        var b = "position: fixed; z-index: 2147483646; box-shadow: none; border-radius: 0; top: 0px; right: 0px; width: 100%;";
        a = a === !0 ? " height: 100%; max-height: 100%;" : " max-height: 0px;";
        b += a;
        return b
    }

    function G(a, b, c, e, f) {
        b = H(b, c, e);
        if (!a) {
            c = f ? d("LiveChatPluginConstants").RE_ENGAGEMENT_COLLAPSED_DIALOG_HEIGHT_COMPACT : d("LiveChatPluginConstants").RE_ENGAGEMENT_COLLAPSED_DIALOG_HEIGHT;
            e = f ? d("LiveChatPluginConstants").MAIN_IFRAME_PADDING_HEIGHT_WITH_COMPACT : d("LiveChatPluginConstants").MAIN_IFRAME_PADDING_HEIGHT;
            a = c + e;
            b += a - d("LiveChatPluginConstants").GREETING_TEXT_BOTTOM_SPACING_OFFEST
        }
        return b
    }

    function H(a, b, c) {
        var d = B;
        b === "none" ? c === "compact" ? d += s : d += r : c === "compact" ? d += i : d += h;
        b = d + a;
        return b
    }

    function I(a, b, c, d, e) {
        c = c - B;
        b = H(b, d, e);
        d = {
            padding: 0,
            position: "fixed",
            zIndex: 2147483646,
            borderRadius: "16px",
            top: "auto",
            width: "247px",
            maxHeight: "calc(100% - 80px)",
            background: "none"
        };
        ({});
        e = babelHelpers["extends"]({}, d, {
            bottom: b + "px"
        });
        switch (a) {
            case "right":
                e = babelHelpers["extends"]({}, e, {
                    right: "6px",
                    marginRight: c + "px"
                });
                break;
            case "left":
                e = babelHelpers["extends"]({}, e, {
                    left: "2px",
                    marginLeft: c + "px"
                });
                break
        }
        e = babelHelpers["extends"]({}, e, {
            animation: "slideInFromBottomDelay 3s ease-out"
        });
        d = Object.fromEntries(Object.entries(e).sort());
        return JSON.stringify(d)
    }

    function J(a, b, c, d, e) {
        c = {
            position: "fixed",
            zIndex: 2147483646,
            boxShadow: "none",
            borderRadius: "18px 0px 18px 18px",
            right: "0px",
            width: "calc(80% - 40px)",
            height: "60px",
            bottom: b + 12 + "px",
            left: a === "left" ? "calc(84px + 5%)" : "5%",
            animation: Boolean(c) ? "slideInFromBottomDelay 6s ease-in" : "slideInFromBottomDelay 3s ease-in"
        };
        if (d !== "none") {
            d = e === "compact" ? i : h;
            e = b + d + 12;
            c = babelHelpers["extends"]({}, c, {
                bottom: e + "px"
            });
            switch (a) {
                case "right":
                    c = babelHelpers["extends"]({}, c, {
                        right: "20px",
                        left: "auto"
                    });
                    break;
                case "left":
                    c = babelHelpers["extends"]({}, c, {
                        left: "20px",
                        right: "auto"
                    });
                    break
            }
        }
        b = Object.fromEntries(Object.entries(c).sort());
        return JSON.stringify(b)
    }

    function K(a, b, c, d, e, f) {
        c = c - B;
        b = H(b, e, f);
        e = " bottom: " + b.toString() + "px;";
        f = "padding: 0; position: fixed; z-index: 2147483646;border-radius: 16px; top: auto; width: 247px; max-height: calc(100% - 80px); background: none;" + e;
        b = f;
        switch (a) {
            case "right":
                b += " right: 6px; margin-right: " + c + "px;";
                break;
            case "left":
                b += " left: 2px; margin-left: " + c + "px;";
                break
        }
        b += Boolean(d) ? " animation: slideInFromBottomDelay 6s ease-out;" : " animation: slideInFromBottomDelay 3s ease-out;";
        return b
    }

    function L(a, b, c, d, e, f, g) {
        var j = g === "compact" ? s : r,
            k = "position: fixed; z-index: 2147483646; box-shadow: none; border-radius: 18px 0px 18px 18px; bottom: 0px; right: 0px; width: calc(80% - 40px); bottom: 24px;";
        if (a != null && typeof c == "number") {
            k += " height: " + a + "px; ";
            var l = c;
            a < j && (l = c + 12);
            k += " bottom: " + l + "px;"
        } else k += " height: 60px; ";
        k += b === "left" ? " left: calc(84px + 5%); " : " left: 5%; ";
        k += Boolean(d) ? " animation: slideInFromBottomDelay 6s ease-in;" : " animation: slideInFromBottomDelay 3s ease-in;";
        if (f && (e !== "none" && typeof c === "number")) {
            a = g === "compact" ? i : h;
            j = c + a + 12;
            k += " bottom: " + j + "px;";
            switch (b) {
                case "right":
                    k += " right: 20px; left: auto";
                    break;
                case "left":
                    k += " left: 20px; right: auto";
                    break
            }
        }
        return k
    }

    function M(a, b, c, d, e) {
        var f = "position: fixed; z-index: 2147483646; box-shadow: none; border-radius: 18px 0px 18px 18px;width: 306px;bottom: 24px; right: 20px";
        f += Boolean(c) ? " animation: slideInFromBottomDelay 6s ease-in;" : " animation: slideInFromBottomDelay 3s ease-in;";
        if (typeof b === "number") {
            c = e === "compact" ? i : h;
            e = b + c + 12;
            f += " bottom: " + e + "px;"
        }
        if (typeof d === "number") {
            b = d - B;
            switch (a) {
                case "right":
                    f += " right: " + (b + 4) + "px; left:auto";
                    break;
                case "left":
                    f += " left: " + (b - 4) + "px; right:auto";
                    break
            }
        }
        return f
    }

    function N(a, b) {
        var c = {
                alignItems: "flex-start",
                background: "#FFFFFF",
                borderRadius: "18px",
                bottom: 0,
                boxShadow: "0 4px 12px 0 rgba(0, 0, 0, 0.15)",
                display: "flex",
                flexDirection: "row",
                position: "absolute"
            },
            d = babelHelpers["extends"]({}, c, {
                marginLeft: "12px",
                padding: "8px 0px 8px 8px",
                width: "90%"
            });
        c = babelHelpers["extends"]({}, c, {
            padding: "8px 0px 8px 12px",
            width: "93%"
        });
        a = a ? d : c;
        b === "desktop" && (a = babelHelpers["extends"]({}, a, {
            cursor: "pointer"
        }));
        d = Object.fromEntries(Object.entries(a).sort());
        return d
    }

    function O(a, b) {
        var c = {
                display: "inline-block",
                fontSize: "17px",
                lineHeight: "22px",
                textAlign: "left",
                width: "90%",
                wordWrap: "break-word"
            },
            d = babelHelpers["extends"]({}, c, {
                paddingRight: "18px"
            });
        b === "mobile" && (d = babelHelpers["extends"]({}, d, {
            paddingLeft: "12px"
        }));
        b = babelHelpers["extends"]({}, c, {
            paddingRight: "12px",
            paddingLeft: "12px"
        });
        c = a ? b : d;
        a = Object.fromEntries(Object.entries(c).sort());
        return a
    }

    function P(a, b) {
        var c = {
            position: "absolute",
            top: "-2px",
            width: "38px"
        };
        b === "desktop" && (c = babelHelpers["extends"]({}, c, {
            cursor: "pointer"
        }));
        b = babelHelpers["extends"]({}, c, {
            left: "-4px"
        });
        c = babelHelpers["extends"]({}, c, {
            right: "-4px"
        });
        a = a ? b : c;
        b = Object.fromEntries(Object.entries(a).sort());
        return b
    }

    function Q(a) {
        a = {
            visibility: a ? "hidden" : "visible"
        };
        a = Object.fromEntries(Object.entries(a).sort());
        return a
    }

    function R() {
        var a = {
            outline: "none"
        };
        a = Object.fromEntries(Object.entries(a).sort());
        return a
    }

    function S(a, b, c) {
        return {
            animation: V(b, c),
            background: "none",
            bottom: a.toString() + "px",
            display: "block",
            margin: "0 12px 0 12px",
            overflow: "visible",
            padding: "0",
            position: "fixed",
            top: "auto",
            zIndex: 2147483644
        }
    }

    function T(a, b, c) {
        if (a)
            if (b !== "none") {
                a = c === "compact" ? i : h;
                return {
                    borderRadius: "60px",
                    boxShadow: null,
                    height: a + "px",
                    width: "auto"
                }
            } else {
                b = c === "compact" ? s : r;
                return {
                    borderRadius: "60px",
                    boxShadow: "0 4px 12px 0 rgba(0, 0, 0, 0.15)",
                    height: b + "px",
                    width: b + "px"
                }
            }
        a = c === "compact" ? s : r;
        return {
            borderRadius: "30px",
            boxShadow: "0 4px 12px 0 rgba(0, 0, 0, 0.15)",
            height: a + "px",
            width: a + "px"
        }
    }

    function U(a, b) {
        b = b - B;
        switch (a) {
            case "right":
                return {
                    right: b + "px"
                };
            case "left":
                return {
                    left: b + "px"
                }
        }
    }

    function V(a, b) {
        if (Boolean(a)) return null;
        if (Boolean(b)) return "slideInFromBottomDelay 3s ease-out";
        else return "slideInFromBottom 0.3s ease-out"
    }
    g.LABELED_ENTRY_POINT_STANDARD_HEIGHT = h;
    g.LABELED_ENTRY_POINT_COMPACT_HEIGHT = i;
    g.LABELED_ENTRY_POINT_STANDARD_FONT_SIZE = j;
    g.LABELED_ENTRY_POINT_COMPACT_FONT_SIZE = k;
    g.LABELED_ENTRY_POINT_STANDARD_LINE_HEIGHT = l;
    g.LABELED_ENTRY_POINT_COMPACT_LINE_HEIGHT = m;
    g.LABELED_ENTRY_POINT_STANDARD_ICON_MARGIN_RIGHT = n;
    g.LABELED_ENTRY_POINT_COMPACT_ICON_MARGIN_RIGHT = o;
    g.LABELED_ENTRY_POINT_STANDARD_PADDING_HORIZONTAL = p;
    g.LABELED_ENTRY_POINT_COMPACT_PADDING_HORIZONTAL = q;
    g.ICON_ENTRY_POINT_STANDARD_HEIGHT = r;
    g.ICON_ENTRY_POINT_COMPACT_HEIGHT = s;
    g.LABELED_ONLY_ENTRY_POINT_STANDARD_WIDTH_SHORT = t;
    g.LABELED_ONLY_ENTRY_POINT_STANDARD_WIDTH_LONG = u;
    g.LABELED_ONLY_ENTRY_POINT_COMPACT_WIDTH_SHORT = v;
    g.LABELED_ONLY_ENTRY_POINT_COMPACT_WIDTH_LONG = w;
    g.LABELED_WITH_ICON_ENTRY_POINT_STANDARD_WIDTH_SHORT = x;
    g.LABELED_WITH_ICON_ENTRY_POINT_STANDARD_WIDTH_LONG = y;
    g.LABELED_WITH_ICON_ENTRY_POINT_COMPACT_WIDTH_SHORT = z;
    g.LABELED_WITH_ICON_ENTRY_POINT_COMPACT_WIDTH_LONG = A;
    g.getMobileStyleText = a;
    g.positionElementAtWindowFooter = b;
    g.getEntryPointStyle = C;
    g.getIconStyleText = c;
    g.getUnreadCountStyleText = e;
    g.getAvailabilityStatusStyleText = f;
    g.getMobileLandingStyleText = D;
    g.getDesktopStyleText = E;
    g.getMobileFullScreenStyleText = F;
    g.getDesktopGreetingBottomSpacingWithReEngagementDialog = G;
    g.getDesktopGreetingBottomSpacing = H;
    g.getDesktopGreetingStyleText = I;
    g.getMobileGreetingStyleText = J;
    g.getDesktopWelcomeMessageStyleText = K;
    g.getMobileWelcomeMessageStyleText = L;
    g.getMobileReengagementCollapsedDialogStyleText = M;
    g.getWelcomeMessageBubbleStyle = N;
    g.getWelcomeMessageTextStyle = O;
    g.getMinusButtonStyle = P;
    g.getMinusButtonVisibility = Q;
    g.getNoOutlineFocus = R
}), 98);
__d("ReactDOMServer_DO_NOT_USE_OR_YOU_WILL_BE_FIRED", ["cr:1292368", "cr:291", "gkx"], (function(a, b, c, d, e, f) {
    "use strict";
    b("gkx")("1593") ? a = b("cr:291") : a = b("cr:1292368");
    e.exports = a
}), null);
__d("MPNXDMessageManager", ["ChatPluginStyleUtils", "MPNCacheVersioning", "MPNIdentity", "MPNSingletonProvider", "MessagingPluginPathUtils", "ReactDOMServer_DO_NOT_USE_OR_YOU_WILL_BE_FIRED", "UnverifiedXD", "immutable", "react"], (function(a, b, c, d, e, f, g) {
    "use strict";
    d("react");
    var h = function() {
        function a() {
            var a = this;
            this.$2 = c("immutable").Map();
            this.$3 = c("immutable").Map();
            this.$1 = !1;
            window.addEventListener("message", function(b) {
                a.$4(a.$2, b)
            });
            window.addEventListener("storage", function(b) {
                a.$4(a.$3, b)
            })
        }
        var b = a.prototype;
        b.$4 = function(a, b) {
            a.forEach(function(a, c, d) {
                if (a) {
                    (c.eventName == null || c.eventName == ((d = b.data) == null ? void 0 : d.name) || c.eventName == ((d = b.data) == null ? void 0 : (c = d.message) == null ? void 0 : c.method)) && a(b)
                }
            })
        };
        b.setShouldShowEntryPointCustomization = function(a) {
            this.$1 = a
        };
        b.subscribeEvent = function(a, b, c, d) {
            switch (b) {
                case "message":
                    this.$2 = this.$2.set({
                        key: a,
                        eventName: c
                    }, d);
                    break;
                case "storage":
                    this.$3 = this.$3.set({
                        key: a,
                        eventName: c
                    }, d);
                    break;
                default:
                    return
            }
        };
        b.unsubscribeEvent = function(a, b, c) {
            switch (b) {
                case "message":
                    this.$2 = this.removeSubscriber({
                        key: a,
                        eventName: c
                    }, this.$2);
                    break;
                case "storage":
                    this.$3 = this.removeSubscriber({
                        key: a,
                        eventName: c
                    }, this.$3);
                    break;
                default:
                    return
            }
        };
        b.removeSubscriber = function(a, b) {
            b.forEach(function(c, d, e) {
                d.key === a.key && d.eventName === a.eventName && (b = b.remove(d))
            });
            return b
        };
        b.setupIconIframe = function(a, b, e, f, g, h, i, j, k, l, m, n) {
            h = d("ChatPluginStyleUtils").getIconStyleText(b, e, f, h, i, j, this.$1, l);
            var o = d("ChatPluginStyleUtils").getUnreadCountStyleText(b, e, f, j, this.$1, l);
            k = d("ChatPluginStyleUtils").getAvailabilityStatusStyleText(b, e, f, j, k, l);
            k = JSON.stringify(k);
            var p = JSON.stringify("");
            m && (n === "desktop" ? p = d("ChatPluginStyleUtils").getDesktopGreetingStyleText(b, e, f, j, l) : n === "mobile" && (p = d("ChatPluginStyleUtils").getMobileGreetingStyleText(b, e, i, j, l)));
            m = g != null ? d("ReactDOMServer_DO_NOT_USE_OR_YOU_WILL_BE_FIRED").renderToString(g) : null;
            c("UnverifiedXD").send({
                type: "mpn.setupIconIframe",
                alignment: b,
                cssText: h,
                frameName: a,
                iconSVG: m,
                isSDKRewrite: !0,
                unreadCountCssText: o,
                availabilityStatusCssText: k,
                chatPluginInterface: n,
                greetingCssText: p
            })
        };
        b.setupMobileIframeForPath = function(a, b, e, f, g, h, i, j, k) {
            var l = null;
            switch (a) {
                case d("MessagingPluginPathUtils").MPN_PATH.LANDING:
                    l = d("ChatPluginStyleUtils").getMobileLandingStyleText(b);
                    break;
                case d("MessagingPluginPathUtils").MPN_PATH.BUBBLE:
                    l = d("ChatPluginStyleUtils").getMobileWelcomeMessageStyleText(f, g, i, h, j, this.$1, e);
                    break;
                case d("MessagingPluginPathUtils").MPN_PATH.REENGAGEMENT_COLLAPSED:
                    l = d("ChatPluginStyleUtils").getMobileReengagementCollapsedDialogStyleText(g, i, h, k, e);
                    break;
                case d("MessagingPluginPathUtils").MPN_PATH.WELCOME:
                case d("MessagingPluginPathUtils").MPN_PATH.ITPCONTINUE:
                case d("MessagingPluginPathUtils").MPN_PATH.THREAD:
                case d("MessagingPluginPathUtils").MPN_PATH.REENGAGEMENT_EXPANDED:
                    l = d("ChatPluginStyleUtils").getMobileFullScreenStyleText(b);
                    break
            }
            l != null && c("UnverifiedXD").send({
                type: "mpn.setupDialogIframe",
                cssText: l,
                mobilePath: a,
                isDialogHidden: !b
            })
        };
        b.setupDesktopIframe = function(a, b, e, f, g, h, i, j, k, l) {
            l = null;
            switch (f) {
                case d("MessagingPluginPathUtils").MPN_PATH.BUBBLE:
                    l = d("ChatPluginStyleUtils").getDesktopWelcomeMessageStyleText(a, b, e, h, i, j);
                    break;
                default:
                    l = d("ChatPluginStyleUtils").getDesktopStyleText(a, b, e, g, i, this.$1, j, k);
                    break
            }
            c("UnverifiedXD").send({
                type: "mpn.setupDialogIframe",
                cssText: l,
                isDialogHidden: !g,
                desktopBottomSpacing: b
            })
        };
        b.resizeIframe = function(a, b) {
            c("UnverifiedXD").send({
                type: b ? "mpn.updateGreetingAppearance" : "mpn.updateDialogAppearance",
                height: a + "px"
            })
        };
        b.updateIconAppearance = function(a) {
            c("UnverifiedXD").send({
                type: "mpn.updateIconAppearance",
                width: a + "px",
                boxShadow: "0 4px 12px 0 rgba(0, 0, 0, 0.15)"
            })
        };
        b.toggleDialogVisibility = function(a) {
            c("UnverifiedXD").send({
                type: "mpn.toggleDialogVisibility",
                shouldHide: a
            })
        };
        b.toggleGreetingVisibility = function(a) {
            c("UnverifiedXD").send({
                type: "mpn.toggleGreetingDialogVisibility",
                shouldHide: a
            })
        };
        b.updateGreetingIframeBottomSpacing = function(a) {
            c("UnverifiedXD").send({
                type: "mpn.updateGreetingAppearance",
                bottom: a + "px"
            })
        };
        b.markInteraction = function() {
            var a = {
                hasUserInteraction: !0
            };
            this.storeThirdPartyState(a)
        };
        b.clearInteraction = function() {
            var a = {
                hasUserInteraction: !1
            };
            this.storeThirdPartyState(a)
        };
        b.updateShouldShowLoginPage = function(a) {
            a = {
                shouldShowLoginPage: a
            };
            this.storeThirdPartyState(a)
        };
        b.updateIsReEngagementOptIn = function(a) {
            a = {
                isReEngagementOptIn: a
            };
            this.storeThirdPartyState(a)
        };
        b.markReEngagementDismiss = function() {
            var a = {
                hasDismissReEngagementDialog: !0
            };
            this.storeThirdPartyState(a)
        };
        b.updateMainIframeVisibility = function(a) {
            a = {
                visibility: a
            };
            this.storeThirdPartyState(a)
        };
        b.updateShowUpgradePrompt = function(a) {
            a = {
                showUpgradePrompt: a
            };
            this.storeThirdPartyState(a)
        };
        b.updatePath = function(a) {
            a = {
                path: a
            };
            this.storeThirdPartyState(a)
        };
        b.updateGreetingVisibility = function(a) {
            a = {
                greetingVisibility: a
            };
            this.storeThirdPartyState(a)
        };
        b.markGreetingDialogDismiss = function() {
            var a = {
                isGreetingDismissed: !0
            };
            this.storeThirdPartyState(a)
        };
        b.storeThirdPartyState = function(a) {
            var b = {
                v: d("MPNCacheVersioning").VERSION
            };
            a.path != null && (b = babelHelpers["extends"]({}, b, {
                path: a.path
            }));
            a.chatState != null && (b = babelHelpers["extends"]({}, b, {
                chatState: a.chatState
            }));
            a.visibility != null && (b = babelHelpers["extends"]({}, b, {
                visibility: a.visibility
            }));
            a.showUpgradePrompt != null && (b = babelHelpers["extends"]({}, b, {
                showUpgradePrompt: a.showUpgradePrompt
            }));
            a.hasUserInteraction != null && (b = babelHelpers["extends"]({}, b, {
                euit: a.hasUserInteraction === !0 ? Date.now() : 0
            }));
            a.shouldShowLoginPage != null && (b = babelHelpers["extends"]({}, b, {
                shouldShowLoginPage: a.shouldShowLoginPage
            }));
            a.isReEngagementOptIn != null && (b = babelHelpers["extends"]({}, b, {
                isReEngagementOptIn: a.isReEngagementOptIn
            }));
            a.hasDismissReEngagementDialog != null && (b = babelHelpers["extends"]({}, b, {
                rdet: a.hasDismissReEngagementDialog === !0 ? Date.now() : 0
            }));
            a.greetingVisibility != null && (b = babelHelpers["extends"]({}, b, {
                greetingVisibility: a.greetingVisibility
            }));
            a.isGreetingDismissed != null && (b = babelHelpers["extends"]({}, b, {
                isGreetingDismissed: a.isGreetingDismissed
            }));
            c("UnverifiedXD").send({
                type: "mpn.storeState",
                state: JSON.stringify(b)
            })
        };
        b.removeThirdPartyState = function() {
            c("UnverifiedXD").send({
                type: "mpn.storeState"
            })
        };
        b.reloadPlugin = function(a) {
            d("MPNIdentity").MPNIdentity.clearUserChangesSubscription(), c("UnverifiedXD").send({
                type: "mpn.reload",
                hasExplicitInteraction: a
            })
        };
        b.updateFRXStyle = function(a, b, d) {
            a = {
                type: "mpn.updateDialogAppearance",
                height: a + "px",
                width: b + "px"
            };
            d === !0 ? (a.boxShadow = "0 1pt 12pt grey", a.margin = "12px 8px 12px 16px") : (a.boxShadow = "none", a.margin = "0");
            c("UnverifiedXD").send(a)
        };
        b.setTabNotification = function(a) {
            c("UnverifiedXD").send({
                type: "mpn.updatePageTitle",
                titleText: a
            })
        };
        b.updateAlertPageTitle = function(a) {
            a == null ? c("UnverifiedXD").send({
                type: "mpn.updatePageTitle"
            }) : c("UnverifiedXD").send({
                type: "mpn.updatePageTitle",
                titleText: a
            })
        };
        b.navigateToWelcomePage = function(a) {
            c("UnverifiedXD").send({
                type: "mpn.navigateToWelcomePage",
                isHidden: a
            })
        };
        return a
    }();
    a = new(c("MPNSingletonProvider"))(function() {
        return new h()
    });
    b = a.get();
    g["default"] = b
}), 98);
__d("XChatPluginTabImpressionLoggingController", ["XController"], (function(a, b, c, d, e, f) {
    e.exports = b("XController").create("/plugins/chat/tab_impression_logging/", {
        page_id: {
            type: "String",
            required: !0
        },
        event_name: {
            type: "Enum",
            required: !0,
            enumType: 1
        },
        client_id: {
            type: "Int"
        },
        request_id: {
            type: "String",
            required: !0
        },
        plugin_interface: {
            type: "Enum",
            required: !0,
            enumType: 1
        },
        user_is_logged_in: {
            type: "Bool",
            defaultValue: !1
        },
        tab_name: {
            type: "Enum",
            required: !0,
            enumType: 1
        },
        loading_time: {
            type: "String"
        },
        client_loading_time: {
            type: "String"
        },
        button_names: {
            type: "EnumVector",
            enumType: {
                member: 1
            }
        },
        welcome_message: {
            type: "String"
        },
        debug_data: {
            type: "String"
        },
        prompt_type: {
            type: "String"
        },
        has_explicit_interaction: {
            type: "String"
        },
        entry_point_icon: {
            type: "String"
        },
        entry_point_label: {
            type: "String"
        },
        event_timestamp: {
            type: "Int"
        },
        log_id: {
            type: "String"
        },
        server_loading_time: {
            type: "String"
        },
        exception_type: {
            type: "String"
        },
        exception_message: {
            type: "String"
        },
        exception_stacktrace: {
            type: "String"
        },
        is_new_welcome_view: {
            type: "Bool",
            defaultValue: !1
        }
    })
}), null);
__d("LiveChatPluginLoggerUtil", ["AsyncRequest", "ChatPluginDeltaReceivedFalcoEvent", "ChatPluginInThreadActionFalcoEvent", "ChatPluginUiTabImpressionFalcoEvent", "CurrentUser", "LiveChatPluginConstants", "MNPlatformAttributionTags", "MPNIdentity", "MPNStorage", "MessengerWebPluginAnonymousTypedLogger", "XChatPluginTabImpressionLoggingController", "performanceAbsoluteNow"], (function(a, b, c, d, e, f, g) {
    "use strict";

    function a(a, b, d, e, f, g, h, i) {
        var j = /iPhone|iPod|iPad|Android|Mobile/i.test(navigator.userAgent),
            k = c("CurrentUser").getID() !== "0",
            l = {
                page: {
                    id: b
                },
                request: {
                    id: (b = c("MPNStorage").getRequestID()) != null ? b : ""
                },
                plugin_interface: j ? "mobile" : "desktop",
                user_is_logged_in: k,
                tab_name: d,
                action_type: e,
                button_name: f,
                opened_tab: g,
                prompt_type: h && h,
                is_icebreaker: i
            };
        a != null && (l = babelHelpers["extends"]({}, l, {
            client: {
                id: a
            }
        }));
        c("ChatPluginInThreadActionFalcoEvent").log(function() {
            return l
        })
    }

    function b(a, b, e, f, g, h, i, j, k, l) {
        h = (h = h) != null ? h : c("MPNStorage").getRequestID();
        var m = c("performanceAbsoluteNow")(),
            n = c("CurrentUser").getID() !== "0",
            o, p;
        e != null && (o = Math.round(m - e), p = j != null ? Math.round(m - j) : null);
        j = babelHelpers["extends"]({
            fromTime: e,
            now: m,
            loadingTime: o,
            clientLoadingTime: p,
            hasStorageAccess: d("MPNIdentity").MPNIdentity.getHasStorageAccess()
        }, l);
        e = /iPhone|iPod|iPad|Android|Mobile/i.test(navigator.userAgent);
        var q = {
            page: {
                id: a
            },
            request: {
                id: (m = h) != null ? m : ""
            },
            plugin_interface: e ? "mobile" : "desktop",
            user_is_logged_in: n,
            tab_name: b,
            loading_time: (l = o) == null ? void 0 : l.toString(),
            client_loading_time: (a = p) == null ? void 0 : a.toString(),
            botton_names: f,
            welcome_message: g,
            debug_data: JSON.stringify(j),
            prompt_type: k && k
        };
        i != null && (q = babelHelpers["extends"]({}, q, {
            client: {
                id: i
            }
        }));
        c("ChatPluginUiTabImpressionFalcoEvent").log(function() {
            return q
        })
    }

    function e(a, b, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
        n === void 0 && (n = !1);
        o === void 0 && (o = !1);
        h = (h = h) != null ? h : c("MPNStorage").getRequestID();
        var s = c("performanceAbsoluteNow")(),
            t = c("CurrentUser").getID() !== "0",
            u, v, w;
        e != null && (u = Math.round(s - e), v = j != null ? Math.round(s - j) : null);
        q != null && (w = Math.round(s - q));
        j = {
            fromTime: e,
            now: s,
            loadingTime: u,
            clientLoadingTime: v,
            hasStorageAccess: d("MPNIdentity").MPNIdentity.getHasStorageAccess(),
            screenSize: {
                width: screen.width,
                height: screen.height,
                size: screen.width + "x" + screen.height
            }
        };
        q = /iPhone|iPod|iPad|Android|Mobile/i.test(navigator.userAgent);
        s = (e = r) != null ? e : "tab_impression";
        s = c("XChatPluginTabImpressionLoggingController").getURIBuilder().setString("page_id", a).setEnum("event_name", s).setString("request_id", h).setInt("client_id", i).setEnum("plugin_interface", q ? "mobile" : "desktop").setBool("user_is_logged_in", t).setEnum("tab_name", b).setString("loading_time", (r = u) == null ? void 0 : r.toString()).setString("client_loading_time", (e = v) == null ? void 0 : e.toString()).setEnumVector("button_names", f).setString("welcome_message", g).setString("debug_data", JSON.stringify(j)).setString("prompt_type", k).setString("has_explicit_interaction", c("CurrentUser").getID() != "0" ? "1" : null).setInt("event_timestamp", Date.now()).setString("log_id", p).setString("server_loading_time", (a = w) == null ? void 0 : a.toString()).setBool("is_new_welcome_view", o);
        if (n) {
            h = l === "none" ? null : l;
            i = m === "none" ? null : m;
            s.setString("entry_point_icon", h).setString("entry_point_label", i)
        }
        new(c("AsyncRequest"))().setURI(s.getURI()).send()
    }

    function f(a, b, d, e, f, g) {
        var h = c("MPNStorage").getRequestID(),
            i = Date.now(),
            j = c("CurrentUser").getID() !== "0",
            k = /iPhone|iPod|iPad|Android|Mobile/i.test(navigator.userAgent);
        c("XChatPluginTabImpressionLoggingController").getURIBuilder().setString("page_id", b).setEnum("event_name", a).setString("request_id", h).setEnum("plugin_interface", k ? "mobile" : "desktop").setBool("user_is_logged_in", j).setEnum("tab_name", d).setInt("event_timestamp", i).setString("exception_type", e).setString("exception_message", f).setString("exception_stacktrace", g)
    }

    function h(a, b, e, f, g) {
        g === void 0 && (g = !1);
        var h = d("LiveChatPluginConstants").MQTT,
            i = g ? JSON.stringify({
                seqId: f,
                isGuest: g
            }) : JSON.stringify({
                seqId: f
            });
        c("ChatPluginDeltaReceivedFalcoEvent").log(function() {
            var d;
            return {
                client: {
                    id: a
                },
                page: {
                    id: b
                },
                request: {
                    id: (d = c("MPNStorage").getRequestID()) != null ? d : ""
                },
                delta_type: e,
                gateway: h,
                debug_data: i
            }
        })
    }

    function i() {
        return [d("MNPlatformAttributionTags").ATTRIBUTION_TAGS_PREFIX + d("MNPlatformAttributionTags").CUSTOMER_CHAT_PLUGIN, d("LiveChatPluginConstants").LIVE_CHAT_ENTRYPOINT_ATTRIBUTION_TAG]
    }

    function j(a, b, d, e, f) {
        var g = c("MPNStorage").getRequestID(),
            h = c("performanceAbsoluteNow")(),
            i = c("CurrentUser").getID() !== "0",
            j = /iPhone|iPod|iPad|Android|Mobile/i.test(navigator.userAgent);
        new(c("MessengerWebPluginAnonymousTypedLogger"))().setClientFbid(c("CurrentUser").getID()).setPluginName("messaging_plugin").setPluginInterface(j ? "mobile" : "desktop").setIsUserLoggedIn(i).setTabName(d).setPageID(b).setRequestID(g).setNewEventName(a).setOtherFields(e).setDebugData(JSON.stringify(f)).setEventTimestamp(h).logVital()
    }

    function k(a, b, d, e, f, g) {
        var h = c("MPNStorage").getRequestID(),
            i = c("CurrentUser").getID() !== "0",
            j = Date.now(),
            k = /iPhone|iPod|iPad|Android|Mobile/i.test(navigator.userAgent);
        new(c("MessengerWebPluginAnonymousTypedLogger"))().setClientFbid(b).setPluginName("messaging_plugin").setPluginInterface(k ? "mobile" : "desktop").setIsUserLoggedIn(i).setTabName(e).setPageID(d).setRequestID(h).setNewEventName(a).setOtherFields(f).setDebugData(g).setEventTimestamp(j).logVital()
    }

    function l(a, b, d, e, f, g, h) {
        var i = c("MPNStorage").getRequestID(),
            j = Date.now(),
            k = c("CurrentUser").getID() !== "0",
            l = /iPhone|iPod|iPad|Android|Mobile/i.test(navigator.userAgent),
            m = {
                exception_type: e,
                exception_message: f,
                exception_stack_trace: g
            };
        new(c("MessengerWebPluginAnonymousTypedLogger"))().setPluginName("messaging_plugin").setPluginInterface(l ? "mobile" : "desktop").setIsUserLoggedIn(k).setTabName(d).setPageID(b).setRequestID(i).setNewEventName(a).setOtherFields(m).setExceptionType(e).setExceptionMessage(f).setExceptionStacktrace(g).setEventTimestamp(j).setDebugData(h).logVital()
    }
    var m = {
        show: "customer_chat_show_called",
        hide: "customer_chat_hide_called",
        showDialog: "customer_chat_show_dialog_called",
        hideDialog: "customer_chat_hide_dialog_called",
        update: "customer_chat_update_called"
    };

    function n(a) {
        return {
            error_name: a.name,
            error_message: a.message,
            error_stack: a.stack
        }
    }

    function o(a, b, c) {
        var d;
        if (a !== "none") {
            a = {
                entry_point_icon: a
            };
            d = babelHelpers["extends"]({}, d, a)
        }
        if (b !== "none") {
            a = {
                entry_point_label: b
            };
            d = babelHelpers["extends"]({}, d, a)
        }
        k("tab_click", null, c, "plugin_entrypoint", d)
    }
    g.logActionUsingFalco = a;
    g.logImpressionUsingFalco_UnsafeFor3PD = b;
    g.logImpressionUsingXController_SafeFor3PD = e;
    g.logImpressionExceptionsUsingXController_SafeFor3PD = f;
    g.logDelta = h;
    g.getAttributionTags = i;
    g.logNewImpressionEvents_UnsafeFor3PD = j;
    g.logActionFromNewUI = k;
    g.logImpressionExceptionsFromNewUI_UnsafeFor3PD = l;
    g.EVENTMAP = m;
    g.getErrorData = n;
    g.logEntryPointClick = o
}), 98);
__d("LiveChatPluginPromptButton.react", ["cx", "ix", "Image.react", "ShimButton.react", "react"], (function(a, b, c, d, e, f, g, h, i) {
    "use strict";
    var j = d("react");
    a = function(a) {
        babelHelpers.inheritsLoose(b, a);

        function b() {
            return a.apply(this, arguments) || this
        }
        var d = b.prototype;
        d.render = function() {
            return j.jsxs(c("ShimButton.react"), {
                className: "_4bqf promptButton",
                style: this.props.color != null ? {
                    backgroundColor: this.props.color
                } : null,
                onClick: this.props.onClick,
                "data-testid": void 0,
                children: [(this.props.hasIcon == null || this.props.hasIcon == !0) && (this.props.blackIcon === !0 ? j.jsx(c("Image.react"), {
                    className: "_a2jf",
                    src: i("505616")
                }) : j.jsx(c("Image.react"), {
                    className: "messengerIcon",
                    src: i("481153")
                })), this.props.text]
            })
        };
        return b
    }(j.Component);
    g["default"] = a
}), 98);
__d("MPNGuestUpgradeFBTStrings", ["fbt", "MPNConstants"], (function(a, b, c, d, e, f, g, h) {
    "use strict";

    function a(a) {
        if (a === d("MPNConstants").MPNUpgradePrompt.ATTACHMENT_UPSELL) return h._( /*FBT_CALL*/ {
            "*": "\u05e9\u05dc\u05d7\/\u05d9 \u05e7\u05d1\u05e6\u05d9\u05dd \u05de\u05e6\u05d5\u05e8\u05e4\u05d9\u05dd \u05d1-Messenger",
            "1": "\u05e9\u05dc\u05d7 \u05e7\u05d1\u05e6\u05d9\u05dd \u05de\u05e6\u05d5\u05e8\u05e4\u05d9\u05dd \u05d1-Messenger",
            "2": "\u05e9\u05dc\u05d7\u05d9 \u05e7\u05d1\u05e6\u05d9\u05dd \u05de\u05e6\u05d5\u05e8\u05e4\u05d9\u05dd \u05d1-Messenger",
            "__vcg": 1
        } /*FBT_CALL*/ );
        else if (a === d("MPNConstants").MPNUpgradePrompt.DONT_WAIT_FOR_REPLY_UPSELL) return h._( /*FBT_CALL*/ "\u05de\u05d7\u05db\u05d4 \u05dc\u05ea\u05e9\u05d5\u05d1\u05d4?" /*FBT_CALL*/ );
        else if (a === d("MPNConstants").MPNUpgradePrompt.OPEN_THREAD) return h._( /*FBT_CALL*/ "\u05e8\u05d5\u05e6\u05d4 \u05dc\u05e7\u05d1\u05dc \u05d4\u05d5\u05d3\u05e2\u05d4 \u05db\u05d0\u05e9\u05e8 \u05ea\u05d4\u05d9\u05d4 \u05ea\u05e9\u05d5\u05d1\u05d4?" /*FBT_CALL*/ );
        else return h._( /*FBT_CALL*/ "\u05e8\u05d5\u05e6\u05d4 \u05dc\u05e9\u05de\u05d5\u05e8 \u05d0\u05ea \u05d4\u05e9\u05d9\u05d7\u05d4?" /*FBT_CALL*/ )
    }

    function b(a, b) {
        if (a === d("MPNConstants").MPNUpgradePrompt.ATTACHMENT_UPSELL) return h._( /*FBT_CALL*/ {
            "*": "\u05d0\u05dd \u05ea\u05ea\u05d7\u05d1\u05e8\/\u05d9, \u05ea\u05d5\u05db\u05dc\/\u05d9 \u05dc\u05e9\u05dc\u05d5\u05d7 \u05dc\u05d3\u05e3 {pageName} \u05ea\u05de\u05d5\u05e0\u05d5\u05ea, \u05e1\u05e8\u05d8\u05d5\u05e0\u05d9\u05dd \u05d5\u05e2\u05d5\u05d3.",
            "1": "\u05d0\u05dd \u05ea\u05ea\u05d7\u05d1\u05e8, \u05ea\u05d5\u05db\u05dc \u05dc\u05e9\u05dc\u05d5\u05d7 \u05dc\u05d3\u05e3 {pageName} \u05ea\u05de\u05d5\u05e0\u05d5\u05ea, \u05e1\u05e8\u05d8\u05d5\u05e0\u05d9\u05dd \u05d5\u05e2\u05d5\u05d3.",
            "2": "\u05d0\u05dd \u05ea\u05ea\u05d7\u05d1\u05e8\u05d9, \u05ea\u05d5\u05db\u05dc\u05d9 \u05dc\u05e9\u05dc\u05d5\u05d7 \u05dc\u05d3\u05e3 {pageName} \u05ea\u05de\u05d5\u05e0\u05d5\u05ea, \u05e1\u05e8\u05d8\u05d5\u05e0\u05d9\u05dd \u05d5\u05e2\u05d5\u05d3.",
            "__vcg": 1
        } /*FBT_CALL*/ , [h._param("pageName", b.state.pageName)]);
        else if (a === d("MPNConstants").MPNUpgradePrompt.DONT_WAIT_FOR_REPLY_UPSELL) return h._( /*FBT_CALL*/ {
            "*": "\u05d0\u05dd \u05ea\u05ea\u05d7\u05d1\u05e8\/\u05d9 \u05dc-Messenger, \u05d4\u05d3\u05e3 {pageName} \u05d9\u05d5\u05db\u05dc \u05dc\u05e9\u05dc\u05d5\u05d7 \u05dc\u05da \u05d4\u05d5\u05d3\u05e2\u05d4 \u05db\u05e9\u05d4\u05d5\u05d0 \u05d6\u05de\u05d9\u05df.",
            "1": "\u05d0\u05dd \u05ea\u05ea\u05d7\u05d1\u05e8 \u05dc-Messenger, \u05d4\u05d3\u05e3 {pageName} \u05d9\u05d5\u05db\u05dc \u05dc\u05e9\u05dc\u05d5\u05d7 \u05dc\u05da \u05d4\u05d5\u05d3\u05e2\u05d4 \u05db\u05e9\u05d4\u05d5\u05d0 \u05d6\u05de\u05d9\u05df.",
            "2": "\u05d0\u05dd \u05ea\u05ea\u05d7\u05d1\u05e8\u05d9 \u05dc-Messenger, \u05d4\u05d3\u05e3 {pageName} \u05d9\u05d5\u05db\u05dc \u05dc\u05e9\u05dc\u05d5\u05d7 \u05dc\u05da \u05d4\u05d5\u05d3\u05e2\u05d4 \u05db\u05e9\u05d4\u05d5\u05d0 \u05d6\u05de\u05d9\u05df.",
            "__vcg": 1
        } /*FBT_CALL*/ , [h._param("pageName", b.state.pageName)]);
        else if (a === d("MPNConstants").MPNUpgradePrompt.OPEN_THREAD) return h._( /*FBT_CALL*/ "\u05d0\u05d7\u05e8\u05d9 \u05d4\u05d4\u05ea\u05d7\u05d1\u05e8\u05d5\u05ea \u05dc-Messenger \u05ea\u05d9\u05e9\u05dc\u05d7 \u05d0\u05dc\u05d9\u05da \u05d4\u05d5\u05d3\u05e2\u05d4 \u05db\u05d0\u05e9\u05e8 \u05ea\u05ea\u05e7\u05d1\u05dc \u05ea\u05d2\u05d5\u05d1\u05d4 \u05de{pageName}." /*FBT_CALL*/ , [h._param("pageName", b.state.pageName)]);
        else return h._( /*FBT_CALL*/ "\u05dc\u05d0\u05d7\u05e8 \u05d4\u05d4\u05ea\u05d7\u05d1\u05e8\u05d5\u05ea \u05dc-Messenger, \u05d9\u05d4\u05d9\u05d4 \u05dc\u05da \u05ea\u05d9\u05e2\u05d5\u05d3 \u05e9\u05dc \u05d4\u05e9\u05d9\u05d7\u05d4 \u05d4\u05d6\u05d5 \u05e2\u05dd {pageName}." /*FBT_CALL*/ , [h._param("pageName", b.state.pageName)])
    }

    function c() {
        return h._( /*FBT_CALL*/ "\u05e0\u05d9\u05ea\u05df \u05dc\u05d4\u05ea\u05d7\u05d1\u05e8 \u05d0\u05dc Messenger \u05d3\u05e8\u05da \u05d4\u05ea\u05e4\u05e8\u05d9\u05d8 \u05d4\u05e0\u05e4\u05ea\u05d7 \u05de\u05ea\u05d9 \u05e9\u05e8\u05d5\u05e6\u05d9\u05dd." /*FBT_CALL*/ )
    }

    function e() {
        return h._( /*FBT_CALL*/ "\u05d1\u05d8\u05d5\u05d7 \u05e9\u05d1\u05e8\u05e6\u05d5\u05e0\u05da \u05dc\u05e1\u05d9\u05d9\u05dd \u05d0\u05ea \u05d4\u05e6'\u05d0\u05d8?" /*FBT_CALL*/ )
    }

    function f(a) {
        return h._( /*FBT_CALL*/ "\u05e1\u05d9\u05d5\u05dd \u05e9\u05dc \u05d4\u05e6\u2018\u05d0\u05d8 \u05d9\u05d2\u05e8\u05d5\u05dd \u05dc\u05db\u05da \u05e9\u05d4\u05e9\u05d9\u05d7\u05d4 \u05e9\u05dc\u05da \u05e2\u05dd {pageName} \u05ea\u05d5\u05e1\u05e8. \u05d9\u05e9 \u05dc\u05d4\u05ea\u05d7\u05d1\u05e8 \u05dc-Messenger \u05db\u05d3\u05d9 \u05dc\u05e8\u05d0\u05d5\u05ea \u05d0\u05ea \u05d4\u05e6\u2018\u05d0\u05d8 \u05de\u05d0\u05d5\u05d7\u05e8 \u05d9\u05d5\u05ea\u05e8." /*FBT_CALL*/ , [h._param("pageName", a.state.pageName)])
    }
    g.getPromptTitle = a;
    g.getPromptSubtitle = b;
    g.getPopoverText = c;
    g.getEndChatUpgradePromptTitle = e;
    g.getEndChatUpgradePromptSubtitle = f
}), 98);
__d("MessagingPluginContext", ["MPNConstants", "MPNLocalState", "emptyFunction", "react"], (function(a, b, c, d, e, f, g) {
    "use strict";
    a = d("react").createContext;
    b = {
        alignment: null,
        pageID: "",
        pageName: "",
        pageProfilePictureUri: "",
        viewerProfilePicureUri: "",
        threadCSSColor: "",
        entryPointIconSVG: "",
        entryPointIconEnum: "",
        entryPointLabel: "",
        pageResponsiveness: "",
        isComposerDisabled: !1,
        isBusinessActive: !1,
        hasActiveAutomation: !1,
        hasPersistentMenu: !1,
        greetingDialogDelay: 0,
        greetingDialogDisplay: "show",
        loggedInGreeting: "",
        loggedOutGreeting: "",
        refParam: "",
        refererUri: "",
        requestID: "",
        originDomain: "",
        icebreakers: null,
        icebreakerCtas: null,
        pageVerifiedStatus: null,
        mobileOptin: "app_switch",
        optimisticStorageState: {
            path: d("MPNLocalState").MPNLocalStatePath.LANDING_BANNER,
            chatState: d("MPNLocalState").MPNChatState.CHAT_NOT_STARTED,
            visibility: d("MPNConstants").MPNVisibility.NOT_HIDDEN,
            showCufeeModal: d("MPNConstants").MPNVisibility.HIDDEN,
            showUpgradePrompt: d("MPNConstants").MPNUpgradePrompt.NOT_SHOWN
        },
        accessToken: "",
        guestID: "",
        soundURLs: new Map(),
        isInitialLoad: !1,
        hasGuestMode: !1,
        showUpgradeUpsellPrompt: !1,
        pluginMountTime: 0,
        serverTime: 0,
        clientRequestTime: 0,
        upgradeUpsellPrompt: d("MPNConstants").MPNUpgradePrompt.NOT_SHOWN,
        cookieAccessDenied: !1,
        hasAutomation: !1,
        isPageInEU: !1,
        isSanitizedEpd3pdRequest: !1,
        shouldShowEntryPointCustomization: !1,
        shouldShowMobileInWebChat: !1,
        shouldShowSizingCustomization: !1,
        shouldShowNewWelcomeView: !1,
        shouldShowPresence: !1,
        shouldShowReEngagement: !1,
        shouldBypassPageSentryTest: !1,
        entryPointSize: "standard",
        windowSize: "standard",
        awayHoursEnabled: !1,
        awayGreeting: "",
        isPageAway: !1,
        nextAvailableTimestamp: null,
        optInMessageEnabled: !1,
        optInMessageCadence: "monthly",
        collapsedOptInMessageTitle: "Can we stay in touch?",
        expandedOptInMessageTitle: "Opt-in to updates.",
        collapsedOptInMessageText: "We\u2019d like to send you updates on deals and promos.",
        expandedOptInMessageText: "If you\u2019d like, we can update you weekly on promos and deals. You can opt-out any time.",
        shouldRenderReEngagementDialog: !1
    };
    e = a({
        dispatchAction: c("emptyFunction"),
        state: b
    });
    g["default"] = e
}), 98);
__d("MPNNavigation", ["ChatPluginStyleUtils", "LiveChatPluginLoggerUtil", "MPNConstants", "MPNIdentity", "MPNLocalState", "MPNStorage", "MPNXDMessageManager", "MessagingPluginPathUtils"], (function(a, b, c, d, e, f, g) {
    "use strict";

    function a(a, b, e, f) {
        if (b == null) return;
        c("MPNStorage").setPath(e);
        a.dispatchAction({
            type: "UPDATE_DIALOG_PATH",
            path: e
        });
        b.replace(d("MessagingPluginPathUtils").MessagingPluginPathUtils.toMobilePath(e), {
            shouldShowLoginPage: f
        })
    }

    function h(a, b) {
        var e;
        b === void 0 && (b = !0);
        var f = a.state,
            g = f.pageID,
            h = f.hasGuestMode,
            i = f.bottomSpacing,
            j = f.entryPointLabel,
            k = f.entryPointSize;
        f = f.windowSize;
        e = (e = c("MPNStorage").getFBStorageState()) == null ? void 0 : e.currentPath;
        c("MPNStorage").setVisibility(d("MPNConstants").MPNVisibility.HIDDEN);
        a.dispatchAction({
            type: "UPDATE_DIALOG_VISIBILITY",
            dialogVisibility: d("MPNConstants").MPNVisibility.HIDDEN
        });
        c("MPNXDMessageManager").toggleDialogVisibility(!0);
        a = f === "compact";
        i = d("ChatPluginStyleUtils").getDesktopGreetingBottomSpacingWithReEngagementDialog(!0, (f = i) != null ? f : 0, j, k, a);
        c("MPNXDMessageManager").updateGreetingIframeBottomSpacing(i);
        b && d("LiveChatPluginLoggerUtil").logActionFromNewUI("tab_close", null, g, d("MessagingPluginPathUtils").MessagingPluginPathUtils.getTabNameFromLocalStatePathEnum(e, h))
    }

    function i(a, b) {
        var e, f = a.state.optimisticStorageState;
        e = (e = (e = c("MPNStorage").getFBStorageState()) == null ? void 0 : e.currentPath) != null ? e : f.path;
        (b || e === d("MPNLocalState").MPNLocalStatePath.BUBBLE || e === d("MPNLocalState").MPNLocalStatePath.REENGAGEMENT_COLLAPSED_VIEW) && c("MPNXDMessageManager").navigateToWelcomePage(!1);
        c("MPNStorage").setVisibility(d("MPNConstants").MPNVisibility.NOT_HIDDEN);
        a.dispatchAction({
            type: "UPDATE_DIALOG_VISIBILITY",
            dialogVisibility: d("MPNConstants").MPNVisibility.NOT_HIDDEN
        });
        c("MPNXDMessageManager").toggleDialogVisibility(!1);
        j(a);
        f = {
            opened_tab: d("MessagingPluginPathUtils").MessagingPluginPathUtils.getTabNameFromLocalStatePathEnum(e, a.state.hasGuestMode)
        };
        if (a.state.shouldShowEntryPointCustomization) {
            if (a.state.entryPointIconEnum !== "none") {
                b = {
                    entry_point_icon: a.state.entryPointIconEnum
                };
                f = babelHelpers["extends"]({}, f, b)
            }
            if (a.state.entryPointLabel !== "none") {
                e = {
                    entry_point_label: a.state.entryPointLabel
                };
                f = babelHelpers["extends"]({}, f, e)
            }
        }
        d("LiveChatPluginLoggerUtil").logActionFromNewUI("tab_click", null, a.state.pageID, "plugin_icon", f)
    }

    function b(a, b) {
        var c = a.state,
            e = c.optimisticStorageState;
        c = c.pageID;
        if (e.path === d("MPNLocalState").MPNLocalStatePath.BUBBLE || e.path === d("MPNLocalState").MPNLocalStatePath.REENGAGEMENT_COLLAPSED_VIEW) {
            i(a, b);
            return
        }
        if (e.visibility === d("MPNConstants").MPNVisibility.NOT_HIDDEN) {
            h(a);
            var f = d("MPNIdentity").MPNIdentity.currentUserID();
            if (f == null) return;
            d("LiveChatPluginLoggerUtil").logActionFromNewUI("chat_plugin_minimize", f, c, "plugin_icon")
        } else e.visibility === d("MPNConstants").MPNVisibility.HIDDEN && i(a, b)
    }

    function e(a) {
        a.dispatchAction({
            type: "DISMISS_RE_ENGAGEMENT_DIALOG",
            shouldRenderReEngagementDialog: !1
        }), c("MPNXDMessageManager").markReEngagementDismiss()
    }

    function j(a) {
        c("MPNStorage").setGreetingVisibility(d("MPNConstants").MPNVisibility.HIDDEN), a.dispatchAction({
            type: "UPDATE_GREETING_VISIBILITY",
            greetingVisibility: d("MPNConstants").MPNVisibility.HIDDEN
        }), c("MPNXDMessageManager").toggleGreetingVisibility(!0)
    }

    function f(a) {
        c("MPNStorage").setGreetingVisibility(d("MPNConstants").MPNVisibility.NOT_HIDDEN), a.dispatchAction({
            type: "UPDATE_GREETING_VISIBILITY",
            greetingVisibility: d("MPNConstants").MPNVisibility.NOT_HIDDEN
        }), c("MPNXDMessageManager").toggleGreetingVisibility(!1)
    }

    function k(a) {
        c("MPNXDMessageManager").markGreetingDialogDismiss(), a.dispatchAction({
            type: "DISMISS_GREETING_DIALOG",
            isGreetingDismissed: !0
        })
    }
    g.navigateToRoute = a;
    g.minimizePlugin = h;
    g.maximizePlugin = i;
    g.togglePluginVisibility = b;
    g.dismissReEngagementDialog = e;
    g.minimizeGreetingDialog = j;
    g.maximizeGreetingDialog = f;
    g.dismissGreetingDialog = k
}), 98);
__d("MessagingPluginFRXBootloaderUtils", ["Bootloader"], (function(a, b, c, d, e, f, g) {
    "use strict";

    function a(a, b) {
        c("Bootloader").loadModules(["MessagingPluginFRXUtils", "FRXEntryPoint", "NFXStoryLocation"], function(c, d, e) {
            c.openFRXDialog(a, e.MESSAGING_PLUGIN, d.REPORT_BUTTON, b)
        }, "MessagingPluginFRXBootloaderUtils")
    }
    g.bootloadOpenFRXDialog = a
}), 98);
__d("MPNMessageListDataHelper", ["MercuryIDs"], (function(a, b, c, d, e, f, g) {
    "use strict";

    function a(a, b) {
        a = j(a);
        if (b == null || !a || !a.platform_xmd || a.author === d("MercuryIDs").getParticipantIDFromUserID(b)) return null;
        try {
            return JSON.parse(a.platform_xmd)
        } catch (a) {
            return null
        }
    }

    function b(a) {
        a = k(a);
        return a != null && a.source === "source:discovery:customer_chat_plugin_escalation"
    }
    c = function(a) {
        a = JSON.parse((a = a.platform_xmd) != null ? a : "[]");
        return a.persona
    };
    e = function a(b, c) {
        var d = b.length;
        if (c >= d - 1) return Infinity;
        d = b[c + 1][0];
        if (d.action_type === "ma-type:log-message") return a(b, c + 1);
        else return d.timestamp
    };
    f = function(a, b) {
        return b.timestamp >= a ? a : Infinity
    };
    var h = function(a, b, c) {
            return !a ? !1 : !(b.length === 0 || a.watermark < b[0].timestamp || a.watermark >= c)
        },
        i = function(a, b) {
            return a.timestamp > b ? b : Infinity
        };

    function j(a) {
        var b = a.last();
        for (var c = a.size - 1; c >= 0; c--) {
            var d = a.get(c);
            if (d.action_type === "ma-type:user-generated-message" || d.action_type === "ma-type:send-message") {
                b = d;
                break
            }
        }
        return b
    }

    function k(a) {
        var b = a.last();
        for (var c = a.size - 1; c >= 0; c--) {
            var d = a.get(c);
            if (d.action_type === "ma-type:user-generated-message" || d.action_type === "ma-type:log-message") {
                b = d;
                break
            }
        }
        return b != null && b.action_type === "ma-type:log-message" ? b : null
    }
    g.maybeFetchMessagePlatformXMD = a;
    g.shouldEnterEscalationFlow = b;
    g.getPersona = c;
    g.getNextTimestamp = e;
    g.getLastReadTimestamp = f;
    g.receiptInRange = h;
    g.getOptimizedDeliveryTimestamp = i
}), 98);
__d("MessagingPluginGuestUpgradeActions", ["LiveChatPluginConstants", "MPNConstants", "MPNIdentity", "MPNLocalState", "MPNMessageListDataHelper", "MPNStorage", "MercuryIDs"], (function(a, b, c, d, e, f, g) {
    "use strict";

    function a(a) {
        var b = c("MPNStorage").getFBStorageState(),
            e = d("MPNIdentity").MPNIdentity.currentUserID();
        if (b == null || e == null) return;
        var f = {
            path: d("MPNLocalState").MPNLocalStatePath.THREAD_VIEW,
            chatState: d("MPNLocalState").MPNChatState.LOGGED_IN_CHAT_STARTED,
            visibility: d("MPNConstants").MPNVisibility.NOT_HIDDEN
        };
        c("MPNStorage").setFBStorageState(babelHelpers["extends"]({}, b, {
            currentPath: f.path,
            chatState: f.chatState,
            userID: e
        }));
        c("MPNStorage").setThirdPartyStorageState(f);
        a.dispatchAction({
            type: "START_CHAT",
            optimisticStorageState: f
        })
    }

    function b(a) {
        var b = a.dispatchAction;
        a = a.state;
        a = a.requestID;
        c("MPNStorage").clearFBStorageState();
        c("MPNStorage").setFBStorageState({
            requestID: a,
            currentPath: d("MPNLocalState").MPNLocalStatePath.WELCOME_PAGE,
            userID: "0",
            chatState: d("MPNLocalState").MPNChatState.CHAT_NOT_STARTED,
            visibility: d("MPNConstants").MPNVisibility.NOT_HIDDEN,
            accessToken: null,
            expirationTimestamp: null
        });
        d("MPNIdentity").MPNIdentity.resetManagement();
        b({
            type: "END_CHAT"
        });
        b({
            type: "UPDATE_UPGRADE_UPSELL_PROMPT",
            upgradeUpsellPrompt: d("MPNConstants").MPNUpgradePrompt.NOT_SHOWN
        })
    }

    function e(a, b, e, f) {
        var g = f.context.state,
            h = g.showUpgradeUpsellPrompt,
            i = g.isInstantlyResponsive;
        g = g.hasAutomation;
        if (a !== d("LiveChatPluginConstants").GUEST_CHAT_MODE || !h || i) return d("MPNConstants").MPNUpgradePrompt.NOT_SHOWN;
        if (g) {
            if (d("MPNMessageListDataHelper").shouldEnterEscalationFlow(b)) {
                f.hasShownOneUpgradePrompt = !0;
                return d("MPNConstants").MPNUpgradePrompt.DONT_WAIT_FOR_REPLY_UPSELL
            }
        } else {
            var j = d("MPNIdentity").MPNIdentity.currentUserID();
            e === d("LiveChatPluginConstants").NEW_MESSAGE_UPDATE ? a = b.butLast() : a = b;
            f.hasGuestMessaged == null && (f.hasGuestMessaged = a.some(function(a) {
                return c("MercuryIDs").getUserIDFromParticipantID(a.author) == j
            }));
            if (!f.hasGuestMessaged && b.get(-1) != null && b.get(-1).author != null && c("MercuryIDs").getUserIDFromParticipantID(b.get(-1).author) === j) {
                f.hasGuestMessaged = !0;
                f.hasShownOneUpgradePrompt = !0;
                return d("MPNConstants").MPNUpgradePrompt.DONT_WAIT_FOR_REPLY_UPSELL
            }
        }
        return d("MPNConstants").MPNUpgradePrompt.NOT_SHOWN
    }
    g.setPluginStateToUpgradedThread = a;
    g.clearGuestStorage = b;
    g.shouldShowUpgradePrompt = e
}), 98);
__d("XMNLiveChatBlockMessageController", ["XController"], (function(a, b, c, d, e, f) {
    e.exports = b("XController").create("/plugins/live_chat/block/", {
        page_id: {
            type: "String",
            required: !0
        }
    })
}), null);
__d("XMNLiveChatMuteThreadController", ["XController"], (function(a, b, c, d, e, f) {
    e.exports = b("XController").create("/plugins/live_chat/mute/", {
        thread_fbid: {
            type: "String",
            required: !0
        },
        mute_until: {
            type: "Int",
            required: !0
        }
    })
}), null);
__d("XMNLiveChatUnblockMessageController", ["XController"], (function(a, b, c, d, e, f) {
    e.exports = b("XController").create("/plugins/live_chat/unblock/", {
        page_id: {
            type: "String",
            required: !0
        }
    })
}), null);
__d("XMNMessagingPluginGuestSessionInvalidationController", ["XController"], (function(a, b, c, d, e, f) {
    e.exports = b("XController").create("/plugins/live_chat/session_invalidation/", {
        page_id: {
            type: "FBID",
            required: !0
        },
        referer_uri: {
            type: "String",
            required: !0
        },
        access_token: {
            type: "String",
            required: !0
        },
        ref: {
            type: "String"
        }
    })
}), null);
__d("XMNPlatformCustomerChatPluginOpenThreadController", ["XController"], (function(a, b, c, d, e, f) {
    e.exports = b("XController").create("/messages/commerce/customer_chat_plugin/open_thread/", {
        page_id: {
            type: "FBID",
            required: !0
        },
        request_id: {
            type: "String",
            required: !0
        },
        referer_uri: {
            type: "String",
            required: !0
        },
        ref: {
            type: "String"
        },
        access_token: {
            type: "String"
        },
        locale: {
            type: "String"
        },
        is_from_re_engagement: {
            type: "Bool",
            defaultValue: !1
        }
    })
}), null);
__d("XMessagingPluginMarkReadController", ["XController"], (function(a, b, c, d, e, f) {
    e.exports = b("XController").create("/plugins/live_chat/mark_read/", {
        access_token: {
            type: "String"
        },
        ids: {
            type: "StringToBoolMap",
            required: !0
        },
        watermark_timestamp: {
            type: "Int"
        }
    })
}), null);
__d("MessagingPluginThreadActions", ["Arbiter", "AsyncRequest", "LiveChatPluginConstants", "LiveChatPluginLoggerUtil", "MPNConstants", "MPNIdentity", "MPNLocalState", "MPNNavigation", "MPNStorage", "MPNXDMessageManager", "MessagingPluginFRXBootloaderUtils", "MessagingPluginGuestUpgradeActions", "ODS", "Plugin", "PluginOptin", "URI", "XChatPluginNotificationMessagesManageController", "XMNLiveChatBlockMessageController", "XMNLiveChatMuteThreadController", "XMNLiveChatUnblockMessageController", "XMNMessagingPluginGuestSessionInvalidationController", "XMNPlatformCustomerChatPluginOpenThreadController", "XMessagingPluginMarkReadController"], (function(a, b, c, d, e, f, g) {
    "use strict";

    function a(a, b, e) {
        var f = a.dispatchAction,
            g = a.state,
            h = g.accessToken,
            i = g.refererUri,
            j = g.requestID,
            k = g.refParam;
        g = g.pageID;
        c("MPNStorage").clearFBStorageState();
        c("MPNXDMessageManager").clearInteraction();
        if (e && h != null) {
            h = c("XMNMessagingPluginGuestSessionInvalidationController").getURIBuilder().setString("access_token", h).setFBID("page_id", g).setString("referer_uri", i).setString("ref", k).getURI();
            new(c("AsyncRequest"))().setURI(h).send()
        }
        c("MPNStorage").setFBStorageState({
            requestID: j,
            currentPath: d("MPNLocalState").MPNLocalStatePath.WELCOME_PAGE,
            userID: "0",
            chatState: d("MPNLocalState").MPNChatState.CHAT_NOT_STARTED,
            visibility: d("MPNConstants").MPNVisibility.NOT_HIDDEN,
            accessToken: null,
            showUpgradePrompt: d("MPNConstants").MPNUpgradePrompt.NOT_SHOWN,
            expirationTimestamp: null
        });
        d("MPNIdentity").MPNIdentity.resetManagement();
        f({
            type: "END_CHAT"
        });
        f({
            type: "UPDATE_UPGRADE_UPSELL_PROMPT",
            upgradeUpsellPrompt: d("MPNConstants").MPNUpgradePrompt.NOT_SHOWN
        });
        d("MPNNavigation").minimizePlugin(a, !1);
        d("MPNNavigation").navigateToRoute(a, b, d("MPNLocalState").MPNLocalStatePath.WELCOME_PAGE, !1);
        d("LiveChatPluginLoggerUtil").logActionFromNewUI("in_thread_action", d("MPNIdentity").MPNIdentity.currentUserID(), g, e ? "guest_chat_tab" : "logged_in_chat_tab", {
            button_name: "end_chat_confirm"
        })
    }

    function b(a, b, e, f) {
        var g = a.state,
            h = a.dispatchAction,
            i = g.pageID,
            k = g.locale,
            l = g.requestID,
            m = c("MPNStorage").getFBStorageState(),
            n = {
                path: d("MPNLocalState").MPNLocalStatePath.THREAD_VIEW,
                chatState: d("MPNLocalState").MPNChatState.GUEST_CHAT_STARTED,
                visibility: d("MPNConstants").MPNVisibility.NOT_HIDDEN,
                showUpgradePrompt: d("MPNConstants").MPNUpgradePrompt.NOT_SHOWN,
                shouldShowLoginPage: !1
            };
        if (m != null) {
            var o = Date.now() + d("LiveChatPluginConstants").GUEST_SESSION_STORAGE_VALIDITY_MS;
            c("MPNStorage").setFBStorageState(babelHelpers["extends"]({}, m, {
                currentPath: n.path,
                chatState: n.chatState,
                userID: e,
                accessToken: b,
                expirationTimestamp: o,
                showUpgradePrompt: d("MPNConstants").MPNUpgradePrompt.NOT_SHOWN,
                rdr: null
            }));
            c("MPNStorage").setThirdPartyStorageState(n)
        } else c("MPNStorage").clearThirdPartyStorageState(), d("LiveChatPluginLoggerUtil").logActionFromNewUI("guest_third_party_access_denied", null, i, "welcome_page_with_guest_option");
        d("MPNIdentity").MPNIdentity.changeIdentityToGuest(e, b);
        h({
            type: "START_CHAT",
            optimisticStorageState: n,
            accessToken: b,
            guestID: e
        });
        j(f, a);
        m = c("XMNPlatformCustomerChatPluginOpenThreadController").getURIBuilder().setFBID("page_id", i).setString("ref", g.refParam).setString("referer_uri", g.refererUri).setString("request_id", l).setString("access_token", b).setString("locale", k).setBool("is_from_re_engagement", !1).getRequest_LEGACY_UNTYPED(new(c("AsyncRequest"))());
        m.setAllowCrossPageTransition(!0).setMethod("POST").send()
    }

    function e(a, b) {
        var d = a.state,
            e = d.pageID,
            f = d.requestID,
            g = d.refParam,
            h = d.refererUri;
        d = d.locale;
        e = c("XMNPlatformCustomerChatPluginOpenThreadController").getURIBuilder().setFBID("page_id", e).setString("ref", g).setString("referer_uri", h).setString("request_id", f).setString("locale", d).setBool("is_from_re_engagement", b).getRequest_LEGACY_UNTYPED(new(c("AsyncRequest"))());
        e.setAllowCrossPageTransition(!0).setMethod("POST").send();
        w(a)
    }

    function f(a, b) {
        var d = a.state,
            e = d.pageID;
        d = d.requestID;
        new(c("PluginOptin"))("customer_chat").addLoginParams({
            logged_in: !0,
            page_id: e,
            request_id: d,
            switch_user: !1
        }).start();
        c("Arbiter").subscribeOnce(c("Plugin").CONNECT, function() {
            w(a), b != null && b()
        })
    }

    function h() {
        d("MPNIdentity").MPNIdentity.hasStorageAccess(function(a) {
            var b = c("MPNStorage").getFBStorageState();
            a && b != null && c("MPNStorage").setFBStorageState(babelHelpers["extends"]({}, b, {
                chatState: d("MPNLocalState").MPNChatState.LOGGED_IN_CHAT_STARTED,
                rdr: d("MPNConstants").MPNRedirect.RE_ENGAGEMENT_LOG_IN
            }))
        }), c("MPNXDMessageManager").updateIsReEngagementOptIn(!0)
    }

    function i(a) {
        var b = d("MPNIdentity").MPNIdentity.cookieUserUncached() !== "0";
        b && d("MPNIdentity").MPNIdentity.subscribeLoggedInUserChanges(function(a, b) {
            if (b === "0") {
                a = c("MPNStorage").getFBStorageState();
                a != null && c("MPNStorage").setFBStorageState(babelHelpers["extends"]({}, a, {
                    rdr: d("MPNConstants").MPNRedirect.RE_ENGAGEMENT_SWITCH_ACCOUNT
                }));
                c("MPNXDMessageManager").reloadPlugin()
            }
        }, d("LiveChatPluginConstants").LOGIN_CHECK_INTERVAL);
        v(a, b);
        c("Arbiter").subscribe(c("Plugin").CONNECT, function() {
            h(), d("MPNNavigation").dismissReEngagementDialog(a), c("MPNXDMessageManager").reloadPlugin(!0)
        })
    }

    function j(a, b) {
        var c = b.state;
        b = b.dispatchAction;
        c = c.showUpgradeUpsellPrompt;
        a === !0 && d("ODS").bumpEntityKey(4205, "chat_plugin", "chat_plugin.epd.guest_upgrade_entry_point_blocked_eu_guest");
        b({
            type: "UPDATE_IS_LIGHTSWITCH_ENABLED_FOR_GUEST",
            isLightswitchEnabledForGuest: a,
            showUpgradeUpsellPrompt: c
        })
    }

    function k(a) {
        a = a.state;
        var b = a.accessToken;
        a = a.pageID;
        a = c("XMessagingPluginMarkReadController").getURIBuilder().setString("access_token", b).setStringToBoolMap("ids", (b = {}, b[a] = !0, b)).setInt("watermark_timestamp", Date.now()).getURI();
        new(c("AsyncRequest"))().setURI(a).send()
    }

    function l(a, b) {
        d("MessagingPluginFRXBootloaderUtils").bootloadOpenFRXDialog(a, b), d("LiveChatPluginLoggerUtil").logActionFromNewUI("in_thread_action", d("MPNIdentity").MPNIdentity.currentUserID(), a, "guest_chat_tab", {
            button_name: "frx_entry_point"
        })
    }

    function m(a, b) {
        var e = b ? 0 : -1;
        e = c("XMNLiveChatMuteThreadController").getURIBuilder().setString("thread_fbid", a).setInt("mute_until", e).getURI();
        new(c("AsyncRequest"))().setURI(e).setAllowCrossPageTransition(!0).setHandler(function() {
            d("LiveChatPluginLoggerUtil").logActionFromNewUI("in_thread_action", d("MPNIdentity").MPNIdentity.currentUserID(), a, "logged_in_chat_tab", {
                action_type: b ? "customer_chat_mute_conversation_clicked" : "customer_chat_unmute_conversation_clicked"
            })
        }).send()
    }

    function n(a) {
        var b = a.state;
        a = a.dispatchAction;
        var e = b.isPageBlocked;
        b = b.pageID;
        if (e == null) return;
        var f = e ? c("XMNLiveChatUnblockMessageController").getURIBuilder().setString("page_id", b).getURI() : c("XMNLiveChatBlockMessageController").getURIBuilder().setString("page_id", b).getURI();
        a({
            type: "UPDATE_BLOCK_STATUS",
            isPageBlocked: !e
        });
        new(c("AsyncRequest"))().setURI(f).setAllowCrossPageTransition(!0).send();
        d("LiveChatPluginLoggerUtil").logActionFromNewUI("in_thread_action", d("MPNIdentity").MPNIdentity.currentUserID(), b, "logged_in_chat_tab", {
            action_type: e ? "customer_chat_unblock_message_clicked" : "customer_chat_block_message_clicked"
        })
    }

    function o(a) {
        var b = a.state,
            c = b.pageID;
        b = b.hasGuestMode;
        d("LiveChatPluginLoggerUtil").logActionFromNewUI("tab_click", d("MPNIdentity").MPNIdentity.currentUserID(), c, b ? "welcome_page_with_guest_option" : "welcome_page", {
            button_name: "not_you_switch_account"
        });
        u(a)
    }

    function p(a) {
        var b = /Android/i.test(navigator.userAgent);
        b ? c("URI").goURIOnWindow(a) : c("URI").goURIOnWindow(a, window.open("", "_parent"), !0)
    }

    function q(a, b, e) {
        var f = a.state,
            g = f.pageID,
            h = f.requestID,
            i = f.accessToken,
            j = f.refererUri,
            k = f.initialRequestUri,
            l = f.guestID;
        f = f.cookieAccessDenied;
        var m = d("MPNIdentity").MPNIdentity.cookieUserCached() !== "0",
            n = null;
        m ? (new(c("PluginOptin"))("customer_chat").addLoginParams({
            logged_in: !0,
            page_id: g,
            request_id: h,
            switch_user: !1,
            referer_uri: j,
            guest_access_tkn: i,
            initial_request_uri: k && k.toString(),
            chat_plugin_upgrade: !0,
            guest_id: l,
            prompt_type: e
        }).start(), n = c("Arbiter").subscribe(d("LiveChatPluginConstants").GUEST_UPGRADE_SUCCESS, function() {
            d("MessagingPluginGuestUpgradeActions").clearGuestStorage(a), d("MessagingPluginGuestUpgradeActions").setPluginStateToUpgradedThread(a)
        }), d("MPNIdentity").MPNIdentity.subscribeLoggedInUserChanges(function(a, b) {
            if (b === "0") {
                a = c("MPNStorage").getFBStorageState();
                a != null && c("MPNStorage").setFBStorageState(babelHelpers["extends"]({}, a, {
                    rdr: d("MPNConstants").MPNRedirect.GUEST_UPGRADE_SWITCH_ACCOUNT
                }));
                c("MPNXDMessageManager").reloadPlugin()
            }
        }, 250)) : (f ? n = c("Arbiter").subscribeOnce(d("LiveChatPluginConstants").GUEST_UPGRADE_SUCCESS_INCOGNITO, function() {
            d("MessagingPluginGuestUpgradeActions").clearGuestStorage(a), d("MPNNavigation").navigateToRoute(a, b, d("MPNLocalState").MPNLocalStatePath.WELCOME_PAGE)
        }) : n = c("Arbiter").subscribeOnce(d("LiveChatPluginConstants").GUEST_UPGRADE_SUCCESS, function() {
            var a = c("MPNStorage").getFBStorageState();
            a != null && c("MPNStorage").setFBStorageState(babelHelpers["extends"]({}, a, {
                rdr: d("MPNConstants").MPNRedirect.GUEST_UPGRADE
            }));
            c("MPNXDMessageManager").reloadPlugin()
        }), d("MPNIdentity").MPNIdentity.subscribeLoggedInUserChanges(function(a, b) {}, 1e3), t(a, String(e)));
        return n
    }

    function r(a, b, e) {
        var f = a.state,
            g = f.pageID,
            h = f.guestID,
            i = f.requestID,
            j = f.accessToken;
        f = f.refererUri;
        var k = null,
            l = d("MPNIdentity").MPNIdentity.cookieUserCached() !== "0";
        l ? (new(c("PluginOptin"))("customer_chat").addLoginParams({
            logged_in: !0,
            page_id: g,
            request_id: i,
            switch_user: !1,
            chat_plugin_upgrade: !0,
            guest_access_tkn: j,
            referer_uri: f,
            guest_id: h,
            prompt_type: e
        }).start(), k = c("Arbiter").subscribe(d("LiveChatPluginConstants").GUEST_UPGRADE_SUCCESS, function() {
            d("MessagingPluginGuestUpgradeActions").clearGuestStorage(a), d("MPNNavigation").minimizePlugin(a, !1), d("MPNNavigation").navigateToRoute(a, b, d("MPNLocalState").MPNLocalStatePath.WELCOME_PAGE)
        }), d("MPNIdentity").MPNIdentity.subscribeLoggedInUserChanges(function(a, b) {
            if (b === "0") {
                a = c("MPNStorage").getFBStorageState();
                a != null && c("MPNStorage").setFBStorageState(babelHelpers["extends"]({}, a, {
                    rdr: d("MPNConstants").MPNRedirect.GUEST_UPGRADE_SWITCH_ACCOUNT
                }));
                c("MPNXDMessageManager").reloadPlugin()
            }
        }, 250)) : (c("MPNStorage").clearRedirectCommand(), k = c("Arbiter").subscribeOnce(d("LiveChatPluginConstants").GUEST_UPGRADE_SUCCESS, function() {
            d("MessagingPluginGuestUpgradeActions").clearGuestStorage(a), d("MPNNavigation").minimizePlugin(a, !1), d("MPNNavigation").navigateToRoute(a, b, d("MPNLocalState").MPNLocalStatePath.WELCOME_PAGE)
        }), t(a, String(e)));
        return k
    }

    function s(a) {
        a = a.state;
        var b = a.refererUri,
            d = a.pageID,
            e = a.initialRequestUri,
            f = a.requestID,
            g = a.accessToken,
            h = a.cookieAccessDenied;
        a = a.guestID;
        new(c("PluginOptin"))("customer_chat").addLoginParams({
            logged_in: !1,
            page_id: d,
            switch_user: !1,
            request_id: f,
            chat_plugin_upgrade: !1,
            guest_access_token: g,
            cookie_access_denied: h,
            referer_uri: b,
            guest_id: a,
            prompt_type: prompt
        }).addReturnParams((d = e == null ? void 0 : e.getQueryData()) != null ? d : {}).addReturnParams({
            customer_chat_origin_uri: b,
            referer_uri: b
        }).start()
    }

    function t(a, b) {
        a = a.state;
        var d = a.refererUri,
            e = a.pageID,
            f = a.initialRequestUri,
            g = a.requestID,
            h = a.accessToken,
            i = a.cookieAccessDenied;
        a = a.guestID;
        new(c("PluginOptin"))("customer_chat").addLoginParams({
            logged_in: !1,
            page_id: e,
            switch_user: !1,
            request_id: g,
            chat_plugin_upgrade: !0,
            guest_access_token: h,
            cookie_access_denied: i,
            referer_uri: d,
            guest_id: a,
            prompt_type: b
        }).addReturnParams((e = f == null ? void 0 : f.getQueryData()) != null ? e : {}).addReturnParams({
            customer_chat_origin_uri: d,
            referer_uri: d
        }).start()
    }

    function u(a) {
        a = a.state;
        var b = a.refererUri,
            d = a.pageID,
            e = a.initialRequestUri,
            f = a.requestID,
            g = a.accessToken,
            h = a.cookieAccessDenied;
        a = a.guestID;
        new(c("PluginOptin"))("customer_chat").addLoginParams({
            logged_in: !0,
            page_id: d,
            switch_user: !0,
            request_id: f,
            chat_plugin_upgrade: !1,
            guest_access_token: g,
            cookie_access_denied: h,
            referer_uri: b,
            guest_id: a,
            prompt_type: prompt
        }).addReturnParams((d = e == null ? void 0 : e.getQueryData()) != null ? d : {}).addReturnParams({
            customer_chat_origin_uri: b,
            referer_uri: b
        }).start()
    }

    function v(a, b) {
        a = a.state;
        var d = a.refererUri,
            e = a.pageID,
            f = a.initialRequestUri,
            g = a.requestID,
            h = a.accessToken;
        a = a.guestID;
        new(c("PluginOptin"))("customer_chat").addLoginParams({
            logged_in: b,
            page_id: e,
            request_id: g,
            switch_user: !1,
            referer_uri: d,
            guest_access_tkn: h,
            initial_request_uri: f && f.toString(),
            chat_plugin_upgrade: !1,
            guest_id: a,
            prompt_type: prompt,
            re_engagement_opt_in: !0
        }).start()
    }

    function w(a) {
        var b = c("MPNStorage").getFBStorageState(),
            e = d("MPNIdentity").MPNIdentity.currentUserID();
        if (b == null || e == null) {
            d("LiveChatPluginLoggerUtil").logActionFromNewUI("tab_click", e, a.state.pageID, "welcome_page", {
                button_name: "continue_as",
                exception_type: "customer_chat_state_set_to_thread_failed"
            });
            return
        }
        var f = {
            path: d("MPNLocalState").MPNLocalStatePath.THREAD_VIEW,
            chatState: d("MPNLocalState").MPNChatState.LOGGED_IN_CHAT_STARTED,
            visibility: d("MPNConstants").MPNVisibility.NOT_HIDDEN,
            shouldShowLoginPage: !1
        };
        c("MPNStorage").setFBStorageState(babelHelpers["extends"]({}, b, {
            currentPath: f.path,
            chatState: f.chatState,
            userID: e,
            rdr: null
        }));
        c("MPNStorage").setThirdPartyStorageState(f);
        a.dispatchAction({
            type: "START_CHAT",
            optimisticStorageState: f
        })
    }

    function x(a, b) {
        a = c("XChatPluginNotificationMessagesManageController").getURIBuilder().setString("token_ent_id", a).setInt("user_action", b).getURI();
        new(c("AsyncRequest"))().setURI(a).send()
    }
    g.endChat = a;
    g.startChatAsGuest = b;
    g.openThreadWithCurrentFBUser = e;
    g.openThreadWithInterstitial = f;
    g.reEngagementOptInStateUpdate = h;
    g.reEngagementOptIn = i;
    g.markThreadAsRead = k;
    g.openFRXPrompt = l;
    g.muteOrUnmutePage = m;
    g.blockOrUnblockPage = n;
    g.switchAccount = o;
    g.appSwitch = p;
    g.launchUpgradeFlowDesktop = q;
    g.launchUpgradeFlowMobile = r;
    g.presentPluginOptIn = s;
    g.presentPluginOptInAccountUpgrade = t;
    g.presentPluginOptInAccountSwitch = u;
    g.presentPluginOptInReEngagement = v;
    g.setPluginStateToThread = w;
    g.handleReEngagementNotificationMessagesUserActions = x
}), 98);
__d("MPNSharedGuestUpgradePromptV2.react", ["cx", "fbt", "Arbiter", "ChatPluginMessengerCrossButton.react", "ChatPluginTestId", "CurrentUser", "LiveChatPluginLoggerUtil", "LiveChatPluginPromptButton.react", "MPNConstants", "MPNGuestUpgradeFBTStrings", "MPNStorage", "MessagingPluginContext", "MessagingPluginThreadActions", "react"], (function(a, b, c, d, e, f, g, h, i) {
    "use strict";
    var j = d("react");
    a = function(a) {
        babelHelpers.inheritsLoose(b, a);

        function b() {
            var b, e;
            for (var f = arguments.length, g = new Array(f), h = 0; h < f; h++) g[h] = arguments[h];
            return (b = e = a.call.apply(a, [this].concat(g)) || this, e.$1 = null, e.$2 = function() {
                var a = e.context,
                    b = a.dispatchAction;
                a = a.state;
                var f = a.guestID,
                    g = a.pageID;
                a = a.hasShownGuestUpgradePopover;
                c("MPNStorage").setShowUpgradePrompt(d("MPNConstants").MPNUpgradePrompt.NOT_SHOWN);
                b({
                    type: "UPDATE_UPGRADE_UPSELL_PROMPT",
                    upgradeUpsellPrompt: d("MPNConstants").MPNUpgradePrompt.NOT_SHOWN
                });
                a !== !0 && b({
                    type: "SHOW_GUEST_UPGRADE_POPOVER",
                    showGuestUpgradePopover: !0,
                    hasShownGuestUpgradePopover: !0
                });
                d("LiveChatPluginLoggerUtil").logActionFromNewUI("tab_click", f, g, "upgrade_prompt", {
                    button_name: "upgrade_prompt_not_now",
                    prompt_type: e.props.prompt
                })
            }, b) || babelHelpers.assertThisInitialized(e)
        }
        var e = b.prototype;
        e.componentWillUnmount = function() {
            this.$1 && c("Arbiter").unsubscribe(this.$1)
        };
        e.componentDidMount = function() {
            var a = this.context.state,
                b = a.pageID;
            a = a.guestID;
            d("LiveChatPluginLoggerUtil").logImpressionUsingFalco_UnsafeFor3PD(b, "upgrade_prompt", null, null, null, null, a, null, this.props.prompt)
        };
        e.render = function() {
            var a = this,
                b = this.props.prompt,
                e = this.context.state.windowSize,
                f = d("MPNGuestUpgradeFBTStrings").getPromptTitle(b),
                g = d("MPNGuestUpgradeFBTStrings").getPromptSubtitle(b, this.context);
            e = e === "compact";
            return j.jsxs("div", {
                "data-testid": void 0,
                className: "_9u1v",
                children: [j.jsxs("div", {
                    className: "_a2jg",
                    children: [j.jsxs("div", {
                        className: "_a2go",
                        children: [j.jsx("div", {
                            className: "_a2j2",
                            children: f
                        }), j.jsx("div", {
                            className: "_a2j3",
                            children: g
                        })]
                    }), !e && j.jsx(c("ChatPluginMessengerCrossButton.react"), {
                        onClose: this.$2
                    })]
                }), j.jsxs("div", {
                    "data-testid": void 0,
                    className: "promptFooterContainer",
                    children: [j.jsx("div", {
                        className: "continueButton footerButton",
                        children: j.jsx(c("LiveChatPluginPromptButton.react"), {
                            color: this.props.color,
                            hasIcon: !0,
                            onClick: function() {
                                a.props.isMobile === !0 ? a.$1 = d("MessagingPluginThreadActions").launchUpgradeFlowMobile(a.context, a.props.history, b) : a.$1 = d("MessagingPluginThreadActions").launchUpgradeFlowDesktop(a.context, a.props.history, b), a.$3()
                            },
                            text: d("CurrentUser").getShortName() != null ? i._( /*FBT_CALL*/ "\u05dc\u05d4\u05de\u05e9\u05d9\u05da \u05d1\u05ea\u05d5\u05e8 {user short name}" /*FBT_CALL*/ , [i._param("user short name", d("CurrentUser").getShortName())]) : i._( /*FBT_CALL*/ "\u05d4\u05ea\u05d7\u05d1\u05e8\u05d5\u05ea \u05dc-Messenger" /*FBT_CALL*/ )
                        })
                    }), j.jsx("div", {
                        className: "dismissButton footerButton",
                        children: j.jsx(c("LiveChatPluginPromptButton.react"), {
                            hasIcon: !1,
                            onClick: function() {
                                c("MPNStorage").setShowUpgradePrompt(d("MPNConstants").MPNUpgradePrompt.NOT_SHOWN), a.$2()
                            },
                            text: i._( /*FBT_CALL*/ "\u05dc\u05d0 \u05e2\u05db\u05e9\u05d9\u05d5" /*FBT_CALL*/ ),
                            dataTestID: d("ChatPluginTestId").CHAT_PLUGIN_GUEST_UPGRADE_NOT_NOW_BUTTON
                        })
                    })]
                })]
            })
        };
        e.$3 = function() {
            var a = this.context.state,
                b = a.guestID;
            a = a.pageID;
            d("LiveChatPluginLoggerUtil").logActionFromNewUI("tab_click", b, a, "upgrade_prompt", {
                button_name: "upgrade_prompt_continue",
                prompt_type: this.props.prompt
            })
        };
        return b
    }(j.Component);
    a.contextType = c("MessagingPluginContext");
    g["default"] = a
}), 98);
__d("ChatPluginEntryPointIcon.react", ["react"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h = d("react");

    function a(a) {
        a = a.entryPointIcon;
        return a !== "" ? h.jsx("div", {
            dangerouslySetInnerHTML: {
                __html: a
            },
            style: {
                display: "flex",
                alignItems: "center"
            }
        }) : null
    }
    a.displayName = a.name + " [from " + f.id + "]";
    g["default"] = a
}), 98);
__d("ChatPluginEntryPointLabelEnum", ["$InternalEnum"], (function(a, b, c, d, e, f) {
    a = b("$InternalEnum")({
        NONE: "none",
        CHAT: "chat",
        HELP: "help",
        ASK_US: "ask_us"
    });
    c = a;
    f["default"] = c
}), 66);
__d("LiveChatPluginFbts", ["fbt", "DateStrings", "MPNConstants", "MercuryMessageDeliveryState"], (function(a, b, c, d, e, f, g, h) {
    "use strict";
    var i = h._( /*FBT_CALL*/ "\u05e9\u05dc\u05d5\u05dd! \u05d0\u05d9\u05da \u05d0\u05e4\u05e9\u05e8 \u05dc\u05e2\u05d6\u05d5\u05e8 \u05dc\u05da?" /*FBT_CALL*/ ),
        j = h._( /*FBT_CALL*/ "\u05d4\u05d9! \u05d0\u05e0\u05d7\u05e0\u05d5 \u05db\u05d0\u05df \u05db\u05d3\u05d9 \u05dc\u05e2\u05e0\u05d5\u05ea \u05e2\u05dc \u05e9\u05d0\u05dc\u05d5\u05ea \u05e9\u05d9\u05e9 \u05dc\u05da." /*FBT_CALL*/ ),
        k = h._( /*FBT_CALL*/ "\u05d0\u05e4\u05e9\u05e8 \u05dc\u05e9\u05dc\u05d5\u05d7 \u05dc\u05e0\u05d5 \u05d4\u05d5\u05d3\u05e2\u05d4, \u05d5\u05e0\u05e2\u05e0\u05d4 \u05db\u05e9\u05e0\u05d4\u05d9\u05d4 \u05d1\u05de\u05e6\u05d1 \u05de\u05e7\u05d5\u05d5\u05df." /*FBT_CALL*/ ),
        l = h._( /*FBT_CALL*/ "\u05e4\u05d2 \u05ea\u05d5\u05e7\u05e3 \u05d4\u05d0\u05e4\u05e9\u05e8\u05d5\u05ea \u05dc\u05d3\u05e8\u05d2 \u05d0\u05ea \u05d4\u05e2\u05e1\u05e7 \u05d4\u05d6\u05d4." /*FBT_CALL*/ ),
        m = h._( /*FBT_CALL*/ "\u05d4\u05ea\u05d7\u05dc\u05ea \u05e6'\u05d0\u05d8" /*FBT_CALL*/ ),
        n = h._( /*FBT_CALL*/ "\u05dc\u05e6'\u05d0\u05d8 \u05e2\u05db\u05e9\u05d9\u05d5" /*FBT_CALL*/ ),
        o = h._( /*FBT_CALL*/ "\u05e9\u05dc\u05d9\u05d7\u05ea \u05d4\u05d5\u05d3\u05e2\u05d4" /*FBT_CALL*/ ),
        p = h._( /*FBT_CALL*/ "\u05d4\u05ea\u05d7\u05d1\u05e8\u05d5\u05ea" /*FBT_CALL*/ ),
        q = h._( /*FBT_CALL*/ "\u05e9\u05d9\u05de\u05d5\u05e9 \u05d1-Messenger" /*FBT_CALL*/ ),
        r = h._( /*FBT_CALL*/ "Opt-in" /*FBT_CALL*/ ),
        s = h._( /*FBT_CALL*/ "Maybe later" /*FBT_CALL*/ ),
        t = h._( /*FBT_CALL*/ "\u05de\u05d5\u05e4\u05e2\u05dc \u05e2\u05dc \u05d9\u05d3\u05d9 Messenger" /*FBT_CALL*/ ),
        u = h._( /*FBT_CALL*/ "Manage" /*FBT_CALL*/ ),
        v = h._( /*FBT_CALL*/ "Stop These Messages" /*FBT_CALL*/ ),
        w = h._( /*FBT_CALL*/ "Cancel" /*FBT_CALL*/ ),
        x = h._( /*FBT_CALL*/ "Opt in again" /*FBT_CALL*/ );

    function a(a) {
        switch (a) {
            case c("MercuryMessageDeliveryState").SENDING:
                return h._( /*FBT_CALL*/ "\u05e9\u05d5\u05dc\u05d7" /*FBT_CALL*/ );
            case c("MercuryMessageDeliveryState").SENT:
                return h._( /*FBT_CALL*/ "\u05e0\u05e9\u05dc\u05d7\u05d4" /*FBT_CALL*/ );
            case c("MercuryMessageDeliveryState").DELIVERED:
                return h._( /*FBT_CALL*/ "\u05e0\u05de\u05e1\u05e8\u05d5" /*FBT_CALL*/ );
            case c("MercuryMessageDeliveryState").ERROR:
                return h._( /*FBT_CALL*/ "\u05e9\u05d2\u05d9\u05d0\u05d4" /*FBT_CALL*/ );
            default:
                return null
        }
    }

    function b(a) {
        return h._( /*FBT_CALL*/ "\u05e7\u05d9\u05d1\u05dc\u05ea \u05d4\u05d5\u05d3\u05e2\u05d4 \u05de{pageName}" /*FBT_CALL*/ , [h._param("pageName", a)])
    }

    function e(a) {
        switch (a) {
            case "chat":
                return h._( /*FBT_CALL*/ "\u05e6'\u05d0\u05d8" /*FBT_CALL*/ );
            case "help":
                return h._( /*FBT_CALL*/ "\u05e2\u05d6\u05e8\u05d4" /*FBT_CALL*/ );
            case "ask_us":
                return h._( /*FBT_CALL*/ "\u05d0\u05e0\u05d7\u05e0\u05d5 \u05db\u05d0\u05df \u05db\u05d3\u05d9 \u05dc\u05e2\u05e0\u05d5\u05ea \u05dc\u05da" /*FBT_CALL*/ );
            case "none":
                return ""
        }
    }

    function f(a, b) {
        switch (b) {
            case d("MPNConstants").MPNCufeeScoreType.CSAT:
                return h._( /*FBT_CALL*/ {
                    "*": "\u05d0\u05d9\u05da \u05d4\u05d9\u05d9\u05ea \u05de\u05d3\u05e8\u05d2\/\u05ea \u05d0\u05ea \u05d4\u05d7\u05d5\u05d5\u05d9\u05d4 \u05e9\u05dc\u05da \u05d1\u05d3\u05e3 {page-name}?",
                    "1": "\u05d0\u05d9\u05da \u05d4\u05d9\u05d9\u05ea \u05de\u05d3\u05e8\u05d2 \u05d0\u05ea \u05d4\u05d7\u05d5\u05d5\u05d9\u05d4 \u05e9\u05dc\u05da \u05d1\u05d3\u05e3 {page-name}?",
                    "2": "\u05d0\u05d9\u05da \u05d4\u05d9\u05d9\u05ea \u05de\u05d3\u05e8\u05d2\u05ea \u05d0\u05ea \u05d4\u05d7\u05d5\u05d5\u05d9\u05d4 \u05e9\u05dc\u05da \u05d1\u05d3\u05e3 {page-name}?",
                    "__vcg": 1
                } /*FBT_CALL*/ , [h._param("page-name", a)]);
            case d("MPNConstants").MPNCufeeScoreType.NPS:
                return h._( /*FBT_CALL*/ {
                    "*": "\u05e2\u05d3 \u05db\u05de\u05d4 \u05e1\u05d1\u05d9\u05e8  \u05e9\u05ea\u05de\u05dc\u05d9\u05e6\/\u05d9 \u05e2\u05dc \u05d4\u05d3\u05e3 {page-name} \u05dc\u05d7\u05d1\u05e8\/\u05d4?",
                    "1": "\u05e2\u05d3 \u05db\u05de\u05d4 \u05e1\u05d1\u05d9\u05e8 \u05e9\u05ea\u05de\u05dc\u05d9\u05e5 \u05e2\u05dc \u05d4\u05d3\u05e3 {page-name} \u05dc\u05d7\u05d1\u05e8\/\u05d4?",
                    "2": "\u05e2\u05d3 \u05db\u05de\u05d4 \u05e1\u05d1\u05d9\u05e8 \u05e9\u05ea\u05de\u05dc\u05d9\u05e6\u05d9 \u05e2\u05dc \u05d4\u05d3\u05e3 {page-name} \u05dc\u05d7\u05d1\u05e8\/\u05d4?",
                    "__vcg": 1
                } /*FBT_CALL*/ , [h._param("page-name", a)]);
            case d("MPNConstants").MPNCufeeScoreType.CES:
                return h._( /*FBT_CALL*/ "\u05d1\u05d0\u05d5\u05e4\u05df \u05db\u05dc\u05dc\u05d9, \u05e2\u05d3 \u05db\u05de\u05d4 \u05e7\u05dc \u05d4\u05d9\u05d4 \u05dc\u05e4\u05ea\u05d5\u05e8 \u05d0\u05ea \u05d4\u05d1\u05e2\u05d9\u05d4 \u05e9\u05dc\u05da \u05d4\u05d9\u05d5\u05dd?" /*FBT_CALL*/ );
            default:
                return null
        }
    }

    function y(a) {
        a = a.pageName;
        return h._( /*FBT_CALL*/ "\u05d4\u05ea\u05d2\u05d5\u05d1\u05d4 \u05e9\u05dc\u05da \u05dc\u05d0 \u05ea\u05d9\u05e9\u05dc\u05d7 \u05d1\u05e6'\u05d0\u05d8 \u05d6\u05d4 \u05d0\u05da \u05d4\u05d3\u05e3 {page-name} \u05d5\u05e4\u05d9\u05d9\u05e1\u05d1\u05d5\u05e7 \u05d9\u05d5\u05db\u05dc\u05d5 \u05dc\u05e6\u05e4\u05d5\u05ea \u05d1\u05d4." /*FBT_CALL*/ , [h._param("page-name", a)])
    }

    function z(a) {
        a = a.pageName;
        return h._( /*FBT_CALL*/ "\u05d4\u05e6\u05d2\u05ea \u05de\u05d3\u05d9\u05e0\u05d9\u05d5\u05ea \u05d4\u05e4\u05e8\u05d8\u05d9\u05d5\u05ea \u05e9\u05dc {page-name}." /*FBT_CALL*/ , [h._param("page-name", a)])
    }

    function A(a) {
        a = d("DateStrings").getWeekdayName(a);
        return h._( /*FBT_CALL*/ "\u05d7\u05d6\u05e8\u05d4 \u05dc\u05de\u05e6\u05d1 \u05de\u05e7\u05d5\u05d5\u05df {Day of the week}" /*FBT_CALL*/ , [h._param("Day of the week", a)])
    }
    g.DEFAULT_LOGGED_IN_GREETING_TEXT = i;
    g.DEFAULT_LOGGED_OUT_GREETING_TEXT = j;
    g.DEFAULT_AWAY_GREETING_TEXT = k;
    g.CUFEE_EXPIRED_FORM = l;
    g.START_CHAT_BUTTON_TEXT = m;
    g.CHAT_NOW_BUTTON_TEXT = n;
    g.SEND_A_MESSAGE = o;
    g.LOGIN_PAGE_TITLE = p;
    g.LOGIN_PAGE_USE_MESSENGER_BUTTON_TEXT = q;
    g.OPT_IN_BUTTON_TEXT = r;
    g.MAYBE_LATER_BUTTON_TEXT = s;
    g.MESSENGER_ATTRIBUTION = t;
    g.RE_ENGAGEMENT_MANAGE_BUTTON_TEXT = u;
    g.RE_ENGAGEMENT_STOP_MESSAGES_BUTTON_TEXT = v;
    g.RE_ENGAGEMENT_CANCEL_BUTTON_TEXT = w;
    g.RE_ENGAGEMENT_OPT_IN_AGAIN_BUTTON_TEXT = x;
    g.getDeliveryStateTitle = a;
    g.getTabTitle = b;
    g.getEntryPointLabelText = e;
    g.getDefaultCufeeTitle = f;
    g.CufeePrivacyStatement = y;
    g.CufeePrivacyLink = z;
    g.getPageReturnTimeText = A
}), 98);
__d("ChatPluginEntryPoint.react", ["ChatPluginEntryPointIcon.react", "ChatPluginEntryPointLabelEnum", "ChatPluginStyleUtils", "LiveChatPluginFbts", "MPNXDMessageManager", "react"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h = d("react");
    b = d("react");
    var i = b.useEffect,
        j = b.useRef,
        k = "\n  em {\n    color: white;\n    display: flex;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 17px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 22px;\n    user-select: none;\n    white-space: nowrap;\n  }\n";

    function a(a) {
        var b = a.entryPointIcon,
            e = a.entryPointLabel,
            f = a.entryPointSize,
            g = a.threadColor;
        a = a.alignment;
        e = (e = c("ChatPluginEntryPointLabelEnum").cast(e)) != null ? e : "none";
        var l = j(null);
        i(function() {
            var a;
            a = (a = l.current) == null ? void 0 : a.clientWidth;
            typeof a == "number" && c("MPNXDMessageManager").updateIconAppearance(a + 1)
        }, [l]);
        if (e === "none") return h.jsx("div", {
            "data-testid": void 0,
            children: h.jsx(c("ChatPluginEntryPointIcon.react"), {
                entryPointIcon: b
            })
        });
        var m = f === "compact" ? d("ChatPluginStyleUtils").LABELED_ENTRY_POINT_COMPACT_HEIGHT : d("ChatPluginStyleUtils").LABELED_ENTRY_POINT_STANDARD_HEIGHT,
            n = f === "compact" ? d("ChatPluginStyleUtils").LABELED_ENTRY_POINT_COMPACT_FONT_SIZE : d("ChatPluginStyleUtils").LABELED_ENTRY_POINT_STANDARD_FONT_SIZE,
            o = f === "compact" ? d("ChatPluginStyleUtils").LABELED_ENTRY_POINT_COMPACT_LINE_HEIGHT : d("ChatPluginStyleUtils").LABELED_ENTRY_POINT_STANDARD_LINE_HEIGHT,
            p = f === "compact" ? d("ChatPluginStyleUtils").LABELED_ENTRY_POINT_COMPACT_ICON_MARGIN_RIGHT : d("ChatPluginStyleUtils").LABELED_ENTRY_POINT_STANDARD_ICON_MARGIN_RIGHT;
        f = f === "compact" ? d("ChatPluginStyleUtils").LABELED_ENTRY_POINT_COMPACT_PADDING_HORIZONTAL : d("ChatPluginStyleUtils").LABELED_ENTRY_POINT_STANDARD_PADDING_HORIZONTAL;
        g = {
            backgroundColor: g,
            alignItems: "center",
            borderRadius: "60px",
            display: "flex",
            height: m + "px",
            padding: "0 " + f + "px",
            position: "absolute",
            width: "fit-content"
        };
        m = a === "right" ? babelHelpers["extends"]({}, g, {
            right: "0"
        }) : babelHelpers["extends"]({}, g, {
            left: "0"
        });
        return h.jsxs(h.Fragment, {
            children: [h.jsx("style", {
                children: k
            }), h.jsxs("div", {
                ref: l,
                style: m,
                "data-testid": void 0,
                children: [b !== "" && h.jsx("div", {
                    style: {
                        marginLeft: -2,
                        marginRight: p + "px"
                    },
                    children: h.jsx(c("ChatPluginEntryPointIcon.react"), {
                        entryPointIcon: b
                    })
                }), h.jsx("div", {
                    style: {
                        color: "white",
                        display: "flex",
                        fontFamily: '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif',
                        fontSize: n + "px",
                        fontStyle: "normal",
                        fontWeight: "600",
                        lineHeight: o + "px",
                        userSelect: "none",
                        whiteSpace: "nowrap"
                    },
                    children: d("LiveChatPluginFbts").getEntryPointLabelText(e)
                })]
            })]
        })
    }
    a.displayName = a.name + " [from " + f.id + "]";
    g["default"] = a
}), 98);
__d("LiveChatPluginErrorBoundary.react", ["ErrorBoundary.react", "LiveChatPluginLoggerUtil", "react"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h = d("react");
    a = function(a) {
        babelHelpers.inheritsLoose(b, a);

        function b() {
            return a.apply(this, arguments) || this
        }
        var e = b.prototype;
        e.onHandleError = function(a, b) {
            d("LiveChatPluginLoggerUtil").logImpressionExceptionsUsingXController_SafeFor3PD("customer_chat_plugin_load_failed", this.props.pageID, null, a.name, a.message, a.stack), this.props.onHandleError && this.props.onHandleError(a, b)
        };
        e.render = function() {
            return h.jsx(c("ErrorBoundary.react"), {
                onError: this.onHandleError.bind(this),
                children: this.props.children
            })
        };
        return b
    }(h.Component);
    g["default"] = a
}), 98);
__d("LiveChatPluginMessengerIconSVGWithColor.react", ["ChatPluginEntryPointSizeEnum", "ChatPluginStyleUtils", "react"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h = d("react");
    a = function(a) {
        babelHelpers.inheritsLoose(b, a);

        function b() {
            return a.apply(this, arguments) || this
        }
        var e = b.prototype;
        e.render = function() {
            var a = this.props.entryPointSize;
            a = a === c("ChatPluginEntryPointSizeEnum").COMPACT ? d("ChatPluginStyleUtils").ICON_ENTRY_POINT_COMPACT_HEIGHT : d("ChatPluginStyleUtils").ICON_ENTRY_POINT_STANDARD_HEIGHT;
            return h.jsx("svg", {
                width: a + "px",
                height: a + "px",
                viewBox: "0 0 60 60",
                cursor: "pointer",
                children: h.jsx("svg", {
                    x: "0",
                    y: "0",
                    width: "60px",
                    height: "60px",
                    children: h.jsx("g", {
                        stroke: "none",
                        strokeWidth: "1",
                        fill: "none",
                        fillRule: "evenodd",
                        children: h.jsxs("g", {
                            children: [h.jsx("circle", {
                                fill: this.props.threadColor,
                                cx: "30",
                                cy: "30",
                                r: "30"
                            }), h.jsx("svg", {
                                x: "10",
                                y: "10",
                                children: h.jsx("g", {
                                    transform: "translate(0.000000, -10.000000)",
                                    fill: "#FFFFFF",
                                    children: h.jsx("g", {
                                        id: "logo",
                                        transform: "translate(0.000000, 10.000000)",
                                        children: h.jsx("path", {
                                            d: "M20,0 C31.2666,0 40,8.2528 40,19.4 C40,30.5472 31.2666,38.8 20,38.8 C17.9763,38.8 16.0348,38.5327 14.2106,38.0311 C13.856,37.9335 13.4789,37.9612 13.1424,38.1098 L9.1727,39.8621 C8.1343,40.3205 6.9621,39.5819 6.9273,38.4474 L6.8184,34.8894 C6.805,34.4513 6.6078,34.0414 6.2811,33.7492 C2.3896,30.2691 0,25.2307 0,19.4 C0,8.2528 8.7334,0 20,0 Z M7.99009,25.07344 C7.42629,25.96794 8.52579,26.97594 9.36809,26.33674 L15.67879,21.54734 C16.10569,21.22334 16.69559,21.22164 17.12429,21.54314 L21.79709,25.04774 C23.19919,26.09944 25.20039,25.73014 26.13499,24.24744 L32.00999,14.92654 C32.57369,14.03204 31.47419,13.02404 30.63189,13.66324 L24.32119,18.45264 C23.89429,18.77664 23.30439,18.77834 22.87569,18.45674 L18.20299,14.95224 C16.80079,13.90064 14.79959,14.26984 13.86509,15.75264 L7.99009,25.07344 Z"
                                        })
                                    })
                                })
                            })]
                        })
                    })
                })
            })
        };
        return b
    }(h.Component);
    g["default"] = a
}), 98);
__d("LiveChatPluginSendButtonSVG.react", ["cx", "react"], (function(a, b, c, d, e, f, g, h) {
    "use strict";
    var i = d("react");
    a = function(a) {
        babelHelpers.inheritsLoose(b, a);

        function b() {
            return a.apply(this, arguments) || this
        }
        var c = b.prototype;
        c.render = function() {
            return i.jsx("div", {
                className: "_a3_y",
                children: i.jsx("svg", {
                    viewBox: "0 0 22 22",
                    children: i.jsx("g", {
                        stroke: "none",
                        strokeWidth: "1",
                        fill: "none",
                        fillRule: "evenodd",
                        children: i.jsx("g", {
                            transform: "translate(-5.000000, -5.000000)",
                            fill: this.props.threadColor,
                            children: i.jsx("g", {
                                children: i.jsx("g", {
                                    transform: "translate(5.000000, 5.000000)",
                                    children: i.jsx("path", {
                                        d: "M2.0300068,0.145970044 L20.9662955,9.37015518 C22.3445682,10.0420071 22.3445682,11.9582654 20.9662955,12.6296618 L2.0300068,21.853847 C1.09728834,22.3084288 0,21.6475087 0,20.6317597 L0.806953417,13.8945654 C0.882225434,13.2659853 1.39089595,12.7699536 2.03608467,12.6957083 L12.0229514,11.6795038 C12.8612292,11.5943266 12.8612292,10.4054904 12.0229514,10.3203132 L2.03608467,9.30410872 C1.39089595,9.23031889 0.882225434,8.7342872 0.806953417,8.10525162 L0,1.36805729 C0,0.352308292 1.09728834,-0.3081563 2.0300068,0.145970044"
                                    })
                                })
                            })
                        })
                    })
                })
            })
        };
        return b
    }(i.PureComponent);
    g["default"] = a
}), 98);
__d("MPNDialogMinusButtonSVG.react", ["react"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h = d("react");

    function a() {
        return h.jsxs("svg", {
            width: "38",
            height: "38",
            viewBox: "0 0 38 38",
            fill: "none",
            xmlns: "http://www.w3.org/2000/svg",
            children: [h.jsx("g", {
                filter: "url(#filter0_d)",
                children: h.jsx("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M19 32C26.732 32 33 25.732 33 18C33 10.268 26.732 4 19 4C11.268 4 5 10.268 5 18C5 25.732 11.268 32 19 32Z",
                    fill: "white"
                })
            }), h.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M24.5413 18.875H13.458C12.9747 18.875 12.583 18.4833 12.583 18C12.583 17.5167 12.9747 17.125 13.458 17.125H24.5413C25.0246 17.125 25.4163 17.5167 25.4163 18C25.4163 18.4833 25.0246 18.875 24.5413 18.875Z",
                fill: "black"
            }), h.jsx("defs", {
                children: h.jsxs("filter", {
                    id: "filter0_d",
                    x: "0",
                    y: "0",
                    width: "38",
                    height: "38",
                    filterUnits: "userSpaceOnUse",
                    colorInterpolationFilters: "sRGB",
                    children: [h.jsx("feFlood", {
                        floodOpacity: "0",
                        result: "BackgroundImageFix"
                    }), h.jsx("feColorMatrix", {
                        "in": "SourceAlpha",
                        type: "matrix",
                        values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
                    }), h.jsx("feOffset", {
                        dy: "1"
                    }), h.jsx("feGaussianBlur", {
                        stdDeviation: "2.5"
                    }), h.jsx("feColorMatrix", {
                        type: "matrix",
                        values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0"
                    }), h.jsx("feBlend", {
                        mode: "normal",
                        in2: "BackgroundImageFix",
                        result: "effect1_dropShadow"
                    }), h.jsx("feBlend", {
                        mode: "normal",
                        "in": "SourceGraphic",
                        in2: "effect1_dropShadow",
                        result: "shape"
                    })]
                })
            })]
        })
    }
    a.displayName = a.name + " [from " + f.id + "]";
    g["default"] = a
}), 98);
__d("ChatPluginMessengerAttribution.react", ["cx", "fbt", "ix", "Image.react", "react"], (function(a, b, c, d, e, f, g, h, i, j) {
    "use strict";
    var k = d("react");

    function a(a) {
        return a.shouldShowEntryPointCustomization ? k.jsxs("span", {
            className: "_9zb3",
            children: [k.jsx("span", {
                className: "_9zb4",
                children: k.jsx(c("Image.react"), {
                    src: j("1350887")
                })
            }), i._( /*FBT_CALL*/ "\u05de\u05d5\u05e4\u05e2\u05dc \u05e2\u05dc \u05d9\u05d3\u05d9 Messenger" /*FBT_CALL*/ )]
        }) : null
    }
    a.displayName = a.name + " [from " + f.id + "]";
    g["default"] = a
}), 98);
__d("EllipsisText.react", ["cx", "joinClasses", "react"], (function(a, b, c, d, e, f, g, h) {
    "use strict";
    var i = d("react");

    function a(a) {
        return i.jsx("span", {
            id: a.id,
            className: c("joinClasses")(a.className, "_6i6a"),
            children: a.children
        })
    }
    a.displayName = a.name + " [from " + f.id + "]";
    g["default"] = a
}), 98);
__d("ChatPluginReEngagementCollapsedDialog.react", ["cx", "ChatPluginSetupFlowE2ETestUtils", "ChatPluginSetupFlowUtil", "EllipsisText.react", "Image.react", "LineClamp.react", "LiveChatPluginConstants", "MPNDialogMinusButtonSVG.react", "MPNLocalState", "MPNNavigation", "MPNXDMessageManager", "MessagingPluginContext", "ShimButton.react", "react", "useResizeObserver"], (function(a, b, c, d, e, f, g, h) {
    "use strict";
    var i = d("react");
    b = d("react");
    var j = b.useContext,
        k = b.useEffect;

    function a(a) {
        var b = j(c("MessagingPluginContext")),
            e = b.state,
            f = e.alignment,
            g = e.bottomSpacing,
            h = e.sideSpacing,
            l = e.pageProfilePictureUri,
            m = e.pageName,
            n = e.threadCSSColor;
        e = e.windowSize;
        var o = e === "compact",
            p = function() {
                var a = o ? d("LiveChatPluginConstants").RE_ENGAGEMENT_COLLAPSED_DIALOG_HEIGHT_COMPACT : d("LiveChatPluginConstants").RE_ENGAGEMENT_COLLAPSED_DIALOG_HEIGHT,
                    b = o ? d("LiveChatPluginConstants").MAIN_IFRAME_PADDING_HEIGHT_WITH_COMPACT : d("LiveChatPluginConstants").MAIN_IFRAME_PADDING_HEIGHT;
                a = a + b;
                c("MPNXDMessageManager").resizeIframe(a)
            };
        e = c("useResizeObserver")(function(a, b) {
            p()
        });
        f = f === "left";
        var q = f ? "_a968" : "_a969";
        g = (g = g) != null ? g : 0;
        g = g + d("ChatPluginSetupFlowUtil").ENTRY_POINT_HEIGHT + d("ChatPluginSetupFlowUtil").SPACING_WITH_LABEL;
        h = (h = h) != null ? h : 0;
        h = f ? {
            left: h + "px"
        } : {
            right: h + "px"
        };
        g = a.isPreview && a.isMobile ? babelHelpers["extends"]({
            bottom: g,
            position: "absolute"
        }, h) : null;
        k(function() {
            c("MPNXDMessageManager").subscribeEvent("plugin_welcome_message_page", "message", "navigateToWelcomePage", function(c) {
                d("MPNNavigation").navigateToRoute(b, a.history, d("MPNLocalState").MPNLocalStatePath.WELCOME_PAGE)
            });
            return function() {
                c("MPNXDMessageManager").unsubscribeEvent("plugin_welcome_message_page", "message", "navigateToWelcomePage")
            }
        }, [b, a.history]);
        h = function() {
            a.minimize ? a.minimize() : (d("MPNNavigation").minimizePlugin(b, a.isMobile), d("MPNNavigation").navigateToRoute(b, a.history, d("MPNLocalState").MPNLocalStatePath.WELCOME_PAGE), d("MPNNavigation").dismissReEngagementDialog(b))
        };
        var r = function() {
            d("MPNNavigation").minimizeGreetingDialog(b), d("MPNNavigation").navigateToRoute(b, a.history, d("MPNLocalState").MPNLocalStatePath.REENGAGEMENT_EXPANDED_VIEW)
        };
        return i.jsxs("div", {
            style: g,
            ref: e,
            className: (a.isPreview ? "" : "_a9vy") + (!a.isPreview && f ? " _abip" : "") + (!a.isPreview && !f ? " _abiq" : ""),
            children: [i.jsxs("div", {
                "data-testid": void 0,
                className: "_a961",
                children: [i.jsx("div", {
                    children: i.jsxs("div", {
                        className: "_a962",
                        children: [i.jsx("div", {
                            children: i.jsx(c("Image.react"), {
                                className: "_a963",
                                src: l
                            })
                        }), i.jsx("div", {
                            className: "_a964",
                            children: i.jsx("span", {
                                children: m
                            })
                        })]
                    })
                }), i.jsx("div", {
                    className: "_a965",
                    children: i.jsx(c("LineClamp.react"), {
                        lines: 1,
                        children: "Can we stay in touch?"
                    })
                }), i.jsx("div", {
                    className: "_a966",
                    children: i.jsx(c("LineClamp.react"), {
                        lines: 3,
                        children: "We'd like to send you updates on deals and promos."
                    })
                }), i.jsx(c("ShimButton.react"), {
                    className: "_a967",
                    style: {
                        backgroundColor: n
                    },
                    "data-testid": void 0,
                    onClick: r,
                    children: i.jsx(c("EllipsisText.react"), {
                        className: "continueText _4mr9",
                        children: "See details"
                    })
                })]
            }), i.jsx("div", {
                className: q,
                children: i.jsx(c("ShimButton.react"), {
                    "data-testid": void 0,
                    onClick: h,
                    className: "_9pti _9l4n",
                    "aria-label": "Close",
                    children: i.jsx(c("MPNDialogMinusButtonSVG.react"), {})
                })
            })]
        })
    }
    a.displayName = a.name + " [from " + f.id + "]";
    g["default"] = a
}), 98);
__d("MPNBotMenuButtonSVG.react", ["cx", "react"], (function(a, b, c, d, e, f, g, h) {
    "use strict";
    var i = d("react");
    a = function(a) {
        babelHelpers.inheritsLoose(b, a);

        function b() {
            return a.apply(this, arguments) || this
        }
        var c = b.prototype;
        c.render = function() {
            return i.jsx("div", {
                className: "_a3_x",
                children: i.jsxs("svg", {
                    viewBox: "0 0 24 24",
                    children: [i.jsx("circle", {
                        cx: "12px",
                        cy: "12px",
                        r: "12px",
                        fill: this.props.threadColor
                    }), i.jsx("g", {
                        stroke: "none",
                        strokeWidth: "1",
                        fill: "none",
                        fillRule: "evenodd",
                        children: i.jsxs("g", {
                            fill: "white",
                            children: [i.jsx("rect", {
                                x: "6",
                                y: "6",
                                width: "12",
                                height: "2"
                            }), i.jsx("rect", {
                                x: "6",
                                y: "11",
                                width: "12",
                                height: "2"
                            }), i.jsx("rect", {
                                x: "6",
                                y: "16",
                                width: "12",
                                height: "2"
                            })]
                        })
                    })]
                })
            })
        };
        return b
    }(i.Component);
    g["default"] = a
}), 98);
__d("MPNE2ETestUtils", [], (function(a, b, c, d, e, f) {
    "use strict";
    a = "video-player";
    b = "verified-badge";
    f.VIDEO_PLAYER_TEST_ID = a;
    f.VERIFIED_BADGE_TEST_ID = b
}), 66);
__d("MPNEndChatPrompt.react", ["cx", "fbt", "LiveChatPluginLoggerUtil", "LiveChatPluginPromptButton.react", "MPNIdentity", "MessagingPluginContext", "MessagingPluginThreadActions", "react"], (function(a, b, c, d, e, f, g, h, i) {
    "use strict";
    var j = d("react");
    b = d("react");
    var k = b.useContext,
        l = b.useEffect,
        m = b.useRef;

    function a(a) {
        var b = m(null),
            e = k(c("MessagingPluginContext")),
            f = e.state,
            g = f.pageName,
            h = f.threadCSSColor,
            n = f.showEndChat,
            o = f.pageID;
        l(function() {
            n === !0 && d("LiveChatPluginLoggerUtil").logImpressionUsingFalco_UnsafeFor3PD(o, "end_chat_prompt", null, null, null, null, d("MPNIdentity").MPNIdentity.currentUserID())
        }, [o, n]);
        f = i._( /*FBT_CALL*/ "\u05d4\u05e9\u05d9\u05d7\u05d4 \u05e9\u05dc\u05da \u05e2\u05dd {pageName} \u05ea\u05d5\u05e1\u05e8 \u05d5\u05d4\u05dd \u05dc\u05d0 \u05d9\u05d5\u05db\u05dc\u05d5 \u05e2\u05d5\u05d3 \u05dc\u05e9\u05dc\u05d5\u05d7 \u05dc\u05da \u05d4\u05d5\u05d3\u05e2\u05d5\u05ea." /*FBT_CALL*/ , [i._param("pageName", g)]);
        l(function() {
            function c(c) {
                b.current && !b.current.contains(c.target) && (d("LiveChatPluginLoggerUtil").logActionFromNewUI("in_thread_action", d("MPNIdentity").MPNIdentity.currentUserID(), o, a.isGuest ? "guest_chat_tab" : "logged_in_chat_tab", {
                    button_name: "end_chat_propmt_outside_clicked"
                }), e.dispatchAction({
                    type: "TOGGLE_END_CHAT",
                    showEndChat: !1
                }))
            }
            window.addEventListener("mousedown", c);
            return function() {
                window.removeEventListener("mousedown", c)
            }
        }, [b, o, a.isGuest]);
        return n === !0 ? j.jsxs("div", {
            className: "_a3ys",
            ref: b,
            children: [j.jsxs("div", {
                className: "_a3yt",
                children: [j.jsx("div", {
                    className: "_a3yu",
                    children: i._( /*FBT_CALL*/ "\u05d1\u05d8\u05d5\u05d7 \u05e9\u05d1\u05e8\u05e6\u05d5\u05e0\u05da \u05dc\u05e1\u05d9\u05d9\u05dd \u05d0\u05ea \u05d4\u05e6'\u05d0\u05d8?" /*FBT_CALL*/ )
                }), j.jsx("div", {
                    className: "_a3yv",
                    children: a.isGuest ? f : i._( /*FBT_CALL*/ {
                        "*": "\u05ea\u05e0\u05d5\u05ea\u05e7\/\u05d9 \u05de-Messenger \u05d1\u05e6'\u05d0\u05d8 \u05d4\u05d6\u05d4. \u05ea\u05d5\u05db\u05dc\/\u05d9 \u05dc\u05d4\u05ea\u05d7\u05d1\u05e8 \u05e9\u05d5\u05d1 \u05d1\u05db\u05dc \u05e2\u05ea.",
                        "1": "\u05ea\u05e0\u05d5\u05ea\u05e7 \u05de-Messenger \u05d1\u05e6'\u05d0\u05d8 \u05d4\u05d6\u05d4. \u05ea\u05d5\u05db\u05dc \u05dc\u05d4\u05ea\u05d7\u05d1\u05e8 \u05e9\u05d5\u05d1 \u05d1\u05db\u05dc \u05e2\u05ea.",
                        "2": "\u05ea\u05e0\u05d5\u05ea\u05e7\u05d9 \u05de-Messenger \u05d1\u05e6'\u05d0\u05d8 \u05d4\u05d6\u05d4. \u05ea\u05d5\u05db\u05dc\u05d9 \u05dc\u05d4\u05ea\u05d7\u05d1\u05e8 \u05e9\u05d5\u05d1 \u05d1\u05db\u05dc \u05e2\u05ea.",
                        "__vcg": 1
                    } /*FBT_CALL*/ )
                })]
            }), j.jsxs("div", {
                className: "_a3yw",
                children: [j.jsx(c("LiveChatPluginPromptButton.react"), {
                    hasIcon: !1,
                    onClick: function() {
                        e.dispatchAction({
                            type: "TOGGLE_END_CHAT",
                            showEndChat: !1
                        }), d("LiveChatPluginLoggerUtil").logActionFromNewUI("in_thread_action", d("MPNIdentity").MPNIdentity.currentUserID(), o, a.isGuest ? "guest_chat_tab" : "logged_in_chat_tab", {
                            button_name: "end_chat_cancel"
                        })
                    },
                    text: i._( /*FBT_CALL*/ "\u05d1\u05d9\u05d8\u05d5\u05dc" /*FBT_CALL*/ )
                }), j.jsx("div", {
                    className: "confirmButton",
                    children: j.jsx(c("LiveChatPluginPromptButton.react"), {
                        color: (g = h) != null ? g : "rgba(0, 0, 0, .05)",
                        hasIcon: !1,
                        onClick: function() {
                            d("MessagingPluginThreadActions").endChat(e, a.history, a.isGuest), e.dispatchAction({
                                type: "TOGGLE_END_CHAT",
                                showEndChat: !1
                            })
                        },
                        text: i._( /*FBT_CALL*/ "\u05d0\u05d9\u05e9\u05d5\u05e8" /*FBT_CALL*/ )
                    })
                })]
            })]
        }) : null
    }
    a.displayName = a.name + " [from " + f.id + "]";
    g["default"] = a
}), 98);
__d("MPNEntryPointAvailabilityStatusIcon.react", ["react"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h = d("react");

    function a(a) {
        if (a.awayHoursEnabled && !a.isPageAway) return h.jsx("div", {
            style: {
                backgroundColor: "#31CC46",
                border: "2.5px solid white",
                borderRadius: "50%",
                height: "10px",
                width: "10px",
                position: "absolute"
            }
        });
        else return h.jsx("div", {})
    }
    a.displayName = a.name + " [from " + f.id + "]";
    g["default"] = a
}), 98);
__d("MPNFileAttachmentIconSVG.react", ["cx", "react"], (function(a, b, c, d, e, f, g, h) {
    "use strict";
    var i = d("react");

    function a() {
        return i.jsx("div", {
            className: "_a4q7",
            children: i.jsxs("svg", {
                viewBox: "0 0 36 36",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg",
                children: [i.jsx("path", {
                    d: "M0 18C0 8.05888 8.05888 0 18 0C27.9411 0 36 8.05888 36 18C36 27.9411 27.9411 36 18 36C8.05888 36 0 27.9411 0 18Z",
                    fill: "#868E99",
                    fillOpacity: "0.75"
                }), i.jsx("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M18 10.5C18 10.0858 17.6642 9.75 17.25 9.75H12.75C11.9216 9.75 11.25 10.4216 11.25 11.25V24.75C11.25 25.5784 11.9216 26.25 12.75 26.25H23.25C24.0784 26.25 24.75 25.5784 24.75 24.75V17.25C24.75 16.8358 24.4142 16.5 24 16.5H21C19.3431 16.5 18 15.1569 18 13.5V10.5ZM13.5 15.75C13.5 15.3358 13.8358 15 14.25 15H15.75C16.1642 15 16.5 15.3358 16.5 15.75C16.5 16.1642 16.1642 16.5 15.75 16.5H14.25C13.8358 16.5 13.5 16.1642 13.5 15.75ZM14.25 18.375C13.8358 18.375 13.5 18.7108 13.5 19.125C13.5 19.5392 13.8358 19.875 14.25 19.875H21.75C22.1642 19.875 22.5 19.5392 22.5 19.125C22.5 18.7108 22.1642 18.375 21.75 18.375H14.25ZM14.25 21.75C13.8358 21.75 13.5 22.0858 13.5 22.5C13.5 22.9142 13.8358 23.25 14.25 23.25H21.75C22.1642 23.25 22.5 22.9142 22.5 22.5C22.5 22.0858 22.1642 21.75 21.75 21.75H14.25Z",
                    fill: "white"
                }), i.jsx("path", {
                    d: "M21 15H24.0075C24.4176 15 24.75 14.6676 24.75 14.2575C24.75 14.0606 24.6718 13.8718 24.5325 13.7325L20.7675 9.96746C20.6282 9.82822 20.4394 9.75 20.2425 9.75C19.8324 9.75 19.5 10.0824 19.5 10.4925V13.5C19.5 14.3284 20.1716 15 21 15Z",
                    fill: "white"
                })]
            })
        })
    }
    a.displayName = a.name + " [from " + f.id + "]";
    g["default"] = a
}), 98);
__d("MPNHeaderActionButton.react", ["cx", "CometPressable.react", "react"], (function(a, b, c, d, e, f, g, h) {
    "use strict";
    var i = d("react");

    function a(a) {
        var b = a.label,
            d = a.onPress,
            e = a.children;
        a = a.testid;
        return i.jsx("div", {
            className: "_a3x9",
            children: i.jsx(c("CometPressable.react"), {
                testid: void 0,
                "aria-label": b,
                onPress: d,
                children: e
            })
        })
    }
    a.displayName = a.name + " [from " + f.id + "]";
    g["default"] = a
}), 98);
__d("MPNMessengerIconSVG.react", ["cx", "react"], (function(a, b, c, d, e, f, g, h) {
    "use strict";
    var i = d("react");
    a = function(a) {
        babelHelpers.inheritsLoose(b, a);

        function b() {
            return a.apply(this, arguments) || this
        }
        var c = b.prototype;
        c.render = function() {
            return i.jsx("div", {
                className: "loggedInIcon",
                children: i.jsx("svg", {
                    viewBox: "0 0 40 40",
                    x: "0",
                    y: "0",
                    children: i.jsx("g", {
                        stroke: "none",
                        strokeWidth: "1",
                        fill: "none",
                        fillRule: "evenodd",
                        children: i.jsx("g", {
                            children: i.jsx("svg", {
                                x: "0",
                                y: "0",
                                children: i.jsx("path", {
                                    d: "M20,0 C31.2666,0 40,8.2528 40,19.4 C40,30.5472 31.2666,38.8 20,38.8 C17.9763,38.8 16.0348,38.5327 14.2106,38.0311 C13.856,37.9335 13.4789,37.9612 13.1424,38.1098 L9.1727,39.8621 C8.1343,40.3205 6.9621,39.5819 6.9273,38.4474 L6.8184,34.8894 C6.805,34.4513 6.6078,34.0414 6.2811,33.7492 C2.3896,30.2691 0,25.2307 0,19.4 C0,8.2528 8.7334,0 20,0 Z M7.99009,25.07344 C7.42629,25.96794 8.52579,26.97594 9.36809,26.33674 L15.67879,21.54734 C16.10569,21.22334 16.69559,21.22164 17.12429,21.54314 L21.79709,25.04774 C23.19919,26.09944 25.20039,25.73014 26.13499,24.24744 L32.00999,14.92654 C32.57369,14.03204 31.47419,13.02404 30.63189,13.66324 L24.32119,18.45264 C23.89429,18.77664 23.30439,18.77834 22.87569,18.45674 L18.20299,14.95224 C16.80079,13.90064 14.79959,14.26984 13.86509,15.75264 L7.99009,25.07344 Z",
                                    fill: "#FFFFFF"
                                })
                            })
                        })
                    })
                })
            })
        };
        return b
    }(i.Component);
    g["default"] = a
}), 98);
__d("MPNMinusButtonSVG.react", ["react"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h = d("react");
    a = function(a) {
        babelHelpers.inheritsLoose(b, a);

        function b() {
            return a.apply(this, arguments) || this
        }
        var c = b.prototype;
        c.render = function() {
            return h.jsxs("svg", {
                width: "32",
                height: "32",
                viewBox: "0 0 32 32",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg",
                children: [h.jsx("path", {
                    d: "M0 16C0 7.16344 7.16344 0 16 0C24.8366 0 32 7.16344 32 16C32 24.8366 24.8366 32 16 32C7.16344 32 0 24.8366 0 16Z",
                    fill: "black",
                    fillOpacity: "0.04"
                }), h.jsx("path", {
                    d: "M22.0278 15.0278C22.5647 15.0278 23 15.4631 23 16.0001C23 16.537 22.5647 16.9723 22.0278 16.9723L9.97222 16.9723C9.43528 16.9723 9 16.537 9 16.0001C9 15.4631 9.43528 15.0278 9.97222 15.0278L22.0278 15.0278Z",
                    fill: "black"
                })]
            })
        };
        return b
    }(h.PureComponent);
    g["default"] = a
}), 98);
__d("MPNMoreInfoButtonSVG.react", ["react"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h = d("react");
    a = function(a) {
        babelHelpers.inheritsLoose(b, a);

        function b() {
            return a.apply(this, arguments) || this
        }
        var c = b.prototype;
        c.render = function() {
            return h.jsxs("svg", {
                width: "32",
                height: "32",
                viewBox: "0 0 32 32",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg",
                children: [h.jsx("path", {
                    d: "M0 16C0 7.16344 7.16344 0 16 0C24.8366 0 32 7.16344 32 16C32 24.8366 24.8366 32 16 32C7.16344 32 0 24.8366 0 16Z",
                    fill: "black",
                    fillOpacity: "0.04"
                }), h.jsx("path", {
                    d: "M11.7222 16C11.7222 16.9665 10.9387 17.75 9.97217 17.75C9.00567 17.75 8.22217 16.9665 8.22217 16C8.22217 15.0335 9.00567 14.25 9.97217 14.25C10.9387 14.25 11.7222 15.0335 11.7222 16Z",
                    fill: "black"
                }), h.jsx("path", {
                    d: "M17.7499 16C17.7499 16.9665 16.9664 17.75 15.9999 17.75C15.0334 17.75 14.2499 16.9665 14.2499 16C14.2499 15.0335 15.0334 14.25 15.9999 14.25C16.9664 14.25 17.7499 15.0335 17.7499 16Z",
                    fill: "black"
                }), h.jsx("path", {
                    d: "M22.0277 17.75C22.9942 17.75 23.7777 16.9665 23.7777 16C23.7777 15.0335 22.9942 14.25 22.0277 14.25C21.0612 14.25 20.2777 15.0335 20.2777 16C20.2777 16.9665 21.0612 17.75 22.0277 17.75Z",
                    fill: "black"
                })]
            })
        };
        return b
    }(h.PureComponent);
    g["default"] = a
}), 98);
__d("MPNNewWelcomePageButtom.react", ["cx", "EllipsisText.react", "LiveChatPluginFbts", "LiveChatPluginLoggerUtil", "MPNIdentity", "MessagingPluginContext", "ShimButton.react", "react"], (function(a, b, c, d, e, f, g, h) {
    "use strict";
    var i = d("react");
    a = function(a) {
        babelHelpers.inheritsLoose(b, a);

        function b() {
            return a.apply(this, arguments) || this
        }
        var e = b.prototype;
        e.componentDidMount = function() {
            var a = d("MPNIdentity").MPNIdentity.currentUserState() === d("MPNIdentity").MPNIdentityState.FB;
            this.props.shouldShowLoginPage === !0 && a && window.setTimeout(this.props.onClick, 600)
        };
        e.componentDidUpdate = function(a) {
            var b = d("MPNIdentity").MPNIdentity.currentUserState() === d("MPNIdentity").MPNIdentityState.FB;
            a.hasGuestMode !== this.props.hasGuestMode && b && this.props.onClick()
        };
        e.render = function() {
            var a = this.context.state,
                b = a.threadCSSColor,
                e = a.isPageAway,
                f = a.awayHoursEnabled,
                g = a.pageID,
                h = a.hasGuestMode,
                j = this.props.onClick;
            a = f ? e ? d("LiveChatPluginFbts").SEND_A_MESSAGE : d("LiveChatPluginFbts").CHAT_NOW_BUTTON_TEXT : d("LiveChatPluginFbts").START_CHAT_BUTTON_TEXT;
            var k = f ? e ? "send_a_message" : "chat_now" : "start_chat";
            return i.jsx("div", {
                className: "_a6s8",
                children: i.jsx("div", {
                    className: "_a6s9",
                    children: i.jsx(c("ShimButton.react"), {
                        onClick: function() {
                            j(), d("LiveChatPluginLoggerUtil").logActionFromNewUI("tab_click", null, g, h ? "welcome_page_with_guest_option" : "welcome_page", {
                                button_name: k
                            })
                        },
                        className: "_a2zm",
                        style: {
                            backgroundColor: b
                        },
                        "data-testid": void 0,
                        children: i.jsx(c("EllipsisText.react"), {
                            className: "continueText _4mr9",
                            children: a
                        })
                    })
                })
            })
        };
        return b
    }(i.Component);
    a.contextType = c("MessagingPluginContext");
    g["default"] = a
}), 98);
__d("MPNPageResponsivenessText.react", ["cx", "DateTime", "LineClamp.react", "LiveChatPluginFbts", "MessagingPluginContext", "Timezone", "react"], (function(a, b, c, d, e, f, g, h) {
    "use strict";
    var i = d("react"),
        j = d("react").useContext;

    function a(a) {
        a = j(c("MessagingPluginContext"));
        a = a.state;
        var b = a.nextAvailableTimestamp,
            e = a.awayHoursEnabled,
            f = a.isPageAway;
        a = a.pageResponsiveness;
        var g = null;
        if (e && f) {
            if (b != null) {
                f = d("Timezone").getEnvironmentTimezoneID();
                b = new(c("DateTime"))(b, f);
                f = b.getDayOfWeek();
                b = d("LiveChatPluginFbts").getPageReturnTimeText(f);
                g = b == null ? void 0 : b.toString()
            }
        } else e && (g = a);
        return i.jsx(c("LineClamp.react"), {
            lines: 1,
            className: "_a2zs",
            children: g
        })
    }
    a.displayName = a.name + " [from " + f.id + "]";
    g["default"] = a
}), 98);
__d("MPNPaperclipIconSVG.react", ["cx", "react"], (function(a, b, c, d, e, f, g, h) {
    "use strict";
    var i = d("react");
    a = function(a) {
        babelHelpers.inheritsLoose(b, a);

        function b() {
            return a.apply(this, arguments) || this
        }
        var c = b.prototype;
        c.render = function() {
            return i.jsx("div", {
                className: "_a3_z",
                children: i.jsx("svg", {
                    viewBox: "0 0 36 36",
                    children: i.jsxs("g", {
                        fill: "none",
                        fillRule: "evenodd",
                        children: [i.jsx("polygon", {
                            points: "0 36 36 36 36 0 0 0"
                        }), i.jsx("path", {
                            d: "M18,31 C13.5815,31 10,27.4185 10,23 L10,11 C10,7.6865 12.6865,5 16,5 C19.3135,5 22,7.6865 22,11 L22,21 C22,23.209 20.209,25 18,25 C15.791,25 14,23.209 14,21 L14,14.5 C14,13.6715 14.6715,13 15.5,13 C16.3285,13 17,13.6715 17,14.5 L17,21 C17,21.552 17.448,22 18,22 C18.552,22 19,21.552 19,21 L19,11 C19,9.3435 17.6565,8 16,8 C14.3435,8 13,9.3435 13,11 L13,23 C13,25.761 15.239,28 18,28 C20.761,28 23,25.761 23,23 L23,14.5 C23,13.6715 23.6715,13 24.5,13 C25.3285,13 26,13.6715 26,14.5 L26,23 C26,27.4185 22.4185,31 18,31",
                            fill: this.props.color
                        })]
                    })
                })
            })
        };
        return b
    }(i.Component);
    g["default"] = a
}), 98);
__d("XDataPolicyController", ["XController"], (function(a, b, c, d, e, f) {
    e.exports = b("XController").create("/privacy/explanation/", {
        ref: {
            type: "String"
        },
        locale: {
            type: "String"
        },
        settings_tracking: {
            type: "String"
        },
        m_no_header: {
            type: "Bool",
            defaultValue: !1
        }
    })
}), null);
__d("XTermsController", ["XController"], (function(a, b, c, d, e, f) {
    e.exports = b("XController").create("/terms/", {
        ref: {
            type: "String"
        },
        from_landing_page: {
            type: "Bool",
            defaultValue: !1
        },
        locale: {
            type: "String"
        },
        settings_tracking: {
            type: "String"
        }
    })
}), null);
__d("MPNPrivacyText.react", ["cx", "fbt", "CometLink.react", "MessagingPluginContext", "XCookiesPolicyControllerRouteBuilder", "XDataPolicyController", "XTermsController", "gkx", "react"], (function(a, b, c, d, e, f, g, h, i) {
    "use strict";
    var j = d("react");
    a = function(a) {
        babelHelpers.inheritsLoose(b, a);

        function b() {
            return a.apply(this, arguments) || this
        }
        var d = b.prototype;
        d.render = function() {
            var a = this.context.state.hasGuestMode,
                b = c("gkx")("1189683"),
                d = c("XTermsController").getURIBuilder().getURI().toString(),
                e = c("XDataPolicyController").getURIBuilder().getURI().toString(),
                f = c("XCookiesPolicyControllerRouteBuilder").buildURL({}),
                g = i._( /*FBT_CALL*/ {
                    "*": "\u05d1\u05d1\u05d7\u05d9\u05e8\u05ea\u05da \u05dc\u05d4\u05de\u05e9\u05d9\u05da \u05db\u05d0\u05d5\u05e8\u05d7\/\u05ea, \u05d0\u05ea\/\u05d4 \u05de\u05e1\u05db\u05d9\u05dd\/\u05de\u05e1\u05db\u05d9\u05de\u05d4 \u05dc{=m1} \u05e9\u05dc Meta. \u05de\u05d9\u05d3\u05e2 \u05e2\u05dc \u05d4\u05d0\u05d5\u05e4\u05df \u05e9\u05d1\u05d5 \u05d0\u05e0\u05d7\u05e0\u05d5 \u05d0\u05d5\u05e1\u05e4\u05d9\u05dd \u05d0\u05ea \u05d4\u05e0\u05ea\u05d5\u05e0\u05d9\u05dd \u05e9\u05dc\u05da, \u05de\u05e9\u05ea\u05de\u05e9\u05d9\u05dd \u05d1\u05d4\u05dd \u05d5\u05de\u05e9\u05ea\u05e4\u05d9\u05dd \u05d0\u05d5\u05ea\u05dd \u05de\u05e4\u05d5\u05e8\u05d8 \u05d1{=m4} \u05e9\u05dc\u05e0\u05d5, \u05d5\u05de\u05d9\u05d3\u05e2 \u05e2\u05dc \u05d0\u05d5\u05e4\u05df \u05d4\u05e9\u05d9\u05de\u05d5\u05e9 \u05e9\u05dc\u05e0\u05d5 \u05d1\u05e7\u05d5\u05d1\u05e6\u05d9 Cookie \u05d5\u05d1\u05d8\u05db\u05e0\u05d5\u05dc\u05d5\u05d2\u05d9\u05d5\u05ea \u05d3\u05d5\u05de\u05d5\u05ea \u05de\u05e4\u05d5\u05e8\u05d8 \u05d1{=m8}.",
                    "1": "\u05d1\u05d1\u05d7\u05d9\u05e8\u05ea\u05da \u05dc\u05d4\u05de\u05e9\u05d9\u05da \u05db\u05d0\u05d5\u05e8\u05d7, \u05d0\u05ea\u05d4 \u05de\u05e1\u05db\u05d9\u05dd \u05dc{=m1} \u05e9\u05dc Meta. \u05de\u05d9\u05d3\u05e2 \u05e2\u05dc \u05d4\u05d0\u05d5\u05e4\u05df \u05e9\u05d1\u05d5 \u05d0\u05e0\u05d7\u05e0\u05d5 \u05d0\u05d5\u05e1\u05e4\u05d9\u05dd \u05d0\u05ea \u05d4\u05e0\u05ea\u05d5\u05e0\u05d9\u05dd \u05e9\u05dc\u05da, \u05de\u05e9\u05ea\u05de\u05e9\u05d9\u05dd \u05d1\u05d4\u05dd \u05d5\u05de\u05e9\u05ea\u05e4\u05d9\u05dd \u05d0\u05d5\u05ea\u05dd \u05de\u05e4\u05d5\u05e8\u05d8 \u05d1{=m4} \u05e9\u05dc\u05e0\u05d5, \u05d5\u05de\u05d9\u05d3\u05e2 \u05e2\u05dc \u05d0\u05d5\u05e4\u05df \u05d4\u05e9\u05d9\u05de\u05d5\u05e9 \u05e9\u05dc\u05e0\u05d5 \u05d1\u05e7\u05d5\u05d1\u05e6\u05d9 Cookie \u05d5\u05d1\u05d8\u05db\u05e0\u05d5\u05dc\u05d5\u05d2\u05d9\u05d5\u05ea \u05d3\u05d5\u05de\u05d5\u05ea \u05de\u05e4\u05d5\u05e8\u05d8 \u05d1{=m8}.",
                    "2": "\u05d1\u05d1\u05d7\u05d9\u05e8\u05ea\u05da \u05dc\u05d4\u05de\u05e9\u05d9\u05da \u05db\u05d0\u05d5\u05e8\u05d7\u05ea, \u05d0\u05ea \u05de\u05e1\u05db\u05d9\u05de\u05d4 \u05dc{=m1} \u05e9\u05dc Meta. \u05de\u05d9\u05d3\u05e2 \u05e2\u05dc \u05d4\u05d0\u05d5\u05e4\u05df \u05e9\u05d1\u05d5 \u05d0\u05e0\u05d7\u05e0\u05d5 \u05d0\u05d5\u05e1\u05e4\u05d9\u05dd \u05d0\u05ea \u05d4\u05e0\u05ea\u05d5\u05e0\u05d9\u05dd \u05e9\u05dc\u05da, \u05de\u05e9\u05ea\u05de\u05e9\u05d9\u05dd \u05d1\u05d4\u05dd \u05d5\u05de\u05e9\u05ea\u05e4\u05d9\u05dd \u05d0\u05d5\u05ea\u05dd \u05de\u05e4\u05d5\u05e8\u05d8 \u05d1{=m4} \u05e9\u05dc\u05e0\u05d5, \u05d5\u05de\u05d9\u05d3\u05e2 \u05e2\u05dc \u05d0\u05d5\u05e4\u05df \u05d4\u05e9\u05d9\u05de\u05d5\u05e9 \u05e9\u05dc\u05e0\u05d5 \u05d1\u05e7\u05d5\u05d1\u05e6\u05d9 Cookie \u05d5\u05d1\u05d8\u05db\u05e0\u05d5\u05dc\u05d5\u05d2\u05d9\u05d5\u05ea \u05d3\u05d5\u05de\u05d5\u05ea \u05de\u05e4\u05d5\u05e8\u05d8 \u05d1{=m8}.",
                    "__vcg": 1
                } /*FBT_CALL*/ , [i._implicitParam("=m1", j.jsx(c("CometLink.react"), {
                    href: d,
                    target: "_blank",
                    children: i._( /*FBT_CALL*/ "\u05ea\u05e0\u05d0\u05d9\u05dd" /*FBT_CALL*/ )
                })), i._implicitParam("=m4", j.jsx(c("CometLink.react"), {
                    href: e,
                    target: "_blank",
                    children: i._( /*FBT_CALL*/ "\u05de\u05d3\u05d9\u05e0\u05d9\u05d5\u05ea \u05d4\u05e0\u05ea\u05d5\u05e0\u05d9\u05dd" /*FBT_CALL*/ )
                })), i._implicitParam("=m8", j.jsx(c("CometLink.react"), {
                    href: f,
                    target: "_blank",
                    children: i._( /*FBT_CALL*/ "\u05de\u05d3\u05d9\u05e0\u05d9\u05d5\u05ea \u05e7\u05d5\u05d1\u05e6\u05d9 Cookie" /*FBT_CALL*/ )
                }))]),
                h = i._( /*FBT_CALL*/ {
                    "*": "\u05d1\u05d1\u05d7\u05d9\u05e8\u05ea\u05da \u05dc\u05d4\u05de\u05e9\u05d9\u05da \u05db\u05d0\u05d5\u05e8\u05d7\/\u05ea, \u05d0\u05ea\/\u05d4 \u05de\u05e1\u05db\u05d9\u05dd\/\u05de\u05e1\u05db\u05d9\u05de\u05d4 \u05dc{=m2}, \u05dc{=m5} \u05d5\u05dc{=m9} \u05e9\u05dc Meta.",
                    "1": "\u05d1\u05d1\u05d7\u05d9\u05e8\u05ea\u05da \u05dc\u05d4\u05de\u05e9\u05d9\u05da \u05db\u05d0\u05d5\u05e8\u05d7, \u05d0\u05ea\u05d4 \u05de\u05e1\u05db\u05d9\u05dd \u05dc{=m2}, \u05dc{=m5} \u05d5\u05dc{=m9} \u05e9\u05dc Meta.",
                    "2": "\u05d1\u05d1\u05d7\u05d9\u05e8\u05ea\u05da \u05dc\u05d4\u05de\u05e9\u05d9\u05da \u05db\u05d0\u05d5\u05e8\u05d7\u05ea, \u05d0\u05ea \u05de\u05e1\u05db\u05d9\u05de\u05d4 \u05dc{=m2}, \u05dc{=m5} \u05d5\u05dc{=m9} \u05e9\u05dc Meta.",
                    "__vcg": 1
                } /*FBT_CALL*/ , [i._implicitParam("=m2", j.jsx(c("CometLink.react"), {
                    href: d,
                    target: "_blank",
                    children: i._( /*FBT_CALL*/ "\u05ea\u05e0\u05d0\u05d9\u05dd" /*FBT_CALL*/ )
                })), i._implicitParam("=m5", j.jsx(c("CometLink.react"), {
                    href: e,
                    target: "_blank",
                    children: i._( /*FBT_CALL*/ "\u05de\u05d3\u05d9\u05e0\u05d9\u05d5\u05ea \u05d4\u05e0\u05ea\u05d5\u05e0\u05d9\u05dd" /*FBT_CALL*/ )
                })), i._implicitParam("=m9", j.jsx(c("CometLink.react"), {
                    href: f,
                    target: "_blank",
                    children: i._( /*FBT_CALL*/ "\u05de\u05d3\u05d9\u05e0\u05d9\u05d5\u05ea \u05e7\u05d5\u05d1\u05e6\u05d9 Cookie" /*FBT_CALL*/ )
                }))]);
            d = i._( /*FBT_CALL*/ "By continuing you agree to Meta's {=m2}, {=m5} and {=m9}." /*FBT_CALL*/ , [i._implicitParam("=m2", j.jsx(c("CometLink.react"), {
                href: d,
                target: "_blank",
                children: i._( /*FBT_CALL*/ "Terms" /*FBT_CALL*/ )
            })), i._implicitParam("=m5", j.jsx(c("CometLink.react"), {
                href: e,
                target: "_blank",
                children: i._( /*FBT_CALL*/ "Data Policy" /*FBT_CALL*/ )
            })), i._implicitParam("=m9", j.jsx(c("CometLink.react"), {
                href: f,
                target: "_blank",
                children: i._( /*FBT_CALL*/ "Cookies Policy" /*FBT_CALL*/ )
            }))]);
            return j.jsx("div", {
                className: "_a2zo",
                children: this.props.isShownInReEngagementDialog === !0 ? d : this.props.useITPContinueButton ? null : a ? b ? g : h : null
            })
        };
        return b
    }(j.Component);
    a.contextType = c("MessagingPluginContext");
    g["default"] = a
}), 98);
__d("MPNSwitchAccountActionButton.react", ["cx", "ix", "CometPressable.react", "Image.react", "MessagingPluginContext", "react"], (function(a, b, c, d, e, f, g, h, i) {
    "use strict";
    var j = d("react"),
        k = d("react").useContext;

    function a(a) {
        var b = k(c("MessagingPluginContext"));
        b = b.state.viewerProfilePicureUri;
        var d = a.onPress;
        a = a.testid;
        return j.jsx("div", {
            className: "_a6se",
            children: j.jsxs(c("CometPressable.react"), {
                onPress: d,
                overlayRadius: 6,
                testid: void 0,
                children: [j.jsx(c("Image.react"), {
                    className: "_a6sd _a6sc",
                    src: b
                }), j.jsx(c("Image.react"), {
                    className: "_a6sb",
                    src: i("481882")
                })]
            })
        })
    }
    a.displayName = a.name + " [from " + f.id + "]";
    g["default"] = a
}), 98);
__d("MPNDropdownMenuAlignment", ["$InternalEnum"], (function(a, b, c, d, e, f) {
    "use strict";
    a = b("$InternalEnum").Mirrored(["TOP", "BOTTOM"]);
    c = a;
    f["default"] = c
}), 66);
__d("MPNDropdownMenu", ["cx", "MPNDropdownMenuAlignment", "joinClasses", "react"], (function(a, b, c, d, e, f, g, h) {
    "use strict";
    var i = d("react");

    function a(a) {
        var b = a.className,
            d = a.children,
            e = a["data-testid"];
        e = a.alignment;
        a = e === void 0 ? c("MPNDropdownMenuAlignment").BOTTOM : e;
        e = void 0;
        switch (a) {
            case c("MPNDropdownMenuAlignment").TOP:
                e = "_a2-b";
                break;
            case c("MPNDropdownMenuAlignment").BOTTOM:
                e = "_a2-c";
                break
        }
        a = c("joinClasses")("_a2zy", b, e);
        return i.jsx("div", {
            className: a,
            "data-testid": void 0,
            children: d
        })
    }
    a.displayName = a.name + " [from " + f.id + "]";
    g["default"] = a
}), 98);
__d("MPNDropdownMenuItem", ["cx", "CometMenuContext", "Image.react", "ShimButton.react", "react"], (function(a, b, c, d, e, f, g, h) {
    "use strict";
    var i = d("react");
    b = d("react");
    var j = b.useCallback,
        k = b.useContext;

    function a(a) {
        var b = a.primaryText,
            d = a.onClick,
            e = a.iconSrc,
            f = a.classNameString;
        a = a["data-testid"];
        a = k(c("CometMenuContext"));
        var g = a && a.onClose;
        a = j(function(a) {
            g != null && g(), d && d(a)
        }, [d, g]);
        var h = e !== void 0,
            l = f !== void 0;
        return i.jsxs(c("ShimButton.react"), {
            "data-testid": void 0,
            className: l ? f : "_a1ql" + (h ? " _a5cd" : ""),
            onClick: a,
            children: [h && i.jsx(c("Image.react"), {
                className: "_a2zw",
                src: e
            }), b]
        })
    }
    a.displayName = a.name + " [from " + f.id + "]";
    g["default"] = a
}), 98);
__d("MPNSwitchAccountDropDownMenu.react", ["cx", "fbt", "MPNDropdownMenu", "MPNDropdownMenuItem", "MessagingPluginContext", "MessagingPluginThreadActions", "react"], (function(a, b, c, d, e, f, g, h, i) {
    "use strict";
    var j = d("react"),
        k = d("react").useContext;

    function a(a) {
        var b = k(c("MessagingPluginContext"));
        a = b.state.shouldShowNewWelcomeView;
        return j.jsx(c("MPNDropdownMenu"), {
            "data-testid": void 0,
            className: (a ? "_a1qk" : "") + (a ? "" : " _a8d1"),
            children: j.jsx(c("MPNDropdownMenuItem"), {
                "data-testid": void 0,
                onClick: function() {
                    d("MessagingPluginThreadActions").switchAccount(b)
                },
                primaryText: i._( /*FBT_CALL*/ "\u05d4\u05d7\u05dc\u05e4\u05ea \u05d7\u05e9\u05d1\u05d5\u05e0\u05d5\u05ea" /*FBT_CALL*/ )
            })
        })
    }
    a.displayName = a.name + " [from " + f.id + "]";
    g["default"] = a
}), 98);
__d("MPNThreadPageHeaderSubtitle.react", ["cx", "DateTime", "LineClamp.react", "LiveChatPluginFbts", "MessagingPluginContext", "Timezone", "react", "setTimeout"], (function(a, b, c, d, e, f, g, h) {
    "use strict";
    var i = d("react");
    a = function(a) {
        babelHelpers.inheritsLoose(b, a);

        function b() {
            var b, c;
            for (var e = arguments.length, f = new Array(e), g = 0; g < e; g++) f[g] = arguments[g];
            return (b = c = a.call.apply(a, [this].concat(f)) || this, c.state = {
                textList: [{
                    key: 1,
                    text: d("LiveChatPluginFbts").MESSENGER_ATTRIBUTION.toString()
                }],
                animate: !1
            }, b) || babelHelpers.assertThisInitialized(c)
        }
        var e = b.prototype;
        e.componentDidMount = function() {
            var a = this.state.textList;
            this.fetchResponsivenessText();
            this.$1 != null && (a.push({
                key: a.length + 1,
                text: this.$1
            }), this.setState(function(b) {
                return babelHelpers["extends"]({}, b, {
                    textList: a
                })
            }));
            this.state.textList.length > 1 && this.startRotateSubtitleText()
        };
        e.componentDidUpdate = function(a) {
            var b = this.state.textList;
            (this.props.awayHoursEnabled !== a.awayHoursEnabled || this.props.isPageAway !== a.isPageAway) && (this.fetchResponsivenessText(), b.length > 1 && (b.sort(function(a, b) {
                return a.key - b.key
            }), b.pop()), this.$1 != null ? (b.push({
                key: b.length + 1,
                text: this.$1
            }), this.$2 === null && this.startRotateSubtitleText()) : this.stopRotateSubtitleText(), this.setState(function(a) {
                return babelHelpers["extends"]({}, a, {
                    textList: b
                })
            }))
        };
        e.fetchResponsivenessText = function() {
            var a = this.context.state,
                b = a.nextAvailableTimestamp,
                e = a.awayHoursEnabled,
                f = a.isPageAway;
            a = a.pageResponsiveness;
            if (e && f) {
                if (b != null) {
                    f = d("Timezone").getEnvironmentTimezoneID();
                    b = new(c("DateTime"))(b, f);
                    f = b.getDayOfWeek();
                    b = d("LiveChatPluginFbts").getPageReturnTimeText(f);
                    this.$1 = b == null ? void 0 : b.toString()
                }
            } else e ? this.$1 = a : this.$1 = null
        };
        e.startRotateSubtitleText = function() {
            var a = this;
            this.$2 = window.setInterval(function() {
                a.setState({
                    animate: !0
                }), a.updateTextList()
            }, 4e3)
        };
        e.stopRotateSubtitleText = function() {
            this.$2 && window.clearInterval(this.$2), this.$2 = null
        };
        e.updateTextList = function() {
            var a = this,
                b = this.state.textList;
            c("setTimeout")(function() {
                b.unshift(b[b.length - 1]), b.pop(), a.setState({
                    textList: b,
                    animate: !1
                })
            }, 500)
        };
        e.render = function() {
            var a = this.state,
                b = a.textList;
            a = a.animate;
            return i.jsx("div", {
                className: "_a7cd",
                children: i.jsx("ul", {
                    className: a ? "_a7cc" : "",
                    children: b.map(function(a, b) {
                        return i.jsx("li", {
                            children: i.jsx(c("LineClamp.react"), {
                                className: "_a2m2",
                                lines: 1,
                                children: a.text
                            })
                        }, b)
                    })
                })
            })
        };
        return b
    }(i.Component);
    a.contextType = c("MessagingPluginContext");
    g["default"] = a
}), 98);
__d("MPNUnreadCountSVG.react", ["react"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h = d("react");
    a = function(a) {
        babelHelpers.inheritsLoose(b, a);

        function b() {
            return a.apply(this, arguments) || this
        }
        var c = b.prototype;
        c.render = function() {
            var a = {
                fontSize: "12px",
                text: this.props.unreadCount
            };
            if (this.props.unreadCount === 0) return null;
            else this.props.unreadCount > 20 ? (a.text = "20+", a.fontSize = "10px") : this.props.unreadCount < 10 && (a.fontSize = "15px");
            return h.jsxs("svg", {
                width: "20",
                height: "24",
                style: {
                    boxShadow: "0px 4px 12px 0px rgba(0, 0, 0, 0.15)"
                },
                children: [h.jsx("rect", {
                    width: "20",
                    height: "24",
                    fill: "#e8423e"
                }), h.jsx("text", {
                    x: "10",
                    y: "11",
                    textAnchor: "middle",
                    fill: "#ffffff",
                    fontSize: a.fontSize,
                    dy: ".4em",
                    children: a.text
                })]
            })
        };
        return b
    }(h.Component);
    g["default"] = a
}), 98);
__d("MPNUnreadCountBadge.react", ["Arbiter", "LiveChatPluginConstants", "MPNConstants", "MPNLocalState", "MPNStorage", "MPNUnreadCountSVG.react", "react"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h = d("react");
    a = function(a) {
        babelHelpers.inheritsLoose(b, a);

        function b() {
            var b, c;
            for (var d = arguments.length, e = new Array(d), f = 0; f < d; f++) e[f] = arguments[f];
            return (b = c = a.call.apply(a, [this].concat(e)) || this, c.state = {
                unreadCount: 0
            }, c.$1 = null, b) || babelHelpers.assertThisInitialized(c)
        }
        var e = b.prototype;
        e.componentDidMount = function() {
            var a = this;
            this.$1 = c("Arbiter").subscribe(d("LiveChatPluginConstants").UNREAD_COUNT_UPDATE, function(b, e) {
                var f;
                b = ((b = c("MPNStorage").getFBStorageState()) == null ? void 0 : b.chatState) === d("MPNLocalState").MPNChatState.CHAT_NOT_STARTED;
                f = (f = c("MPNStorage").getFBStorageState()) == null ? void 0 : f.visibility;
                (b || f === d("MPNConstants").MPNVisibility.HIDDEN || e === 0) && a.setState({
                    unreadCount: e
                })
            })
        };
        e.componentWillUnmount = function() {
            this.$1 && c("Arbiter").unsubscribe(this.$1)
        };
        e.render = function() {
            return h.jsx(c("MPNUnreadCountSVG.react"), {
                unreadCount: this.state.unreadCount
            })
        };
        return b
    }(h.Component);
    g["default"] = a
}), 98);
__d("MPNUpgradePopover.react", ["cx", "ChatPluginMessengerCrossButton.react", "MPNGuestUpgradeFBTStrings", "MessagingPluginContext", "react"], (function(a, b, c, d, e, f, g, h) {
    "use strict";
    var i = d("react");
    b = d("react");
    var j = b.useContext,
        k = b.useEffect,
        l = b.useRef;

    function a(a) {
        var b = j(c("MessagingPluginContext")),
            e = b.state,
            f = e.showGuestUpgradePopover;
        e = e.windowSize;
        var g = l(null);
        e = e === "compact";
        var h = function() {
            var a = b.dispatchAction;
            a({
                type: "SHOW_GUEST_UPGRADE_POPOVER",
                showGuestUpgradePopover: !1,
                hasShownGuestUpgradePopover: !0
            })
        };
        h = i.jsxs("div", {
            className: "_a2sd _a2se",
            children: [i.jsx("div", {
                className: "_a2sh",
                children: d("MPNGuestUpgradeFBTStrings").getPopoverText()
            }), e && i.jsx(c("ChatPluginMessengerCrossButton.react"), {
                onClose: h
            })]
        });
        k(function() {
            function a(a) {
                g.current && !g.current.contains(a.target) && b.dispatchAction({
                    type: "SHOW_GUEST_UPGRADE_POPOVER",
                    showGuestUpgradePopover: !1,
                    hasShownGuestUpgradePopover: !0
                })
            }
            window.addEventListener("mousedown", a);
            return function() {
                window.removeEventListener("mousedown", a)
            }
        }, [g]);
        return f === !0 ? i.jsxs("div", {
            className: a.isMobile === !0 ? "_a2sg" : "_a2sc",
            ref: g,
            children: [h, !e && i.jsx("div", {
                className: "_a2sf"
            })]
        }) : null
    }
    a.displayName = a.name + " [from " + f.id + "]";
    g["default"] = a
}), 98);
__d("MPNVerifiedBadgeSVG.react", ["MPNE2ETestUtils", "react", "stylex"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h = d("react");
    c("stylex").inject(".b6ax4al1{display:block}", 1);

    function a(a) {
        var b = a.color;
        a = a.size;
        return h.jsx("svg", {
            "data-testid": void 0,
            className: "b6ax4al1",
            viewBox: "0 0 24 24",
            width: a,
            height: a,
            xmlns: "http://www.w3.org/2000/svg",
            fill: b,
            children: h.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M1.81832 12.3781C0.641541 13.6853 0.172694 15.2929 0.740548 16.6638C1.3084 18.0347 2.77666 18.8399 4.53307 18.9322C4.81971 18.9472 5.05279 19.1803 5.06784 19.4669C5.16003 21.2234 5.96524 22.6916 7.33617 23.2595C8.7071 23.8273 10.3147 23.3585 11.6219 22.1817C11.8352 21.9896 12.1648 21.9896 12.3782 22.1817C13.6853 23.3585 15.2929 23.8273 16.6638 23.2595C18.0347 22.6916 18.84 21.2234 18.9322 19.467C18.9472 19.1803 19.1803 18.9472 19.4669 18.9322C21.2234 18.84 22.6916 18.0348 23.2595 16.6639C23.8273 15.2929 23.3585 13.6853 22.1817 12.3782C21.9896 12.1648 21.9896 11.8352 22.1817 11.6219C23.3585 10.3147 23.8273 8.70712 23.2595 7.33619C22.6916 5.96526 21.2233 5.16005 19.4669 5.06786C19.1803 5.05281 18.9472 4.81973 18.9321 4.53309C18.8399 2.77665 18.0347 1.30838 16.6638 0.740519C15.2929 0.172663 13.6853 0.641513 12.3781 1.8183C12.1648 2.01034 11.8352 2.01034 11.6218 1.8183C10.3147 0.641545 8.7071 0.172712 7.33619 0.74056C5.96527 1.30841 5.16006 2.77667 5.06785 4.53308C5.05281 4.81972 4.81972 5.0528 4.53308 5.06784C2.77665 5.16004 1.30838 5.96524 0.740519 7.33617C0.17266 8.7071 0.641519 10.3147 1.81831 11.6219C2.01036 11.8352 2.01036 12.1648 1.81832 12.3781ZM17.3648 8.00218C17.6421 7.52457 17.4797 6.91258 17.0021 6.63525C16.5245 6.35793 15.9125 6.5203 15.6352 6.99791L11.2253 14.5927C11.1429 14.7347 10.9484 14.76 10.8323 14.644L8.20711 12.0187C7.81658 11.6282 7.18342 11.6282 6.79289 12.0187C6.40237 12.4093 6.40237 13.0424 6.79289 13.433L10.5671 17.2071C10.7866 17.4267 11.0956 17.5318 11.4035 17.4916C11.7113 17.4515 11.9831 17.2707 12.139 17.0022L17.3648 8.00218Z"
            })
        })
    }
    a.displayName = a.name + " [from " + f.id + "]";
    g["default"] = a
}), 98);
__d("MPNVerifiedBadge.react", ["MPNVerifiedBadgeSVG.react", "react"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h = d("react");

    function a(a) {
        var b = a.size;
        a = a.verificationStatus;
        switch (a) {
            case "blue_verified":
                return h.jsx(c("MPNVerifiedBadgeSVG.react"), {
                    size: b,
                    color: "#1b77f2"
                });
            case "gray_verified":
                return h.jsx(c("MPNVerifiedBadgeSVG.react"), {
                    size: b,
                    color: "#5e6871"
                });
            default:
                return null
        }
    }
    a.displayName = a.name + " [from " + f.id + "]";
    g["default"] = a
}), 98);
__d("LiveChatPluginMessageComposerAttachmentItem.react", ["cx", "ix", "ChatPluginMessengerCrossButton.react", "Image.react", "MPNFileAttachmentIconSVG.react", "ShimButton.react", "formatFileSize", "react"], (function(a, b, c, d, e, f, g, h, i) {
    "use strict";
    var j = d("react");
    a = function(a) {
        babelHelpers.inheritsLoose(b, a);

        function b() {
            return a.apply(this, arguments) || this
        }
        var d = b.prototype;
        d.render = function() {
            var a = this.props.attachment;
            if (a.type.startsWith("image/")) return [j.jsx("div", {
                className: "_3l_i",
                style: {
                    backgroundImage: a.thumbnail_url
                }
            }, this.props.uploadID + "item"), j.jsx(c("ShimButton.react"), {
                className: "_3l_j _3l_k",
                onClick: this.props.removeAttachment
            }, this.props.uploadID + "removeButton")];
            var b = a.type.startsWith("video/") ? j.jsx(c("Image.react"), {
                src: i("359148")
            }) : j.jsx(c("MPNFileAttachmentIconSVG.react"), {});
            b = j.jsx("div", {
                className: "_3l_l",
                style: {
                    backgroundColor: this.props.threadColor
                },
                children: b
            });
            var d = a.name;
            a = c("formatFileSize")(a.size);
            return j.jsxs("div", {
                className: "_3l_m",
                children: [b, j.jsxs("div", {
                    className: "_3l_n",
                    children: [j.jsx("div", {
                        className: "_3l_o",
                        children: d
                    }), j.jsx("div", {
                        className: "_3l_p",
                        children: a
                    })]
                }), j.jsx("div", {
                    className: "_3l_j",
                    children: j.jsx(c("ChatPluginMessengerCrossButton.react"), {
                        onClose: this.props.removeAttachment,
                        isWhite: !0
                    })
                })]
            })
        };
        return b
    }(j.PureComponent);
    g["default"] = a
}), 98);
__d("LiveChatPluginAttachmentUploadError", ["keyMirror"], (function(a, b, c, d, e, f, g) {
    "use strict";
    a = Object.freeze(c("keyMirror")({
        NO_ERROR: "",
        UPLOAD_FAILED: "",
        EXCEEDED_FILE_MAX_SIZE: "",
        EXCEEDED_MAX_FILES: ""
    }));
    b = a;
    g["default"] = b
}), 98);
__d("LiveChatPluginMessageComposerAttachmentShelf.react", ["cx", "fbt", "LiveChatPluginAttachmentUploadError", "LiveChatPluginMessageComposerAttachmentItem.react", "XUISpinner.react", "react"], (function(a, b, c, d, e, f, g, h, i) {
    "use strict";
    var j = d("react");
    a = function(a) {
        babelHelpers.inheritsLoose(b, a);

        function b(b) {
            b = a.call(this, b) || this;
            b.$1 = new Map();
            return b
        }
        var d = b.prototype;
        d.render = function() {
            var a = this;
            if (this.props.attachments.size === 0 && this.props.error === c("LiveChatPluginAttachmentUploadError").NO_ERROR) return null;
            this.props.attachments.forEach(function(b, c) {
                a.$1.has(c) || a.$1.set(c, b)
            });
            this.$1.forEach(function(b, c) {
                a.props.attachments.has(c) || a.$1["delete"](c)
            });
            var b = Array.from(this.$1).map(function(b) {
                var d = b[0];
                b = b[1];
                return j.jsxs("div", {
                    className: "_1i5v",
                    children: [j.jsx(c("LiveChatPluginMessageComposerAttachmentItem.react"), {
                        attachment: b,
                        removeAttachment: function() {
                            a.props.removeAttachment(d)
                        },
                        threadColor: a.props.threadColor,
                        uploadID: d
                    }), a.props.uploadingAttachments.has(d) ? j.jsx(c("XUISpinner.react"), {
                        className: "_1i63",
                        "data-testid": void 0,
                        background: "dark",
                        size: "large"
                    }) : null]
                }, d)
            });
            return j.jsxs("div", {
                className: "_1i69",
                children: [this.$2(), j.jsx("div", {
                    className: "_2l9u",
                    children: b
                })]
            })
        };
        d.$2 = function() {
            var a;
            switch (this.props.error) {
                case c("LiveChatPluginAttachmentUploadError").EXCEEDED_MAX_FILES:
                    a = i._( /*FBT_CALL*/ "\u05d0\u05d9\u05df \u05dc\u05d4\u05e2\u05dc\u05d5\u05ea \u05d9\u05d5\u05ea\u05e8 \u05de-5 \u05e7\u05d1\u05e6\u05d9\u05dd \u05db\u05dc \u05e4\u05e2\u05dd. \u05e0\u05d0 \u05dc\u05e0\u05e1\u05d5\u05ea \u05e9\u05d5\u05d1." /*FBT_CALL*/ );
                    break;
                case c("LiveChatPluginAttachmentUploadError").EXCEEDED_FILE_MAX_SIZE:
                    a = i._( /*FBT_CALL*/ "\u05e7\u05d5\u05d1\u05e5 \u05d6\u05d4 \u05d7\u05d5\u05e8\u05d2 \u05de\u05de\u05d2\u05d1\u05dc\u05ea \u05d4\u05d2\u05d5\u05d3\u05dc \u05e9\u05dc 25MB." /*FBT_CALL*/ );
                    break;
                case c("LiveChatPluginAttachmentUploadError").UPLOAD_FAILED:
                    a = i._( /*FBT_CALL*/ "\u05dc\u05d0 \u05e0\u05d9\u05ea\u05df \u05dc\u05d4\u05e2\u05dc\u05d5\u05ea \u05d0\u05ea \u05d4\u05e7\u05d5\u05d1\u05e5 \u05d4\u05d6\u05d4. \u05e0\u05d0 \u05dc\u05e0\u05e1\u05d5\u05ea \u05e9\u05d5\u05d1." /*FBT_CALL*/ );
                    break;
                case c("LiveChatPluginAttachmentUploadError").NO_ERROR:
                default:
                    return null
            }
            return j.jsx("div", {
                className: "_2l9v",
                children: a
            })
        };
        return b
    }(j.PureComponent);
    g["default"] = a
}), 98);
__d("MessagingPluginReducer", ["MPNConstants", "MPNLocalState"], (function(a, b, c, d, e, f, g) {
    "use strict";

    function a(a, b) {
        var c;
        switch (b.type) {
            case "START_CHAT":
                return babelHelpers["extends"]({}, a, {
                    optimisticStorageState: b.optimisticStorageState,
                    accessToken: b.accessToken,
                    guestID: b.guestID
                });
            case "SET_UP_MESSAGE_STORE":
                return babelHelpers["extends"]({}, a, {
                    messageStore: b.messageStore
                });
            case "TOGGLE_HAS_ACTIVE_AUTOMATION":
                return babelHelpers["extends"]({}, a, {
                    hasActiveAutomation: b.hasActiveAutomation
                });
            case "TOGGLE_HAS_PERSISTENT_MENU":
                return babelHelpers["extends"]({}, a, {
                    hasPersistentMenu: b.hasPersistentMenu
                });
            case "END_CHAT":
                a.messageStore && a.messageStore.destroy();
                return babelHelpers["extends"]({}, a, {
                    messageStore: null,
                    accessToken: null,
                    optimisticStorageState: {
                        path: d("MPNLocalState").MPNLocalStatePath.WELCOME_PAGE,
                        chatState: d("MPNLocalState").MPNChatState.CHAT_NOT_STARTED,
                        visibility: d("MPNConstants").MPNVisibility.NOT_HIDDEN,
                        showCufeeModal: d("MPNConstants").MPNVisibility.HIDDEN,
                        showUpgradePrompt: d("MPNConstants").MPNUpgradePrompt.NOT_SHOWN
                    }
                });
            case "TOGGLE_END_CHAT":
                return babelHelpers["extends"]({}, a, {
                    showEndChat: b.showEndChat
                });
            case "UPDATE_DIALOG_VISIBILITY":
                return babelHelpers["extends"]({}, a, {
                    optimisticStorageState: babelHelpers["extends"]({}, a.optimisticStorageState, {
                        visibility: b.dialogVisibility
                    })
                });
            case "SDK_UPDATE":
                return babelHelpers["extends"]({}, a, {
                    loggedInGreeting: b.loggedInGreeting,
                    loggedOutGreeting: b.loggedOutGreeting,
                    refParam: b.refParam
                });
            case "UPDATE_BLOCK_STATUS":
                return babelHelpers["extends"]({}, a, {
                    isPageBlocked: b.isPageBlocked
                });
            case "UPDATE_UPGRADE_UPSELL_PROMPT":
                return babelHelpers["extends"]({}, a, {
                    messageCount: (c = b.messageCount) != null ? c : a.messageCount,
                    optimisticStorageState: babelHelpers["extends"]({}, a.optimisticStorageState, {
                        showUpgradePrompt: (c = b.upgradeUpsellPrompt) != null ? c : a.optimisticStorageState.showUpgradePrompt
                    })
                });
            case "UPDATE_COOKIE_ACCESS_DENIED":
                return babelHelpers["extends"]({}, a, {
                    cookieAccessDenied: b.cookieAccessDenied
                });
            case "UPDATE_CONTINUE_CLICK_TIME":
                return babelHelpers["extends"]({}, a, {
                    continueClickTime: b.continueClickTime
                });
            case "UPDATE_THREAD_EXISTS":
                return babelHelpers["extends"]({}, a, {
                    threadExists: !0
                });
            case "UPDATE_IS_LIGHTSWITCH_ENABLED_FOR_GUEST":
                return babelHelpers["extends"]({}, a, {
                    isLightswitchEnabledForGuest: b.isLightswitchEnabledForGuest,
                    showUpgradeUpsellPrompt: b.showUpgradeUpsellPrompt
                });
            case "SHOW_GUEST_UPGRADE_POPOVER":
                return babelHelpers["extends"]({}, a, {
                    showGuestUpgradePopover: b.showGuestUpgradePopover,
                    hasShownGuestUpgradePopover: b.hasShownGuestUpgradePopover
                });
            case "SHOW_CUFEE_MODAL":
                return babelHelpers["extends"]({}, a, {
                    optimisticStorageState: babelHelpers["extends"]({}, a.optimisticStorageState, {
                        showCufeeModal: b.showCufeeModal
                    })
                });
            case "UPDATE_DIALOG_PATH":
                return babelHelpers["extends"]({}, a, {
                    optimisticStorageState: babelHelpers["extends"]({}, a.optimisticStorageState, {
                        path: b.path
                    })
                });
            case "DISMISS_RE_ENGAGEMENT_DIALOG":
                return babelHelpers["extends"]({}, a, {
                    shouldRenderReEngagementDialog: b.shouldRenderReEngagementDialog
                });
            case "UPDATE_GREETING_VISIBILITY":
                return babelHelpers["extends"]({}, a, {
                    optimisticStorageState: babelHelpers["extends"]({}, a.optimisticStorageState, {
                        greetingVisibility: b.greetingVisibility
                    })
                });
            case "DISMISS_GREETING_DIALOG":
                return babelHelpers["extends"]({}, a, {
                    optimisticStorageState: babelHelpers["extends"]({}, a.optimisticStorageState, {
                        isGreetingDismissed: b.isGreetingDismissed
                    })
                });
            default:
                return a
        }
    }
    g["default"] = a
}), 98);
__d("MessagingPluginStateProvider", ["MessagingPluginContext", "MessagingPluginReducer", "react"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h = d("react"),
        i = d("react").useReducer;

    function a(a) {
        var b = a.initialState;
        a = a.children;
        b = i(c("MessagingPluginReducer"), b);
        var d = b[0];
        b = b[1];
        return h.jsx(c("MessagingPluginContext").Provider, {
            value: {
                dispatchAction: b,
                state: d
            },
            children: a
        })
    }
    a.displayName = a.name + " [from " + f.id + "]";
    g["default"] = a
}), 98);
__d("SyncProtocolConstants", [], (function(a, b, c, d, e, f) {
    a = "IRIS_CURSOR_LIMIT";
    b = "SNAPSHOT_FAILURE";
    f.IRIS_CURSOR_LIMIT = a;
    f.SNAPSHOT_FAILURE = b
}), 66);
__d("SyncProtocolClient", ["Int64", "MercurySingletonProvider", "MqttEnv", "SyncProtocolConstants", "exponentialBackoff"], (function(a, b, c, d, e, f, g) {
    "use strict";
    a = function() {
        a.getForFBID = function(a) {
            return h.getForFBID(a)
        };

        function a(a) {
            var b = this;
            this.$1 = a;
            this.$2 = [];
            this.$5 = d("MqttEnv").Env.getLoggerInstance();
            this.$10 = new(c("exponentialBackoff"))(function() {
                return b.$12()
            }, this)
        }
        var b = a.prototype;
        b.getPublishMessages = function() {
            return this.$13()
        };
        b.init = function(a, b, d, e, f) {
            var g = this;
            if (!b && !e) {
                this.$5.bumpCounter("sp_init_invalid_parameter");
                return this
            }
            this.$9 = a;
            this.$8 = !0;
            this.$3 = b ? c("Int64").fromString(b) : null;
            this.$6 = d;
            this.$7 = e;
            this.$4 = null;
            this.$11 = f;
            this.$9.subscribe("/t_ms", function(a) {
                return g.$14(a)
            });
            this.$9.subscribe("/thread_typing", function(a) {
                g.$15(a)
            });
            this.$9.subscribe("/orca_typing_notifications", function(a) {
                g.$15(a)
            });
            this.$9.subscribe("/notify_disconnect", function(a) {
                return g.$16(a)
            });
            this.connectToIris();
            return this
        };
        b.connectToIris = function(a) {
            a === void 0 && (a = null), a !== null && (this.$3 = c("Int64").fromString(a)), this.$8 = !0, this.$9.registerExtraConnectPayloadProvider(this)
        };
        b.$13 = function() {
            var a;
            if (this.$4) {
                if (!this.$3) {
                    this.$5.bumpCounter("connect_payload_iris_no_seq_id");
                    return []
                }
                a = this.$17()
            } else a = this.$18();
            this.$5.debugTrace("Sending request with MQTT Connect", JSON.stringify({
                topic: a.topic,
                payload: a.payload
            }));
            return [a]
        };
        b.$12 = function() {
            var a;
            if (this.$4) {
                if (!this.$3) {
                    this.$5.bumpCounter("subscribe_to_iris_no_seq_id");
                    return
                }
                a = this.$17()
            } else a = this.$18();
            this.$5.debugTrace("Sending request", JSON.stringify({
                topic: a.topic,
                payload: a.payload
            }));
            this.$9.publish(a.topic, a.payload, {
                qos: 1,
                skipBuffer: !0
            })
        };
        b.$19 = function(a) {
            var b = null;
            try {
                b = JSON.parse(a)
            } catch (a) {
                this.$5.logError(a, "Unable to process data")
            }
            return b
        };
        b.$15 = function(a) {
            var b = this.$19(a);
            if (b == null) {
                this.$5.logWarn("_processTypingData", "Unable to process typing data");
                return
            }
            this.$2.forEach(function(a) {
                typeof a.onTypingReceived === "function" && a.onTypingReceived(b)
            })
        };
        b.addDeltaStreamListener = function(a) {
            this.$2.push(a)
        };
        b.$16 = function(a) {
            this.$5.logWarn("_handleNotifyDisconnect", "Disconnecting reason: " + a), this.$5.bumpCounter("notify_disconnect_" + a), a === d("SyncProtocolConstants").IRIS_CURSOR_LIMIT && this.$20(a)
        };
        b.$20 = function(a) {
            this.$5.bumpCounter(a + "_request"), this.$4 = null, this.$8 = !1, this.$9.unregisterExtraConnectPayloadProvider(this), this.$2.forEach(function(b) {
                return b.onStreamDisconnect(a)
            })
        };
        b.$14 = function(a) {
            a = this.$19(a);
            if (a == null) {
                this.$5.logWarn("_processDeltas", "Unable to process delta");
                return
            }
            var b = {
                syncToken: a.syncToken,
                entityId: a.queueEntityId,
                errorCode: a.errorCode,
                firstSeqId: a.firstDeltaSeqId,
                lastSeqId: a.lastIssuedSeqId
            };
            this.$5.debugTrace("Sync data received", JSON.stringify(b));
            b = this.$1;
            a.queueEntityId != null && a.queueEntityId != b ? this.$5.bumpCounter("delta_for_other_fbid") : a.syncToken ? this.$21(a) : a.queueEntityId == null ? this.$5.bumpCounter("no_fbid") : a.errorCode ? this.$22(a.errorCode) : this.$23(a)
        };
        b.$22 = function(a) {
            this.$5.bumpCounter("iris_queue_error." + a), this.$5.logWarn("_handleIrisError", "Recevied an error code from sync protocol " + a), a === "ERROR_QUEUE_TEMPORARY_NOT_AVAILABLE" ? this.$10() : this.$20(a)
        };
        b.$21 = function(a) {
            var b = this,
                d = c("Int64").fromString(a.firstDeltaSeqId.toString());
            (this.$3 === null || this.$3 != null && !this.$3.equals(d)) && this.$5.bumpCounter("initial_sequence_id_mismatch");
            this.$4 = a.syncToken;
            this.$3 = d;
            this.$5.debugTrace("Sync token received", JSON.stringify({
                token: this.$4
            }));
            this.$9.getConnectionState() === "Connected" ? this.$12() : this.$9.subscribeChannelEvents({
                onMQTTStateChanged: function(a) {
                    a === "Connected" && b.$10.reset()
                }
            })
        };
        b.$23 = function(a) {
            var b = a.deltas,
                d = this.$3;
            if (b && d) {
                var e = c("Int64").fromString(a.firstDeltaSeqId.toString());
                a = c("Int64").fromString(a.lastIssuedSeqId.toString());
                e.equals(d.add(c("Int64").ONE)) ? this.$24(e, a, b) : e.compare(d) < 0 ? (this.$5.bumpCounter("delta_batch_in_middle"), a.compare(d) > 0 && this.$24(d.add(c("Int64").ONE), a, b)) : (this.$5.bumpCounter("missing_deltas_get_diffs"), this.$12())
            } else this.$5.bumpCounter("process_deltas_invalid_state")
        };
        b.$24 = function(a, b, d) {
            a = a;
            for (var e = 0; e < d.length; e++) {
                var f = d[e],
                    g = f["class"] || "Missing",
                    h = {
                        seqId: a.toString(),
                        type: g,
                        status: ""
                    },
                    i = 1;
                if (g != "Missing") try {
                    i = this.$25(f, g, a, h)
                } catch (a) {
                    h.status = "err:" + a.message
                } else h.status = "no type", this.$5.bumpCounter("missing_delta_type");
                this.$5.debugTrace("onDeltaReceived", JSON.stringify(h));
                a = a.add(c("Int64").fromInt(i))
            }
            this.$3 = b
        };
        b.$25 = function(a, b, d, e) {
            var f = 1,
                g = "";
            b === "NoOp" && (f = a.numNoOps || f, g += "n:" + f);
            a.irisSeqId || (a.irisSeqId = d.toString(), g += "missing seq id");
            var h = c("Int64").fromString(a.irisSeqId.toString()) || d;
            h.equals(d) ? g += " seqId match" : (g += " seqId mismatch", this.$5.bumpCounter("seq_id_running_id_mismatch"));
            var i = {
                type: b,
                payload: a
            };
            this.$2.forEach(function(a) {
                return a.onDeltaReceived(i)
            });
            e.status = g;
            return f
        };
        b.$18 = function() {
            var a = {
                sync_api_version: 10,
                max_deltas_able_to_process: 1e3,
                delta_batch_size: 500,
                encoding: "JSON",
                entity_fbid: this.$1,
                initial_titan_sequence_id: this.$3 && this.$3.toString(),
                device_params: this.$6,
                queue_position: this.$7,
                client_feature_id: this.$11
            };
            return {
                topic: "/messenger_sync_create_queue",
                payload: JSON.stringify(a),
                qos: 1
            }
        };
        b.$17 = function() {
            var a = {
                sync_token: this.$4,
                sync_api_version: 10,
                max_deltas_able_to_process: 1e3,
                delta_batch_size: 500,
                encoding: "JSON",
                entity_fbid: this.$1,
                last_seq_id: this.$3 && this.$3.toString(),
                client_feature_id: this.$11
            };
            return {
                topic: "/messenger_sync_get_diffs",
                payload: JSON.stringify(a),
                qos: 1
            }
        };
        return a
    }();
    var h = new(c("MercurySingletonProvider"))(a);
    g["default"] = a
}), 98);
__d("LiveChatMqttClient", ["Arbiter", "LiveChatPluginConstants", "LiveChatPluginLoggerUtil", "MPNStorage", "MercurySingletonProvider", "MessengerMQTTConnectionEvents", "MessengerWebPluginAnonymousTypedLogger", "MqttChannel", "MqttEnvInitializer", "Network", "SyncProtocolClient"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h = 225396507985893,
        i = "n",
        j = "wss://edge-chat.facebook.com/chat";
    a = function() {
        function a(a) {
            this.$1 = a
        }
        a.getForFBID = function(a) {
            var b = k.resetAll();
            for (var c in b) b[c].shutdown();
            return k.getForFBID(a)
        };
        a.setUp = function(b, c, d, e, f) {
            f === void 0 && (f = null);
            var g = a.getForFBID(c);
            g.init(b, c, d, e, f)
        };
        var b = a.prototype;
        b.init = function(a, b, e, f, g) {
            var k = this;
            d("MqttEnvInitializer").initialize();
            this.$2 = a;
            this.$3 = new(c("MqttChannel"))({
                endpoint: j,
                pollingEndpoint: "",
                userFbid: b,
                appId: h,
                initialSubscribedTopics: ["/t_ms"],
                capabilities: 0,
                clientCapabilities: 1,
                chatVisibility: !0,
                guestAuthString: g
            });
            a = {
                thread_filter: [{
                    other_user_fbid: a
                }]
            };
            !e ? c("SyncProtocolClient").getForFBID(b).init(this.$3, null, a, i).addDeltaStreamListener(this) : c("SyncProtocolClient").getForFBID(b).init(this.$3, e, a).addDeltaStreamListener(this);
            var l = f !== null || g !== null ? this.$1 : null;
            new(c("MessengerWebPluginAnonymousTypedLogger"))().setClientFbid(l).setPageID(this.$2).setRequestID(c("MPNStorage").getRequestID()).setEvent("customer_chat_mqtt_connection_initiated").setEventTimestamp(Date.now()).log();
            this.$3.subscribeChannelEvents({
                onMQTTStateChanged: function(a) {
                    a === d("LiveChatPluginConstants").MQTTGatewayConnectionState.CONNECTED && (f && f()), (c("Network").isOnline() || a !== d("LiveChatPluginConstants").MQTTGatewayConnectionState.CONNECTING) && c("Arbiter").inform(d("LiveChatPluginConstants").STATE_UPDATE, a), new(c("MessengerWebPluginAnonymousTypedLogger"))().setClientFbid(l).setPageID(k.$2).setRequestID(c("MPNStorage").getRequestID()).setEvent("customer_chat_mqtt_connection_state_changed").setEventTimestamp(Date.now()).log()
                }
            });
            c("Network").addListener("offline", function() {
                k.$3.getConnectionState() === d("LiveChatPluginConstants").MQTTGatewayConnectionState.CONNECTED && c("Arbiter").inform(d("LiveChatPluginConstants").STATE_UPDATE, d("LiveChatPluginConstants").MQTTGatewayConnectionState.DISCONNECTED)
            });
            c("Network").addListener("online", function() {
                k.$3.getConnectionState() === d("LiveChatPluginConstants").MQTTGatewayConnectionState.CONNECTED && c("Arbiter").inform(d("LiveChatPluginConstants").STATE_UPDATE, d("LiveChatPluginConstants").MQTTGatewayConnectionState.CONNECTED)
            });
            this.$3.subscribe("/orca_typing_notifications", function(a) {
                c("Arbiter").inform(d("LiveChatPluginConstants").TYPING_UPDATE, JSON.parse(a).state)
            })
        };
        b.onDeltaReceived = function(a) {
            var b = a.type;
            a = a.payload;
            try {
                b = b.replace(/^delta/, "unknown");
                var e = Number(a.irisSeqId);
                a = {
                    delta: babelHelpers["extends"]({}, a, {
                        "class": b
                    }),
                    iseq: e,
                    type: "delta"
                };
                c("Arbiter").inform(d("MessengerMQTTConnectionEvents").DELTA_EVENT, {
                    obj: a
                });
                d("LiveChatPluginLoggerUtil").logDelta(this.$1, this.$2, b, e)
            } catch (a) {
                new(c("MessengerWebPluginAnonymousTypedLogger"))().setClientFbid(this.$1).setPageID(this.$2).setRequestID(c("MPNStorage").getRequestID()).setEvent("customer_chat_delta_parsing_error").setEventTimestamp(Date.now()).logVital()
            }
        };
        b.onStreamDisconnect = function(a) {};
        b.shutdown = function() {
            this.$3.shutdown()
        };
        return a
    }();
    var k = new(c("MercurySingletonProvider"))(a);
    g["default"] = a
}), 98);
__d("ChatPluginLandingLoadQplLogger", ["QuickPerformanceLogger", "qpl"], (function(a, b, c, d, e, f, g) {
    "use strict";

    function a() {
        c("QuickPerformanceLogger").markerStart(c("qpl")._(968826519, "5"))
    }

    function b() {
        c("QuickPerformanceLogger").markerEnd(c("qpl")._(968826519, "5"), 2)
    }

    function d() {
        c("QuickPerformanceLogger").markerEnd(c("qpl")._(968826519, "5"), 3)
    }

    function e(a, b) {
        c("QuickPerformanceLogger").markerAnnotate(c("qpl")._(968826519, "5"), {
            string: {
                page_id: a,
                request_id: b
            }
        })
    }
    g.logChatPluginLandingLoadModuleStart = a;
    g.logChatPluginLandingLoadModuleEndSuccess = b;
    g.logChatPluginLandingLoadModuleEndFail = d;
    g.logChatPluginLandingLoadModuleAnnotation = e
}), 98);
__d("ChatPluginThreadLoadQplLogger", ["QuickPerformanceLogger", "qpl"], (function(a, b, c, d, e, f, g) {
    "use strict";

    function a() {
        c("QuickPerformanceLogger").markerStart(c("qpl")._(968822565, "3437"))
    }

    function b() {
        c("QuickPerformanceLogger").markerEnd(c("qpl")._(968822565, "3437"), 2)
    }

    function d() {
        c("QuickPerformanceLogger").markerEnd(c("qpl")._(968822565, "3437"), 3)
    }
    g.logChatPluginThreadLoadModuleStart = a;
    g.logChatPluginThreadLoadModuleEndSuccess = b;
    g.logChatPluginThreadLoadModuleEndFail = d
}), 98);
__d("CreateCustomerChatPluginGuestUserMutation", ["CreateCustomerChatPluginGuestUserMutation.graphql", "RelayFBEnvironment", "RelayModern"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h;

    function a(a, e) {
        d("RelayModern").commitMutation(c("RelayFBEnvironment"), {
            mutation: h !== void 0 ? h : h = b("CreateCustomerChatPluginGuestUserMutation.graphql"),
            variables: a,
            onCompleted: e && e.onSuccess,
            onError: e && e.onFailure
        })
    }
    g.commit = a
}), 98);
__d("LiveChatPluginGuestUserRelayEnvironment", ["MPNStorage", "RelayFBResponseCache", "RelayModern", "RelayRuntime", "URI", "cr:1121434", "createRelayFBNetwork", "createRelayFBNetworkFetch", "createRelayFBSubscribeFunction"], (function(a, b, c, d, e, f, g) {
    "use strict";
    a = new(c("RelayRuntime").RecordSource)();
    var h = new(c("RelayRuntime").Store)(a, {
            gcReleaseBufferSize: 10
        }),
        i = c("MPNStorage").getAccessToken(),
        j = (e = c("MPNStorage").getFBStorageState()) == null ? void 0 : e.userID;
    f = function(a, b) {
        if (!k.called) return !1;
        if (a != i || b != j) {
            i = a;
            j = b;
            return !1
        }
        return !0
    };
    var k = function a(e, f, g) {
        a.called = !0;
        var i = {
            accessToken: e,
            view_context_type: "lcop"
        };
        g === !0 && delete i.view_context_type;
        e = c("createRelayFBNetwork")(c("createRelayFBNetworkFetch")({
            graphURI: new(c("URI"))("/api/live_chat/graphql"),
            getAdditionalData: function() {
                return i
            },
            queryResponseCache: c("RelayFBResponseCache")
        }), c("createRelayFBSubscribeFunction")({
            queryResponseCache: c("RelayFBResponseCache")
        }));
        return d("RelayModern").createEnvironment({
            configName: "LiveChatPluginGuestUserRelayEnvironment",
            log: b("cr:1121434") != null ? b("cr:1121434")() : null,
            network: e,
            store: h,
            actorID: f
        })
    };
    g.isEnvSet = f;
    g.get = k
}), 98);
__d("getLiveChatPluginGuestUserRelayEnvironment", ["LiveChatPluginGuestUserRelayEnvironment", "MPNIdentity", "MPNStorage", "RelayFBEnvironment"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h = c("RelayFBEnvironment");

    function a(a) {
        var b, e;
        b = a === !0 ? null : (b = c("MPNStorage").getAccessToken()) != null ? b : (b = d("MPNIdentity").MPNIdentity.currentUser()) == null ? void 0 : b.accessToken;
        (e = d("MPNIdentity").MPNIdentity.currentUser()) == null ? void 0 : e.accessToken;
        e = (e = (e = c("MPNStorage").getFBStorageState()) == null ? void 0 : e.userID) != null ? e : (e = d("MPNIdentity").MPNIdentity.currentUser()) == null ? void 0 : e.id;
        (b != null || a) && e != null && d("LiveChatPluginGuestUserRelayEnvironment").isEnvSet(b, e) === !1 && (h = d("LiveChatPluginGuestUserRelayEnvironment").get(b, e, a));
        return h
    }
    g["default"] = a
}), 98);
__d("LiveChatPluginGuestPersistentMenuQuery", ["LiveChatPluginGuestPersistentMenuQuery.graphql", "LiveChatPluginLoggerUtil", "MNCommerceCallToActionType", "RelayModern", "getLiveChatPluginGuestUserRelayEnvironment", "promiseDone"], (function(a, b, c, d, e, f, g) {
    "use strict";
    var h, i = h !== void 0 ? h : h = b("LiveChatPluginGuestPersistentMenuQuery.graphql");
    a = function(a, b, e) {
        c("promiseDone")(d("RelayModern").fetchQuery(c("getLiveChatPluginGuestUserRelayEnvironment")(!1), i, {
            data: {
                page_id: a,
                session_key: b
            }
        }), function(a) {
            a = a == null ? void 0 : a.customer_chat_plugin_guest_user_persistent_menu;
            if (a == null) {
                e(a);
                return
            }
            a = a.menu_items.map(function(a) {
                return a == null ? null : {
                    title: a.title,
                    id: a.id,
                    action_link: a.action_link,
                    action_type: c("MNCommerceCallToActionType")[a.action_type]
                }
            });
            e(a)
        }, function(b) {
            d("LiveChatPluginLoggerUtil").logNewImpressionEvents_UnsafeFor3PD("customer_chat_guest_persistent_menu_fetch_failed", a, null, null, JSON.stringify(babelHelpers["extends"]({}, d("LiveChatPluginLoggerUtil").getErrorData(b))))
        })
    };
    g.fetch = a
}), 98);
__d("MessagingPluginSDKActionUtil", ["LiveChatPluginLoggerUtil", "MPNConstants", "MPNStorage"], (function(a, b, c, d, e, f, g) {
    "use strict";

    function a(a, b) {
        a = a.state.pageID;
        b = d("LiveChatPluginLoggerUtil").EVENTMAP[b.data.event];
        d("LiveChatPluginLoggerUtil").logImpressionUsingXController_SafeFor3PD(a, "bubble", null, null, null, null, null, null, null, null, null, !1, !1, null, null, b)
    }

    function b(a, b) {
        var c = a.state;
        a = a.dispatchAction;
        var d = c.loggedInGreeting,
            e = c.loggedOutGreeting;
        c = c.refParam;
        try {
            b = (b = b.data) == null ? void 0 : (b = b.message) == null ? void 0 : b.params;
            if (b == null) return;
            b = JSON.parse(b);
            var f = h(b.logged_in_greeting),
                g = h(b.logged_out_greeting);
            f = (f = f) != null ? f : d;
            g = (d = g) != null ? d : e;
            a({
                type: "SDK_UPDATE",
                loggedInGreeting: (d = f) != null ? d : "",
                loggedOutGreeting: (e = g) != null ? e : "",
                refParam: (a = b.ref) != null ? a : c
            })
        } catch (a) {}
    }

    function e(a, b) {
        b = ((b = b.data.params) == null ? void 0 : b.is_dialog_hidden) == !0 ? d("MPNConstants").MPNVisibility.HIDDEN : d("MPNConstants").MPNVisibility.NOT_HIDDEN;
        c("MPNStorage").setVisibility(b);
        a.dispatchAction({
            type: "UPDATE_DIALOG_VISIBILITY",
            dialogVisibility: b
        })
    }

    function h(a) {
        if (a == null || a === "") return null;
        else if (Array.from(a).length > 80 || typeof a !== "string") return null;
        else return a
    }
    g.logSDKCalls = a;
    g.updateGreetingTextAndRefParam = b;
    g.updateDialogVisibility = e
}), 98);
__d("PrivacyTransparentOverlay.react", ["cx", "react"], (function(a, b, c, d, e, f, g, h) {
    "use strict";
    var i = d("react");
    a = function(a) {
        babelHelpers.inheritsLoose(b, a);

        function b() {
            return a.apply(this, arguments) || this
        }
        var c = b.prototype;
        c.render = function() {
            return i.jsxs("div", {
                className: "_4cqr",
                children: [this.props.children, i.jsx("div", {
                    className: "clearfix"
                })]
            })
        };
        return b
    }(i.PureComponent);
    g["default"] = a
}), 98);
__d("ReactDOMServer-prod.classic", ["ReactFeatureFlags", "react"], (function(b, c, d, e, f, g) {
    "use strict";
    var h, i = h || c("react");

    function j(b) {
        for (var c = "https://reactjs.org/docs/error-decoder.html?invariant=" + b, d = 1; d < arguments.length; d++) c += "&args[]=" + encodeURIComponent(arguments[d]);
        return "Minified React error #" + b + "; visit " + c + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
    }
    var k = Array.isArray,
        l = c("ReactFeatureFlags").enableFilterEmptyStringAttributesDOM;
    e = "function" !== typeof Symbol || !Symbol["for"];
    var m = e ? 60106 : Symbol["for"]("react.portal"),
        n = e ? 60107 : Symbol["for"]("react.fragment"),
        o = e ? 60108 : Symbol["for"]("react.strict_mode"),
        p = e ? 60114 : Symbol["for"]("react.profiler"),
        q = e ? 60109 : Symbol["for"]("react.provider"),
        r = e ? 60110 : Symbol["for"]("react.context"),
        s = e ? 60134 : Symbol["for"]("react.server_context"),
        t = e ? 60112 : Symbol["for"]("react.forward_ref"),
        u = e ? 60113 : Symbol["for"]("react.suspense"),
        v = e ? 60120 : Symbol["for"]("react.suspense_list"),
        w = e ? 60115 : Symbol["for"]("react.memo"),
        x = e ? 60116 : Symbol["for"]("react.lazy"),
        ba = e ? 60119 : Symbol["for"]("react.scope"),
        ca = e ? 60129 : Symbol["for"]("react.debug_trace_mode"),
        da = e ? 60131 : Symbol["for"]("react.legacy_hidden"),
        ea = e ? 60132 : Symbol["for"]("react.cache");

    function y(b) {
        if (null == b) return null;
        if ("function" === typeof b) return b.displayName || b.name || null;
        if ("string" === typeof b) return b;
        switch (b) {
            case n:
                return "Fragment";
            case m:
                return "Portal";
            case p:
                return "Profiler";
            case o:
                return "StrictMode";
            case u:
                return "Suspense";
            case v:
                return "SuspenseList";
            case ea:
                return "Cache"
        }
        if ("object" === typeof b) switch (b.$$typeof) {
            case r:
                return (b.displayName || "Context") + ".Consumer";
            case q:
                return (b._context.displayName || "Context") + ".Provider";
            case t:
                var c = b.render;
                b = b.displayName;
                b || (b = c.displayName || c.name || "", b = "" !== b ? "ForwardRef(" + b + ")" : "ForwardRef");
                return b;
            case w:
                return c = b.displayName || null, null !== c ? c : y(b.type) || "Memo";
            case x:
                c = b._payload;
                b = b._init;
                try {
                    return y(b(c))
                } catch (b) {
                    break
                }
            case s:
                return (b.displayName || b._globalName) + ".Provider"
        }
        return null
    }
    var z = Object.assign;
    f = i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    var A = Object.prototype.hasOwnProperty,
        B = {};

    function C(b, c) {
        for (var d = b._threadCount | 0; d <= c; d++) b[d] = b._currentValue2, b._threadCount = d + 1
    }

    function fa(b, c, d, e) {
        if (e && (e = b.contextType, "object" === typeof e && null !== e)) return C(e, d), e[d];
        if (b = b.contextTypes) {
            d = {};
            for (var e in b) d[e] = c[e];
            c = d
        } else c = B;
        return c
    }
    for (var D = new Uint16Array(16), c = 0; 15 > c; c++) D[c] = c + 1;
    D[15] = 0;
    var ga = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
        E = {},
        F = {};

    function G(b) {
        if (A.call(F, b)) return !0;
        if (A.call(E, b)) return !1;
        if (ga.test(b)) return F[b] = !0;
        E[b] = !0;
        return !1
    }

    function ha(b, c, d, e) {
        if (null !== d && 0 === d.type) return !1;
        switch (typeof c) {
            case "function":
            case "symbol":
                return !0;
            case "boolean":
                if (e) return !1;
                if (null !== d) return !d.acceptsBooleans;
                b = b.toLowerCase().slice(0, 5);
                return "data-" !== b && "aria-" !== b;
            default:
                return !1
        }
    }

    function ia(b, c, d, e) {
        if (null === c || "undefined" === typeof c || ha(b, c, d, e)) return !0;
        if (e) return !1;
        if (null !== d) {
            if (l && d.removeEmptyString && "" === c) return !0;
            switch (d.type) {
                case 3:
                    return !c;
                case 4:
                    return !1 === c;
                case 5:
                    return isNaN(c);
                case 6:
                    return isNaN(c) || 1 > c
            }
        }
        return !1
    }

    function H(b, c, d, e, f, g, h) {
        this.acceptsBooleans = 2 === c || 3 === c || 4 === c, this.attributeName = e, this.attributeNamespace = f, this.mustUseProperty = d, this.propertyName = b, this.type = c, this.sanitizeURL = g, this.removeEmptyString = h
    }
    var I = {};
    "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(b) {
        I[b] = new H(b, 0, !1, b, null, !1, !1)
    });
    [
        ["acceptCharset", "accept-charset"],
        ["className", "class"],
        ["htmlFor", "for"],
        ["httpEquiv", "http-equiv"]
    ].forEach(function(b) {
        var c = b[0];
        I[c] = new H(c, 1, !1, b[1], null, !1, !1)
    });
    ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(b) {
        I[b] = new H(b, 2, !1, b.toLowerCase(), null, !1, !1)
    });
    ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(b) {
        I[b] = new H(b, 2, !1, b, null, !1, !1)
    });
    "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(b) {
        I[b] = new H(b, 3, !1, b.toLowerCase(), null, !1, !1)
    });
    ["checked", "multiple", "muted", "selected"].forEach(function(b) {
        I[b] = new H(b, 3, !0, b, null, !1, !1)
    });
    ["capture", "download"].forEach(function(b) {
        I[b] = new H(b, 4, !1, b, null, !1, !1)
    });
    ["cols", "rows", "size", "span"].forEach(function(b) {
        I[b] = new H(b, 6, !1, b, null, !1, !1)
    });
    ["rowSpan", "start"].forEach(function(b) {
        I[b] = new H(b, 5, !1, b.toLowerCase(), null, !1, !1)
    });
    var J = /[\-:]([a-z])/g;

    function K(b) {
        return b[1].toUpperCase()
    }
    "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(b) {
        var c = b.replace(J, K);
        I[c] = new H(c, 1, !1, b, null, !1, !1)
    });
    "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(b) {
        var c = b.replace(J, K);
        I[c] = new H(c, 1, !1, b, "http://www.w3.org/1999/xlink", !1, !1)
    });
    ["xml:base", "xml:lang", "xml:space"].forEach(function(b) {
        var c = b.replace(J, K);
        I[c] = new H(c, 1, !1, b, "http://www.w3.org/XML/1998/namespace", !1, !1)
    });
    ["tabIndex", "crossOrigin"].forEach(function(b) {
        I[b] = new H(b, 1, !1, b.toLowerCase(), null, !1, !1)
    });
    I.xlinkHref = new H("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1);
    ["src", "href", "action", "formAction"].forEach(function(b) {
        I[b] = new H(b, 1, !1, b.toLowerCase(), null, !0, !0)
    });
    var ja = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*:/i,
        ka = /[\"\'&<>]/;

    function L(b) {
        if ("boolean" === typeof b || "number" === typeof b) return "" + b;
        b = "" + b;
        var c = ka.exec(b);
        if (c) {
            var d = "",
                e, f = 0;
            for (e = c.index; e < b.length; e++) {
                switch (b.charCodeAt(e)) {
                    case 34:
                        c = "&quot;";
                        break;
                    case 38:
                        c = "&amp;";
                        break;
                    case 39:
                        c = "&#x27;";
                        break;
                    case 60:
                        c = "&lt;";
                        break;
                    case 62:
                        c = "&gt;";
                        break;
                    default:
                        continue
                }
                f !== e && (d += b.substring(f, e));
                f = e + 1;
                d += c
            }
            b = f !== e ? d + b.substring(f, e) : d
        }
        return b
    }

    function la(b, c) {
        var d = Object.prototype.hasOwnProperty.call(I, b) ? I[b] : null,
            e;
        (e = "style" !== b) && (e = null !== d ? 0 === d.type : !(2 < b.length) || "o" !== b[0] && "O" !== b[0] || "n" !== b[1] && "N" !== b[1] ? !1 : !0);
        if (e || ia(b, c, d, !1)) return "";
        if (null !== d) {
            b = d.attributeName;
            e = d.type;
            if (3 === e || 4 === e && !0 === c) return b + '=""';
            if (d.sanitizeURL && (c = "" + c, ja.test(c))) throw Error(j(323));
            return b + '="' + (L(c) + '"')
        }
        return G(b) ? b + '="' + (L(c) + '"') : ""
    }

    function b(b, c) {
        return b === c && (0 !== b || 1 / b === 1 / c) || b !== b && c !== c
    }
    var ma = "function" === typeof Object.is ? Object.is : b,
        M = null,
        N = null,
        O = null,
        P = !1,
        Q = !1,
        R = null,
        S = 0;

    function T() {
        if (null === M) throw Error(j(321));
        return M
    }

    function U() {
        if (0 < S) throw Error(j(312));
        return {
            memoizedState: null,
            queue: null,
            next: null
        }
    }

    function V() {
        null === O ? null === N ? (P = !1, N = O = U()) : (P = !0, O = N) : null === O.next ? (P = !1, O = O.next = U()) : (P = !0, O = O.next);
        return O
    }

    function W(b, c, d, e) {
        for (; Q;) Q = !1, S += 1, O = null, d = b(c, e);
        na();
        return d
    }

    function na() {
        M = null, Q = !1, N = null, S = 0, O = R = null
    }

    function oa(b, c) {
        return "function" === typeof c ? c(b) : c
    }

    function pa(b, c, d) {
        M = T();
        O = V();
        if (P) {
            var e = O.queue;
            c = e.dispatch;
            if (null !== R && (d = R.get(e), void 0 !== d)) {
                R["delete"](e);
                e = O.memoizedState;
                do e = b(e, d.action), d = d.next; while (null !== d);
                O.memoizedState = e;
                return [e, c]
            }
            return [O.memoizedState, c]
        }
        b = b === oa ? "function" === typeof c ? c() : c : void 0 !== d ? d(c) : c;
        O.memoizedState = b;
        b = O.queue = {
            last: null,
            dispatch: null
        };
        b = b.dispatch = ra.bind(null, M, b);
        return [O.memoizedState, b]
    }

    function qa(b, c) {
        M = T();
        O = V();
        c = void 0 === c ? null : c;
        if (null !== O) {
            var d = O.memoizedState;
            if (null !== d && null !== c) {
                var e = d[1];
                a: if (null === e) e = !1;
                    else {
                        for (var f = 0; f < e.length && f < c.length; f++)
                            if (!ma(c[f], e[f])) {
                                e = !1;
                                break a
                            }
                        e = !0
                    }
                if (e) return d[0]
            }
        }
        b = b();
        O.memoizedState = [b, c];
        return b
    }

    function ra(b, c, d) {
        if (25 <= S) throw Error(j(301));
        if (b === M)
            if (Q = !0, b = {
                    action: d,
                    next: null
                }, null === R && (R = new Map()), d = R.get(c), void 0 === d) R.set(c, b);
            else {
                for (c = d; null !== c.next;) c = c.next;
                c.next = b
            }
    }

    function d() {}
    var X = null,
        sa = {
            readContext: function(b) {
                var c = X.threadID;
                C(b, c);
                return b[c]
            },
            useContext: function(b) {
                T();
                var c = X.threadID;
                C(b, c);
                return b[c]
            },
            useMemo: qa,
            useReducer: pa,
            useRef: function(b) {
                M = T();
                O = V();
                var c = O.memoizedState;
                return null === c ? (b = {
                    current: b
                }, O.memoizedState = b) : c
            },
            useState: function(b) {
                return pa(oa, b)
            },
            useInsertionEffect: function() {},
            useLayoutEffect: function() {},
            useCallback: function(b, c) {
                return qa(function() {
                    return b
                }, c)
            },
            useImperativeHandle: d,
            useEffect: d,
            useDebugValue: d,
            useDeferredValue: function(b) {
                T();
                return b
            },
            useTransition: function() {
                T();
                return [!1, function(b) {
                    b()
                }]
            },
            useId: function() {
                throw Error(j(248))
            },
            useMutableSource: function(b, c) {
                T();
                return c(b._source)
            },
            useSyncExternalStore: function(b, c, d) {
                if (void 0 === d) throw Error(j(407));
                return d()
            },
            getCacheSignal: function() {
                throw Error(j(248))
            },
            getCacheForType: function() {
                throw Error(j(248))
            },
            useCacheRefresh: function() {
                throw Error(j(248))
            }
        };

    function ta(b) {
        switch (b) {
            case "svg":
                return "http://www.w3.org/2000/svg";
            case "math":
                return "http://www.w3.org/1998/Math/MathML";
            default:
                return "http://www.w3.org/1999/xhtml"
        }
    }
    var ua = {
            area: !0,
            base: !0,
            br: !0,
            col: !0,
            embed: !0,
            hr: !0,
            img: !0,
            input: !0,
            keygen: !0,
            link: !0,
            meta: !0,
            param: !0,
            source: !0,
            track: !0,
            wbr: !0
        },
        va = z({
            menuitem: !0
        }, ua),
        Y = {
            animationIterationCount: !0,
            aspectRatio: !0,
            borderImageOutset: !0,
            borderImageSlice: !0,
            borderImageWidth: !0,
            boxFlex: !0,
            boxFlexGroup: !0,
            boxOrdinalGroup: !0,
            columnCount: !0,
            columns: !0,
            flex: !0,
            flexGrow: !0,
            flexPositive: !0,
            flexShrink: !0,
            flexNegative: !0,
            flexOrder: !0,
            gridArea: !0,
            gridRow: !0,
            gridRowEnd: !0,
            gridRowSpan: !0,
            gridRowStart: !0,
            gridColumn: !0,
            gridColumnEnd: !0,
            gridColumnSpan: !0,
            gridColumnStart: !0,
            fontWeight: !0,
            lineClamp: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            tabSize: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0,
            fillOpacity: !0,
            floodOpacity: !0,
            stopOpacity: !0,
            strokeDasharray: !0,
            strokeDashoffset: !0,
            strokeMiterlimit: !0,
            strokeOpacity: !0,
            strokeWidth: !0
        },
        wa = ["Webkit", "ms", "Moz", "O"];
    Object.keys(Y).forEach(function(b) {
        wa.forEach(function(c) {
            c = c + b.charAt(0).toUpperCase() + b.substring(1), Y[c] = Y[b]
        })
    });
    var xa = /([A-Z])/g,
        ya = /^ms-/,
        Z = i.Children.toArray,
        $ = f.ReactCurrentDispatcher,
        za = {
            listing: !0,
            pre: !0,
            textarea: !0
        },
        Aa = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/,
        Ba = {},
        aa = {};

    function Ca(b) {
        if (void 0 === b || null === b) return b;
        var c = "";
        i.Children.forEach(b, function(b) {
            null != b && (c += b)
        });
        return c
    }
    var Da = {
        children: null,
        dangerouslySetInnerHTML: null,
        suppressContentEditableWarning: null,
        suppressHydrationWarning: null
    };

    function Ea(b, c, d) {
        function e(e, f) {
            var g = f.prototype && f.prototype.isReactComponent,
                h = fa(f, c, d, g),
                i = [],
                k = !1,
                l = {
                    isMounted: function() {
                        return !1
                    },
                    enqueueForceUpdate: function() {
                        if (null === i) return null
                    },
                    enqueueReplaceState: function(b, c) {
                        k = !0, i = [c]
                    },
                    enqueueSetState: function(b, c) {
                        if (null === i) return null;
                        i.push(c)
                    }
                };
            if (g) {
                g = new f(e.props, h, l);
                if ("function" === typeof f.getDerivedStateFromProps) {
                    var m = f.getDerivedStateFromProps.call(null, e.props, g.state);
                    null != m && (g.state = z({}, g.state, m))
                }
                g.props = e.props;
                g.context = h;
                g.updater = l;
                l = g.state;
                void 0 === l && (g.state = l = null);
                if ("function" === typeof g.UNSAFE_componentWillMount || "function" === typeof g.componentWillMount)
                    if ("function" === typeof g.componentWillMount && "function" !== typeof f.getDerivedStateFromProps && g.componentWillMount(), "function" === typeof g.UNSAFE_componentWillMount && "function" !== typeof f.getDerivedStateFromProps && g.UNSAFE_componentWillMount(), i.length) {
                        l = i;
                        var n = k;
                        i = null;
                        k = !1;
                        if (n && 1 === l.length) g.state = l[0];
                        else {
                            m = n ? l[0] : g.state;
                            var o = !0;
                            for (n = n ? 1 : 0; n < l.length; n++) {
                                var p = l[n];
                                p = "function" === typeof p ? p.call(g, m, e.props, h) : p;
                                null != p && (o ? (o = !1, m = z({}, m, p)) : z(m, p))
                            }
                            g.state = m
                        }
                    } else i = null;
                b = g.render();
                if ("function" === typeof g.getChildContext && (e = f.childContextTypes, "object" === typeof e)) {
                    var q = g.getChildContext();
                    for (var p in q)
                        if (!(p in e)) throw Error(j(108, y(f) || "Unknown", p))
                }
                q && (c = z({}, c, q))
            } else M = {}, g = f(e.props, h, l), b = g = W(f, e.props, g, h)
        }
        for (; i.isValidElement(b);) {
            var f = b,
                g = f.type;
            if ("function" !== typeof g) break;
            e(f, g)
        }
        return {
            child: b,
            context: c
        }
    }
    var Fa = function() {
        function b(b, c) {
            i.isValidElement(b) ? b.type !== n ? b = [b] : (b = b.props.children, b = i.isValidElement(b) ? [b] : Z(b)) : b = Z(b);
            b = {
                type: null,
                domNamespace: "http://www.w3.org/1999/xhtml",
                children: b,
                childIndex: 0,
                context: B,
                footer: ""
            };
            var d = D[0];
            if (0 === d) {
                var e = D;
                d = e.length;
                var f = 2 * d;
                if (65536 < f) throw Error(j(304));
                var g = new Uint16Array(f);
                g.set(e);
                D = g;
                D[0] = d + 1;
                for (e = d; e < f - 1; e++) D[e] = e + 1;
                D[f - 1] = 0
            } else D[0] = D[d];
            this.threadID = d;
            this.stack = [b];
            this.exhausted = !1;
            this.currentSelectValue = null;
            this.previousWasTextNode = !1;
            this.makeStaticMarkup = c;
            this.suspenseDepth = 0;
            this.contextIndex = -1;
            this.contextStack = [];
            this.contextValueStack = []
        }
        var c = b.prototype;
        c.destroy = function() {
            if (!this.exhausted) {
                this.exhausted = !0;
                this.clearProviders();
                var b = this.threadID;
                D[b] = D[0];
                D[0] = b
            }
        };
        c.pushProvider = function(b) {
            var c = ++this.contextIndex,
                d = b.type._context,
                e = this.threadID;
            C(d, e);
            var f = d[e];
            this.contextStack[c] = d;
            this.contextValueStack[c] = f;
            d[e] = b.props.value
        };
        c.popProvider = function() {
            var b = this.contextIndex,
                c = this.contextStack[b],
                d = this.contextValueStack[b];
            this.contextStack[b] = null;
            this.contextValueStack[b] = null;
            this.contextIndex--;
            c[this.threadID] = d
        };
        c.clearProviders = function() {
            for (var b = this.contextIndex; 0 <= b; b--) this.contextStack[b][this.threadID] = this.contextValueStack[b]
        };
        c.read = function(b) {
            if (this.exhausted) return null;
            var c = X;
            X = this;
            var d = $.current;
            $.current = sa;
            try {
                for (var e = [""], f = !1; e[0].length < b;) {
                    if (0 === this.stack.length) {
                        this.exhausted = !0;
                        var g = this.threadID;
                        D[g] = D[0];
                        D[0] = g;
                        break
                    }
                    g = this.stack[this.stack.length - 1];
                    if (f || g.childIndex >= g.children.length) {
                        var h = g.footer;
                        "" !== h && (this.previousWasTextNode = !1);
                        this.stack.pop();
                        if ("select" === g.type) this.currentSelectValue = null;
                        else if (null != g.type && null != g.type.type && g.type.type.$$typeof === q) this.popProvider(g.type);
                        else if (g.type === u) {
                            this.suspenseDepth--;
                            var i = e.pop();
                            if (f) {
                                f = !1;
                                var k = g.fallbackFrame;
                                if (!k) throw Error(j(303));
                                this.stack.push(k);
                                e[this.suspenseDepth] += "<!--$!-->";
                                continue
                            } else e[this.suspenseDepth] += i
                        }
                        e[this.suspenseDepth] += h
                    } else {
                        k = g.children[g.childIndex++];
                        i = "";
                        try {
                            i += this.render(k, g.context, g.domNamespace)
                        } catch (b) {
                            if (null != b && "function" === typeof b.then) {
                                if (0 >= this.suspenseDepth) throw Error(j(342));
                                f = !0
                            } else throw b
                        } finally {}
                        e.length <= this.suspenseDepth && e.push("");
                        e[this.suspenseDepth] += i
                    }
                }
                return e[0]
            } finally {
                $.current = d, X = c, na()
            }
        };
        c.render = function(b, c, d) {
            if ("string" === typeof b || "number" === typeof b) {
                d = "" + b;
                if ("" === d) return "";
                if (this.makeStaticMarkup) return L(d);
                if (this.previousWasTextNode) return "<!-- -->" + L(d);
                this.previousWasTextNode = !0;
                return L(d)
            }
            c = Ea(b, c, this.threadID);
            b = c.child;
            c = c.context;
            if (null === b || !1 === b) return "";
            if (!i.isValidElement(b)) {
                if (null != b && null != b.$$typeof) {
                    d = b.$$typeof;
                    if (d === m) throw Error(j(257));
                    throw Error(j(258, d.toString()))
                }
                b = Z(b);
                this.stack.push({
                    type: null,
                    domNamespace: d,
                    children: b,
                    childIndex: 0,
                    context: c,
                    footer: ""
                });
                return ""
            }
            var e = b.type;
            if ("string" === typeof e) return this.renderDOM(b, c, d);
            switch (e) {
                case da:
                case ca:
                case o:
                case p:
                case v:
                case n:
                    return b = Z(b.props.children), this.stack.push({
                        type: null,
                        domNamespace: d,
                        children: b,
                        childIndex: 0,
                        context: c,
                        footer: ""
                    }), "";
                case u:
                    return e = Z(b.props.fallback), b = Z(b.props.children), this.stack.push({
                        fallbackFrame: {
                            type: null,
                            domNamespace: d,
                            children: e,
                            childIndex: 0,
                            context: c,
                            footer: "<!--/$-->"
                        },
                        type: u,
                        domNamespace: d,
                        children: b,
                        childIndex: 0,
                        context: c,
                        footer: "<!--/$-->"
                    }), this.suspenseDepth++, "<!--$-->";
                case ba:
                    return b = Z(b.props.children), this.stack.push({
                        type: null,
                        domNamespace: d,
                        children: b,
                        childIndex: 0,
                        context: c,
                        footer: ""
                    }), ""
            }
            if ("object" === typeof e && null !== e) switch (e.$$typeof) {
                case t:
                    M = {};
                    var f = e.render(b.props, b.ref);
                    f = W(e.render, b.props, f, b.ref);
                    f = Z(f);
                    this.stack.push({
                        type: null,
                        domNamespace: d,
                        children: f,
                        childIndex: 0,
                        context: c,
                        footer: ""
                    });
                    return "";
                case w:
                    return b = [i.createElement(e.type, z({
                        ref: b.ref
                    }, b.props))], this.stack.push({
                        type: null,
                        domNamespace: d,
                        children: b,
                        childIndex: 0,
                        context: c,
                        footer: ""
                    }), "";
                case q:
                    return e = Z(b.props.children), d = {
                        type: b,
                        domNamespace: d,
                        children: e,
                        childIndex: 0,
                        context: c,
                        footer: ""
                    }, this.pushProvider(b), this.stack.push(d), "";
                case r:
                    e = b.type;
                    f = b.props;
                    var g = this.threadID;
                    C(e, g);
                    e = Z(f.children(e[g]));
                    this.stack.push({
                        type: b,
                        domNamespace: d,
                        children: e,
                        childIndex: 0,
                        context: c,
                        footer: ""
                    });
                    return "";
                case x:
                    return e = b.type, f = e._init, e = f(e._payload), b = [i.createElement(e, z({
                        ref: b.ref
                    }, b.props))], this.stack.push({
                        type: null,
                        domNamespace: d,
                        children: b,
                        childIndex: 0,
                        context: c,
                        footer: ""
                    }), ""
            }
            throw Error(j(130, null == e ? e : typeof e, ""))
        };
        c.renderDOM = function(b, c, d) {
            var e = b.type;
            "http://www.w3.org/1999/xhtml" === d && ta(e);
            var f = b.props;
            if (!Object.prototype.hasOwnProperty.call(Ba, e)) {
                if (!Aa.test(e)) throw Error(j(65, e));
                Ba[e] = !0
            }
            if ("input" === e) f = z({
                type: void 0
            }, f, {
                defaultChecked: void 0,
                defaultValue: void 0,
                value: null != f.value ? f.value : f.defaultValue,
                checked: null != f.checked ? f.checked : f.defaultChecked
            });
            else if ("textarea" === e) {
                var g = f.value;
                if (null == g) {
                    g = f.defaultValue;
                    var h = f.children;
                    if (null != h) {
                        if (null != g) throw Error(j(92));
                        if (k(h)) {
                            if (1 < h.length) throw Error(j(93));
                            h = h[0]
                        }
                        g = "" + h
                    }
                    null == g && (g = "")
                }
                f = z({}, f, {
                    value: void 0,
                    children: "" + g
                })
            } else if ("select" === e) this.currentSelectValue = null != f.value ? f.value : f.defaultValue, f = z({}, f, {
                value: void 0
            });
            else if ("option" === e && (h = this.currentSelectValue, null != h)) {
                var i = null != f.value ? f.value + "" : Ca(f.children);
                g = !1;
                if (k(h))
                    for (var l = 0; l < h.length; l++)
                        if ("" + h[l] === i) {
                            g = !0;
                            break
                        } else g = "" + h === i;
                f = z({
                    selected: void 0
                }, f, {
                    selected: g
                })
            }
            if (g = f) {
                if (va[e] && (null != g.children || null != g.dangerouslySetInnerHTML)) throw Error(j(137, e));
                if (null != g.dangerouslySetInnerHTML) {
                    if (null != g.children) throw Error(j(60));
                    if ("object" !== typeof g.dangerouslySetInnerHTML || !("__html" in g.dangerouslySetInnerHTML)) throw Error(j(61))
                }
                if (null != g.style && "object" !== typeof g.style) throw Error(j(62))
            }
            g = f;
            h = "<" + b.type;
            a: if (-1 === e.indexOf("-")) i = "string" === typeof g.is;
                else switch (e) {
                    case "annotation-xml":
                    case "color-profile":
                    case "font-face":
                    case "font-face-src":
                    case "font-face-uri":
                    case "font-face-format":
                    case "font-face-name":
                    case "missing-glyph":
                        i = !1;
                        break a;
                    default:
                        i = !0
                }
            for (t in g)
                if (A.call(g, t)) {
                    var m = g[t];
                    if (null != m) {
                        if ("style" === t) {
                            l = void 0;
                            var n = "",
                                o = "";
                            for (l in m)
                                if (Object.prototype.hasOwnProperty.call(m, l)) {
                                    var p = 0 === l.indexOf("--"),
                                        q = m[l];
                                    if (null != q) {
                                        if (p) var r = l;
                                        else if (r = l, Object.prototype.hasOwnProperty.call(aa, r)) r = aa[r];
                                        else {
                                            var s = r.replace(xa, "-$1").toLowerCase().replace(ya, "-ms-");
                                            r = aa[r] = s
                                        }
                                        n += o + r + ":";
                                        o = l;
                                        p = null == q || "boolean" === typeof q || "" === q ? "" : p || "number" !== typeof q || 0 === q || Object.prototype.hasOwnProperty.call(Y, o) && Y[o] ? ("" + q).trim() : q + "px";
                                        n += p;
                                        o = ";"
                                    }
                                }
                            m = n || null
                        }
                        l = null;
                        i ? Object.prototype.hasOwnProperty.call(Da, t) || (l = t, l = G(l) && null != m && "function" !== typeof m && "symbol" !== typeof m ? l + '="' + (L(m) + '"') : "") : l = la(t, m);
                        l && (h += " " + l)
                    }
                }
            var t = h;
            g = "";
            Object.prototype.hasOwnProperty.call(ua, e) ? t += "/>" : (t += ">", g = "</" + b.type + ">");
            a: {
                h = f.dangerouslySetInnerHTML;
                if (null != h) {
                    if (null != h.__html) {
                        h = h.__html;
                        break a
                    }
                } else if (h = f.children, "string" === typeof h || "number" === typeof h) {
                    h = L(h);
                    break a
                }
                h = null
            }
            null != h ? (f = [], Object.prototype.hasOwnProperty.call(za, e) && "\n" === h.charAt(0) && (t += "\n"), t += h) : f = Z(f.children);
            b = b.type;
            d = null == d || "http://www.w3.org/1999/xhtml" === d ? ta(b) : "http://www.w3.org/2000/svg" === d && "foreignObject" === b ? "http://www.w3.org/1999/xhtml" : d;
            this.stack.push({
                domNamespace: d,
                type: e,
                children: f,
                childIndex: 0,
                context: c,
                footer: g
            });
            this.previousWasTextNode = !1;
            return t
        };
        return b
    }();
    g.renderToNodeStream = function() {
        throw Error(j(207))
    };
    g.renderToStaticMarkup = function(b, c) {
        b = new Fa(b, !0, c);
        try {
            return b.read(Infinity)
        } finally {
            b.destroy()
        }
    };
    g.renderToStaticNodeStream = function() {
        throw Error(j(208))
    };
    g.renderToString = function(b, c) {
        b = new Fa(b, !1, c);
        try {
            return b.read(Infinity)
        } finally {
            b.destroy()
        }
    };
    g.version = "18.3.0-www-classic-229c86af0-20220616"
}), null);
__d("ReactDOMServer-prod.modern", ["ReactFeatureFlags", "react"], (function(b, c, d, e, f, g) {
    "use strict";
    var h, i = h || c("react");

    function j(b) {
        for (var c = "https://reactjs.org/docs/error-decoder.html?invariant=" + b, d = 1; d < arguments.length; d++) c += "&args[]=" + encodeURIComponent(arguments[d]);
        return "Minified React error #" + b + "; visit " + c + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
    }
    var k = c("ReactFeatureFlags").enableFilterEmptyStringAttributesDOM,
        l = Object.prototype.hasOwnProperty,
        m = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
        n = {},
        o = {};

    function ba(b) {
        if (l.call(o, b)) return !0;
        if (l.call(n, b)) return !1;
        if (m.test(b)) return o[b] = !0;
        n[b] = !0;
        return !1
    }

    function p(b, c, d, e, f, g, h) {
        this.acceptsBooleans = 2 === c || 3 === c || 4 === c, this.attributeName = e, this.attributeNamespace = f, this.mustUseProperty = d, this.propertyName = b, this.type = c, this.sanitizeURL = g, this.removeEmptyString = h
    }
    var q = {};
    f = "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ");
    f.push("innerText", "textContent");
    f.forEach(function(b) {
        q[b] = new p(b, 0, !1, b, null, !1, !1)
    });
    [
        ["acceptCharset", "accept-charset"],
        ["className", "class"],
        ["htmlFor", "for"],
        ["httpEquiv", "http-equiv"]
    ].forEach(function(b) {
        var c = b[0];
        q[c] = new p(c, 1, !1, b[1], null, !1, !1)
    });
    ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(b) {
        q[b] = new p(b, 2, !1, b.toLowerCase(), null, !1, !1)
    });
    ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(b) {
        q[b] = new p(b, 2, !1, b, null, !1, !1)
    });
    "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(b) {
        q[b] = new p(b, 3, !1, b.toLowerCase(), null, !1, !1)
    });
    ["checked", "multiple", "muted", "selected"].forEach(function(b) {
        q[b] = new p(b, 3, !0, b, null, !1, !1)
    });
    ["capture", "download"].forEach(function(b) {
        q[b] = new p(b, 4, !1, b, null, !1, !1)
    });
    ["cols", "rows", "size", "span"].forEach(function(b) {
        q[b] = new p(b, 6, !1, b, null, !1, !1)
    });
    ["rowSpan", "start"].forEach(function(b) {
        q[b] = new p(b, 5, !1, b.toLowerCase(), null, !1, !1)
    });
    var r = /[\-:]([a-z])/g;

    function s(b) {
        return b[1].toUpperCase()
    }
    "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(b) {
        var c = b.replace(r, s);
        q[c] = new p(c, 1, !1, b, null, !1, !1)
    });
    "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(b) {
        var c = b.replace(r, s);
        q[c] = new p(c, 1, !1, b, "http://www.w3.org/1999/xlink", !1, !1)
    });
    ["xml:base", "xml:lang", "xml:space"].forEach(function(b) {
        var c = b.replace(r, s);
        q[c] = new p(c, 1, !1, b, "http://www.w3.org/XML/1998/namespace", !1, !1)
    });
    ["tabIndex", "crossOrigin"].forEach(function(b) {
        q[b] = new p(b, 1, !1, b.toLowerCase(), null, !1, !1)
    });
    q.xlinkHref = new p("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1);
    ["src", "href", "action", "formAction"].forEach(function(b) {
        q[b] = new p(b, 1, !1, b.toLowerCase(), null, !0, !0)
    });
    var t = {
            animationIterationCount: !0,
            aspectRatio: !0,
            borderImageOutset: !0,
            borderImageSlice: !0,
            borderImageWidth: !0,
            boxFlex: !0,
            boxFlexGroup: !0,
            boxOrdinalGroup: !0,
            columnCount: !0,
            columns: !0,
            flex: !0,
            flexGrow: !0,
            flexPositive: !0,
            flexShrink: !0,
            flexNegative: !0,
            flexOrder: !0,
            gridArea: !0,
            gridRow: !0,
            gridRowEnd: !0,
            gridRowSpan: !0,
            gridRowStart: !0,
            gridColumn: !0,
            gridColumnEnd: !0,
            gridColumnSpan: !0,
            gridColumnStart: !0,
            fontWeight: !0,
            lineClamp: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            tabSize: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0,
            fillOpacity: !0,
            floodOpacity: !0,
            stopOpacity: !0,
            strokeDasharray: !0,
            strokeDashoffset: !0,
            strokeMiterlimit: !0,
            strokeOpacity: !0,
            strokeWidth: !0
        },
        ca = ["Webkit", "ms", "Moz", "O"];
    Object.keys(t).forEach(function(b) {
        ca.forEach(function(c) {
            c = c + b.charAt(0).toUpperCase() + b.substring(1), t[c] = t[b]
        })
    });
    var da = /[\"\'&<>]/;

    function u(b) {
        if ("boolean" === typeof b || "number" === typeof b) return "" + b;
        b = "" + b;
        var c = da.exec(b);
        if (c) {
            var d = "",
                e, f = 0;
            for (e = c.index; e < b.length; e++) {
                switch (b.charCodeAt(e)) {
                    case 34:
                        c = "&quot;";
                        break;
                    case 38:
                        c = "&amp;";
                        break;
                    case 39:
                        c = "&#x27;";
                        break;
                    case 60:
                        c = "&lt;";
                        break;
                    case 62:
                        c = "&gt;";
                        break;
                    default:
                        continue
                }
                f !== e && (d += b.substring(f, e));
                f = e + 1;
                d += c
            }
            b = f !== e ? d + b.substring(f, e) : d
        }
        return b
    }
    var ea = /([A-Z])/g,
        fa = /^ms-/,
        ga = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*:/i,
        v = Array.isArray;

    function w(b, c) {
        return {
            insertionMode: b,
            selectedValue: c
        }
    }

    function ha(b, c, d) {
        switch (c) {
            case "select":
                return w(1, null != d.value ? d.value : d.defaultValue);
            case "svg":
                return w(2, null);
            case "math":
                return w(3, null);
            case "foreignObject":
                return w(1, null);
            case "table":
                return w(4, null);
            case "thead":
            case "tbody":
            case "tfoot":
                return w(5, null);
            case "colgroup":
                return w(7, null);
            case "tr":
                return w(6, null)
        }
        return 4 <= b.insertionMode || 0 === b.insertionMode ? w(1, null) : b
    }
    var ia = new Map();

    function ja(b, c, d) {
        if ("object" !== typeof d) throw Error(j(62));
        c = !0;
        for (var e in d)
            if (l.call(d, e)) {
                var f = d[e];
                if (null != f && "boolean" !== typeof f && "" !== f) {
                    if (0 === e.indexOf("--")) {
                        var g = u(e);
                        f = u(("" + f).trim())
                    } else {
                        g = e;
                        var h = ia.get(g);
                        void 0 !== h ? g = h : (h = u(g.replace(ea, "-$1").toLowerCase().replace(fa, "-ms-")), ia.set(g, h), g = h);
                        f = "number" === typeof f ? 0 === f || l.call(t, e) ? "" + f : f + "px" : u(("" + f).trim())
                    }
                    c ? (c = !1, b.push(' style="', g, ":", f)) : b.push(";", g, ":", f)
                }
            }
        c || b.push('"')
    }

    function x(b, c, d, e) {
        switch (d) {
            case "style":
                ja(b, c, e);
                return;
            case "defaultValue":
            case "defaultChecked":
            case "innerHTML":
            case "suppressContentEditableWarning":
            case "suppressHydrationWarning":
                return
        }
        if (!(2 < d.length) || "o" !== d[0] && "O" !== d[0] || "n" !== d[1] && "N" !== d[1])
            if (c = Object.prototype.hasOwnProperty.call(q, d) ? q[d] : null, null !== c) {
                switch (typeof e) {
                    case "function":
                    case "symbol":
                        return;
                    case "boolean":
                        if (!c.acceptsBooleans) return
                }
                if (!k || !c.removeEmptyString || "" !== e) switch (d = c.attributeName, c.type) {
                    case 3:
                        e && b.push(" ", d, '=""');
                        break;
                    case 4:
                        !0 === e ? b.push(" ", d, '=""') : !1 !== e && b.push(" ", d, '="', u(e), '"');
                        break;
                    case 5:
                        isNaN(e) || b.push(" ", d, '="', u(e), '"');
                        break;
                    case 6:
                        !isNaN(e) && 1 <= e && b.push(" ", d, '="', u(e), '"');
                        break;
                    default:
                        if (c.sanitizeURL && (e = "" + e, ga.test(e))) throw Error(j(323));
                        b.push(" ", d, '="', u(e), '"')
                }
            } else if (ba(d)) {
            switch (typeof e) {
                case "function":
                case "symbol":
                    return;
                case "boolean":
                    if (c = d.toLowerCase().slice(0, 5), "data-" !== c && "aria-" !== c) return
            }
            b.push(" ", d, '="', u(e), '"')
        }
    }

    function y(b, c, d) {
        if (null != c) {
            if (null != d) throw Error(j(60));
            if ("object" !== typeof c || !("__html" in c)) throw Error(j(61));
            c = c.__html;
            null !== c && void 0 !== c && b.push("" + c)
        }
    }

    function ka(b) {
        var c = "";
        i.Children.forEach(b, function(b) {
            null != b && (c += b)
        });
        return c
    }

    function z(b, c, d, e) {
        b.push(A(d));
        var f = d = null,
            g;
        for (g in c)
            if (l.call(c, g)) {
                var h = c[g];
                if (null != h) switch (g) {
                    case "children":
                        d = h;
                        break;
                    case "dangerouslySetInnerHTML":
                        f = h;
                        break;
                    default:
                        x(b, e, g, h)
                }
            }
        b.push(">");
        y(b, f, d);
        return "string" === typeof d ? (b.push(u(d)), null) : d
    }
    var la = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/,
        ma = new Map();

    function A(b) {
        var c = ma.get(b);
        if (void 0 === c) {
            if (!la.test(b)) throw Error(j(65, b));
            c = "<" + b;
            ma.set(b, c)
        }
        return c
    }

    function na(b, c, d, e, f) {
        switch (c) {
            case "select":
                b.push(A("select"));
                var g = null,
                    h = null;
                for (n in d)
                    if (l.call(d, n)) {
                        var i = d[n];
                        if (null != i) switch (n) {
                            case "children":
                                g = i;
                                break;
                            case "dangerouslySetInnerHTML":
                                h = i;
                                break;
                            case "defaultValue":
                            case "value":
                                break;
                            default:
                                x(b, e, n, i)
                        }
                    }
                b.push(">");
                y(b, h, g);
                return g;
            case "option":
                h = f.selectedValue;
                b.push(A("option"));
                var k = i = null,
                    m = null,
                    n = null;
                for (g in d)
                    if (l.call(d, g)) {
                        var o = d[g];
                        if (null != o) switch (g) {
                            case "children":
                                i = o;
                                break;
                            case "selected":
                                m = o;
                                break;
                            case "dangerouslySetInnerHTML":
                                n = o;
                                break;
                            case "value":
                                k = o;
                            default:
                                x(b, e, g, o)
                        }
                    }
                if (null != h)
                    if (d = null !== k ? "" + k : ka(i), v(h))
                        for (e = 0; e < h.length; e++)
                            if ("" + h[e] === d) {
                                b.push(' selected=""');
                                break
                            } else "" + h === d && b.push(' selected=""');
                else m && b.push(' selected=""');
                b.push(">");
                y(b, n, i);
                return i;
            case "textarea":
                b.push(A("textarea"));
                n = h = g = null;
                for (i in d)
                    if (l.call(d, i) && (k = d[i], null != k)) switch (i) {
                        case "children":
                            n = k;
                            break;
                        case "value":
                            g = k;
                            break;
                        case "defaultValue":
                            h = k;
                            break;
                        case "dangerouslySetInnerHTML":
                            throw Error(j(91));
                        default:
                            x(b, e, i, k)
                    }
                null === g && null !== h && (g = h);
                b.push(">");
                if (null != n) {
                    if (null != g) throw Error(j(92));
                    if (v(n) && 1 < n.length) throw Error(j(93));
                    g = "" + n
                }
                "string" === typeof g && "\n" === g[0] && b.push("\n");
                null !== g && b.push(u("" + g));
                return null;
            case "input":
                b.push(A("input"));
                k = n = i = g = null;
                for (h in d)
                    if (l.call(d, h) && (m = d[h], null != m)) switch (h) {
                        case "children":
                        case "dangerouslySetInnerHTML":
                            throw Error(j(399, "input"));
                        case "defaultChecked":
                            k = m;
                            break;
                        case "defaultValue":
                            i = m;
                            break;
                        case "checked":
                            n = m;
                            break;
                        case "value":
                            g = m;
                            break;
                        default:
                            x(b, e, h, m)
                    }
                null !== n ? x(b, e, "checked", n) : null !== k && x(b, e, "checked", k);
                null !== g ? x(b, e, "value", g) : null !== i && x(b, e, "value", i);
                b.push("/>");
                return null;
            case "menuitem":
                b.push(A("menuitem"));
                for (var n in d)
                    if (l.call(d, n) && (g = d[n], null != g)) switch (n) {
                        case "children":
                        case "dangerouslySetInnerHTML":
                            throw Error(j(400));
                        default:
                            x(b, e, n, g)
                    }
                b.push(">");
                return null;
            case "title":
                b.push(A("title"));
                g = null;
                for (o in d)
                    if (l.call(d, o) && (h = d[o], null != h)) switch (o) {
                        case "children":
                            g = h;
                            break;
                        case "dangerouslySetInnerHTML":
                            throw Error(j(434));
                        default:
                            x(b, e, o, h)
                    }
                b.push(">");
                return g;
            case "listing":
            case "pre":
                b.push(A(c));
                h = g = null;
                for (k in d)
                    if (l.call(d, k) && (i = d[k], null != i)) switch (k) {
                        case "children":
                            g = i;
                            break;
                        case "dangerouslySetInnerHTML":
                            h = i;
                            break;
                        default:
                            x(b, e, k, i)
                    }
                b.push(">");
                if (null != h) {
                    if (null != g) throw Error(j(60));
                    if ("object" !== typeof h || !("__html" in h)) throw Error(j(61));
                    d = h.__html;
                    null !== d && void 0 !== d && ("string" === typeof d && 0 < d.length && "\n" === d[0] ? b.push("\n", d) : b.push("" + d))
                }
                "string" === typeof g && "\n" === g[0] && b.push("\n");
                return g;
            case "area":
            case "base":
            case "br":
            case "col":
            case "embed":
            case "hr":
            case "img":
            case "keygen":
            case "link":
            case "meta":
            case "param":
            case "source":
            case "track":
            case "wbr":
                b.push(A(c));
                for (var n in d)
                    if (l.call(d, n) && (g = d[n], null != g)) switch (n) {
                        case "children":
                        case "dangerouslySetInnerHTML":
                            throw Error(j(399, c));
                        default:
                            x(b, e, n, g)
                    }
                b.push("/>");
                return null;
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph":
                return z(b, d, c, e);
            case "html":
                return 0 === f.insertionMode && b.push("<!DOCTYPE html>"), z(b, d, c, e);
            default:
                if (-1 === c.indexOf("-") && "string" !== typeof d.is) return z(b, d, c, e);
                b.push(A(c));
                h = g = null;
                for (m in d)
                    if (l.call(d, m) && (i = d[m], null != i && "function" !== typeof i && "object" !== typeof i && !1 !== i)) switch (!0 === i && (i = ""), "className" === m && (m = "class"), m) {
                        case "children":
                            g = i;
                            break;
                        case "dangerouslySetInnerHTML":
                            h = i;
                            break;
                        case "style":
                            ja(b, e, i);
                            break;
                        case "suppressContentEditableWarning":
                        case "suppressHydrationWarning":
                            break;
                        default:
                            ba(m) && "function" !== typeof i && "symbol" !== typeof i && b.push(" ", m, '="', u(i), '"')
                    }
                b.push(">");
                y(b, h, g);
                return g
        }
    }

    function oa(b, c, d) {
        b.push('<!--$?--><template id="');
        if (null === d) throw Error(j(395));
        b.push(d);
        return b.push('"></template>')
    }

    function pa(b, c, d, e) {
        switch (d.insertionMode) {
            case 0:
            case 1:
                return b.push('<div hidden id="'), b.push(c.segmentPrefix), c = e.toString(16), b.push(c), b.push('">');
            case 2:
                return b.push('<svg aria-hidden="true" style="display:none" id="'), b.push(c.segmentPrefix), c = e.toString(16), b.push(c), b.push('">');
            case 3:
                return b.push('<math aria-hidden="true" style="display:none" id="'), b.push(c.segmentPrefix), c = e.toString(16), b.push(c), b.push('">');
            case 4:
                return b.push('<table hidden id="'), b.push(c.segmentPrefix), c = e.toString(16), b.push(c), b.push('">');
            case 5:
                return b.push('<table hidden><tbody id="'), b.push(c.segmentPrefix), c = e.toString(16), b.push(c), b.push('">');
            case 6:
                return b.push('<table hidden><tr id="'), b.push(c.segmentPrefix), c = e.toString(16), b.push(c), b.push('">');
            case 7:
                return b.push('<table hidden><colgroup id="'), b.push(c.segmentPrefix), c = e.toString(16), b.push(c), b.push('">');
            default:
                throw Error(j(397))
        }
    }

    function qa(b, c) {
        switch (c.insertionMode) {
            case 0:
            case 1:
                return b.push("</div>");
            case 2:
                return b.push("</svg>");
            case 3:
                return b.push("</math>");
            case 4:
                return b.push("</table>");
            case 5:
                return b.push("</tbody></table>");
            case 6:
                return b.push("</tr></table>");
            case 7:
                return b.push("</colgroup></table>");
            default:
                throw Error(j(397))
        }
    }
    var ra = /[<\u2028\u2029]/g;

    function B(b) {
        return JSON.stringify(b).replace(ra, function(b) {
            switch (b) {
                case "<":
                    return "\\u003c";
                case "\u2028":
                    return "\\u2028";
                case "\u2029":
                    return "\\u2029";
                default:
                    throw Error("escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React")
            }
        })
    }

    function sa(b, c) {
        c = void 0 === c ? "" : c;
        return {
            bootstrapChunks: [],
            startInlineScript: "<script>",
            placeholderPrefix: c + "P:",
            segmentPrefix: c + "S:",
            boundaryPrefix: c + "B:",
            idPrefix: c,
            nextSuspenseID: 0,
            sentCompleteSegmentFunction: !1,
            sentCompleteBoundaryFunction: !1,
            sentClientRenderFunction: !1,
            generateStaticMarkup: b
        }
    }

    function ta(b, c, d, e) {
        if (d.generateStaticMarkup) return b.push(u(c)), !1;
        "" === c ? b = e : (e && b.push("<!-- -->"), b.push(u(c)), b = !0);
        return b
    }
    var C = Object.assign;
    c = "function" !== typeof Symbol || !Symbol["for"];
    var ua = c ? 60103 : Symbol["for"]("react.element"),
        va = c ? 60106 : Symbol["for"]("react.portal"),
        wa = c ? 60107 : Symbol["for"]("react.fragment"),
        xa = c ? 60108 : Symbol["for"]("react.strict_mode"),
        ya = c ? 60114 : Symbol["for"]("react.profiler"),
        za = c ? 60109 : Symbol["for"]("react.provider"),
        Aa = c ? 60110 : Symbol["for"]("react.context"),
        Ba = c ? 60112 : Symbol["for"]("react.forward_ref"),
        Ca = c ? 60113 : Symbol["for"]("react.suspense"),
        Da = c ? 60120 : Symbol["for"]("react.suspense_list"),
        Ea = c ? 60115 : Symbol["for"]("react.memo"),
        Fa = c ? 60116 : Symbol["for"]("react.lazy"),
        Ga = c ? 60119 : Symbol["for"]("react.scope"),
        Ha = c ? 60129 : Symbol["for"]("react.debug_trace_mode"),
        Ia = c ? 60131 : Symbol["for"]("react.legacy_hidden"),
        Ja = c ? 60135 : Symbol["for"]("react.default_value"),
        Ka = c ? "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") : typeof Symbol === "function" ? Symbol.iterator : "@@iterator",
        D = {},
        E = null;

    function F(b, c) {
        if (b !== c) {
            b.context._currentValue2 = b.parentValue;
            b = b.parent;
            var d = c.parent;
            if (null === b) {
                if (null !== d) throw Error(j(401))
            } else {
                if (null === d) throw Error(j(401));
                F(b, d)
            }
            c.context._currentValue2 = c.value
        }
    }

    function La(b) {
        b.context._currentValue2 = b.parentValue, b = b.parent, null !== b && La(b)
    }

    function Ma(b) {
        var c = b.parent;
        null !== c && Ma(c);
        b.context._currentValue2 = b.value
    }

    function Na(b, c) {
        b.context._currentValue2 = b.parentValue;
        b = b.parent;
        if (null === b) throw Error(j(402));
        b.depth === c.depth ? F(b, c) : Na(b, c)
    }

    function Oa(b, c) {
        var d = c.parent;
        if (null === d) throw Error(j(402));
        b.depth === d.depth ? F(b, d) : Oa(b, d);
        c.context._currentValue2 = c.value
    }

    function G(b) {
        var c = E;
        c !== b && (null === c ? Ma(b) : null === b ? La(c) : c.depth === b.depth ? F(c, b) : c.depth > b.depth ? Na(c, b) : Oa(c, b), E = b)
    }
    var Pa = {
            isMounted: function() {
                return !1
            },
            enqueueSetState: function(b, c) {
                b = b._reactInternals, null !== b.queue && b.queue.push(c)
            },
            enqueueReplaceState: function(b, c) {
                b = b._reactInternals, b.replace = !0, b.queue = [c]
            },
            enqueueForceUpdate: function() {}
        },
        Qa = {
            id: 1,
            overflow: ""
        };

    function H(b, c, d) {
        var e = b.id;
        b = b.overflow;
        var f = 32 - I(e) - 1;
        e &= ~(1 << f);
        d += 1;
        var g = 32 - I(c) + f;
        if (30 < g) {
            var h = f - f % 5;
            g = (e & (1 << h) - 1).toString(32);
            e >>= h;
            f -= h;
            return {
                id: 1 << 32 - I(c) + f | d << f | e,
                overflow: g + b
            }
        }
        return {
            id: 1 << g | d << f | e,
            overflow: b
        }
    }
    var I = Math.clz32 ? Math.clz32 : b,
        Ra = Math.log,
        Sa = Math.LN2;

    function b(b) {
        b >>>= 0;
        return 0 === b ? 32 : 31 - (Ra(b) / Sa | 0) | 0
    }

    function d(b, c) {
        return b === c && (0 !== b || 1 / b === 1 / c) || b !== b && c !== c
    }
    var Ta = "function" === typeof Object.is ? Object.is : d,
        J = null,
        K = null,
        L = null,
        M = null,
        N = !1,
        O = !1,
        P = 0,
        Q = null,
        R = 0;

    function S() {
        if (null === J) throw Error(j(321));
        return J
    }

    function Ua() {
        if (0 < R) throw Error(j(312));
        return {
            memoizedState: null,
            queue: null,
            next: null
        }
    }

    function Va() {
        null === M ? null === L ? (N = !1, L = M = Ua()) : (N = !0, M = L) : null === M.next ? (N = !1, M = M.next = Ua()) : (N = !0, M = M.next);
        return M
    }

    function Wa() {
        K = J = null, O = !1, L = null, R = 0, M = Q = null
    }

    function Xa(b, c) {
        return "function" === typeof c ? c(b) : c
    }

    function Ya(b, c, d) {
        J = S();
        M = Va();
        if (N) {
            var e = M.queue;
            c = e.dispatch;
            if (null !== Q && (d = Q.get(e), void 0 !== d)) {
                Q["delete"](e);
                e = M.memoizedState;
                do e = b(e, d.action), d = d.next; while (null !== d);
                M.memoizedState = e;
                return [e, c]
            }
            return [M.memoizedState, c]
        }
        b = b === Xa ? "function" === typeof c ? c() : c : void 0 !== d ? d(c) : c;
        M.memoizedState = b;
        b = M.queue = {
            last: null,
            dispatch: null
        };
        b = b.dispatch = $a.bind(null, J, b);
        return [M.memoizedState, b]
    }

    function Za(b, c) {
        J = S();
        M = Va();
        c = void 0 === c ? null : c;
        if (null !== M) {
            var d = M.memoizedState;
            if (null !== d && null !== c) {
                var e = d[1];
                a: if (null === e) e = !1;
                    else {
                        for (var f = 0; f < e.length && f < c.length; f++)
                            if (!Ta(c[f], e[f])) {
                                e = !1;
                                break a
                            }
                        e = !0
                    }
                if (e) return d[0]
            }
        }
        b = b();
        M.memoizedState = [b, c];
        return b
    }

    function $a(b, c, d) {
        if (25 <= R) throw Error(j(301));
        if (b === J)
            if (O = !0, b = {
                    action: d,
                    next: null
                }, null === Q && (Q = new Map()), d = Q.get(c), void 0 === d) Q.set(c, b);
            else {
                for (c = d; null !== c.next;) c = c.next;
                c.next = b
            }
    }

    function ab() {
        throw Error(j(394))
    }

    function bb() {
        throw Error(j(393))
    }

    function e() {}
    var cb = {
            readContext: function(b) {
                return b._currentValue2
            },
            useContext: function(b) {
                S();
                return b._currentValue2
            },
            useMemo: Za,
            useReducer: Ya,
            useRef: function(b) {
                J = S();
                M = Va();
                var c = M.memoizedState;
                return null === c ? (b = {
                    current: b
                }, M.memoizedState = b) : c
            },
            useState: function(b) {
                return Ya(Xa, b)
            },
            useInsertionEffect: e,
            useLayoutEffect: function() {},
            useCallback: function(b, c) {
                return Za(function() {
                    return b
                }, c)
            },
            useImperativeHandle: e,
            useEffect: e,
            useDebugValue: e,
            useDeferredValue: function(b) {
                S();
                return b
            },
            useTransition: function() {
                S();
                return [!1, ab]
            },
            useId: function() {
                var b = K.treeContext,
                    c = b.overflow;
                b = b.id;
                b = (b & ~(1 << 32 - I(b) - 1)).toString(32) + c;
                var d = T;
                if (null === d) throw Error(j(404));
                c = P++;
                b = ":" + d.idPrefix + "R" + b;
                0 < c && (b += "H" + c.toString(32));
                return b + ":"
            },
            useMutableSource: function(b, c) {
                S();
                return c(b._source)
            },
            useSyncExternalStore: function(b, c, d) {
                if (void 0 === d) throw Error(j(407));
                return d()
            },
            getCacheForType: function() {
                throw Error(j(248))
            },
            useCacheRefresh: function() {
                return bb
            }
        },
        T = null,
        db = i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentDispatcher;

    function eb(b) {
        return null
    }

    function U() {}

    function fb(c, d, e, f, b, g, h, i, j) {
        var k = [],
            l = new Set();
        d = {
            destination: null,
            responseState: d,
            progressiveChunkSize: void 0 === f ? 12800 : f,
            status: 0,
            fatalError: null,
            nextSegmentId: 0,
            allPendingTasks: 0,
            pendingRootTasks: 0,
            completedRootSegment: null,
            abortableTasks: l,
            pingedTasks: k,
            clientRenderedBoundaries: [],
            completedBoundaries: [],
            partialBoundaries: [],
            onError: void 0 === b ? eb : b,
            onAllReady: void 0 === g ? U : g,
            onShellReady: void 0 === h ? U : h,
            onShellError: void 0 === i ? U : i,
            onFatalError: void 0 === j ? U : j
        };
        e = V(d, 0, null, e, !1, !1);
        e.parentFlushed = !0;
        c = gb(d, c, null, e, l, D, null, Qa);
        k.push(c);
        return d
    }

    function gb(b, c, d, e, f, g, h, i) {
        b.allPendingTasks++;
        null === d ? b.pendingRootTasks++ : d.pendingTasks++;
        var j = {
            node: c,
            ping: function() {
                var c = b.pingedTasks;
                c.push(j);
                1 === c.length && pb(b)
            },
            blockedBoundary: d,
            blockedSegment: e,
            abortSet: f,
            legacyContext: g,
            context: h,
            treeContext: i
        };
        f.add(j);
        return j
    }

    function V(b, c, d, e, f, g) {
        return {
            status: 0,
            id: -1,
            index: c,
            parentFlushed: !1,
            chunks: [],
            children: [],
            formatContext: e,
            boundary: d,
            lastPushedText: f,
            textEmbedded: g
        }
    }

    function W(b, c) {
        b = b.onError(c);
        if (null != b && "string" !== typeof b) throw Error('onError returned something with a type other than "string". onError should return a string and may return null or undefined but must not return anything else. It received something of type "' + typeof b + '" instead');
        return b
    }

    function X(b, c) {
        var d = b.onShellError;
        d(c);
        d = b.onFatalError;
        d(c);
        null !== b.destination ? (b.status = 2, b.destination.destroy(c)) : (b.status = 1, b.fatalError = c)
    }

    function hb(b, c, d, e, f) {
        J = {};
        K = c;
        P = 0;
        for (b = d(e, f); O;) O = !1, P = 0, R += 1, M = null, b = d(e, f);
        Wa();
        return b
    }

    function ib(b, c) {
        if (b && b.defaultProps) {
            c = C({}, c);
            b = b.defaultProps;
            for (var d in b) void 0 === c[d] && (c[d] = b[d]);
            return c
        }
        return c
    }

    function jb(b, c, d, e, f) {
        if ("function" === typeof d)
            if (d.prototype && d.prototype.isReactComponent) {
                f = D;
                var g = d.contextType;
                "object" === typeof g && null !== g && (f = g._currentValue2);
                f = new d(e, f);
                var h = void 0 !== f.state ? f.state : null;
                f.updater = Pa;
                f.props = e;
                f.state = h;
                g = {
                    queue: [],
                    replace: !1
                };
                f._reactInternals = g;
                var i = d.contextType;
                f.context = "object" === typeof i && null !== i ? i._currentValue2 : D;
                i = d.getDerivedStateFromProps;
                "function" === typeof i && (i = i(e, h), h = null === i || void 0 === i ? h : C({}, h, i), f.state = h);
                if ("function" !== typeof d.getDerivedStateFromProps && "function" !== typeof f.getSnapshotBeforeUpdate && ("function" === typeof f.UNSAFE_componentWillMount || "function" === typeof f.componentWillMount))
                    if (d = f.state, "function" === typeof f.componentWillMount && f.componentWillMount(), "function" === typeof f.UNSAFE_componentWillMount && f.UNSAFE_componentWillMount(), d !== f.state && Pa.enqueueReplaceState(f, f.state, null), null !== g.queue && 0 < g.queue.length)
                        if (d = g.queue, i = g.replace, g.queue = null, g.replace = !1, i && 1 === d.length) f.state = d[0];
                        else {
                            g = i ? d[0] : f.state;
                            h = !0;
                            for (i = i ? 1 : 0; i < d.length; i++) {
                                var k = d[i];
                                k = "function" === typeof k ? k.call(f, g, e, void 0) : k;
                                null != k && (h ? (h = !1, g = C({}, g, k)) : C(g, k))
                            }
                            f.state = g
                        }
                else g.queue = null;
                e = f.render();
                Y(b, c, e)
            } else if (e = hb(b, c, d, e, void 0), 0 !== P) {
            d = c.treeContext;
            c.treeContext = H(d, 1, 0);
            try {
                Y(b, c, e)
            } finally {
                c.treeContext = d
            }
        } else Y(b, c, e);
        else if ("string" === typeof d) {
            f = c.blockedSegment;
            g = na(f.chunks, d, e, b.responseState, f.formatContext);
            f.lastPushedText = !1;
            h = f.formatContext;
            f.formatContext = ha(h, d, e);
            lb(b, c, g);
            f.formatContext = h;
            switch (d) {
                case "area":
                case "base":
                case "br":
                case "col":
                case "embed":
                case "hr":
                case "img":
                case "input":
                case "keygen":
                case "link":
                case "meta":
                case "param":
                case "source":
                case "track":
                case "wbr":
                    break;
                default:
                    f.chunks.push("</", d, ">")
            }
            f.lastPushedText = !1
        } else {
            switch (d) {
                case Ia:
                case Ha:
                case xa:
                case ya:
                case wa:
                    Y(b, c, e.children);
                    return;
                case Da:
                    Y(b, c, e.children);
                    return;
                case Ga:
                    Y(b, c, e.children);
                    return;
                case Ca:
                    a: {
                        d = c.blockedBoundary;f = c.blockedSegment;g = e.fallback;e = e.children;h = new Set();i = {
                            id: null,
                            rootSegmentID: -1,
                            parentFlushed: !1,
                            pendingTasks: 0,
                            forceClientRender: !1,
                            completedSegments: [],
                            byteSize: 0,
                            fallbackAbortableTasks: h,
                            errorDigest: null
                        };k = V(b, f.chunks.length, i, f.formatContext, !1, !1);f.children.push(k);f.lastPushedText = !1;
                        var l = V(b, 0, null, f.formatContext, !1, !1);l.parentFlushed = !0;c.blockedBoundary = i;c.blockedSegment = l;
                        try {
                            if (lb(b, c, e), b.responseState.generateStaticMarkup || l.lastPushedText && l.textEmbedded && l.chunks.push("<!-- -->"), l.status = 1, Z(i, l), 0 === i.pendingTasks) break a
                        } catch (c) {
                            l.status = 4, i.forceClientRender = !0, i.errorDigest = W(b, c)
                        } finally {
                            c.blockedBoundary = d, c.blockedSegment = f
                        }
                        c = gb(b, g, d, k, h, c.legacyContext, c.context, c.treeContext);b.pingedTasks.push(c)
                    }
                    return
            }
            if ("object" === typeof d && null !== d) switch (d.$$typeof) {
                case Ba:
                    e = hb(b, c, d.render, e, f);
                    if (0 !== P) {
                        d = c.treeContext;
                        c.treeContext = H(d, 1, 0);
                        try {
                            Y(b, c, e)
                        } finally {
                            c.treeContext = d
                        }
                    } else Y(b, c, e);
                    return;
                case Ea:
                    d = d.type;
                    e = ib(d, e);
                    jb(b, c, d, e, f);
                    return;
                case za:
                    f = e.children;
                    d = d._context;
                    e = e.value;
                    g = d._currentValue2;
                    d._currentValue2 = e;
                    h = E;
                    E = e = {
                        parent: h,
                        depth: null === h ? 0 : h.depth + 1,
                        context: d,
                        parentValue: g,
                        value: e
                    };
                    c.context = e;
                    Y(b, c, f);
                    b = E;
                    if (null === b) throw Error(j(403));
                    e = b.parentValue;
                    b.context._currentValue2 = e === Ja ? b.context._defaultValue : e;
                    b = E = b.parent;
                    c.context = b;
                    return;
                case Aa:
                    e = e.children;
                    e = e(d._currentValue2);
                    Y(b, c, e);
                    return;
                case Fa:
                    f = d._init;
                    d = f(d._payload);
                    e = ib(d, e);
                    jb(b, c, d, e, void 0);
                    return
            }
            throw Error(j(130, null == d ? d : typeof d, ""))
        }
    }

    function Y(b, c, d) {
        c.node = d;
        if ("object" === typeof d && null !== d) {
            switch (d.$$typeof) {
                case ua:
                    jb(b, c, d.type, d.props, d.ref);
                    return;
                case va:
                    throw Error(j(257));
                case Fa:
                    var e = d._init;
                    d = e(d._payload);
                    Y(b, c, d);
                    return
            }
            if (v(d)) {
                kb(b, c, d);
                return
            }
            null === d || "object" !== typeof d ? e = null : (e = Ka && d[Ka] || d["@@iterator"], e = "function" === typeof e ? e : null);
            if (e && (e = e.call(d))) {
                d = e.next();
                if (!d.done) {
                    var f = [];
                    do f.push(d.value), d = e.next(); while (!d.done);
                    kb(b, c, f)
                }
                return
            }
            b = Object.prototype.toString.call(d);
            throw Error(j(31, "[object Object]" === b ? "object with keys {" + Object.keys(d).join(", ") + "}" : b))
        }
        "string" === typeof d ? (e = c.blockedSegment, e.lastPushedText = ta(c.blockedSegment.chunks, d, b.responseState, e.lastPushedText)) : "number" === typeof d && (e = c.blockedSegment, e.lastPushedText = ta(c.blockedSegment.chunks, "" + d, b.responseState, e.lastPushedText))
    }

    function kb(b, c, d) {
        for (var e = d.length, f = 0; f < e; f++) {
            var g = c.treeContext;
            c.treeContext = H(g, e, f);
            try {
                lb(b, c, d[f])
            } finally {
                c.treeContext = g
            }
        }
    }

    function lb(b, c, d) {
        var e = c.blockedSegment.formatContext,
            f = c.legacyContext,
            g = c.context;
        try {
            return Y(b, c, d)
        } catch (j) {
            if (Wa(), "object" === typeof j && null !== j && "function" === typeof j.then) {
                d = j;
                var h = c.blockedSegment,
                    i = V(b, h.chunks.length, null, h.formatContext, h.lastPushedText, !0);
                h.children.push(i);
                h.lastPushedText = !1;
                b = gb(b, c.node, c.blockedBoundary, i, c.abortSet, c.legacyContext, c.context, c.treeContext).ping;
                d.then(b, b);
                c.blockedSegment.formatContext = e;
                c.legacyContext = f;
                c.context = g;
                G(g)
            } else throw c.blockedSegment.formatContext = e, c.legacyContext = f, c.context = g, G(g), j
        }
    }

    function mb(b) {
        var c = b.blockedBoundary;
        b = b.blockedSegment;
        b.status = 3;
        ob(this, c, b)
    }

    function nb(b, c, d) {
        var e = b.blockedBoundary;
        b.blockedSegment.status = 3;
        null === e ? (c.allPendingTasks--, 2 !== c.status && (c.status = 2, null !== c.destination && c.destination.push(null))) : (e.pendingTasks--, e.forceClientRender || (e.forceClientRender = !0, b = void 0 === d ? Error(j(432)) : d, e.errorDigest = c.onError(b), e.parentFlushed && c.clientRenderedBoundaries.push(e)), e.fallbackAbortableTasks.forEach(function(b) {
            return nb(b, c, d)
        }), e.fallbackAbortableTasks.clear(), c.allPendingTasks--, 0 === c.allPendingTasks && (e = c.onAllReady, e()))
    }

    function Z(b, c) {
        if (0 === c.chunks.length && 1 === c.children.length && null === c.children[0].boundary) {
            var d = c.children[0];
            d.id = c.id;
            d.parentFlushed = !0;
            1 === d.status && Z(b, d)
        } else b.completedSegments.push(c)
    }

    function ob(b, c, d) {
        if (null === c) {
            if (d.parentFlushed) {
                if (null !== b.completedRootSegment) throw Error(j(389));
                b.completedRootSegment = d
            }
            b.pendingRootTasks--;
            0 === b.pendingRootTasks && (b.onShellError = U, c = b.onShellReady, c())
        } else c.pendingTasks--, c.forceClientRender || (0 === c.pendingTasks ? (d.parentFlushed && 1 === d.status && Z(c, d), c.parentFlushed && b.completedBoundaries.push(c), c.fallbackAbortableTasks.forEach(mb, b), c.fallbackAbortableTasks.clear()) : d.parentFlushed && 1 === d.status && (Z(c, d), 1 === c.completedSegments.length && c.parentFlushed && b.partialBoundaries.push(c)));
        b.allPendingTasks--;
        0 === b.allPendingTasks && (b = b.onAllReady, b())
    }

    function pb(b) {
        if (2 !== b.status) {
            var c = E,
                d = db.current;
            db.current = cb;
            var e = T;
            T = b.responseState;
            try {
                var f = b.pingedTasks,
                    g;
                for (g = 0; g < f.length; g++) {
                    var h = f[g],
                        i = b,
                        j = h.blockedSegment;
                    if (0 === j.status) {
                        G(h.context);
                        try {
                            Y(i, h, h.node), i.responseState.generateStaticMarkup || j.lastPushedText && j.textEmbedded && j.chunks.push("<!-- -->"), h.abortSet["delete"](h), j.status = 1, ob(i, h.blockedBoundary, j)
                        } catch (b) {
                            if (Wa(), "object" === typeof b && null !== b && "function" === typeof b.then) {
                                var k = h.ping;
                                b.then(k, k)
                            } else {
                                h.abortSet["delete"](h);
                                j.status = 4;
                                k = h.blockedBoundary;
                                j = b;
                                h = W(i, j);
                                null === k ? X(i, j) : (k.pendingTasks--, k.forceClientRender || (k.forceClientRender = !0, k.errorDigest = h, k.parentFlushed && i.clientRenderedBoundaries.push(k)));
                                i.allPendingTasks--;
                                if (0 === i.allPendingTasks) {
                                    j = i.onAllReady;
                                    j()
                                }
                            }
                        } finally {}
                    }
                }
                f.splice(0, g);
                null !== b.destination && tb(b, b.destination)
            } catch (c) {
                W(b, c), X(b, c)
            } finally {
                T = e, db.current = d, d === cb && G(c)
            }
        }
    }

    function $(b, c, d) {
        d.parentFlushed = !0;
        switch (d.status) {
            case 0:
                var e = d.id = b.nextSegmentId++;
                d.lastPushedText = !1;
                d.textEmbedded = !1;
                b = b.responseState;
                c.push('<template id="');
                c.push(b.placeholderPrefix);
                b = e.toString(16);
                c.push(b);
                return c.push('"></template>');
            case 1:
                d.status = 2;
                var f = !0;
                e = d.chunks;
                var g = 0;
                d = d.children;
                for (var h = 0; h < d.length; h++) {
                    for (f = d[h]; g < f.index; g++) c.push(e[g]);
                    f = aa(b, c, f)
                }
                for (; g < e.length - 1; g++) c.push(e[g]);
                g < e.length && (f = c.push(e[g]));
                return f;
            default:
                throw Error(j(390))
        }
    }

    function aa(b, c, d) {
        var e = d.boundary;
        if (null === e) return $(b, c, d);
        e.parentFlushed = !0;
        if (e.forceClientRender) return b.responseState.generateStaticMarkup || (e = e.errorDigest, c.push("<!--$!-->"), c.push("<template"), e && (c.push(' data-dgst="'), e = u(e), c.push(e), c.push('"')), c.push("></template>")), $(b, c, d), b = b.responseState.generateStaticMarkup ? !0 : c.push("<!--/$-->"), b;
        if (0 < e.pendingTasks) {
            e.rootSegmentID = b.nextSegmentId++;
            0 < e.completedSegments.length && b.partialBoundaries.push(e);
            var f = b.responseState,
                g = f.nextSuspenseID++;
            f = f.boundaryPrefix + g.toString(16);
            e = e.id = f;
            oa(c, b.responseState, e);
            $(b, c, d);
            return c.push("<!--/$-->")
        }
        if (e.byteSize > b.progressiveChunkSize) return e.rootSegmentID = b.nextSegmentId++, b.completedBoundaries.push(e), oa(c, b.responseState, e.id), $(b, c, d), c.push("<!--/$-->");
        b.responseState.generateStaticMarkup || c.push("<!--$-->");
        d = e.completedSegments;
        if (1 !== d.length) throw Error(j(391));
        aa(b, c, d[0]);
        b = b.responseState.generateStaticMarkup ? !0 : c.push("<!--/$-->");
        return b
    }

    function qb(b, c, d) {
        pa(c, b.responseState, d.formatContext, d.id);
        aa(b, c, d);
        return qa(c, d.formatContext)
    }

    function rb(b, c, d) {
        for (var e = d.completedSegments, f = 0; f < e.length; f++) sb(b, c, d, e[f]);
        e.length = 0;
        b = b.responseState;
        e = d.id;
        d = d.rootSegmentID;
        c.push(b.startInlineScript);
        b.sentCompleteBoundaryFunction ? c.push('$RC("') : (b.sentCompleteBoundaryFunction = !0, c.push('function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if("/$"===d)if(0===e)break;else e--;else"$"!==d&&"$?"!==d&&"$!"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data="$";a._reactRetry&&a._reactRetry()}};$RC("'));
        if (null === e) throw Error(j(395));
        d = d.toString(16);
        c.push(e);
        c.push('","');
        c.push(b.segmentPrefix);
        c.push(d);
        return c.push('")</script>')
    }

    function sb(b, c, d, e) {
        if (2 === e.status) return !0;
        var f = e.id;
        if (-1 === f) {
            if (-1 === (e.id = d.rootSegmentID)) throw Error(j(392));
            return qb(b, c, e)
        }
        qb(b, c, e);
        b = b.responseState;
        c.push(b.startInlineScript);
        b.sentCompleteSegmentFunction ? c.push('$RS("') : (b.sentCompleteSegmentFunction = !0, c.push('function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)};$RS("'));
        c.push(b.segmentPrefix);
        f = f.toString(16);
        c.push(f);
        c.push('","');
        c.push(b.placeholderPrefix);
        c.push(f);
        return c.push('")</script>')
    }

    function tb(b, c) {
        try {
            var d = b.completedRootSegment;
            if (null !== d && 0 === b.pendingRootTasks) {
                aa(b, c, d);
                b.completedRootSegment = null;
                var e = b.responseState.bootstrapChunks;
                for (d = 0; d < e.length - 1; d++) c.push(e[d]);
                d < e.length && c.push(e[d])
            }
            d = b.clientRenderedBoundaries;
            var f;
            for (f = 0; f < d.length; f++) {
                var g = d[f];
                e = c;
                var h = b.responseState,
                    i = g.id,
                    k = g.errorDigest,
                    l = g.errorMessage,
                    m = g.errorComponentStack;
                e.push(h.startInlineScript);
                h.sentClientRenderFunction ? e.push('$RX("') : (h.sentClientRenderFunction = !0, e.push('function $RX(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())};$RX("'));
                if (null === i) throw Error(j(395));
                e.push(i);
                e.push('"');
                if (k || l || m) {
                    e.push(",");
                    i = B(k || "");
                    e.push(i)
                }
                if (l || m) {
                    e.push(",");
                    k = B(l || "");
                    e.push(k)
                }
                if (m) {
                    e.push(",");
                    i = B(m);
                    e.push(i)
                }
                if (!e.push(")</script>")) {
                    b.destination = null;
                    f++;
                    d.splice(0, f);
                    return
                }
            }
            d.splice(0, f);
            l = b.completedBoundaries;
            for (f = 0; f < l.length; f++)
                if (!rb(b, c, l[f])) {
                    b.destination = null;
                    f++;
                    l.splice(0, f);
                    return
                }
            l.splice(0, f);
            k = b.partialBoundaries;
            for (f = 0; f < k.length; f++) {
                m = k[f];
                a: {
                    d = b;g = c;i = m.completedSegments;
                    for (h = 0; h < i.length; h++)
                        if (!sb(d, g, m, i[h])) {
                            h++;
                            i.splice(0, h);
                            e = !1;
                            break a
                        }
                    i.splice(0, h);e = !0
                }
                if (!e) {
                    b.destination = null;
                    f++;
                    k.splice(0, f);
                    return
                }
            }
            k.splice(0, f);
            l = b.completedBoundaries;
            for (f = 0; f < l.length; f++)
                if (!rb(b, c, l[f])) {
                    b.destination = null;
                    f++;
                    l.splice(0, f);
                    return
                }
            l.splice(0, f)
        } finally {
            0 === b.allPendingTasks && 0 === b.pingedTasks.length && 0 === b.clientRenderedBoundaries.length && 0 === b.completedBoundaries.length && c.push(null)
        }
    }

    function ub(b, c) {
        try {
            var d = b.abortableTasks;
            d.forEach(function(d) {
                return nb(d, b, c)
            });
            d.clear();
            null !== b.destination && tb(b, b.destination)
        } catch (c) {
            W(b, c), X(b, c)
        }
    }

    function vb() {}

    function wb(b, c, d, e) {
        var f = !1,
            g = null,
            h = "",
            i = {
                push: function(b) {
                    null !== b && (h += b);
                    return !0
                },
                destroy: function(b) {
                    f = !0, g = b
                }
            },
            k = !1;
        b = fb(b, sa(d, c ? c.identifierPrefix : void 0), {
            insertionMode: 1,
            selectedValue: null
        }, Infinity, vb, void 0, function() {
            k = !0
        }, void 0, void 0);
        pb(b);
        ub(b, e);
        if (1 === b.status) b.status = 2, i.destroy(b.fatalError);
        else if (2 !== b.status && null === b.destination) {
            b.destination = i;
            try {
                tb(b, i)
            } catch (c) {
                W(b, c), X(b, c)
            }
        }
        if (f) throw g;
        if (!k) throw Error(j(426));
        return h
    }
    g.renderToNodeStream = function() {
        throw Error(j(207))
    };
    g.renderToStaticMarkup = function(b, c) {
        return wb(b, c, !0, 'The server used "renderToStaticMarkup" which does not support Suspense. If you intended to have the server wait for the suspended component please switch to "renderToReadableStream" which supports Suspense on the server')
    };
    g.renderToStaticNodeStream = function() {
        throw Error(j(208))
    };
    g.renderToString = function(b, c) {
        return wb(b, c, !1, 'The server used "renderToString" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to "renderToReadableStream" which supports Suspense on the server')
    };
    g.version = "18.3.0-www-modern-229c86af0-20220616"
}), null);
__d("ReactRouterDOM", ["react-router-dom"], (function(a, b, c, d, e, f) {
    "use strict";
    e.exports = b("react-router-dom")
}), null);
__d("XMessengerBotsMenuController", ["XController"], (function(a, b, c, d, e, f) {
    e.exports = b("XController").create("/messenger/commerce/bots/menu/", {
        page_id: {
            type: "String",
            required: !0
        },
        should_flatten: {
            type: "Bool",
            defaultValue: !1
        }
    })
}), null);